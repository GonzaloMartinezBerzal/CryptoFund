{
	"id": "aeababc5a512207fb243354ba96363c8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"TFGv3/Contracts/SCStorage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity >= 0.8.0;\n\nimport \"./Interfaces/IProxy.sol\";\nimport \"./libraries/OracleLibrary.sol\";\n\ncontract SCStorage is ISCStorage\n{\n\taddress immutable deployer;\n\t\n\tuint public NAV;\n    uint8 public initDone;\n    uint8 nStable;\n\t\n    address public proxy;\n\n\taddress[] public coinArray;\n\tmapping (address => uint) public coins; //Coin = 1, StableCoin = 2\n\tmapping (address => address) public coinOracleAddr; //UniswapV3PoolAddress\n    mapping (address => address) public quoteIn; //Address token en el que medimos el precio de la moneda no estable\n\t\n    \n    constructor()\n    {\n        deployer = msg.sender;\n    }\n    \n\tmodifier OnlyDeployer()\n    {\n        require(msg.sender == deployer);\n        _;\n    }\n\n    modifier NonInit()\n    {\n        require(initDone == 0);\n        _;\n    }\n\n    function initContract(address proxyAddr) external OnlyDeployer NonInit\n    {\n        proxy = proxyAddr;\n        initDone = 1;\n    }\n\n    function updateNAV(uint comission) external virtual override returns (uint newNAV)\n    {\n        require(msg.sender == IProxy(proxy).exchangeContract());\n        newNAV = calculateNAV() - comission;\n        NAV = newNAV;\n    }\n    \n    function transferFunds(address to, uint totalToTransfer) external virtual override returns (bool)\n    {\n        address proxyAddr = proxy;\n        require(msg.sender == IProxy(proxyAddr).exchangeContract() || msg.sender == IProxy(proxyAddr).commissionContract());\n        uint n = coinArray.length;\n        \n        for(uint i = 0; i < n; i++)\n        {\n            address coinAddr = coinArray[i];\n            if(coins[coinAddr] == 2)\n            {\n                uint8 decimals = IERC20(coinAddr).decimals();\n                if(decimals < 18) IERC20(coinAddr).transfer(to, totalToTransfer/nStable/10**(uint(decimals)-18));\n                else if(decimals == 18) IERC20(coinAddr).transfer(to, totalToTransfer/nStable);\n            }\n        }\n        return true;\n    }\n    \n    function oracleNAV() external view returns (uint, uint)\n    {\n        //Sin optimizaciones de gas. Pensada para leer desde fuera solamente\n        //Sin comision calculada, solo acumulado. La comision debe calcularse off-chain con la formula y el timestamp de la ultima vez que se actualizo\n        uint lastUpdated = ISCCommission(IProxy(proxy).commissionContract()).lastUpdated();\n        uint acum = ISCCommission(IProxy(proxy).commissionContract()).accumCommission();\n        return (calculateNAV() - acum, lastUpdated);\n    }\n    \n    function calculateNAV() internal view returns (uint newNAV)\n    {\n        //Calcula el NAV en USD. No tiene en cuenta la comision que falte por cobrar relativa al tiempo ni la comision acumulada.\n        uint n = coinArray.length;\n        for(uint i = 0; i < n; i++)\n        {\n            address coin = coinArray[i];\n            uint balance = IERC20(coin).balanceOf(address(this));\n            uint stable = coins[coin];\n            \n            if(stable == 1)\n            {\n                uint quote;\n                unchecked{\n                    (int24 arithmeticMeanTick,) = OracleLibrary.consult(coinOracleAddr[coin], 0);\n                    quote = OracleLibrary.getQuoteAtTick(arithmeticMeanTick, uint128(balance), coin, quoteIn[coin]);\n                }\n                newNAV += balance * quote;\n            }\n            else if(stable == 2) newNAV += balance;\n        }\n    }\n    \n    function addCoin(address coinAddr, uint stable) external  OnlyDeployer\n    {\n        if(stable == 0) coins[coinAddr] = 1;\n        else if(stable == 1)\n        {\n            coins[coinAddr] = 2;\n            nStable++;\n        }\n        coinArray.push(coinAddr);\n    }\n    \n    function delCoin(address coinAddr) external\n    {\n        require(msg.sender == deployer || msg.sender == IProxy(proxy).exchangeContract());\n        if(coins[coinAddr] == 2) nStable--;\n        coins[coinAddr] = 0;\n        uint n = coinArray.length;\n        for(uint i = 0; i < n; i++)\n        {\n            if(coinArray[i] == coinAddr)\n            {\n                coinArray[i] = coinArray[n-1];\n                coinArray.pop();\n            }\n        }\n    }\n\n    function updateProxy(address newAddr) external virtual override\n    {\n        require(msg.sender == proxy);\n        proxy = newAddr;\n    }\n    \n    function deleteContract(address newAddr) external virtual override OnlyDeployer\n    {\n        address proxyAddr = proxy;\n        IProxy(proxyAddr).setStorageAddr(newAddr);\n        newAddr.delegatecall(abi.encodeWithSignature(\"initContract(address)\", proxyAddr));\n        uint n = coinArray.length;\n        for(uint i = 0; i < n; i++)\n        {\n            address tokenToTransfer = coinArray[i];\n            IERC20(tokenToTransfer).transfer(newAddr, IERC20(tokenToTransfer).balanceOf(address(this)));\n        }\n        selfdestruct(payable(deployer));\n    }\n    \n    receive() external payable\n    {\n        revert();\n    }\n    \n    fallback() external payable\n    {\n        revert();\n    }\n}"
			},
			"TFGv3/Contracts/libraries/OracleLibrary.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './FullMath.sol';\nimport './TickMath.sol';\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';\n\n/// @title Oracle library\n/// @notice Provides functions to integrate with V3 pool oracle\nlibrary OracleLibrary {\n    /// @notice Calculates time-weighted means of tick and liquidity for a given Uniswap V3 pool\n    /// @param pool Address of the pool that we want to observe\n    /// @param secondsAgo Number of seconds in the past from which to calculate the time-weighted means\n    /// @return arithmeticMeanTick The arithmetic mean tick from (block.timestamp - secondsAgo) to block.timestamp\n    /// @return harmonicMeanLiquidity The harmonic mean liquidity from (block.timestamp - secondsAgo) to block.timestamp\n    function consult(address pool, uint32 secondsAgo)\n        internal\n        view\n        returns (int24 arithmeticMeanTick, uint128 harmonicMeanLiquidity)\n    {\n        require(secondsAgo != 0, 'BP');\n\n        uint32[] memory secondsAgos = new uint32[](2);\n        secondsAgos[0] = secondsAgo;\n        secondsAgos[1] = 0;\n\n        (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s) =\n            IUniswapV3Pool(pool).observe(secondsAgos);\n\n        int56 tickCumulativesDelta = tickCumulatives[1] - tickCumulatives[0];\n        uint160 secondsPerLiquidityCumulativesDelta =\n            secondsPerLiquidityCumulativeX128s[1] - secondsPerLiquidityCumulativeX128s[0];\n\n        arithmeticMeanTick = int24(tickCumulativesDelta / int32(secondsAgo));\n        // Always round to negative infinity\n        if (tickCumulativesDelta < 0 && (tickCumulativesDelta % int32(secondsAgo) != 0)) arithmeticMeanTick--;\n\n        // We are multiplying here instead of shifting to ensure that harmonicMeanLiquidity doesn't overflow uint128\n        uint192 secondsAgoX160 = uint192(secondsAgo) * type(uint160).max;\n        harmonicMeanLiquidity = uint128(secondsAgoX160 / (uint192(secondsPerLiquidityCumulativesDelta) << 32));\n    }\n\n    /// @notice Given a tick and a token amount, calculates the amount of token received in exchange\n    /// @param tick Tick value used to calculate the quote\n    /// @param baseAmount Amount of token to be converted\n    /// @param baseToken Address of an ERC20 token contract used as the baseAmount denomination\n    /// @param quoteToken Address of an ERC20 token contract used as the quoteAmount denomination\n    /// @return quoteAmount Amount of quoteToken received for baseAmount of baseToken\n    function getQuoteAtTick(\n        int24 tick,\n        uint128 baseAmount,\n        address baseToken,\n        address quoteToken\n    ) internal pure returns (uint256 quoteAmount) {\n        uint160 sqrtRatioX96 = TickMath.getSqrtRatioAtTick(tick);\n\n        // Calculate quoteAmount with better precision if it doesn't overflow when multiplied by itself\n        if (sqrtRatioX96 <= type(uint128).max) {\n            uint256 ratioX192 = uint256(sqrtRatioX96) * sqrtRatioX96;\n            quoteAmount = baseToken < quoteToken\n                ? FullMath.mulDiv(ratioX192, baseAmount, 1 << 192)\n                : FullMath.mulDiv(1 << 192, baseAmount, ratioX192);\n        } else {\n            uint256 ratioX128 = FullMath.mulDiv(sqrtRatioX96, sqrtRatioX96, 1 << 64);\n            quoteAmount = baseToken < quoteToken\n                ? FullMath.mulDiv(ratioX128, baseAmount, 1 << 128)\n                : FullMath.mulDiv(1 << 128, baseAmount, ratioX128);\n        }\n    }\n\n    /// @notice Given a pool, it returns the number of seconds ago of the oldest stored observation\n    /// @param pool Address of Uniswap V3 pool that we want to observe\n    /// @return secondsAgo The number of seconds ago of the oldest observation stored for the pool\n    function getOldestObservationSecondsAgo(address pool) internal view returns (uint32 secondsAgo) {\n        (, , uint16 observationIndex, uint16 observationCardinality, , , ) = IUniswapV3Pool(pool).slot0();\n        require(observationCardinality > 0, 'NI');\n\n        (uint32 observationTimestamp, , , bool initialized) =\n            IUniswapV3Pool(pool).observations((observationIndex + 1) % observationCardinality);\n\n        // The next index might not be initialized if the cardinality is in the process of increasing\n        // In this case the oldest observation is always in index 0\n        if (!initialized) {\n            (observationTimestamp, , , ) = IUniswapV3Pool(pool).observations(0);\n        }\n\n        secondsAgo = uint32(block.timestamp) - observationTimestamp;\n    }\n\n    /// @notice Given a pool, it returns the tick value as of the start of the current block\n    /// @param pool Address of Uniswap V3 pool\n    /// @return The tick that the pool was in at the start of the current block\n    function getBlockStartingTickAndLiquidity(address pool) internal view returns (int24, uint128) {\n        (, int24 tick, uint16 observationIndex, uint16 observationCardinality, , , ) = IUniswapV3Pool(pool).slot0();\n\n        // 2 observations are needed to reliably calculate the block starting tick\n        require(observationCardinality > 1, 'NEO');\n\n        // If the latest observation occurred in the past, then no tick-changing trades have happened in this block\n        // therefore the tick in `slot0` is the same as at the beginning of the current block.\n        // We don't need to check if this observation is initialized - it is guaranteed to be.\n        (uint32 observationTimestamp, int56 tickCumulative, uint160 secondsPerLiquidityCumulativeX128, ) =\n            IUniswapV3Pool(pool).observations(observationIndex);\n        if (observationTimestamp != uint32(block.timestamp)) {\n            return (tick, IUniswapV3Pool(pool).liquidity());\n        }\n\n        uint256 prevIndex = (uint256(observationIndex) + observationCardinality - 1) % observationCardinality;\n        (\n            uint32 prevObservationTimestamp,\n            int56 prevTickCumulative,\n            uint160 prevSecondsPerLiquidityCumulativeX128,\n            bool prevInitialized\n        ) = IUniswapV3Pool(pool).observations(prevIndex);\n\n        require(prevInitialized, 'ONI');\n\n        uint32 delta = observationTimestamp - prevObservationTimestamp;\n        tick = int24((tickCumulative - prevTickCumulative) / int32(delta));\n        uint128 liquidity =\n            uint128(\n                (uint192(delta) * type(uint160).max) /\n                    (uint192(secondsPerLiquidityCumulativeX128 - prevSecondsPerLiquidityCumulativeX128) << 32)\n            );\n        return (tick, liquidity);\n    }\n\n    /// @notice Information for calculating a weighted arithmetic mean tick\n    struct WeightedTickData {\n        int24 tick;\n        uint128 weight;\n    }\n\n    /// @notice Given an array of ticks and weights, calculates the weighted arithmetic mean tick\n    /// @param weightedTickData An array of ticks and weights\n    /// @return weightedArithmeticMeanTick The weighted arithmetic mean tick\n    /// @dev Each entry of `weightedTickData` should represents ticks from pools with the same underlying pool tokens. If they do not,\n    /// extreme care must be taken to ensure that ticks are comparable (including decimal differences).\n    /// @dev Note that the weighted arithmetic mean tick corresponds to the weighted geometric mean price.\n    function getWeightedArithmeticMeanTick(WeightedTickData[] memory weightedTickData)\n        internal\n        pure\n        returns (int24 weightedArithmeticMeanTick)\n    {\n        // Accumulates the sum of products between each tick and its weight\n        int256 numerator;\n\n        // Accumulates the sum of the weights\n        uint256 denominator;\n\n        // Products fit in 152 bits, so it would take an array of length ~2**104 to overflow this logic\n        for (uint256 i; i < weightedTickData.length; i++) {\n            numerator += weightedTickData[i].tick * int256(int128(weightedTickData[i].weight));\n            denominator += weightedTickData[i].weight;\n        }\n\n        weightedArithmeticMeanTick = int24(numerator / int256(denominator));\n        // Always round to negative infinity\n        if (numerator < 0 && (numerator % int256(denominator) != 0)) weightedArithmeticMeanTick--;\n    }\n\n    /// @notice Returns the \"synthetic\" tick which represents the price of the first entry in `tokens` in terms of the last\n    /// @dev Useful for calculating relative prices along routes.\n    /// @dev There must be one tick for each pairwise set of tokens.\n    /// @param tokens The token contract addresses\n    /// @param ticks The ticks, representing the price of each token pair in `tokens`\n    /// @return syntheticTick The synthetic tick, representing the relative price of the outermost tokens in `tokens`\n    function getChainedPrice(address[] memory tokens, int24[] memory ticks)\n        internal\n        pure\n        returns (int256 syntheticTick)\n    {\n        require(tokens.length - 1 == ticks.length, 'DL');\n        for (uint256 i = 1; i <= ticks.length; i++) {\n            // check the tokens for address sort order, then accumulate the\n            // ticks into the running synthetic tick, ensuring that intermediate tokens \"cancel out\"\n            tokens[i - 1] < tokens[i] ? syntheticTick += ticks[i - 1] : syntheticTick -= ticks[i - 1];\n        }\n    }\n}\n"
			},
			"TFGv3/Contracts/Interfaces/IProxy.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity >= 0.8.0;\n\nimport \"./ISCStorage.sol\";\nimport \"./ISCCommission.sol\";\nimport \"./ISCOps.sol\";\nimport \"./ISCExchange.sol\";\nimport \"./IERC20.sol\";\n\ninterface IProxy\n{\n\tfunction initAddrs(address exchangeAddr, address storageAddr, address commissionAddr, address opsAddr, address tokenAddr) external;\n\t\n\tfunction multicall(bytes[] calldata data, address[] calldata contractAddr) external returns (bytes[] memory results);\n\n\tfunction exchangeContract() external view returns (address);\n\tfunction setExchangeAddr(address exchangeAddr) external;\n\n\tfunction storageContract() external view returns (address);\n\tfunction setStorageAddr(address storageAddr) external;\n\n\tfunction commissionContract() external view returns (address);\n\tfunction setCommissionAddr(address commissionAddr) external;\n\n\tfunction opsContract() external view returns (address);\n\tfunction setOpsAddr(address opsAddr) external;\n\n\tfunction token() external view returns (address);\n\tfunction setTokenAddr(address tokenAddr) external;\n\n\tfunction deleteContract(address newAddr) external;\n}"
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"
			},
			"TFGv3/Contracts/libraries/TickMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Math library for computing sqrt prices from ticks and vice versa\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n/// prices between 2**-128 and 2**128\nlibrary TickMath {\n    /// @dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\n    int24 internal constant MIN_TICK = -887272;\n    /// @dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\n    int24 internal constant MAX_TICK = -MIN_TICK;\n\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\n\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\n    /// @dev Throws if |tick| > max tick\n    /// @param tick The input tick for the above formula\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n    /// at the given tick\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\n        uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick));\n        require(absTick <= uint256(uint24(MAX_TICK)), 'T');\n\n        uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000;\n        if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\n        if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\n        if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\n        if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\n        if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\n        if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\n        if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\n        if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\n        if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\n        if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\n        if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\n        if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\n        if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\n        if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\n        if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\n        if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\n        if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\n        if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\n        if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\n\n        if (tick > 0) ratio = type(uint256).max / ratio;\n\n        // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\n        // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\n        // we round up in the division so getTickAtSqrtRatio of the output price is always consistent\n        sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1));\n    }\n\n    /// @notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n    /// ever return.\n    /// @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n    /// @return tick The greatest tick for which the ratio is less than or equal to the input ratio\n    function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\n        // second inequality must be < because the price can never reach the price at the max tick\n        require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, 'R');\n        uint256 ratio = uint256(sqrtPriceX96) << 32;\n\n        uint256 r = ratio;\n        uint256 msb = 0;\n\n        assembly {\n            let f := shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(6, gt(r, 0xFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(5, gt(r, 0xFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(4, gt(r, 0xFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(3, gt(r, 0xFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(2, gt(r, 0xF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(1, gt(r, 0x3))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := gt(r, 0x1)\n            msb := or(msb, f)\n        }\n\n        if (msb >= 128) r = ratio >> (msb - 127);\n        else r = ratio << (127 - msb);\n\n        int256 log_2 = (int256(msb) - 128) << 64;\n\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(63, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(62, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(61, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(60, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(59, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(58, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(57, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(56, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(55, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(54, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(53, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(52, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(51, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(50, f))\n        }\n\n        int256 log_sqrt10001 = log_2 * 255738958999603826347141; // 128.128 number\n\n        int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\n        int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\n\n        tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\n    }\n}\n"
			},
			"TFGv3/Contracts/libraries/FullMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.0;\n\n/// @title Contains 512-bit math functions\n/// @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n/// @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\nlibrary FullMath {\n    /// @notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n    /// @param a The multiplicand\n    /// @param b The multiplier\n    /// @param denominator The divisor\n    /// @return result The 256-bit result\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n    function mulDiv(\n        uint256 a,\n        uint256 b,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        // 512-bit multiply [prod1 prod0] = a * b\n        // Compute the product mod 2**256 and mod 2**256 - 1\n        // then use the Chinese Remainder Theorem to reconstruct\n        // the 512 bit result. The result is stored in two 256\n        // variables such that product = prod1 * 2**256 + prod0\n        uint256 prod0; // Least significant 256 bits of the product\n        uint256 prod1; // Most significant 256 bits of the product\n        assembly {\n            let mm := mulmod(a, b, not(0))\n            prod0 := mul(a, b)\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n        }\n\n        // Handle non-overflow cases, 256 by 256 division\n        if (prod1 == 0) {\n            require(denominator > 0);\n            assembly {\n                result := div(prod0, denominator)\n            }\n            return result;\n        }\n\n        // Make sure the result is less than 2**256.\n        // Also prevents denominator == 0\n        require(denominator > prod1);\n\n        ///////////////////////////////////////////////\n        // 512 by 256 division.\n        ///////////////////////////////////////////////\n\n        // Make division exact by subtracting the remainder from [prod1 prod0]\n        // Compute remainder using mulmod\n        uint256 remainder;\n        assembly {\n            remainder := mulmod(a, b, denominator)\n        }\n        // Subtract 256 bit number from 512 bit number\n        assembly {\n            prod1 := sub(prod1, gt(remainder, prod0))\n            prod0 := sub(prod0, remainder)\n        }\n\n        // Factor powers of two out of denominator\n        // Compute largest power of two divisor of denominator.\n        // Always >= 1.\n        uint256 twos = (type(uint256).max - denominator + 1) & denominator;\n        // Divide denominator by power of two\n        assembly {\n            denominator := div(denominator, twos)\n        }\n\n        // Divide [prod1 prod0] by the factors of two\n        assembly {\n            prod0 := div(prod0, twos)\n        }\n        // Shift in bits from prod1 into prod0. For this we need\n        // to flip `twos` such that it is 2**256 / twos.\n        // If twos is zero, then it becomes one\n        assembly {\n            twos := add(div(sub(0, twos), twos), 1)\n        }\n        prod0 |= prod1 * twos;\n\n        // Invert denominator mod 2**256\n        // Now that denominator is an odd number, it has an inverse\n        // modulo 2**256 such that denominator * inv = 1 mod 2**256.\n        // Compute the inverse by starting with a seed that is correct\n        // correct for four bits. That is, denominator * inv = 1 mod 2**4\n        uint256 inv = (3 * denominator) ^ 2;\n        // Now use Newton-Raphson iteration to improve the precision.\n        // Thanks to Hensel's lifting lemma, this also works in modular\n        // arithmetic, doubling the correct bits in each step.\n        inv *= 2 - denominator * inv; // inverse mod 2**8\n        inv *= 2 - denominator * inv; // inverse mod 2**16\n        inv *= 2 - denominator * inv; // inverse mod 2**32\n        inv *= 2 - denominator * inv; // inverse mod 2**64\n        inv *= 2 - denominator * inv; // inverse mod 2**128\n        inv *= 2 - denominator * inv; // inverse mod 2**256\n\n        // Because the division is now exact we can divide by multiplying\n        // with the modular inverse of denominator. This will give us the\n        // correct result modulo 2**256. Since the precoditions guarantee\n        // that the outcome is less than 2**256, this is the final result.\n        // We don't need to compute the high bits of the result and prod1\n        // is no longer required.\n        result = prod0 * inv;\n        return result;\n    }\n\n    /// @notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n    /// @param a The multiplicand\n    /// @param b The multiplier\n    /// @param denominator The divisor\n    /// @return result The 256-bit result\n    function mulDivRoundingUp(\n        uint256 a,\n        uint256 b,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        result = mulDiv(a, b, denominator);\n        if (mulmod(a, b, denominator) > 0) {\n            require(result < type(uint256).max);\n            result++;\n        }\n    }\n}\n"
			},
			"TFGv3/Contracts/Interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity >= 0.8.0;\n\ninterface IERC20\n{\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n    \n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address to, uint256 amount) external returns (bool);\n    \n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n    \n    function mint(address account, uint amount) external returns (bool);\n    \n    function burn(uint256 amount) external returns (bool);\n    \n    function burnFrom(address from, uint256 amount) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    event Mint(address indexed to, uint256 value);\n}"
			},
			"TFGv3/Contracts/Interfaces/ISCExchange.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\n\r\npragma solidity >= 0.8.0;\r\n\r\ninterface ISCExchange\r\n{\r\n    function buyTokensOutput(address stableAddr, uint tokensOut) external;\r\n\r\n    function buyTokensInput(address stableAddr, uint qtyIn) external;\r\n\r\n    function sellTokens(uint qty) external;\r\n\r\n    function deleteContract(address newAddr) external;\r\n\r\n    function addToBlacklist(address to) external returns (bool);\r\n\r\n    function removeFromBlacklist(address to) external returns (bool);\r\n\r\n    function updateProxy(address newAddr) external;\r\n}"
			},
			"TFGv3/Contracts/Interfaces/ISCOps.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\n\r\npragma solidity >= 0.8.0;\r\n\r\ninterface ISCOps\r\n{\r\n    function initContract(address proxyAddr) external;\r\n\r\n    function uniSwap(address[] calldata path, uint amount) external;\r\n\r\n    function updateProxy(address newAddr) external;\r\n\r\n    function deleteContract(address newContract) external;\r\n}"
			},
			"TFGv3/Contracts/Interfaces/ISCCommission.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\n\r\npragma solidity >= 0.8.0;\r\n\r\ninterface ISCCommission\r\n{\r\n    function lastUpdated() external view returns(uint);\r\n\r\n    function accumCommission() external view returns(uint);\r\n\r\n    function initContract(address proxyAddr, uint lastUpdated_, uint accumCommission_, uint feeYear_, uint r_) external;\r\n\r\n    function payComissions(uint buyOrSell) external returns (uint payedComissions);\r\n\r\n    function collectCommission(address[] calldata tokensToTransfer, uint[] calldata qty) external;\r\n\r\n    function updateProxy(address newAddr) external;\r\n\r\n    function deleteContract(address newAddr, address[] calldata tokensToTransfer, uint[] calldata qty) external;\r\n}"
			},
			"TFGv3/Contracts/Interfaces/ISCStorage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\n\r\npragma solidity >= 0.8.0;\r\n\r\ninterface ISCStorage\r\n{\r\n    function updateNAV(uint comission) external returns (uint newNAV);\r\n\r\n    function NAV() external view returns (uint);\r\n\r\n    function transferFunds(address to, uint totalToTransfer) external returns (bool);\r\n\r\n    function addCoin(address coinAddr, uint stable) external;\r\n\r\n    function delCoin(address coinAddr) external;\r\n\r\n    function updateProxy(address newAddr) external;\r\n\r\n    function deleteContract(address newAddr) external;\r\n}"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			},
			"TFGv3/Contracts/Interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TFGv3/Contracts/Interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"TFGv3/Contracts/Interfaces/IERC20.sol\":{\"keccak256\":\"0x59a03f41c93e1e60f5d0cd67af555cb474afb987990fb47dc128c74ea5a960f2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7de853bafd2ce286ab83b7acba0d271df56d08efafeaf050f94a7972668a8b8d\",\"dweb:/ipfs/QmXTDrwjPT3VWQTrRE94LrbDb1yFcKEHWDbRurXBgWaXBu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TFGv3/Contracts/Interfaces/IProxy.sol": {
				"IProxy": {
					"abi": [
						{
							"inputs": [],
							"name": "commissionContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddr",
									"type": "address"
								}
							],
							"name": "deleteContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exchangeContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "exchangeAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "storageAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "commissionAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "opsAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenAddr",
									"type": "address"
								}
							],
							"name": "initAddrs",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "data",
									"type": "bytes[]"
								},
								{
									"internalType": "address[]",
									"name": "contractAddr",
									"type": "address[]"
								}
							],
							"name": "multicall",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "results",
									"type": "bytes[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "opsContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "commissionAddr",
									"type": "address"
								}
							],
							"name": "setCommissionAddr",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "exchangeAddr",
									"type": "address"
								}
							],
							"name": "setExchangeAddr",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "opsAddr",
									"type": "address"
								}
							],
							"name": "setOpsAddr",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "storageAddr",
									"type": "address"
								}
							],
							"name": "setStorageAddr",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddr",
									"type": "address"
								}
							],
							"name": "setTokenAddr",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "storageContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"commissionContract()": "da8909e5",
							"deleteContract(address)": "2637a477",
							"exchangeContract()": "3f0a0797",
							"initAddrs(address,address,address,address,address)": "1b46a447",
							"multicall(bytes[],address[])": "600e1b2b",
							"opsContract()": "dc96d689",
							"setCommissionAddr(address)": "101dfd19",
							"setExchangeAddr(address)": "8ae91695",
							"setOpsAddr(address)": "cf368a39",
							"setStorageAddr(address)": "a6fa0b7b",
							"setTokenAddr(address)": "2ebd1e28",
							"storageContract()": "11ce0267",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"commissionContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"deleteContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exchangeAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"storageAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"commissionAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"opsAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"}],\"name\":\"initAddrs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"},{\"internalType\":\"address[]\",\"name\":\"contractAddr\",\"type\":\"address[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"opsContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"commissionAddr\",\"type\":\"address\"}],\"name\":\"setCommissionAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exchangeAddr\",\"type\":\"address\"}],\"name\":\"setExchangeAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"opsAddr\",\"type\":\"address\"}],\"name\":\"setOpsAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"storageAddr\",\"type\":\"address\"}],\"name\":\"setStorageAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"}],\"name\":\"setTokenAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storageContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TFGv3/Contracts/Interfaces/IProxy.sol\":\"IProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"TFGv3/Contracts/Interfaces/IERC20.sol\":{\"keccak256\":\"0x59a03f41c93e1e60f5d0cd67af555cb474afb987990fb47dc128c74ea5a960f2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7de853bafd2ce286ab83b7acba0d271df56d08efafeaf050f94a7972668a8b8d\",\"dweb:/ipfs/QmXTDrwjPT3VWQTrRE94LrbDb1yFcKEHWDbRurXBgWaXBu\"]},\"TFGv3/Contracts/Interfaces/IProxy.sol\":{\"keccak256\":\"0x457ec80cafbaf6e5f70cf6364557fdc497e802c3617a15966fc6c79fa995d044\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://23e2a5b5168b3235a983595e31036adf66060d62ae9e5f6d097df1b1e6559f34\",\"dweb:/ipfs/QmajmGCZ4LhmUJL3eFh8kKRLRuR31SMUnqNbcFjeKCoQD5\"]},\"TFGv3/Contracts/Interfaces/ISCCommission.sol\":{\"keccak256\":\"0x9f9b9e99159eabe43404d867a64018b9b659c8eb1634603dd5ac3959536f943a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://199b2f59b06b0a015d00136b9b6198b051183f26baf374c78462286aae037f5e\",\"dweb:/ipfs/QmYA9CWEVqwN84CGoEwAUWi9w2R9t3xp7xfnEc9bxHwjMi\"]},\"TFGv3/Contracts/Interfaces/ISCExchange.sol\":{\"keccak256\":\"0x31ea8830f6820ac5dbe085226419a2ec19d0a3d12aec8148ab69cd31da5c856b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fbf0a05b5b50f2b9beecc7ef90eb7af924a40f2e1a248cce747d9f44284c1379\",\"dweb:/ipfs/QmbKkQSU64e7Z31pKveJnC7jdVLnW7uaYALtbcnYiXjf7y\"]},\"TFGv3/Contracts/Interfaces/ISCOps.sol\":{\"keccak256\":\"0x3e4655a10df0f0cf6c011a9bb55cd9592061d2b7a6540ffbc04c8267d4513940\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9945f611e8120c4e6a9108006e8938e2e062858de2d31c4c3cba9a3167afc971\",\"dweb:/ipfs/Qmb7KDX9ai8RHcnFiY9cwqiFAtmvXsUMQaUr4XhZkzTm6q\"]},\"TFGv3/Contracts/Interfaces/ISCStorage.sol\":{\"keccak256\":\"0x44fa27b592c9491dd280b6b8c0363b817cb957a52abdb27579776d4e5e083d31\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://28e367601b9c8293cbb61bb7eaf04515fa2a5eb5af002b70198ffc36e9944e0e\",\"dweb:/ipfs/QmW3KoqMe7fyGJabsrbZzFi7yiFtffiepqq997biioCJM1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TFGv3/Contracts/Interfaces/ISCCommission.sol": {
				"ISCCommission": {
					"abi": [
						{
							"inputs": [],
							"name": "accumCommission",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "tokensToTransfer",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "qty",
									"type": "uint256[]"
								}
							],
							"name": "collectCommission",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddr",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "tokensToTransfer",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "qty",
									"type": "uint256[]"
								}
							],
							"name": "deleteContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "lastUpdated_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accumCommission_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeYear_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "r_",
									"type": "uint256"
								}
							],
							"name": "initContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdated",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "buyOrSell",
									"type": "uint256"
								}
							],
							"name": "payComissions",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "payedComissions",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddr",
									"type": "address"
								}
							],
							"name": "updateProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"accumCommission()": "7f8483a4",
							"collectCommission(address[],uint256[])": "fc693786",
							"deleteContract(address,address[],uint256[])": "1d69b196",
							"initContract(address,uint256,uint256,uint256,uint256)": "37799661",
							"lastUpdated()": "d0b06f5d",
							"payComissions(uint256)": "bdedd45e",
							"updateProxy(address)": "9e955149"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"accumCommission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokensToTransfer\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"qty\",\"type\":\"uint256[]\"}],\"name\":\"collectCommission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokensToTransfer\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"qty\",\"type\":\"uint256[]\"}],\"name\":\"deleteContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accumCommission_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeYear_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r_\",\"type\":\"uint256\"}],\"name\":\"initContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buyOrSell\",\"type\":\"uint256\"}],\"name\":\"payComissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"payedComissions\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"updateProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TFGv3/Contracts/Interfaces/ISCCommission.sol\":\"ISCCommission\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"TFGv3/Contracts/Interfaces/ISCCommission.sol\":{\"keccak256\":\"0x9f9b9e99159eabe43404d867a64018b9b659c8eb1634603dd5ac3959536f943a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://199b2f59b06b0a015d00136b9b6198b051183f26baf374c78462286aae037f5e\",\"dweb:/ipfs/QmYA9CWEVqwN84CGoEwAUWi9w2R9t3xp7xfnEc9bxHwjMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TFGv3/Contracts/Interfaces/ISCExchange.sol": {
				"ISCExchange": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "addToBlacklist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stableAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "qtyIn",
									"type": "uint256"
								}
							],
							"name": "buyTokensInput",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stableAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokensOut",
									"type": "uint256"
								}
							],
							"name": "buyTokensOutput",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddr",
									"type": "address"
								}
							],
							"name": "deleteContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "removeFromBlacklist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "qty",
									"type": "uint256"
								}
							],
							"name": "sellTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddr",
									"type": "address"
								}
							],
							"name": "updateProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addToBlacklist(address)": "44337ea1",
							"buyTokensInput(address,uint256)": "9be56034",
							"buyTokensOutput(address,uint256)": "365afe2f",
							"deleteContract(address)": "2637a477",
							"removeFromBlacklist(address)": "537df3b6",
							"sellTokens(uint256)": "6c11bcd3",
							"updateProxy(address)": "9e955149"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"addToBlacklist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stableAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"qtyIn\",\"type\":\"uint256\"}],\"name\":\"buyTokensInput\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stableAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokensOut\",\"type\":\"uint256\"}],\"name\":\"buyTokensOutput\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"deleteContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"removeFromBlacklist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"}],\"name\":\"sellTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"updateProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TFGv3/Contracts/Interfaces/ISCExchange.sol\":\"ISCExchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"TFGv3/Contracts/Interfaces/ISCExchange.sol\":{\"keccak256\":\"0x31ea8830f6820ac5dbe085226419a2ec19d0a3d12aec8148ab69cd31da5c856b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fbf0a05b5b50f2b9beecc7ef90eb7af924a40f2e1a248cce747d9f44284c1379\",\"dweb:/ipfs/QmbKkQSU64e7Z31pKveJnC7jdVLnW7uaYALtbcnYiXjf7y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TFGv3/Contracts/Interfaces/ISCOps.sol": {
				"ISCOps": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newContract",
									"type": "address"
								}
							],
							"name": "deleteContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"name": "initContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "uniSwap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddr",
									"type": "address"
								}
							],
							"name": "updateProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deleteContract(address)": "2637a477",
							"initContract(address)": "cf9d4afa",
							"uniSwap(address[],uint256)": "1fa4e970",
							"updateProxy(address)": "9e955149"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"deleteContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"name\":\"initContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"uniSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"updateProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TFGv3/Contracts/Interfaces/ISCOps.sol\":\"ISCOps\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"TFGv3/Contracts/Interfaces/ISCOps.sol\":{\"keccak256\":\"0x3e4655a10df0f0cf6c011a9bb55cd9592061d2b7a6540ffbc04c8267d4513940\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9945f611e8120c4e6a9108006e8938e2e062858de2d31c4c3cba9a3167afc971\",\"dweb:/ipfs/Qmb7KDX9ai8RHcnFiY9cwqiFAtmvXsUMQaUr4XhZkzTm6q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TFGv3/Contracts/Interfaces/ISCStorage.sol": {
				"ISCStorage": {
					"abi": [
						{
							"inputs": [],
							"name": "NAV",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "coinAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "stable",
									"type": "uint256"
								}
							],
							"name": "addCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "coinAddr",
									"type": "address"
								}
							],
							"name": "delCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddr",
									"type": "address"
								}
							],
							"name": "deleteContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "totalToTransfer",
									"type": "uint256"
								}
							],
							"name": "transferFunds",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "comission",
									"type": "uint256"
								}
							],
							"name": "updateNAV",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "newNAV",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddr",
									"type": "address"
								}
							],
							"name": "updateProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"NAV()": "52fd856b",
							"addCoin(address,uint256)": "b4014879",
							"delCoin(address)": "4051b9aa",
							"deleteContract(address)": "2637a477",
							"transferFunds(address,uint256)": "990dc9db",
							"updateNAV(uint256)": "0cb1982b",
							"updateProxy(address)": "9e955149"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NAV\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"coinAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stable\",\"type\":\"uint256\"}],\"name\":\"addCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"coinAddr\",\"type\":\"address\"}],\"name\":\"delCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"deleteContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalToTransfer\",\"type\":\"uint256\"}],\"name\":\"transferFunds\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"comission\",\"type\":\"uint256\"}],\"name\":\"updateNAV\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newNAV\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"updateProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TFGv3/Contracts/Interfaces/ISCStorage.sol\":\"ISCStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"TFGv3/Contracts/Interfaces/ISCStorage.sol\":{\"keccak256\":\"0x44fa27b592c9491dd280b6b8c0363b817cb957a52abdb27579776d4e5e083d31\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://28e367601b9c8293cbb61bb7eaf04515fa2a5eb5af002b70198ffc36e9944e0e\",\"dweb:/ipfs/QmW3KoqMe7fyGJabsrbZzFi7yiFtffiepqq997biioCJM1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TFGv3/Contracts/SCStorage.sol": {
				"SCStorage": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "NAV",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "coinAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "stable",
									"type": "uint256"
								}
							],
							"name": "addCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "coinArray",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "coinOracleAddr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "coins",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "coinAddr",
									"type": "address"
								}
							],
							"name": "delCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddr",
									"type": "address"
								}
							],
							"name": "deleteContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"name": "initContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initDone",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "oracleNAV",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "quoteIn",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "totalToTransfer",
									"type": "uint256"
								}
							],
							"name": "transferFunds",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "comission",
									"type": "uint256"
								}
							],
							"name": "updateNAV",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "newNAV",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddr",
									"type": "address"
								}
							],
							"name": "updateProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TFGv3/Contracts/SCStorage.sol\":148:5019  contract SCStorage is ISCStorage... */\n  mstore(0x40, 0xa0)\n    /* \"TFGv3/Contracts/SCStorage.sol\":608:664  constructor()... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"TFGv3/Contracts/SCStorage.sol\":647:657  msg.sender */\n  caller\n    /* \"TFGv3/Contracts/SCStorage.sol\":636:657  deployer = msg.sender */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"TFGv3/Contracts/SCStorage.sol\":148:5019  contract SCStorage is ISCStorage... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xcdf1dd2e8742ccca482be714f2ab38acb16e66300c9790cd19a8abbcdf150d1c\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"TFGv3/Contracts/SCStorage.sol\":148:5019  contract SCStorage is ISCStorage... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x990dc9db\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xd825bfff\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xd825bfff\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdef1a5e8\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xec556889\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xfed0a20e\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x990dc9db\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9e955149\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb4014879\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xcf9d4afa\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x4051b9aa\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x4051b9aa\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x52fd856b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x63b48ee6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x7d0f7a88\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x0cb1982b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0fbbfa3e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2637a477\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"TFGv3/Contracts/SCStorage.sol\":4935:4943  revert() */\n      0x00\n      dup1\n      revert\n        /* \"TFGv3/Contracts/SCStorage.sol\":148:5019  contract SCStorage is ISCStorage... */\n    tag_2:\n        /* \"TFGv3/Contracts/SCStorage.sol\":5002:5010  revert() */\n      0x00\n      dup1\n      revert\n        /* \"TFGv3/Contracts/SCStorage.sol\":980:1206  function updateNAV(uint comission) external virtual override returns (uint newNAV)... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TFGv3/Contracts/SCStorage.sol\":405:455  mapping (address => address) public coinOracleAddr */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TFGv3/Contracts/SCStorage.sol\":4327:4884  function deleteContract(address newAddr) external virtual override OnlyDeployer... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3714:4173  function delCoin(address coinAddr) external... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"TFGv3/Contracts/SCStorage.sol\":215:230  uint public NAV */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TFGv3/Contracts/SCStorage.sol\":308:334  address[] public coinArray */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TFGv3/Contracts/SCStorage.sol\":337:375  mapping (address => uint) public coins */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TFGv3/Contracts/SCStorage.sol\":1216:1988  function transferFunds(address to, uint totalToTransfer) external virtual override returns (bool)... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TFGv3/Contracts/SCStorage.sol\":4179:4317  function updateProxy(address newAddr) external virtual override... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3438:3704  function addCoin(address coinAddr, uint stable) external  OnlyDeployer... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"TFGv3/Contracts/SCStorage.sol\":843:974  function initContract(address proxyAddr) external OnlyDeployer NonInit... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      stop\n        /* \"TFGv3/Contracts/SCStorage.sol\":484:527  mapping (address => address) public quoteIn */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TFGv3/Contracts/SCStorage.sol\":1998:2528  function oracleNAV() external view returns (uint, uint)... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap3\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TFGv3/Contracts/SCStorage.sol\":284:304  address public proxy */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TFGv3/Contracts/SCStorage.sol\":236:257  uint8 public initDone */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TFGv3/Contracts/SCStorage.sol\":980:1206  function updateNAV(uint comission) external virtual override returns (uint newNAV)... */\n    tag_29:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1050:1061  uint newNAV */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":1106:1111  proxy */\n      0x01\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":1099:1129  IProxy(proxy).exchangeContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3f0a0797\n        /* \"TFGv3/Contracts/SCStorage.sol\":1099:1131  IProxy(proxy).exchangeContract() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1085:1131  msg.sender == IProxy(proxy).exchangeContract() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":1085:1095  msg.sender */\n      caller\n        /* \"TFGv3/Contracts/SCStorage.sol\":1085:1131  msg.sender == IProxy(proxy).exchangeContract() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"TFGv3/Contracts/SCStorage.sol\":1077:1132  require(msg.sender == IProxy(proxy).exchangeContract()) */\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1168:1177  comission */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":1151:1165  calculateNAV() */\n      tag_105\n        /* \"TFGv3/Contracts/SCStorage.sol\":1151:1163  calculateNAV */\n      tag_106\n        /* \"TFGv3/Contracts/SCStorage.sol\":1151:1165  calculateNAV() */\n      jump\t// in\n    tag_105:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1151:1177  calculateNAV() - comission */\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1142:1177  newNAV = calculateNAV() - comission */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1193:1199  newNAV */\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":1187:1190  NAV */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":1187:1199  NAV = newNAV */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":980:1206  function updateNAV(uint comission) external virtual override returns (uint newNAV)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"TFGv3/Contracts/SCStorage.sol\":405:455  mapping (address => address) public coinOracleAddr */\n    tag_36:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"TFGv3/Contracts/SCStorage.sol\":4327:4884  function deleteContract(address newAddr) external virtual override OnlyDeployer... */\n    tag_42:\n        /* \"TFGv3/Contracts/SCStorage.sol\":731:739  deployer */\n      immutable(\"0xcdf1dd2e8742ccca482be714f2ab38acb16e66300c9790cd19a8abbcdf150d1c\")\n        /* \"TFGv3/Contracts/SCStorage.sol\":717:739  msg.sender == deployer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":717:727  msg.sender */\n      caller\n        /* \"TFGv3/Contracts/SCStorage.sol\":717:739  msg.sender == deployer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"TFGv3/Contracts/SCStorage.sol\":709:740  require(msg.sender == deployer) */\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n        /* \"TFGv3/Contracts/SCStorage.sol\":4421:4438  address proxyAddr */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":4441:4446  proxy */\n      0x01\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":4421:4446  address proxyAddr = proxy */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":4463:4472  proxyAddr */\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":4456:4488  IProxy(proxyAddr).setStorageAddr */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa6fa0b7b\n        /* \"TFGv3/Contracts/SCStorage.sol\":4489:4496  newAddr */\n      dup4\n        /* \"TFGv3/Contracts/SCStorage.sol\":4456:4497  IProxy(proxyAddr).setStorageAddr(newAddr) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_112:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":4507:4514  newAddr */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":4507:4527  newAddr.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":4577:4586  proxyAddr */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":4528:4587  abi.encodeWithSignature(\"initContract(address)\", proxyAddr) */\n      add(0x24, mload(0x40))\n      tag_116\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0xcf9d4afa00000000000000000000000000000000000000000000000000000000)\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":4507:4588  newAddr.delegatecall(abi.encodeWithSignature(\"initContract(address)\", proxyAddr)) */\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_121\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_120)\n    tag_121:\n      0x60\n      swap2\n      pop\n    tag_120:\n      pop\n      pop\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":4598:4604  uint n */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":4607:4616  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":4607:4623  coinArray.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":4598:4623  uint n = coinArray.length */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":4637:4643  uint i */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":4633:4837  for(uint i = 0; i < n; i++)... */\n    tag_122:\n        /* \"TFGv3/Contracts/SCStorage.sol\":4653:4654  n */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":4649:4650  i */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":4649:4654  i < n */\n      lt\n        /* \"TFGv3/Contracts/SCStorage.sol\":4633:4837  for(uint i = 0; i < n; i++)... */\n      iszero\n      tag_123\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":4683:4706  address tokenToTransfer */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":4709:4718  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":4719:4720  i */\n      dup3\n        /* \"TFGv3/Contracts/SCStorage.sol\":4709:4721  coinArray[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_125\n      jumpi\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n    tag_125:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":4683:4721  address tokenToTransfer = coinArray[i] */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":4742:4757  tokenToTransfer */\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":4735:4767  IERC20(tokenToTransfer).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"TFGv3/Contracts/SCStorage.sol\":4768:4775  newAddr */\n      dup7\n        /* \"TFGv3/Contracts/SCStorage.sol\":4784:4799  tokenToTransfer */\n      dup4\n        /* \"TFGv3/Contracts/SCStorage.sol\":4777:4810  IERC20(tokenToTransfer).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"TFGv3/Contracts/SCStorage.sol\":4819:4823  this */\n      address\n        /* \"TFGv3/Contracts/SCStorage.sol\":4777:4825  IERC20(tokenToTransfer).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_129:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"TFGv3/Contracts/SCStorage.sol\":4735:4826  IERC20(tokenToTransfer).transfer(newAddr, IERC20(tokenToTransfer).balanceOf(address(this))) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap3\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_137\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":4669:4837  {... */\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":4656:4659  i++ */\n      dup1\n      dup1\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      swap2\n      pop\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":4633:4837  for(uint i = 0; i < n; i++)... */\n      jump(tag_122)\n    tag_123:\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":4867:4875  deployer */\n      immutable(\"0xcdf1dd2e8742ccca482be714f2ab38acb16e66300c9790cd19a8abbcdf150d1c\")\n        /* \"TFGv3/Contracts/SCStorage.sol\":4846:4877  selfdestruct(payable(deployer)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"TFGv3/Contracts/SCStorage.sol\":3714:4173  function delCoin(address coinAddr) external... */\n    tag_46:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3794:3802  deployer */\n      immutable(\"0xcdf1dd2e8742ccca482be714f2ab38acb16e66300c9790cd19a8abbcdf150d1c\")\n        /* \"TFGv3/Contracts/SCStorage.sol\":3780:3802  msg.sender == deployer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":3780:3790  msg.sender */\n      caller\n        /* \"TFGv3/Contracts/SCStorage.sol\":3780:3802  msg.sender == deployer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"TFGv3/Contracts/SCStorage.sol\":3780:3852  msg.sender == deployer || msg.sender == IProxy(proxy).exchangeContract() */\n      dup1\n      tag_143\n      jumpi\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3827:3832  proxy */\n      0x01\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":3820:3850  IProxy(proxy).exchangeContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3f0a0797\n        /* \"TFGv3/Contracts/SCStorage.sol\":3820:3852  IProxy(proxy).exchangeContract() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_146:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3806:3852  msg.sender == IProxy(proxy).exchangeContract() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":3806:3816  msg.sender */\n      caller\n        /* \"TFGv3/Contracts/SCStorage.sol\":3806:3852  msg.sender == IProxy(proxy).exchangeContract() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"TFGv3/Contracts/SCStorage.sol\":3780:3852  msg.sender == deployer || msg.sender == IProxy(proxy).exchangeContract() */\n    tag_143:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3772:3853  require(msg.sender == deployer || msg.sender == IProxy(proxy).exchangeContract()) */\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3885:3886  2 */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":3866:3871  coins */\n      0x03\n        /* \"TFGv3/Contracts/SCStorage.sol\":3866:3881  coins[coinAddr] */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":3872:3880  coinAddr */\n      dup4\n        /* \"TFGv3/Contracts/SCStorage.sol\":3866:3881  coins[coinAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"TFGv3/Contracts/SCStorage.sol\":3866:3886  coins[coinAddr] == 2 */\n      sub\n        /* \"TFGv3/Contracts/SCStorage.sol\":3863:3897  if(coins[coinAddr] == 2) nStable-- */\n      tag_148\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":3888:3895  nStable */\n      0x01\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":3888:3897  nStable-- */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_149\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3863:3897  if(coins[coinAddr] == 2) nStable-- */\n    tag_148:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3925:3926  0 */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":3907:3912  coins */\n      0x03\n        /* \"TFGv3/Contracts/SCStorage.sol\":3907:3922  coins[coinAddr] */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":3913:3921  coinAddr */\n      dup4\n        /* \"TFGv3/Contracts/SCStorage.sol\":3907:3922  coins[coinAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"TFGv3/Contracts/SCStorage.sol\":3907:3926  coins[coinAddr] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3936:3942  uint n */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":3945:3954  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":3945:3961  coinArray.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3936:3961  uint n = coinArray.length */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3975:3981  uint i */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":3971:4167  for(uint i = 0; i < n; i++)... */\n    tag_151:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3991:3992  n */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":3987:3988  i */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":3987:3992  i < n */\n      lt\n        /* \"TFGv3/Contracts/SCStorage.sol\":3971:4167  for(uint i = 0; i < n; i++)... */\n      iszero\n      tag_152\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":4040:4048  coinAddr */\n      dup3\n        /* \"TFGv3/Contracts/SCStorage.sol\":4024:4048  coinArray[i] == coinAddr */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":4024:4033  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":4034:4035  i */\n      dup3\n        /* \"TFGv3/Contracts/SCStorage.sol\":4024:4036  coinArray[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_154\n      jumpi\n      tag_155\n      tag_127\n      jump\t// in\n    tag_155:\n    tag_154:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":4024:4048  coinArray[i] == coinAddr */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"TFGv3/Contracts/SCStorage.sol\":4021:4157  if(coinArray[i] == coinAddr)... */\n      tag_157\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":4095:4104  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":4107:4108  1 */\n      0x01\n        /* \"TFGv3/Contracts/SCStorage.sol\":4105:4106  n */\n      dup4\n        /* \"TFGv3/Contracts/SCStorage.sol\":4105:4108  n-1 */\n      tag_158\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_158:\n        /* \"TFGv3/Contracts/SCStorage.sol\":4095:4109  coinArray[n-1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_159\n      jumpi\n      tag_160\n      tag_127\n      jump\t// in\n    tag_160:\n    tag_159:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":4080:4089  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":4090:4091  i */\n      dup3\n        /* \"TFGv3/Contracts/SCStorage.sol\":4080:4092  coinArray[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_162\n      jumpi\n      tag_163\n      tag_127\n      jump\t// in\n    tag_163:\n    tag_162:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":4080:4109  coinArray[i] = coinArray[n-1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":4127:4136  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":4127:4142  coinArray.pop() */\n      dup1\n      sload\n      dup1\n      tag_165\n      jumpi\n      tag_166\n      tag_167\n      jump\t// in\n    tag_166:\n    tag_165:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"TFGv3/Contracts/SCStorage.sol\":4021:4157  if(coinArray[i] == coinAddr)... */\n    tag_157:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3994:3997  i++ */\n      dup1\n      dup1\n      tag_169\n      swap1\n      tag_141\n      jump\t// in\n    tag_169:\n      swap2\n      pop\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3971:4167  for(uint i = 0; i < n; i++)... */\n      jump(tag_151)\n    tag_152:\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3762:4173  {... */\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3714:4173  function delCoin(address coinAddr) external... */\n      pop\n      jump\t// out\n        /* \"TFGv3/Contracts/SCStorage.sol\":215:230  uint public NAV */\n    tag_49:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"TFGv3/Contracts/SCStorage.sol\":308:334  address[] public coinArray */\n    tag_54:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"TFGv3/Contracts/SCStorage.sol\":337:375  mapping (address => uint) public coins */\n    tag_59:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"TFGv3/Contracts/SCStorage.sol\":1216:1988  function transferFunds(address to, uint totalToTransfer) external virtual override returns (bool)... */\n    tag_65:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1308:1312  bool */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":1328:1345  address proxyAddr */\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":1348:1353  proxy */\n      0x01\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":1328:1353  address proxyAddr = proxy */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1392:1401  proxyAddr */\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":1385:1419  IProxy(proxyAddr).exchangeContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3f0a0797\n        /* \"TFGv3/Contracts/SCStorage.sol\":1385:1421  IProxy(proxyAddr).exchangeContract() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_174\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_174:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_175\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_175:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1371:1421  msg.sender == IProxy(proxyAddr).exchangeContract() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":1371:1381  msg.sender */\n      caller\n        /* \"TFGv3/Contracts/SCStorage.sol\":1371:1421  msg.sender == IProxy(proxyAddr).exchangeContract() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"TFGv3/Contracts/SCStorage.sol\":1371:1477  msg.sender == IProxy(proxyAddr).exchangeContract() || msg.sender == IProxy(proxyAddr).commissionContract() */\n      dup1\n      tag_176\n      jumpi\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1446:1455  proxyAddr */\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":1439:1475  IProxy(proxyAddr).commissionContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xda8909e5\n        /* \"TFGv3/Contracts/SCStorage.sol\":1439:1477  IProxy(proxyAddr).commissionContract() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_178\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_179\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_179:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1425:1477  msg.sender == IProxy(proxyAddr).commissionContract() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":1425:1435  msg.sender */\n      caller\n        /* \"TFGv3/Contracts/SCStorage.sol\":1425:1477  msg.sender == IProxy(proxyAddr).commissionContract() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"TFGv3/Contracts/SCStorage.sol\":1371:1477  msg.sender == IProxy(proxyAddr).exchangeContract() || msg.sender == IProxy(proxyAddr).commissionContract() */\n    tag_176:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1363:1478  require(msg.sender == IProxy(proxyAddr).exchangeContract() || msg.sender == IProxy(proxyAddr).commissionContract()) */\n      tag_180\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_180:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1488:1494  uint n */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":1497:1506  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":1497:1513  coinArray.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1488:1513  uint n = coinArray.length */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1536:1542  uint i */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":1532:1961  for(uint i = 0; i < n; i++)... */\n    tag_181:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1552:1553  n */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":1548:1549  i */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":1548:1553  i < n */\n      lt\n        /* \"TFGv3/Contracts/SCStorage.sol\":1532:1961  for(uint i = 0; i < n; i++)... */\n      iszero\n      tag_182\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":1582:1598  address coinAddr */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":1601:1610  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":1611:1612  i */\n      dup3\n        /* \"TFGv3/Contracts/SCStorage.sol\":1601:1613  coinArray[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_184\n      jumpi\n      tag_185\n      tag_127\n      jump\t// in\n    tag_185:\n    tag_184:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":1582:1613  address coinAddr = coinArray[i] */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1649:1650  2 */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":1630:1635  coins */\n      0x03\n        /* \"TFGv3/Contracts/SCStorage.sol\":1630:1645  coins[coinAddr] */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":1636:1644  coinAddr */\n      dup4\n        /* \"TFGv3/Contracts/SCStorage.sol\":1630:1645  coins[coinAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"TFGv3/Contracts/SCStorage.sol\":1630:1650  coins[coinAddr] == 2 */\n      sub\n        /* \"TFGv3/Contracts/SCStorage.sol\":1627:1951  if(coins[coinAddr] == 2)... */\n      tag_187\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":1682:1696  uint8 decimals */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":1706:1714  coinAddr */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":1699:1724  IERC20(coinAddr).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"TFGv3/Contracts/SCStorage.sol\":1699:1726  IERC20(coinAddr).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1682:1726  uint8 decimals = IERC20(coinAddr).decimals() */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1758:1760  18 */\n      0x12\n        /* \"TFGv3/Contracts/SCStorage.sol\":1747:1755  decimals */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":1747:1760  decimals < 18 */\n      0xff\n      and\n      lt\n        /* \"TFGv3/Contracts/SCStorage.sol\":1744:1936  if(decimals < 18) IERC20(coinAddr).transfer(to, totalToTransfer/nStable/10**(uint(decimals)-18));... */\n      iszero\n      tag_192\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":1769:1777  coinAddr */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":1762:1787  IERC20(coinAddr).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"TFGv3/Contracts/SCStorage.sol\":1788:1790  to */\n      dup10\n        /* \"TFGv3/Contracts/SCStorage.sol\":1836:1838  18 */\n      0x12\n        /* \"TFGv3/Contracts/SCStorage.sol\":1826:1834  decimals */\n      dup5\n        /* \"TFGv3/Contracts/SCStorage.sol\":1821:1835  uint(decimals) */\n      0xff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":1821:1838  uint(decimals)-18 */\n      tag_193\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_193:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1816:1818  10 */\n      0x0a\n        /* \"TFGv3/Contracts/SCStorage.sol\":1816:1839  10**(uint(decimals)-18) */\n      tag_194\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1808:1815  nStable */\n      0x01\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":1792:1815  totalToTransfer/nStable */\n      0xff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":1792:1807  totalToTransfer */\n      dup12\n        /* \"TFGv3/Contracts/SCStorage.sol\":1792:1815  totalToTransfer/nStable */\n      tag_196\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1792:1839  totalToTransfer/nStable/10**(uint(decimals)-18) */\n      tag_198\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_198:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1762:1840  IERC20(coinAddr).transfer(to, totalToTransfer/nStable/10**(uint(decimals)-18)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap3\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_199:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_201:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_202\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_202:\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1744:1936  if(decimals < 18) IERC20(coinAddr).transfer(to, totalToTransfer/nStable/10**(uint(decimals)-18));... */\n      jump(tag_203)\n    tag_192:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1878:1880  18 */\n      0x12\n        /* \"TFGv3/Contracts/SCStorage.sol\":1866:1874  decimals */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":1866:1880  decimals == 18 */\n      0xff\n      and\n      sub\n        /* \"TFGv3/Contracts/SCStorage.sol\":1863:1936  if(decimals == 18) IERC20(coinAddr).transfer(to, totalToTransfer/nStable) */\n      tag_204\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":1889:1897  coinAddr */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":1882:1907  IERC20(coinAddr).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"TFGv3/Contracts/SCStorage.sol\":1908:1910  to */\n      dup10\n        /* \"TFGv3/Contracts/SCStorage.sol\":1928:1935  nStable */\n      0x01\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":1912:1935  totalToTransfer/nStable */\n      0xff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":1912:1927  totalToTransfer */\n      dup11\n        /* \"TFGv3/Contracts/SCStorage.sol\":1912:1935  totalToTransfer/nStable */\n      tag_205\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_205:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1882:1936  IERC20(coinAddr).transfer(to, totalToTransfer/nStable) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap3\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_206:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_208\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_208:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_209\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_209:\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1863:1936  if(decimals == 18) IERC20(coinAddr).transfer(to, totalToTransfer/nStable) */\n    tag_204:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1744:1936  if(decimals < 18) IERC20(coinAddr).transfer(to, totalToTransfer/nStable/10**(uint(decimals)-18));... */\n    tag_203:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1664:1951  {... */\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1627:1951  if(coins[coinAddr] == 2)... */\n    tag_187:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1568:1961  {... */\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1555:1558  i++ */\n      dup1\n      dup1\n      tag_210\n      swap1\n      tag_141\n      jump\t// in\n    tag_210:\n      swap2\n      pop\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1532:1961  for(uint i = 0; i < n; i++)... */\n      jump(tag_181)\n    tag_182:\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1977:1981  true */\n      0x01\n        /* \"TFGv3/Contracts/SCStorage.sol\":1970:1981  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1216:1988  function transferFunds(address to, uint totalToTransfer) external virtual override returns (bool)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"TFGv3/Contracts/SCStorage.sol\":4179:4317  function updateProxy(address newAddr) external virtual override... */\n    tag_71:\n        /* \"TFGv3/Contracts/SCStorage.sol\":4279:4284  proxy */\n      0x01\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":4265:4284  msg.sender == proxy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":4265:4275  msg.sender */\n      caller\n        /* \"TFGv3/Contracts/SCStorage.sol\":4265:4284  msg.sender == proxy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"TFGv3/Contracts/SCStorage.sol\":4257:4285  require(msg.sender == proxy) */\n      tag_212\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_212:\n        /* \"TFGv3/Contracts/SCStorage.sol\":4303:4310  newAddr */\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":4295:4300  proxy */\n      0x01\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":4295:4310  proxy = newAddr */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":4179:4317  function updateProxy(address newAddr) external virtual override... */\n      pop\n      jump\t// out\n        /* \"TFGv3/Contracts/SCStorage.sol\":3438:3704  function addCoin(address coinAddr, uint stable) external  OnlyDeployer... */\n    tag_75:\n        /* \"TFGv3/Contracts/SCStorage.sol\":731:739  deployer */\n      immutable(\"0xcdf1dd2e8742ccca482be714f2ab38acb16e66300c9790cd19a8abbcdf150d1c\")\n        /* \"TFGv3/Contracts/SCStorage.sol\":717:739  msg.sender == deployer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":717:727  msg.sender */\n      caller\n        /* \"TFGv3/Contracts/SCStorage.sol\":717:739  msg.sender == deployer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"TFGv3/Contracts/SCStorage.sol\":709:740  require(msg.sender == deployer) */\n      tag_214\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_214:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3536:3537  0 */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":3526:3532  stable */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":3526:3537  stable == 0 */\n      sub\n        /* \"TFGv3/Contracts/SCStorage.sol\":3523:3664  if(stable == 0) coins[coinAddr] = 1;... */\n      tag_216\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":3557:3558  1 */\n      0x01\n        /* \"TFGv3/Contracts/SCStorage.sol\":3539:3544  coins */\n      0x03\n        /* \"TFGv3/Contracts/SCStorage.sol\":3539:3554  coins[coinAddr] */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":3545:3553  coinAddr */\n      dup5\n        /* \"TFGv3/Contracts/SCStorage.sol\":3539:3554  coins[coinAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"TFGv3/Contracts/SCStorage.sol\":3539:3558  coins[coinAddr] = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3523:3664  if(stable == 0) coins[coinAddr] = 1;... */\n      jump(tag_217)\n    tag_216:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3586:3587  1 */\n      0x01\n        /* \"TFGv3/Contracts/SCStorage.sol\":3576:3582  stable */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":3576:3587  stable == 1 */\n      sub\n        /* \"TFGv3/Contracts/SCStorage.sol\":3573:3664  if(stable == 1)... */\n      tag_218\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":3629:3630  2 */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":3611:3616  coins */\n      0x03\n        /* \"TFGv3/Contracts/SCStorage.sol\":3611:3626  coins[coinAddr] */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":3617:3625  coinAddr */\n      dup5\n        /* \"TFGv3/Contracts/SCStorage.sol\":3611:3626  coins[coinAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"TFGv3/Contracts/SCStorage.sol\":3611:3630  coins[coinAddr] = 2 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3644:3651  nStable */\n      0x01\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":3644:3653  nStable++ */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_219\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3573:3664  if(stable == 1)... */\n    tag_218:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3523:3664  if(stable == 0) coins[coinAddr] = 1;... */\n    tag_217:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3673:3682  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":3688:3696  coinAddr */\n      dup3\n        /* \"TFGv3/Contracts/SCStorage.sol\":3673:3697  coinArray.push(coinAddr) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3438:3704  function addCoin(address coinAddr, uint stable) external  OnlyDeployer... */\n      pop\n      pop\n      jump\t// out\n        /* \"TFGv3/Contracts/SCStorage.sol\":843:974  function initContract(address proxyAddr) external OnlyDeployer NonInit... */\n    tag_79:\n        /* \"TFGv3/Contracts/SCStorage.sol\":731:739  deployer */\n      immutable(\"0xcdf1dd2e8742ccca482be714f2ab38acb16e66300c9790cd19a8abbcdf150d1c\")\n        /* \"TFGv3/Contracts/SCStorage.sol\":717:739  msg.sender == deployer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":717:727  msg.sender */\n      caller\n        /* \"TFGv3/Contracts/SCStorage.sol\":717:739  msg.sender == deployer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"TFGv3/Contracts/SCStorage.sol\":709:740  require(msg.sender == deployer) */\n      tag_223\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_223:\n        /* \"TFGv3/Contracts/SCStorage.sol\":817:818  0 */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":805:813  initDone */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":805:818  initDone == 0 */\n      0xff\n      and\n      eq\n        /* \"TFGv3/Contracts/SCStorage.sol\":797:819  require(initDone == 0) */\n      tag_225\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_225:\n        /* \"TFGv3/Contracts/SCStorage.sol\":936:945  proxyAddr */\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":928:933  proxy */\n      0x01\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":928:945  proxy = proxyAddr */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":966:967  1 */\n      0x01\n        /* \"TFGv3/Contracts/SCStorage.sol\":955:963  initDone */\n      dup1\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":955:967  initDone = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":843:974  function initContract(address proxyAddr) external OnlyDeployer NonInit... */\n      pop\n      jump\t// out\n        /* \"TFGv3/Contracts/SCStorage.sol\":484:527  mapping (address => address) public quoteIn */\n    tag_83:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"TFGv3/Contracts/SCStorage.sol\":1998:2528  function oracleNAV() external view returns (uint, uint)... */\n    tag_87:\n        /* \"TFGv3/Contracts/SCStorage.sol\":2042:2046  uint */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":2048:2052  uint */\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":2297:2313  uint lastUpdated */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":2337:2342  proxy */\n      0x01\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":2330:2362  IProxy(proxy).commissionContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xda8909e5\n        /* \"TFGv3/Contracts/SCStorage.sol\":2330:2364  IProxy(proxy).commissionContract() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_229\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_229:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_230\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_230:\n        /* \"TFGv3/Contracts/SCStorage.sol\":2316:2377  ISCCommission(IProxy(proxy).commissionContract()).lastUpdated */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0b06f5d\n        /* \"TFGv3/Contracts/SCStorage.sol\":2316:2379  ISCCommission(IProxy(proxy).commissionContract()).lastUpdated() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_232\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_232:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_233\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_233:\n        /* \"TFGv3/Contracts/SCStorage.sol\":2297:2379  uint lastUpdated = ISCCommission(IProxy(proxy).commissionContract()).lastUpdated() */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":2389:2398  uint acum */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":2422:2427  proxy */\n      0x01\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":2415:2447  IProxy(proxy).commissionContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xda8909e5\n        /* \"TFGv3/Contracts/SCStorage.sol\":2415:2449  IProxy(proxy).commissionContract() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_235\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_235:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_236\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_236:\n        /* \"TFGv3/Contracts/SCStorage.sol\":2401:2466  ISCCommission(IProxy(proxy).commissionContract()).accumCommission */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7f8483a4\n        /* \"TFGv3/Contracts/SCStorage.sol\":2401:2468  ISCCommission(IProxy(proxy).commissionContract()).accumCommission() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_238\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_238:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_239\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_239:\n        /* \"TFGv3/Contracts/SCStorage.sol\":2389:2468  uint acum = ISCCommission(IProxy(proxy).commissionContract()).accumCommission() */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":2503:2507  acum */\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":2486:2500  calculateNAV() */\n      tag_240\n        /* \"TFGv3/Contracts/SCStorage.sol\":2486:2498  calculateNAV */\n      tag_106\n        /* \"TFGv3/Contracts/SCStorage.sol\":2486:2500  calculateNAV() */\n      jump\t// in\n    tag_240:\n        /* \"TFGv3/Contracts/SCStorage.sol\":2486:2507  calculateNAV() - acum */\n      tag_241\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_241:\n        /* \"TFGv3/Contracts/SCStorage.sol\":2509:2520  lastUpdated */\n      dup3\n        /* \"TFGv3/Contracts/SCStorage.sol\":2478:2521  return (calculateNAV() - acum, lastUpdated) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1998:2528  function oracleNAV() external view returns (uint, uint)... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"TFGv3/Contracts/SCStorage.sol\":284:304  address public proxy */\n    tag_92:\n      0x01\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"TFGv3/Contracts/SCStorage.sol\":236:257  uint8 public initDone */\n    tag_96:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"TFGv3/Contracts/SCStorage.sol\":2538:3428  function calculateNAV() internal view returns (uint newNAV)... */\n    tag_106:\n        /* \"TFGv3/Contracts/SCStorage.sol\":2585:2596  uint newNAV */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":2742:2748  uint n */\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":2751:2760  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":2751:2767  coinArray.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":2742:2767  uint n = coinArray.length */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":2781:2787  uint i */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":2777:3422  for(uint i = 0; i < n; i++)... */\n    tag_243:\n        /* \"TFGv3/Contracts/SCStorage.sol\":2797:2798  n */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":2793:2794  i */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":2793:2798  i < n */\n      lt\n        /* \"TFGv3/Contracts/SCStorage.sol\":2777:3422  for(uint i = 0; i < n; i++)... */\n      iszero\n      tag_244\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":2827:2839  address coin */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":2842:2851  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":2852:2853  i */\n      dup3\n        /* \"TFGv3/Contracts/SCStorage.sol\":2842:2854  coinArray[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_246\n      jumpi\n      tag_247\n      tag_127\n      jump\t// in\n    tag_247:\n    tag_246:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":2827:2854  address coin = coinArray[i] */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":2868:2880  uint balance */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":2890:2894  coin */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":2883:2905  IERC20(coin).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"TFGv3/Contracts/SCStorage.sol\":2914:2918  this */\n      address\n        /* \"TFGv3/Contracts/SCStorage.sol\":2883:2920  IERC20(coin).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_249:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_251\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_251:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_252\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_252:\n        /* \"TFGv3/Contracts/SCStorage.sol\":2868:2920  uint balance = IERC20(coin).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":2934:2945  uint stable */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":2948:2953  coins */\n      0x03\n        /* \"TFGv3/Contracts/SCStorage.sol\":2948:2959  coins[coin] */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":2954:2958  coin */\n      dup5\n        /* \"TFGv3/Contracts/SCStorage.sol\":2948:2959  coins[coin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"TFGv3/Contracts/SCStorage.sol\":2934:2959  uint stable = coins[coin] */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":2999:3000  1 */\n      0x01\n        /* \"TFGv3/Contracts/SCStorage.sol\":2989:2995  stable */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":2989:3000  stable == 1 */\n      sub\n        /* \"TFGv3/Contracts/SCStorage.sol\":2986:3411  if(stable == 1)... */\n      tag_253\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":3032:3042  uint quote */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":3092:3116  int24 arithmeticMeanTick */\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":3121:3167  OracleLibrary.consult(coinOracleAddr[coin], 0) */\n      tag_254\n        /* \"TFGv3/Contracts/SCStorage.sol\":3143:3157  coinOracleAddr */\n      0x04\n        /* \"TFGv3/Contracts/SCStorage.sol\":3143:3163  coinOracleAddr[coin] */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":3158:3162  coin */\n      dup8\n        /* \"TFGv3/Contracts/SCStorage.sol\":3143:3163  coinOracleAddr[coin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":3165:3166  0 */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":3121:3142  OracleLibrary.consult */\n      tag_255\n        /* \"TFGv3/Contracts/SCStorage.sol\":3121:3167  OracleLibrary.consult(coinOracleAddr[coin], 0) */\n      jump\t// in\n    tag_254:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3091:3167  (int24 arithmeticMeanTick,) = OracleLibrary.consult(coinOracleAddr[coin], 0) */\n      pop\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3197:3284  OracleLibrary.getQuoteAtTick(arithmeticMeanTick, uint128(balance), coin, quoteIn[coin]) */\n      tag_256\n        /* \"TFGv3/Contracts/SCStorage.sol\":3226:3244  arithmeticMeanTick */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":3254:3261  balance */\n      dup6\n        /* \"TFGv3/Contracts/SCStorage.sol\":3264:3268  coin */\n      dup8\n        /* \"TFGv3/Contracts/SCStorage.sol\":3270:3277  quoteIn */\n      0x05\n        /* \"TFGv3/Contracts/SCStorage.sol\":3270:3283  quoteIn[coin] */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":3278:3282  coin */\n      dup11\n        /* \"TFGv3/Contracts/SCStorage.sol\":3270:3283  quoteIn[coin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":3197:3225  OracleLibrary.getQuoteAtTick */\n      tag_257\n        /* \"TFGv3/Contracts/SCStorage.sol\":3197:3284  OracleLibrary.getQuoteAtTick(arithmeticMeanTick, uint128(balance), coin, quoteIn[coin]) */\n      jump\t// in\n    tag_256:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3189:3284  quote = OracleLibrary.getQuoteAtTick(arithmeticMeanTick, uint128(balance), coin, quoteIn[coin]) */\n      swap2\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3060:3303  unchecked{... */\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3340:3345  quote */\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":3330:3337  balance */\n      dup4\n        /* \"TFGv3/Contracts/SCStorage.sol\":3330:3345  balance * quote */\n      tag_258\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3320:3345  newNAV += balance * quote */\n      dup8\n      tag_260\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n      swap7\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3014:3360  {... */\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":2986:3411  if(stable == 1)... */\n      jump(tag_262)\n    tag_253:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3391:3392  2 */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":3381:3387  stable */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":3381:3392  stable == 2 */\n      sub\n        /* \"TFGv3/Contracts/SCStorage.sol\":3378:3411  if(stable == 2) newNAV += balance */\n      tag_263\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":3404:3411  balance */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":3394:3411  newNAV += balance */\n      dup7\n      tag_264\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_264:\n      swap6\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3378:3411  if(stable == 2) newNAV += balance */\n    tag_263:\n        /* \"TFGv3/Contracts/SCStorage.sol\":2986:3411  if(stable == 1)... */\n    tag_262:\n        /* \"TFGv3/Contracts/SCStorage.sol\":2813:3422  {... */\n      pop\n      pop\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":2800:2803  i++ */\n      dup1\n      dup1\n      tag_265\n      swap1\n      tag_141\n      jump\t// in\n    tag_265:\n      swap2\n      pop\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":2777:3422  for(uint i = 0; i < n; i++)... */\n      jump(tag_243)\n    tag_244:\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":2602:3428  {... */\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":2538:3428  function calculateNAV() internal view returns (uint newNAV)... */\n      swap1\n      jump\t// out\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":808:2049  function consult(address pool, uint32 secondsAgo)... */\n    tag_255:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":905:929  int24 arithmeticMeanTick */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":931:960  uint128 harmonicMeanLiquidity */\n      dup1\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":998:999  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":984:994  secondsAgo */\n      dup4\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":984:999  secondsAgo != 0 */\n      0xffffffff\n      and\n      sub\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":976:1006  require(secondsAgo != 0, 'BP') */\n      tag_267\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_267:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1017:1044  uint32[] memory secondsAgos */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1060:1061  2 */\n      0x02\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1047:1062  new uint32[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_270\n      jumpi\n      tag_271\n      tag_272\n      jump\t// in\n    tag_271:\n    tag_270:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_273\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_273:\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1017:1062  uint32[] memory secondsAgos = new uint32[](2) */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1089:1099  secondsAgo */\n      dup4\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1072:1083  secondsAgos */\n      dup2\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1084:1085  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1072:1086  secondsAgos[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_274\n      jumpi\n      tag_275\n      tag_127\n      jump\t// in\n    tag_275:\n    tag_274:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1072:1099  secondsAgos[0] = secondsAgo */\n      swap1\n      0xffffffff\n      and\n      swap1\n      dup2\n      0xffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1126:1127  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1109:1120  secondsAgos */\n      dup2\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1121:1122  1 */\n      0x01\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1109:1123  secondsAgos[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_276\n      jumpi\n      tag_277\n      tag_127\n      jump\t// in\n    tag_277:\n    tag_276:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1109:1127  secondsAgos[1] = 0 */\n      swap1\n      0xffffffff\n      and\n      swap1\n      dup2\n      0xffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1139:1169  int56[] memory tickCumulatives */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1171:1222  uint160[] memory secondsPerLiquidityCumulativeX128s */\n      dup1\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1253:1257  pool */\n      dup7\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1238:1266  IUniswapV3Pool(pool).observe */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x883bdbfd\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1267:1278  secondsAgos */\n      dup5\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1238:1279  IUniswapV3Pool(pool).observe(secondsAgos) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_281\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_281:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_282\n      swap2\n      swap1\n      tag_283\n      jump\t// in\n    tag_282:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1138:1279  (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1290:1316  int56 tickCumulativesDelta */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1340:1355  tickCumulatives */\n      dup3\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1356:1357  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1340:1358  tickCumulatives[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_284\n      jumpi\n      tag_285\n      tag_127\n      jump\t// in\n    tag_285:\n    tag_284:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1319:1334  tickCumulatives */\n      dup4\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1335:1336  1 */\n      0x01\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1319:1337  tickCumulatives[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_286\n      jumpi\n      tag_287\n      tag_127\n      jump\t// in\n    tag_287:\n    tag_286:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1319:1358  tickCumulatives[1] - tickCumulatives[0] */\n      tag_288\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_288:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1290:1358  int56 tickCumulativesDelta = tickCumulatives[1] - tickCumulatives[0] */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1368:1411  uint160 secondsPerLiquidityCumulativesDelta */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1466:1500  secondsPerLiquidityCumulativeX128s */\n      dup3\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1501:1502  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1466:1503  secondsPerLiquidityCumulativeX128s[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_290\n      jumpi\n      tag_291\n      tag_127\n      jump\t// in\n    tag_291:\n    tag_290:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1426:1460  secondsPerLiquidityCumulativeX128s */\n      dup4\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1461:1462  1 */\n      0x01\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1426:1463  secondsPerLiquidityCumulativeX128s[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_292\n      jumpi\n      tag_293\n      tag_127\n      jump\t// in\n    tag_293:\n    tag_292:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1426:1503  secondsPerLiquidityCumulativeX128s[1] - secondsPerLiquidityCumulativeX128s[0] */\n      tag_294\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1368:1503  uint160 secondsPerLiquidityCumulativesDelta =... */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1570:1580  secondsAgo */\n      dup8\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1541:1581  tickCumulativesDelta / int32(secondsAgo) */\n      0x03\n      signextend\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1541:1561  tickCumulativesDelta */\n      dup3\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1541:1581  tickCumulativesDelta / int32(secondsAgo) */\n      tag_296\n      swap2\n      swap1\n      tag_297\n      jump\t// in\n    tag_296:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1514:1582  arithmeticMeanTick = int24(tickCumulativesDelta / int32(secondsAgo)) */\n      swap7\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1664:1665  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1641:1661  tickCumulativesDelta */\n      dup3\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1641:1665  tickCumulativesDelta < 0 */\n      0x06\n      signextend\n      slt\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1641:1716  tickCumulativesDelta < 0 && (tickCumulativesDelta % int32(secondsAgo) != 0) */\n      dup1\n      iszero\n      tag_298\n      jumpi\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1714:1715  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1699:1709  secondsAgo */\n      dup9\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1670:1710  tickCumulativesDelta % int32(secondsAgo) */\n      0x03\n      signextend\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1670:1690  tickCumulativesDelta */\n      dup4\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1670:1710  tickCumulativesDelta % int32(secondsAgo) */\n      tag_299\n      swap2\n      swap1\n      tag_300\n      jump\t// in\n    tag_299:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1670:1715  tickCumulativesDelta % int32(secondsAgo) != 0 */\n      0x06\n      signextend\n      eq\n      iszero\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1641:1716  tickCumulativesDelta < 0 && (tickCumulativesDelta % int32(secondsAgo) != 0) */\n    tag_298:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1637:1738  if (tickCumulativesDelta < 0 && (tickCumulativesDelta % int32(secondsAgo) != 0)) arithmeticMeanTick-- */\n      iszero\n      tag_301\n      jumpi\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1718:1738  arithmeticMeanTick-- */\n      dup7\n      dup1\n      tag_302\n      swap1\n      tag_303\n      jump\t// in\n    tag_302:\n      swap8\n      pop\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1637:1738  if (tickCumulativesDelta < 0 && (tickCumulativesDelta % int32(secondsAgo) != 0)) arithmeticMeanTick-- */\n    tag_301:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1866:1888  uint192 secondsAgoX160 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1913:1930  type(uint160).max */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1891:1930  uint192(secondsAgo) * type(uint160).max */\n      dup1\n      and\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1899:1909  secondsAgo */\n      dup10\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1891:1910  uint192(secondsAgo) */\n      0xffffffff\n      and\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1891:1930  uint192(secondsAgo) * type(uint160).max */\n      tag_304\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_304:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1866:1930  uint192 secondsAgoX160 = uint192(secondsAgo) * type(uint160).max */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2038:2040  32 */\n      0x20\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1998:2033  secondsPerLiquidityCumulativesDelta */\n      dup3\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1990:2034  uint192(secondsPerLiquidityCumulativesDelta) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1990:2040  uint192(secondsPerLiquidityCumulativesDelta) << 32 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      shl\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1972:1986  secondsAgoX160 */\n      dup2\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1972:2041  secondsAgoX160 / (uint192(secondsPerLiquidityCumulativesDelta) << 32) */\n      tag_306\n      swap2\n      swap1\n      tag_307\n      jump\t// in\n    tag_306:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1940:2042  harmonicMeanLiquidity = uint128(secondsAgoX160 / (uint192(secondsPerLiquidityCumulativesDelta) << 32)) */\n      swap7\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":966:2049  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":808:2049  function consult(address pool, uint32 secondsAgo)... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2553:3508  function getQuoteAtTick(... */\n    tag_257:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2709:2728  uint256 quoteAmount */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2740:2760  uint160 sqrtRatioX96 */\n      dup1\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2763:2796  TickMath.getSqrtRatioAtTick(tick) */\n      tag_309\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2791:2795  tick */\n      dup7\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2763:2790  TickMath.getSqrtRatioAtTick */\n      tag_310\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2763:2796  TickMath.getSqrtRatioAtTick(tick) */\n      jump\t// in\n    tag_309:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2740:2796  uint160 sqrtRatioX96 = TickMath.getSqrtRatioAtTick(tick) */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2931:2948  type(uint128).max */\n      0xffffffffffffffffffffffffffffffff\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2915:2948  sqrtRatioX96 <= type(uint128).max */\n      dup1\n      and\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2915:2927  sqrtRatioX96 */\n      dup2\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2915:2948  sqrtRatioX96 <= type(uint128).max */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2911:3502  if (sqrtRatioX96 <= type(uint128).max) {... */\n      tag_311\n      jumpi\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2964:2981  uint256 ratioX192 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3008:3020  sqrtRatioX96 */\n      dup2\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2984:3020  uint256(sqrtRatioX96) * sqrtRatioX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2992:3004  sqrtRatioX96 */\n      dup3\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2984:3005  uint256(sqrtRatioX96) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2984:3020  uint256(sqrtRatioX96) * sqrtRatioX96 */\n      tag_312\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_312:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2964:3020  uint256 ratioX192 = uint256(sqrtRatioX96) * sqrtRatioX96 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3060:3070  quoteToken */\n      dup4\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3048:3070  baseToken < quoteToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3048:3057  baseToken */\n      dup6\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3048:3070  baseToken < quoteToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3048:3204  baseToken < quoteToken... */\n      tag_313\n      jumpi\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3156:3204  FullMath.mulDiv(1 << 192, baseAmount, ratioX192) */\n      tag_314\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3172:3180  1 << 192 */\n      0x01000000000000000000000000000000000000000000000000\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3182:3192  baseAmount */\n      dup8\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3156:3204  FullMath.mulDiv(1 << 192, baseAmount, ratioX192) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3194:3203  ratioX192 */\n      dup4\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3156:3171  FullMath.mulDiv */\n      tag_315\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3156:3204  FullMath.mulDiv(1 << 192, baseAmount, ratioX192) */\n      jump\t// in\n    tag_314:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3048:3204  baseToken < quoteToken... */\n      jump(tag_316)\n    tag_313:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3089:3137  FullMath.mulDiv(ratioX192, baseAmount, 1 << 192) */\n      tag_317\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3105:3114  ratioX192 */\n      dup2\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3116:3126  baseAmount */\n      dup8\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3089:3137  FullMath.mulDiv(ratioX192, baseAmount, 1 << 192) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3128:3136  1 << 192 */\n      0x01000000000000000000000000000000000000000000000000\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3089:3104  FullMath.mulDiv */\n      tag_315\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3089:3137  FullMath.mulDiv(ratioX192, baseAmount, 1 << 192) */\n      jump\t// in\n    tag_317:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3048:3204  baseToken < quoteToken... */\n    tag_316:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3034:3204  quoteAmount = baseToken < quoteToken... */\n      swap3\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2950:3215  {... */\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2911:3502  if (sqrtRatioX96 <= type(uint128).max) {... */\n      jump(tag_318)\n    tag_311:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3235:3252  uint256 ratioX128 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3255:3307  FullMath.mulDiv(sqrtRatioX96, sqrtRatioX96, 1 << 64) */\n      tag_319\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3271:3283  sqrtRatioX96 */\n      dup3\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3255:3307  FullMath.mulDiv(sqrtRatioX96, sqrtRatioX96, 1 << 64) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3285:3297  sqrtRatioX96 */\n      dup4\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3255:3307  FullMath.mulDiv(sqrtRatioX96, sqrtRatioX96, 1 << 64) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3299:3306  1 << 64 */\n      0x010000000000000000\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3255:3270  FullMath.mulDiv */\n      tag_315\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3255:3307  FullMath.mulDiv(sqrtRatioX96, sqrtRatioX96, 1 << 64) */\n      jump\t// in\n    tag_319:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3235:3307  uint256 ratioX128 = FullMath.mulDiv(sqrtRatioX96, sqrtRatioX96, 1 << 64) */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3347:3357  quoteToken */\n      dup4\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3335:3357  baseToken < quoteToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3335:3344  baseToken */\n      dup6\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3335:3357  baseToken < quoteToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3335:3491  baseToken < quoteToken... */\n      tag_320\n      jumpi\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3443:3491  FullMath.mulDiv(1 << 128, baseAmount, ratioX128) */\n      tag_321\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3459:3467  1 << 128 */\n      0x0100000000000000000000000000000000\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3469:3479  baseAmount */\n      dup8\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3443:3491  FullMath.mulDiv(1 << 128, baseAmount, ratioX128) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3481:3490  ratioX128 */\n      dup4\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3443:3458  FullMath.mulDiv */\n      tag_315\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3443:3491  FullMath.mulDiv(1 << 128, baseAmount, ratioX128) */\n      jump\t// in\n    tag_321:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3335:3491  baseToken < quoteToken... */\n      jump(tag_322)\n    tag_320:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3376:3424  FullMath.mulDiv(ratioX128, baseAmount, 1 << 128) */\n      tag_323\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3392:3401  ratioX128 */\n      dup2\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3403:3413  baseAmount */\n      dup8\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3376:3424  FullMath.mulDiv(ratioX128, baseAmount, 1 << 128) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3415:3423  1 << 128 */\n      0x0100000000000000000000000000000000\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3376:3391  FullMath.mulDiv */\n      tag_315\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3376:3424  FullMath.mulDiv(ratioX128, baseAmount, 1 << 128) */\n      jump\t// in\n    tag_323:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3335:3491  baseToken < quoteToken... */\n    tag_322:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3321:3491  quoteAmount = baseToken < quoteToken... */\n      swap3\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3221:3502  {... */\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2911:3502  if (sqrtRatioX96 <= type(uint128).max) {... */\n    tag_318:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2730:3508  {... */\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2553:3508  function getQuoteAtTick(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1355:3943  function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {... */\n    tag_310:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1418:1438  uint160 sqrtPriceX96 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1450:1465  uint256 absTick */\n      dup1\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1475:1476  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1468:1472  tick */\n      dup4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1468:1476  tick < 0 */\n      0x02\n      signextend\n      slt\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1468:1525  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      tag_325\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1519:1523  tick */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1512:1524  int256(tick) */\n      0x02\n      signextend\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1468:1525  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      jump(tag_326)\n    tag_325:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1495:1499  tick */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1488:1500  int256(tick) */\n      0x02\n      signextend\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1487:1500  -int256(tick) */\n      tag_327\n      swap1\n      tag_328\n      jump\t// in\n    tag_327:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1468:1525  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n    tag_326:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1450:1525  uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":477:484  -887272 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":637:646  -MIN_TICK */\n      tag_329\n      swap1\n      tag_330\n      jump\t// in\n    tag_329:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1554:1579  uint256(uint24(MAX_TICK)) */\n      0xffffff\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1543:1550  absTick */\n      dup2\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1543:1579  absTick <= uint256(uint24(MAX_TICK)) */\n      gt\n      iszero\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1535:1585  require(absTick <= uint256(uint24(MAX_TICK)), 'T') */\n      tag_331\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_332\n      swap1\n      tag_333\n      jump\t// in\n    tag_332:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_331:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1596:1609  uint256 ratio */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1629:1630  0 */\n      dup1\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1622:1625  0x1 */\n      0x01\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1612:1619  absTick */\n      dup4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1612:1625  absTick & 0x1 */\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1612:1630  absTick & 0x1 != 0 */\n      sub\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1612:1705  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      tag_334\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1670:1705  0x100000000000000000000000000000000 */\n      0x0100000000000000000000000000000000\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1612:1705  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      jump(tag_335)\n    tag_334:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1633:1667  0xfffcb933bd6fad37aa2d162d1a594001 */\n      0xfffcb933bd6fad37aa2d162d1a594001\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1612:1705  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n    tag_335:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1596:1705  uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      0xffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1736:1737  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1729:1732  0x2 */\n      0x02\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1719:1726  absTick */\n      dup4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1719:1732  absTick & 0x2 */\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1719:1737  absTick & 0x2 != 0 */\n      eq\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1715:1798  if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      tag_336\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1795:1798  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1756:1790  0xfff97272373d413259a46990580e213a */\n      0xfff97272373d413259a46990580e213a\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1748:1753  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1748:1790  ratio * 0xfff97272373d413259a46990580e213a */\n      tag_337\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_337:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1747:1798  (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1739:1798  ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1715:1798  if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n    tag_336:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1829:1830  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1822:1825  0x4 */\n      0x04\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1812:1819  absTick */\n      dup4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1812:1825  absTick & 0x4 */\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1812:1830  absTick & 0x4 != 0 */\n      eq\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1808:1891  if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      tag_338\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1888:1891  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1849:1883  0xfff2e50f5f656932ef12357cf3c7fdcc */\n      0xfff2e50f5f656932ef12357cf3c7fdcc\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1841:1846  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1841:1883  ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc */\n      tag_339\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_339:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1840:1891  (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1832:1891  ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1808:1891  if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n    tag_338:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1922:1923  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1915:1918  0x8 */\n      0x08\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1905:1912  absTick */\n      dup4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1905:1918  absTick & 0x8 */\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1905:1923  absTick & 0x8 != 0 */\n      eq\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1901:1984  if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      tag_340\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1981:1984  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1942:1976  0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      0xffe5caca7e10e4e61c3624eaa0941cd0\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1934:1939  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1934:1976  ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      tag_341\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_341:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1933:1984  (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1925:1984  ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1901:1984  if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n    tag_340:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2016:2017  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2008:2012  0x10 */\n      0x10\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1998:2005  absTick */\n      dup4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1998:2012  absTick & 0x10 */\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1998:2017  absTick & 0x10 != 0 */\n      eq\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1994:2078  if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      tag_342\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2075:2078  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2036:2070  0xffcb9843d60f6159c9db58835c926644 */\n      0xffcb9843d60f6159c9db58835c926644\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2028:2033  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2028:2070  ratio * 0xffcb9843d60f6159c9db58835c926644 */\n      tag_343\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_343:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2027:2078  (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2019:2078  ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1994:2078  if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n    tag_342:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2110:2111  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2102:2106  0x20 */\n      0x20\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2092:2099  absTick */\n      dup4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2092:2106  absTick & 0x20 */\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2092:2111  absTick & 0x20 != 0 */\n      eq\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2088:2172  if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      tag_344\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2169:2172  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2130:2164  0xff973b41fa98c081472e6896dfb254c0 */\n      0xff973b41fa98c081472e6896dfb254c0\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2122:2127  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2122:2164  ratio * 0xff973b41fa98c081472e6896dfb254c0 */\n      tag_345\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_345:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2121:2172  (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2113:2172  ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2088:2172  if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n    tag_344:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2204:2205  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2196:2200  0x40 */\n      0x40\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2186:2193  absTick */\n      dup4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2186:2200  absTick & 0x40 */\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2186:2205  absTick & 0x40 != 0 */\n      eq\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2182:2266  if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      tag_346\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2263:2266  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2224:2258  0xff2ea16466c96a3843ec78b326b52861 */\n      0xff2ea16466c96a3843ec78b326b52861\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2216:2221  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2216:2258  ratio * 0xff2ea16466c96a3843ec78b326b52861 */\n      tag_347\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_347:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2215:2266  (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2207:2266  ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2182:2266  if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n    tag_346:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2298:2299  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2290:2294  0x80 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2280:2287  absTick */\n      dup4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2280:2294  absTick & 0x80 */\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2280:2299  absTick & 0x80 != 0 */\n      eq\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2276:2360  if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      tag_348\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2357:2360  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2318:2352  0xfe5dee046a99a2a811c461f1969c3053 */\n      0xfe5dee046a99a2a811c461f1969c3053\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2310:2315  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2310:2352  ratio * 0xfe5dee046a99a2a811c461f1969c3053 */\n      tag_349\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_349:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2309:2360  (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2301:2360  ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2276:2360  if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n    tag_348:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2393:2394  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2384:2389  0x100 */\n      0x0100\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2374:2381  absTick */\n      dup4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2374:2389  absTick & 0x100 */\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2374:2394  absTick & 0x100 != 0 */\n      eq\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2370:2455  if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      tag_350\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2452:2455  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2413:2447  0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      0xfcbe86c7900a88aedcffc83b479aa3a4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2405:2410  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2405:2447  ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      tag_351\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_351:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2404:2455  (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2396:2455  ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2370:2455  if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n    tag_350:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2488:2489  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2479:2484  0x200 */\n      0x0200\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2469:2476  absTick */\n      dup4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2469:2484  absTick & 0x200 */\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2469:2489  absTick & 0x200 != 0 */\n      eq\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2465:2550  if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      tag_352\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2547:2550  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2508:2542  0xf987a7253ac413176f2b074cf7815e54 */\n      0xf987a7253ac413176f2b074cf7815e54\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2500:2505  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2500:2542  ratio * 0xf987a7253ac413176f2b074cf7815e54 */\n      tag_353\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_353:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2499:2550  (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2491:2550  ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2465:2550  if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n    tag_352:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2583:2584  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2574:2579  0x400 */\n      0x0400\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2564:2571  absTick */\n      dup4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2564:2579  absTick & 0x400 */\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2564:2584  absTick & 0x400 != 0 */\n      eq\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2560:2645  if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      tag_354\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2642:2645  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2603:2637  0xf3392b0822b70005940c7a398e4b70f3 */\n      0xf3392b0822b70005940c7a398e4b70f3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2595:2600  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2595:2637  ratio * 0xf3392b0822b70005940c7a398e4b70f3 */\n      tag_355\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_355:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2594:2645  (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2586:2645  ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2560:2645  if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n    tag_354:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2678:2679  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2669:2674  0x800 */\n      0x0800\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2659:2666  absTick */\n      dup4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2659:2674  absTick & 0x800 */\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2659:2679  absTick & 0x800 != 0 */\n      eq\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2655:2740  if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      tag_356\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2737:2740  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2698:2732  0xe7159475a2c29b7443b29c7fa6e889d9 */\n      0xe7159475a2c29b7443b29c7fa6e889d9\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2690:2695  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2690:2732  ratio * 0xe7159475a2c29b7443b29c7fa6e889d9 */\n      tag_357\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_357:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2689:2740  (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2681:2740  ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2655:2740  if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n    tag_356:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2774:2775  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2764:2770  0x1000 */\n      0x1000\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2754:2761  absTick */\n      dup4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2754:2770  absTick & 0x1000 */\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2754:2775  absTick & 0x1000 != 0 */\n      eq\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2750:2836  if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      tag_358\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2833:2836  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2794:2828  0xd097f3bdfd2022b8845ad8f792aa5825 */\n      0xd097f3bdfd2022b8845ad8f792aa5825\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2786:2791  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2786:2828  ratio * 0xd097f3bdfd2022b8845ad8f792aa5825 */\n      tag_359\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_359:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2785:2836  (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2777:2836  ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2750:2836  if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n    tag_358:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2870:2871  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2860:2866  0x2000 */\n      0x2000\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2850:2857  absTick */\n      dup4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2850:2866  absTick & 0x2000 */\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2850:2871  absTick & 0x2000 != 0 */\n      eq\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2846:2932  if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      tag_360\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2929:2932  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2890:2924  0xa9f746462d870fdf8a65dc1f90e061e5 */\n      0xa9f746462d870fdf8a65dc1f90e061e5\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2882:2887  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2882:2924  ratio * 0xa9f746462d870fdf8a65dc1f90e061e5 */\n      tag_361\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_361:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2881:2932  (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2873:2932  ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2846:2932  if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n    tag_360:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2966:2967  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2956:2962  0x4000 */\n      0x4000\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2946:2953  absTick */\n      dup4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2946:2962  absTick & 0x4000 */\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2946:2967  absTick & 0x4000 != 0 */\n      eq\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2942:3028  if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      tag_362\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3025:3028  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2986:3020  0x70d869a156d2a1b890bb3df62baf32f7 */\n      0x70d869a156d2a1b890bb3df62baf32f7\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2978:2983  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2978:3020  ratio * 0x70d869a156d2a1b890bb3df62baf32f7 */\n      tag_363\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_363:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2977:3028  (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2969:3028  ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2942:3028  if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n    tag_362:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3062:3063  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3052:3058  0x8000 */\n      0x8000\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3042:3049  absTick */\n      dup4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3042:3058  absTick & 0x8000 */\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3042:3063  absTick & 0x8000 != 0 */\n      eq\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3038:3124  if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      tag_364\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3121:3124  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3082:3116  0x31be135f97d08fd981231505542fcfa6 */\n      0x31be135f97d08fd981231505542fcfa6\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3074:3079  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3074:3116  ratio * 0x31be135f97d08fd981231505542fcfa6 */\n      tag_365\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_365:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3073:3124  (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3065:3124  ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3038:3124  if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n    tag_364:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3159:3160  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3148:3155  0x10000 */\n      0x010000\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3138:3145  absTick */\n      dup4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3138:3155  absTick & 0x10000 */\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3138:3160  absTick & 0x10000 != 0 */\n      eq\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3134:3220  if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      tag_366\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3217:3220  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3179:3212  0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      0x09aa508b5b7a84e1c677de54f3e99bc9\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3171:3176  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3171:3212  ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      tag_367\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_367:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3170:3220  (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3162:3220  ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3134:3220  if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n    tag_366:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3255:3256  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3244:3251  0x20000 */\n      0x020000\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3234:3241  absTick */\n      dup4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3234:3251  absTick & 0x20000 */\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3234:3256  absTick & 0x20000 != 0 */\n      eq\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3230:3315  if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      tag_368\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3312:3315  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3275:3307  0x5d6af8dedb81196699c329225ee604 */\n      0x5d6af8dedb81196699c329225ee604\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3267:3272  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3267:3307  ratio * 0x5d6af8dedb81196699c329225ee604 */\n      tag_369\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_369:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3266:3315  (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3258:3315  ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3230:3315  if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n    tag_368:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3350:3351  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3339:3346  0x40000 */\n      0x040000\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3329:3336  absTick */\n      dup4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3329:3346  absTick & 0x40000 */\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3329:3351  absTick & 0x40000 != 0 */\n      eq\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3325:3408  if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      tag_370\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3405:3408  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3370:3400  0x2216e584f5fa1ea926041bedfe98 */\n      0x2216e584f5fa1ea926041bedfe98\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3362:3367  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3362:3400  ratio * 0x2216e584f5fa1ea926041bedfe98 */\n      tag_371\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_371:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3361:3408  (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3353:3408  ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3325:3408  if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n    tag_370:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3443:3444  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3432:3439  0x80000 */\n      0x080000\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3422:3429  absTick */\n      dup4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3422:3439  absTick & 0x80000 */\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3422:3444  absTick & 0x80000 != 0 */\n      eq\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3418:3496  if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      tag_372\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3493:3496  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3463:3488  0x48a170391f7dc42444e8fa2 */\n      0x048a170391f7dc42444e8fa2\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3455:3460  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3455:3488  ratio * 0x48a170391f7dc42444e8fa2 */\n      tag_373\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_373:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3454:3496  (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3446:3496  ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3418:3496  if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n    tag_372:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3518:3519  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3511:3515  tick */\n      dup5\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3511:3519  tick > 0 */\n      0x02\n      signextend\n      sgt\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3507:3554  if (tick > 0) ratio = type(uint256).max / ratio */\n      iszero\n      tag_374\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3549:3554  ratio */\n      dup1\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3529:3546  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3529:3554  type(uint256).max / ratio */\n      tag_375\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_375:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3521:3554  ratio = type(uint256).max / ratio */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3507:3554  if (tick > 0) ratio = type(uint256).max / ratio */\n    tag_374:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3925:3926  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3913:3920  1 << 32 */\n      0x0100000000\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3904:3909  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3904:3921  ratio % (1 << 32) */\n      tag_376\n      swap2\n      swap1\n      tag_377\n      jump\t// in\n    tag_376:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3904:3926  ratio % (1 << 32) == 0 */\n      eq\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3904:3934  ratio % (1 << 32) == 0 ? 0 : 1 */\n      tag_378\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3933:3934  1 */\n      0x01\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3904:3934  ratio % (1 << 32) == 0 ? 0 : 1 */\n      jump(tag_379)\n    tag_378:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3929:3930  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3904:3934  ratio % (1 << 32) == 0 ? 0 : 1 */\n    tag_379:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3887:3935  (ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1) */\n      0xff\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3897:3899  32 */\n      0x20\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3888:3893  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3888:3899  ratio >> 32 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3887:3935  (ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1) */\n      tag_380\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_380:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3864:3936  sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1)) */\n      swap3\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1440:3943  {... */\n      pop\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1355:3943  function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":742:4543  function mulDiv(... */\n    tag_315:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":854:868  uint256 result */\n      0x00\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1183:1196  uint256 prod0 */\n      dup1\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1251:1264  uint256 prod1 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1368:1369  0 */\n      dup1\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1364:1370  not(0) */\n      not\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1361:1362  b */\n      dup6\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1358:1359  a */\n      dup8\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1351:1371  mulmod(a, b, not(0)) */\n      mulmod\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1400:1401  b */\n      dup6\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1397:1398  a */\n      dup8\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1393:1402  mul(a, b) */\n      mul\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1384:1402  prod0 := mul(a, b) */\n      swap3\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1451:1456  prod0 */\n      dup3\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1447:1449  mm */\n      dup2\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1444:1457  lt(mm, prod0) */\n      lt\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1436:1441  prod0 */\n      dup4\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1432:1434  mm */\n      dup3\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1428:1442  sub(mm, prod0) */\n      sub\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1424:1458  sub(sub(mm, prod0), lt(mm, prod0)) */\n      sub\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1415:1458  prod1 := sub(sub(mm, prod0), lt(mm, prod0)) */\n      swap2\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1327:1468  {... */\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1549:1550  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1540:1545  prod1 */\n      dup2\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1540:1550  prod1 == 0 */\n      sub\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1536:1715  if (prod1 == 0) {... */\n      tag_382\n      jumpi\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1588:1589  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1574:1585  denominator */\n      dup5\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1574:1589  denominator > 0 */\n      gt\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1566:1590  require(denominator > 0) */\n      tag_383\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_383:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1652:1663  denominator */\n      dup4\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1645:1650  prod0 */\n      dup3\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1641:1664  div(prod0, denominator) */\n      div\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1631:1664  result := div(prod0, denominator) */\n      swap3\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1691:1704  return result */\n      pop\n      pop\n      jump(tag_381)\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1536:1715  if (prod1 == 0) {... */\n    tag_382:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1842:1847  prod1 */\n      dup1\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1828:1839  denominator */\n      dup5\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1828:1847  denominator > prod1 */\n      gt\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1820:1848  require(denominator > prod1) */\n      tag_384\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_384:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2125:2142  uint256 remainder */\n      0x00\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2201:2212  denominator */\n      dup5\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2198:2199  b */\n      dup7\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2195:2196  a */\n      dup9\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2188:2213  mulmod(a, b, denominator) */\n      mulmod\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2175:2213  remainder := mulmod(a, b, denominator) */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2344:2349  prod0 */\n      dup3\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2333:2342  remainder */\n      dup2\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2330:2350  gt(remainder, prod0) */\n      gt\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2323:2328  prod1 */\n      dup3\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2319:2351  sub(prod1, gt(remainder, prod0)) */\n      sub\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2310:2351  prod1 := sub(prod1, gt(remainder, prod0)) */\n      swap2\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2384:2393  remainder */\n      dup1\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2377:2382  prod0 */\n      dup4\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2373:2394  sub(prod0, remainder) */\n      sub\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2364:2394  prod0 := sub(prod0, remainder) */\n      swap3\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2553:2565  uint256 twos */\n      0x00\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2608:2619  denominator */\n      dup6\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2603:2604  1 */\n      0x01\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2589:2600  denominator */\n      dup8\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2569:2586  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2569:2600  type(uint256).max - denominator */\n      tag_385\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_385:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2569:2604  type(uint256).max - denominator + 1 */\n      tag_386\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_386:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2568:2619  (type(uint256).max - denominator + 1) & denominator */\n      and\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2553:2619  uint256 twos = (type(uint256).max - denominator + 1) & denominator */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2730:2734  twos */\n      dup1\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2717:2728  denominator */\n      dup7\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2713:2735  div(denominator, twos) */\n      div\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2698:2735  denominator := div(denominator, twos) */\n      swap6\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2852:2856  twos */\n      dup1\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2845:2850  prod0 */\n      dup5\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2841:2857  div(prod0, twos) */\n      div\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2832:2857  prod0 := div(prod0, twos) */\n      swap4\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3106:3107  1 */\n      0x01\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3099:3103  twos */\n      dup2\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3092:3096  twos */\n      dup3\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3089:3090  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3085:3097  sub(0, twos) */\n      sub\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3081:3104  div(sub(0, twos), twos) */\n      div\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3077:3108  add(div(sub(0, twos), twos), 1) */\n      add\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3069:3108  twos := add(div(sub(0, twos), twos), 1) */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3144:3148  twos */\n      dup1\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3136:3141  prod1 */\n      dup4\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3136:3148  prod1 * twos */\n      tag_387\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_387:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3127:3148  prod0 |= prod1 * twos */\n      dup5\n      or\n      swap4\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3482:3493  uint256 inv */\n      0x00\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3516:3517  2 */\n      0x02\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3501:3512  denominator */\n      dup8\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3497:3498  3 */\n      0x03\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3497:3512  3 * denominator */\n      tag_388\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_388:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3496:3517  (3 * denominator) ^ 2 */\n      xor\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3482:3517  uint256 inv = (3 * denominator) ^ 2 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3757:3760  inv */\n      dup1\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3743:3754  denominator */\n      dup8\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3743:3760  denominator * inv */\n      tag_389\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_389:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3739:3740  2 */\n      0x02\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3739:3760  2 - denominator * inv */\n      tag_390\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_390:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3732:3760  inv *= 2 - denominator * inv */\n      dup2\n      tag_391\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_391:\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3815:3818  inv */\n      dup1\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3801:3812  denominator */\n      dup8\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3801:3818  denominator * inv */\n      tag_392\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_392:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3797:3798  2 */\n      0x02\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3797:3818  2 - denominator * inv */\n      tag_393\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_393:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3790:3818  inv *= 2 - denominator * inv */\n      dup2\n      tag_394\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_394:\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3874:3877  inv */\n      dup1\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3860:3871  denominator */\n      dup8\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3860:3877  denominator * inv */\n      tag_395\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_395:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3856:3857  2 */\n      0x02\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3856:3877  2 - denominator * inv */\n      tag_396\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_396:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3849:3877  inv *= 2 - denominator * inv */\n      dup2\n      tag_397\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_397:\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3933:3936  inv */\n      dup1\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3919:3930  denominator */\n      dup8\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3919:3936  denominator * inv */\n      tag_398\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_398:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3915:3916  2 */\n      0x02\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3915:3936  2 - denominator * inv */\n      tag_399\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_399:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3908:3936  inv *= 2 - denominator * inv */\n      dup2\n      tag_400\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_400:\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3992:3995  inv */\n      dup1\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3978:3989  denominator */\n      dup8\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3978:3995  denominator * inv */\n      tag_401\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_401:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3974:3975  2 */\n      0x02\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3974:3995  2 - denominator * inv */\n      tag_402\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_402:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3967:3995  inv *= 2 - denominator * inv */\n      dup2\n      tag_403\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_403:\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4052:4055  inv */\n      dup1\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4038:4049  denominator */\n      dup8\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4038:4055  denominator * inv */\n      tag_404\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_404:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4034:4035  2 */\n      0x02\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4034:4055  2 - denominator * inv */\n      tag_405\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_405:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4027:4055  inv *= 2 - denominator * inv */\n      dup2\n      tag_406\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_406:\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4510:4513  inv */\n      dup1\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4502:4507  prod0 */\n      dup6\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4502:4513  prod0 * inv */\n      tag_407\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_407:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4493:4513  result = prod0 * inv */\n      swap6\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4523:4536  return result */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":742:4543  function mulDiv(... */\n    tag_381:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_408:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_409:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_410:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_411:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_412:\n        /* \"#utility.yul\":490:514   */\n      tag_477\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_411\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_478\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_478:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_413:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_480\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_412\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_28:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_483\n      tag_409\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":766:885   */\n    tag_482:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_484\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_413\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_414:\n        /* \"#utility.yul\":1112:1136   */\n      tag_486\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_411\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_31:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_488\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_414\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_415:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_416:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_491\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_415\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_417:\n        /* \"#utility.yul\":1684:1708   */\n      tag_493\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_416\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_494\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_494:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_418:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_496\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_417\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_35:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_499\n      tag_409\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":1960:2079   */\n    tag_498:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_500\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_418\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2337   */\n    tag_419:\n        /* \"#utility.yul\":2306:2330   */\n      tag_502\n        /* \"#utility.yul\":2324:2329   */\n      dup2\n        /* \"#utility.yul\":2306:2330   */\n      tag_416\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":2301:2304   */\n      dup3\n        /* \"#utility.yul\":2294:2331   */\n      mstore\n        /* \"#utility.yul\":2219:2337   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2343:2565   */\n    tag_38:\n        /* \"#utility.yul\":2436:2440   */\n      0x00\n        /* \"#utility.yul\":2474:2476   */\n      0x20\n        /* \"#utility.yul\":2463:2472   */\n      dup3\n        /* \"#utility.yul\":2459:2477   */\n      add\n        /* \"#utility.yul\":2451:2477   */\n      swap1\n      pop\n        /* \"#utility.yul\":2487:2558   */\n      tag_504\n        /* \"#utility.yul\":2555:2556   */\n      0x00\n        /* \"#utility.yul\":2544:2553   */\n      dup4\n        /* \"#utility.yul\":2540:2557   */\n      add\n        /* \"#utility.yul\":2531:2537   */\n      dup5\n        /* \"#utility.yul\":2487:2558   */\n      tag_419\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":2343:2565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:3045   */\n    tag_64:\n        /* \"#utility.yul\":2639:2645   */\n      0x00\n        /* \"#utility.yul\":2647:2653   */\n      dup1\n        /* \"#utility.yul\":2696:2698   */\n      0x40\n        /* \"#utility.yul\":2684:2693   */\n      dup4\n        /* \"#utility.yul\":2675:2682   */\n      dup6\n        /* \"#utility.yul\":2671:2694   */\n      sub\n        /* \"#utility.yul\":2667:2699   */\n      slt\n        /* \"#utility.yul\":2664:2783   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":2702:2781   */\n      tag_507\n      tag_409\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":2664:2783   */\n    tag_506:\n        /* \"#utility.yul\":2822:2823   */\n      0x00\n        /* \"#utility.yul\":2847:2900   */\n      tag_508\n        /* \"#utility.yul\":2892:2899   */\n      dup6\n        /* \"#utility.yul\":2883:2889   */\n      dup3\n        /* \"#utility.yul\":2872:2881   */\n      dup7\n        /* \"#utility.yul\":2868:2890   */\n      add\n        /* \"#utility.yul\":2847:2900   */\n      tag_418\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":2837:2900   */\n      swap3\n      pop\n        /* \"#utility.yul\":2793:2910   */\n      pop\n        /* \"#utility.yul\":2949:2951   */\n      0x20\n        /* \"#utility.yul\":2975:3028   */\n      tag_509\n        /* \"#utility.yul\":3020:3027   */\n      dup6\n        /* \"#utility.yul\":3011:3017   */\n      dup3\n        /* \"#utility.yul\":3000:3009   */\n      dup7\n        /* \"#utility.yul\":2996:3018   */\n      add\n        /* \"#utility.yul\":2975:3028   */\n      tag_413\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":2965:3028   */\n      swap2\n      pop\n        /* \"#utility.yul\":2920:3038   */\n      pop\n        /* \"#utility.yul\":2571:3045   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3051:3141   */\n    tag_420:\n        /* \"#utility.yul\":3085:3092   */\n      0x00\n        /* \"#utility.yul\":3128:3133   */\n      dup2\n        /* \"#utility.yul\":3121:3134   */\n      iszero\n        /* \"#utility.yul\":3114:3135   */\n      iszero\n        /* \"#utility.yul\":3103:3135   */\n      swap1\n      pop\n        /* \"#utility.yul\":3051:3141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3147:3256   */\n    tag_421:\n        /* \"#utility.yul\":3228:3249   */\n      tag_512\n        /* \"#utility.yul\":3243:3248   */\n      dup2\n        /* \"#utility.yul\":3228:3249   */\n      tag_420\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":3223:3226   */\n      dup3\n        /* \"#utility.yul\":3216:3250   */\n      mstore\n        /* \"#utility.yul\":3147:3256   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3262:3472   */\n    tag_67:\n        /* \"#utility.yul\":3349:3353   */\n      0x00\n        /* \"#utility.yul\":3387:3389   */\n      0x20\n        /* \"#utility.yul\":3376:3385   */\n      dup3\n        /* \"#utility.yul\":3372:3390   */\n      add\n        /* \"#utility.yul\":3364:3390   */\n      swap1\n      pop\n        /* \"#utility.yul\":3400:3465   */\n      tag_514\n        /* \"#utility.yul\":3462:3463   */\n      0x00\n        /* \"#utility.yul\":3451:3460   */\n      dup4\n        /* \"#utility.yul\":3447:3464   */\n      add\n        /* \"#utility.yul\":3438:3444   */\n      dup5\n        /* \"#utility.yul\":3400:3465   */\n      tag_421\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":3262:3472   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3478:3810   */\n    tag_89:\n        /* \"#utility.yul\":3599:3603   */\n      0x00\n        /* \"#utility.yul\":3637:3639   */\n      0x40\n        /* \"#utility.yul\":3626:3635   */\n      dup3\n        /* \"#utility.yul\":3622:3640   */\n      add\n        /* \"#utility.yul\":3614:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3650:3721   */\n      tag_516\n        /* \"#utility.yul\":3718:3719   */\n      0x00\n        /* \"#utility.yul\":3707:3716   */\n      dup4\n        /* \"#utility.yul\":3703:3720   */\n      add\n        /* \"#utility.yul\":3694:3700   */\n      dup6\n        /* \"#utility.yul\":3650:3721   */\n      tag_414\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":3731:3803   */\n      tag_517\n        /* \"#utility.yul\":3799:3801   */\n      0x20\n        /* \"#utility.yul\":3788:3797   */\n      dup4\n        /* \"#utility.yul\":3784:3802   */\n      add\n        /* \"#utility.yul\":3775:3781   */\n      dup5\n        /* \"#utility.yul\":3731:3803   */\n      tag_414\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":3478:3810   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3816:3902   */\n    tag_422:\n        /* \"#utility.yul\":3851:3858   */\n      0x00\n        /* \"#utility.yul\":3891:3895   */\n      0xff\n        /* \"#utility.yul\":3884:3889   */\n      dup3\n        /* \"#utility.yul\":3880:3896   */\n      and\n        /* \"#utility.yul\":3869:3896   */\n      swap1\n      pop\n        /* \"#utility.yul\":3816:3902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3908:4020   */\n    tag_423:\n        /* \"#utility.yul\":3991:4013   */\n      tag_520\n        /* \"#utility.yul\":4007:4012   */\n      dup2\n        /* \"#utility.yul\":3991:4013   */\n      tag_422\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":3986:3989   */\n      dup3\n        /* \"#utility.yul\":3979:4014   */\n      mstore\n        /* \"#utility.yul\":3908:4020   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4240   */\n    tag_98:\n        /* \"#utility.yul\":4115:4119   */\n      0x00\n        /* \"#utility.yul\":4153:4155   */\n      0x20\n        /* \"#utility.yul\":4142:4151   */\n      dup3\n        /* \"#utility.yul\":4138:4156   */\n      add\n        /* \"#utility.yul\":4130:4156   */\n      swap1\n      pop\n        /* \"#utility.yul\":4166:4233   */\n      tag_522\n        /* \"#utility.yul\":4230:4231   */\n      0x00\n        /* \"#utility.yul\":4219:4228   */\n      dup4\n        /* \"#utility.yul\":4215:4232   */\n      add\n        /* \"#utility.yul\":4206:4212   */\n      dup5\n        /* \"#utility.yul\":4166:4233   */\n      tag_423\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":4026:4240   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4246:4389   */\n    tag_424:\n        /* \"#utility.yul\":4303:4308   */\n      0x00\n        /* \"#utility.yul\":4334:4340   */\n      dup2\n        /* \"#utility.yul\":4328:4341   */\n      mload\n        /* \"#utility.yul\":4319:4341   */\n      swap1\n      pop\n        /* \"#utility.yul\":4350:4383   */\n      tag_524\n        /* \"#utility.yul\":4377:4382   */\n      dup2\n        /* \"#utility.yul\":4350:4383   */\n      tag_417\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":4246:4389   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4395:4746   */\n    tag_103:\n        /* \"#utility.yul\":4465:4471   */\n      0x00\n        /* \"#utility.yul\":4514:4516   */\n      0x20\n        /* \"#utility.yul\":4502:4511   */\n      dup3\n        /* \"#utility.yul\":4493:4500   */\n      dup5\n        /* \"#utility.yul\":4489:4512   */\n      sub\n        /* \"#utility.yul\":4485:4517   */\n      slt\n        /* \"#utility.yul\":4482:4601   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":4520:4599   */\n      tag_527\n      tag_409\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":4482:4601   */\n    tag_526:\n        /* \"#utility.yul\":4640:4641   */\n      0x00\n        /* \"#utility.yul\":4665:4729   */\n      tag_528\n        /* \"#utility.yul\":4721:4728   */\n      dup5\n        /* \"#utility.yul\":4712:4718   */\n      dup3\n        /* \"#utility.yul\":4701:4710   */\n      dup6\n        /* \"#utility.yul\":4697:4719   */\n      add\n        /* \"#utility.yul\":4665:4729   */\n      tag_424\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":4655:4729   */\n      swap2\n      pop\n        /* \"#utility.yul\":4611:4739   */\n      pop\n        /* \"#utility.yul\":4395:4746   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4752:4932   */\n    tag_425:\n        /* \"#utility.yul\":4800:4877   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4797:4798   */\n      0x00\n        /* \"#utility.yul\":4790:4878   */\n      mstore\n        /* \"#utility.yul\":4897:4901   */\n      0x11\n        /* \"#utility.yul\":4894:4895   */\n      0x04\n        /* \"#utility.yul\":4887:4902   */\n      mstore\n        /* \"#utility.yul\":4921:4925   */\n      0x24\n        /* \"#utility.yul\":4918:4919   */\n      0x00\n        /* \"#utility.yul\":4911:4926   */\n      revert\n        /* \"#utility.yul\":4938:5129   */\n    tag_108:\n        /* \"#utility.yul\":4978:4982   */\n      0x00\n        /* \"#utility.yul\":4998:5018   */\n      tag_531\n        /* \"#utility.yul\":5016:5017   */\n      dup3\n        /* \"#utility.yul\":4998:5018   */\n      tag_411\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":4993:5018   */\n      swap2\n      pop\n        /* \"#utility.yul\":5032:5052   */\n      tag_532\n        /* \"#utility.yul\":5050:5051   */\n      dup4\n        /* \"#utility.yul\":5032:5052   */\n      tag_411\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":5027:5052   */\n      swap3\n      pop\n        /* \"#utility.yul\":5071:5072   */\n      dup3\n        /* \"#utility.yul\":5068:5069   */\n      dup3\n        /* \"#utility.yul\":5065:5073   */\n      lt\n        /* \"#utility.yul\":5062:5096   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":5076:5094   */\n      tag_534\n      tag_425\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":5062:5096   */\n    tag_533:\n        /* \"#utility.yul\":5121:5122   */\n      dup3\n        /* \"#utility.yul\":5118:5119   */\n      dup3\n        /* \"#utility.yul\":5114:5123   */\n      sub\n        /* \"#utility.yul\":5106:5123   */\n      swap1\n      pop\n        /* \"#utility.yul\":4938:5129   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5135:5233   */\n    tag_426:\n        /* \"#utility.yul\":5186:5192   */\n      0x00\n        /* \"#utility.yul\":5220:5225   */\n      dup2\n        /* \"#utility.yul\":5214:5226   */\n      mload\n        /* \"#utility.yul\":5204:5226   */\n      swap1\n      pop\n        /* \"#utility.yul\":5135:5233   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5239:5386   */\n    tag_427:\n        /* \"#utility.yul\":5340:5351   */\n      0x00\n        /* \"#utility.yul\":5377:5380   */\n      dup2\n        /* \"#utility.yul\":5362:5380   */\n      swap1\n      pop\n        /* \"#utility.yul\":5239:5386   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5392:5699   */\n    tag_428:\n        /* \"#utility.yul\":5460:5461   */\n      0x00\n        /* \"#utility.yul\":5470:5583   */\n    tag_538:\n        /* \"#utility.yul\":5484:5490   */\n      dup4\n        /* \"#utility.yul\":5481:5482   */\n      dup2\n        /* \"#utility.yul\":5478:5491   */\n      lt\n        /* \"#utility.yul\":5470:5583   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":5569:5570   */\n      dup1\n        /* \"#utility.yul\":5564:5567   */\n      dup3\n        /* \"#utility.yul\":5560:5571   */\n      add\n        /* \"#utility.yul\":5554:5572   */\n      mload\n        /* \"#utility.yul\":5550:5551   */\n      dup2\n        /* \"#utility.yul\":5545:5548   */\n      dup5\n        /* \"#utility.yul\":5541:5552   */\n      add\n        /* \"#utility.yul\":5534:5573   */\n      mstore\n        /* \"#utility.yul\":5506:5508   */\n      0x20\n        /* \"#utility.yul\":5503:5504   */\n      dup2\n        /* \"#utility.yul\":5499:5509   */\n      add\n        /* \"#utility.yul\":5494:5509   */\n      swap1\n      pop\n        /* \"#utility.yul\":5470:5583   */\n      jump(tag_538)\n    tag_540:\n        /* \"#utility.yul\":5601:5607   */\n      dup4\n        /* \"#utility.yul\":5598:5599   */\n      dup2\n        /* \"#utility.yul\":5595:5608   */\n      gt\n        /* \"#utility.yul\":5592:5693   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":5681:5682   */\n      0x00\n        /* \"#utility.yul\":5672:5678   */\n      dup5\n        /* \"#utility.yul\":5667:5670   */\n      dup5\n        /* \"#utility.yul\":5663:5679   */\n      add\n        /* \"#utility.yul\":5656:5683   */\n      mstore\n        /* \"#utility.yul\":5592:5693   */\n    tag_541:\n        /* \"#utility.yul\":5441:5699   */\n      pop\n        /* \"#utility.yul\":5392:5699   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5705:6078   */\n    tag_429:\n        /* \"#utility.yul\":5809:5812   */\n      0x00\n        /* \"#utility.yul\":5837:5875   */\n      tag_543\n        /* \"#utility.yul\":5869:5874   */\n      dup3\n        /* \"#utility.yul\":5837:5875   */\n      tag_426\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":5891:5979   */\n      tag_544\n        /* \"#utility.yul\":5972:5978   */\n      dup2\n        /* \"#utility.yul\":5967:5970   */\n      dup6\n        /* \"#utility.yul\":5891:5979   */\n      tag_427\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":5884:5979   */\n      swap4\n      pop\n        /* \"#utility.yul\":5988:6040   */\n      tag_545\n        /* \"#utility.yul\":6033:6039   */\n      dup2\n        /* \"#utility.yul\":6028:6031   */\n      dup6\n        /* \"#utility.yul\":6021:6025   */\n      0x20\n        /* \"#utility.yul\":6014:6019   */\n      dup7\n        /* \"#utility.yul\":6010:6026   */\n      add\n        /* \"#utility.yul\":5988:6040   */\n      tag_428\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":6065:6071   */\n      dup1\n        /* \"#utility.yul\":6060:6063   */\n      dup5\n        /* \"#utility.yul\":6056:6072   */\n      add\n        /* \"#utility.yul\":6049:6072   */\n      swap2\n      pop\n        /* \"#utility.yul\":5813:6078   */\n      pop\n        /* \"#utility.yul\":5705:6078   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6084:6355   */\n    tag_118:\n        /* \"#utility.yul\":6214:6217   */\n      0x00\n        /* \"#utility.yul\":6236:6329   */\n      tag_547\n        /* \"#utility.yul\":6325:6328   */\n      dup3\n        /* \"#utility.yul\":6316:6322   */\n      dup5\n        /* \"#utility.yul\":6236:6329   */\n      tag_429\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":6229:6329   */\n      swap2\n      pop\n        /* \"#utility.yul\":6346:6349   */\n      dup2\n        /* \"#utility.yul\":6339:6349   */\n      swap1\n      pop\n        /* \"#utility.yul\":6084:6355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6361:6541   */\n    tag_127:\n        /* \"#utility.yul\":6409:6486   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6406:6407   */\n      0x00\n        /* \"#utility.yul\":6399:6487   */\n      mstore\n        /* \"#utility.yul\":6506:6510   */\n      0x32\n        /* \"#utility.yul\":6503:6504   */\n      0x04\n        /* \"#utility.yul\":6496:6511   */\n      mstore\n        /* \"#utility.yul\":6530:6534   */\n      0x24\n        /* \"#utility.yul\":6527:6528   */\n      0x00\n        /* \"#utility.yul\":6520:6535   */\n      revert\n        /* \"#utility.yul\":6547:6690   */\n    tag_430:\n        /* \"#utility.yul\":6604:6609   */\n      0x00\n        /* \"#utility.yul\":6635:6641   */\n      dup2\n        /* \"#utility.yul\":6629:6642   */\n      mload\n        /* \"#utility.yul\":6620:6642   */\n      swap1\n      pop\n        /* \"#utility.yul\":6651:6684   */\n      tag_550\n        /* \"#utility.yul\":6678:6683   */\n      dup2\n        /* \"#utility.yul\":6651:6684   */\n      tag_412\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":6547:6690   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6696:7047   */\n    tag_133:\n        /* \"#utility.yul\":6766:6772   */\n      0x00\n        /* \"#utility.yul\":6815:6817   */\n      0x20\n        /* \"#utility.yul\":6803:6812   */\n      dup3\n        /* \"#utility.yul\":6794:6801   */\n      dup5\n        /* \"#utility.yul\":6790:6813   */\n      sub\n        /* \"#utility.yul\":6786:6818   */\n      slt\n        /* \"#utility.yul\":6783:6902   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":6821:6900   */\n      tag_553\n      tag_409\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":6783:6902   */\n    tag_552:\n        /* \"#utility.yul\":6941:6942   */\n      0x00\n        /* \"#utility.yul\":6966:7030   */\n      tag_554\n        /* \"#utility.yul\":7022:7029   */\n      dup5\n        /* \"#utility.yul\":7013:7019   */\n      dup3\n        /* \"#utility.yul\":7002:7011   */\n      dup6\n        /* \"#utility.yul\":6998:7020   */\n      add\n        /* \"#utility.yul\":6966:7030   */\n      tag_430\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":6956:7030   */\n      swap2\n      pop\n        /* \"#utility.yul\":6912:7040   */\n      pop\n        /* \"#utility.yul\":6696:7047   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7053:7385   */\n    tag_135:\n        /* \"#utility.yul\":7174:7178   */\n      0x00\n        /* \"#utility.yul\":7212:7214   */\n      0x40\n        /* \"#utility.yul\":7201:7210   */\n      dup3\n        /* \"#utility.yul\":7197:7215   */\n      add\n        /* \"#utility.yul\":7189:7215   */\n      swap1\n      pop\n        /* \"#utility.yul\":7225:7296   */\n      tag_556\n        /* \"#utility.yul\":7293:7294   */\n      0x00\n        /* \"#utility.yul\":7282:7291   */\n      dup4\n        /* \"#utility.yul\":7278:7295   */\n      add\n        /* \"#utility.yul\":7269:7275   */\n      dup6\n        /* \"#utility.yul\":7225:7296   */\n      tag_419\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":7306:7378   */\n      tag_557\n        /* \"#utility.yul\":7374:7376   */\n      0x20\n        /* \"#utility.yul\":7363:7372   */\n      dup4\n        /* \"#utility.yul\":7359:7377   */\n      add\n        /* \"#utility.yul\":7350:7356   */\n      dup5\n        /* \"#utility.yul\":7306:7378   */\n      tag_414\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":7053:7385   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7391:7507   */\n    tag_431:\n        /* \"#utility.yul\":7461:7482   */\n      tag_559\n        /* \"#utility.yul\":7476:7481   */\n      dup2\n        /* \"#utility.yul\":7461:7482   */\n      tag_420\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":7454:7459   */\n      dup2\n        /* \"#utility.yul\":7451:7483   */\n      eq\n        /* \"#utility.yul\":7441:7501   */\n      tag_560\n      jumpi\n        /* \"#utility.yul\":7497:7498   */\n      0x00\n        /* \"#utility.yul\":7494:7495   */\n      dup1\n        /* \"#utility.yul\":7487:7499   */\n      revert\n        /* \"#utility.yul\":7441:7501   */\n    tag_560:\n        /* \"#utility.yul\":7391:7507   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7513:7650   */\n    tag_432:\n        /* \"#utility.yul\":7567:7572   */\n      0x00\n        /* \"#utility.yul\":7598:7604   */\n      dup2\n        /* \"#utility.yul\":7592:7605   */\n      mload\n        /* \"#utility.yul\":7583:7605   */\n      swap1\n      pop\n        /* \"#utility.yul\":7614:7644   */\n      tag_562\n        /* \"#utility.yul\":7638:7643   */\n      dup2\n        /* \"#utility.yul\":7614:7644   */\n      tag_431\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":7513:7650   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:8001   */\n    tag_139:\n        /* \"#utility.yul\":7723:7729   */\n      0x00\n        /* \"#utility.yul\":7772:7774   */\n      0x20\n        /* \"#utility.yul\":7760:7769   */\n      dup3\n        /* \"#utility.yul\":7751:7758   */\n      dup5\n        /* \"#utility.yul\":7747:7770   */\n      sub\n        /* \"#utility.yul\":7743:7775   */\n      slt\n        /* \"#utility.yul\":7740:7859   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":7778:7857   */\n      tag_565\n      tag_409\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":7740:7859   */\n    tag_564:\n        /* \"#utility.yul\":7898:7899   */\n      0x00\n        /* \"#utility.yul\":7923:7984   */\n      tag_566\n        /* \"#utility.yul\":7976:7983   */\n      dup5\n        /* \"#utility.yul\":7967:7973   */\n      dup3\n        /* \"#utility.yul\":7956:7965   */\n      dup6\n        /* \"#utility.yul\":7952:7974   */\n      add\n        /* \"#utility.yul\":7923:7984   */\n      tag_432\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":7913:7984   */\n      swap2\n      pop\n        /* \"#utility.yul\":7869:7994   */\n      pop\n        /* \"#utility.yul\":7656:8001   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8007:8240   */\n    tag_141:\n        /* \"#utility.yul\":8046:8049   */\n      0x00\n        /* \"#utility.yul\":8069:8093   */\n      tag_568\n        /* \"#utility.yul\":8087:8092   */\n      dup3\n        /* \"#utility.yul\":8069:8093   */\n      tag_411\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":8060:8093   */\n      swap2\n      pop\n        /* \"#utility.yul\":8115:8181   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8108:8113   */\n      dup3\n        /* \"#utility.yul\":8105:8182   */\n      sub\n        /* \"#utility.yul\":8102:8205   */\n      tag_569\n      jumpi\n        /* \"#utility.yul\":8185:8203   */\n      tag_570\n      tag_425\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":8102:8205   */\n    tag_569:\n        /* \"#utility.yul\":8232:8233   */\n      0x01\n        /* \"#utility.yul\":8225:8230   */\n      dup3\n        /* \"#utility.yul\":8221:8234   */\n      add\n        /* \"#utility.yul\":8214:8234   */\n      swap1\n      pop\n        /* \"#utility.yul\":8007:8240   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8246:8413   */\n    tag_150:\n        /* \"#utility.yul\":8283:8286   */\n      0x00\n        /* \"#utility.yul\":8306:8328   */\n      tag_572\n        /* \"#utility.yul\":8322:8327   */\n      dup3\n        /* \"#utility.yul\":8306:8328   */\n      tag_422\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":8297:8328   */\n      swap2\n      pop\n        /* \"#utility.yul\":8350:8354   */\n      0x00\n        /* \"#utility.yul\":8343:8348   */\n      dup3\n        /* \"#utility.yul\":8340:8355   */\n      sub\n        /* \"#utility.yul\":8337:8378   */\n      tag_573\n      jumpi\n        /* \"#utility.yul\":8358:8376   */\n      tag_574\n      tag_425\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":8337:8378   */\n    tag_573:\n        /* \"#utility.yul\":8405:8406   */\n      0x01\n        /* \"#utility.yul\":8398:8403   */\n      dup3\n        /* \"#utility.yul\":8394:8407   */\n      sub\n        /* \"#utility.yul\":8387:8407   */\n      swap1\n      pop\n        /* \"#utility.yul\":8246:8413   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8419:8599   */\n    tag_167:\n        /* \"#utility.yul\":8467:8544   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8464:8465   */\n      0x00\n        /* \"#utility.yul\":8457:8545   */\n      mstore\n        /* \"#utility.yul\":8564:8568   */\n      0x31\n        /* \"#utility.yul\":8561:8562   */\n      0x04\n        /* \"#utility.yul\":8554:8569   */\n      mstore\n        /* \"#utility.yul\":8588:8592   */\n      0x24\n        /* \"#utility.yul\":8585:8586   */\n      0x00\n        /* \"#utility.yul\":8578:8593   */\n      revert\n        /* \"#utility.yul\":8605:8723   */\n    tag_433:\n        /* \"#utility.yul\":8676:8698   */\n      tag_577\n        /* \"#utility.yul\":8692:8697   */\n      dup2\n        /* \"#utility.yul\":8676:8698   */\n      tag_422\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":8669:8674   */\n      dup2\n        /* \"#utility.yul\":8666:8699   */\n      eq\n        /* \"#utility.yul\":8656:8717   */\n      tag_578\n      jumpi\n        /* \"#utility.yul\":8713:8714   */\n      0x00\n        /* \"#utility.yul\":8710:8711   */\n      dup1\n        /* \"#utility.yul\":8703:8715   */\n      revert\n        /* \"#utility.yul\":8656:8717   */\n    tag_578:\n        /* \"#utility.yul\":8605:8723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8729:8868   */\n    tag_434:\n        /* \"#utility.yul\":8784:8789   */\n      0x00\n        /* \"#utility.yul\":8815:8821   */\n      dup2\n        /* \"#utility.yul\":8809:8822   */\n      mload\n        /* \"#utility.yul\":8800:8822   */\n      swap1\n      pop\n        /* \"#utility.yul\":8831:8862   */\n      tag_580\n        /* \"#utility.yul\":8856:8861   */\n      dup2\n        /* \"#utility.yul\":8831:8862   */\n      tag_433\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":8729:8868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8874:9221   */\n    tag_191:\n        /* \"#utility.yul\":8942:8948   */\n      0x00\n        /* \"#utility.yul\":8991:8993   */\n      0x20\n        /* \"#utility.yul\":8979:8988   */\n      dup3\n        /* \"#utility.yul\":8970:8977   */\n      dup5\n        /* \"#utility.yul\":8966:8989   */\n      sub\n        /* \"#utility.yul\":8962:8994   */\n      slt\n        /* \"#utility.yul\":8959:9078   */\n      iszero\n      tag_582\n      jumpi\n        /* \"#utility.yul\":8997:9076   */\n      tag_583\n      tag_409\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":8959:9078   */\n    tag_582:\n        /* \"#utility.yul\":9117:9118   */\n      0x00\n        /* \"#utility.yul\":9142:9204   */\n      tag_584\n        /* \"#utility.yul\":9196:9203   */\n      dup5\n        /* \"#utility.yul\":9187:9193   */\n      dup3\n        /* \"#utility.yul\":9176:9185   */\n      dup6\n        /* \"#utility.yul\":9172:9194   */\n      add\n        /* \"#utility.yul\":9142:9204   */\n      tag_434\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":9132:9204   */\n      swap2\n      pop\n        /* \"#utility.yul\":9088:9214   */\n      pop\n        /* \"#utility.yul\":8874:9221   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9227:9329   */\n    tag_435:\n        /* \"#utility.yul\":9269:9277   */\n      0x00\n        /* \"#utility.yul\":9316:9321   */\n      dup2\n        /* \"#utility.yul\":9313:9314   */\n      0x01\n        /* \"#utility.yul\":9309:9322   */\n      shr\n        /* \"#utility.yul\":9288:9322   */\n      swap1\n      pop\n        /* \"#utility.yul\":9227:9329   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9335:10183   */\n    tag_436:\n        /* \"#utility.yul\":9396:9401   */\n      0x00\n        /* \"#utility.yul\":9403:9407   */\n      dup1\n        /* \"#utility.yul\":9427:9433   */\n      dup3\n        /* \"#utility.yul\":9418:9433   */\n      swap2\n      pop\n        /* \"#utility.yul\":9451:9456   */\n      dup4\n        /* \"#utility.yul\":9442:9456   */\n      swap1\n      pop\n        /* \"#utility.yul\":9465:10177   */\n    tag_587:\n        /* \"#utility.yul\":9486:9487   */\n      0x01\n        /* \"#utility.yul\":9476:9484   */\n      dup6\n        /* \"#utility.yul\":9473:9488   */\n      gt\n        /* \"#utility.yul\":9465:10177   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":9581:9585   */\n      dup1\n        /* \"#utility.yul\":9576:9579   */\n      dup7\n        /* \"#utility.yul\":9572:9586   */\n      div\n        /* \"#utility.yul\":9566:9570   */\n      dup2\n        /* \"#utility.yul\":9563:9587   */\n      gt\n        /* \"#utility.yul\":9560:9610   */\n      iszero\n      tag_590\n      jumpi\n        /* \"#utility.yul\":9590:9608   */\n      tag_591\n      tag_425\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":9560:9610   */\n    tag_590:\n        /* \"#utility.yul\":9640:9641   */\n      0x01\n        /* \"#utility.yul\":9630:9638   */\n      dup6\n        /* \"#utility.yul\":9626:9642   */\n      and\n        /* \"#utility.yul\":9623:10074   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":10055:10059   */\n      dup1\n        /* \"#utility.yul\":10048:10053   */\n      dup3\n        /* \"#utility.yul\":10044:10060   */\n      mul\n        /* \"#utility.yul\":10035:10060   */\n      swap2\n      pop\n        /* \"#utility.yul\":9623:10074   */\n    tag_592:\n        /* \"#utility.yul\":10105:10109   */\n      dup1\n        /* \"#utility.yul\":10099:10103   */\n      dup2\n        /* \"#utility.yul\":10095:10110   */\n      mul\n        /* \"#utility.yul\":10087:10110   */\n      swap1\n      pop\n        /* \"#utility.yul\":10135:10167   */\n      tag_593\n        /* \"#utility.yul\":10158:10166   */\n      dup6\n        /* \"#utility.yul\":10135:10167   */\n      tag_435\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":10123:10167   */\n      swap5\n      pop\n        /* \"#utility.yul\":9465:10177   */\n      jump(tag_587)\n    tag_589:\n        /* \"#utility.yul\":9335:10183   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10189:11262   */\n    tag_437:\n        /* \"#utility.yul\":10243:10248   */\n      0x00\n        /* \"#utility.yul\":10434:10442   */\n      dup3\n        /* \"#utility.yul\":10424:10464   */\n      tag_595\n      jumpi\n        /* \"#utility.yul\":10455:10456   */\n      0x01\n        /* \"#utility.yul\":10446:10456   */\n      swap1\n      pop\n        /* \"#utility.yul\":10457:10462   */\n      jump(tag_594)\n        /* \"#utility.yul\":10424:10464   */\n    tag_595:\n        /* \"#utility.yul\":10483:10487   */\n      dup2\n        /* \"#utility.yul\":10473:10509   */\n      tag_596\n      jumpi\n        /* \"#utility.yul\":10500:10501   */\n      0x00\n        /* \"#utility.yul\":10491:10501   */\n      swap1\n      pop\n        /* \"#utility.yul\":10502:10507   */\n      jump(tag_594)\n        /* \"#utility.yul\":10473:10509   */\n    tag_596:\n        /* \"#utility.yul\":10569:10573   */\n      dup2\n        /* \"#utility.yul\":10617:10618   */\n      0x01\n        /* \"#utility.yul\":10612:10639   */\n      dup2\n      eq\n      tag_598\n      jumpi\n        /* \"#utility.yul\":10653:10654   */\n      0x02\n        /* \"#utility.yul\":10648:10839   */\n      dup2\n      eq\n      tag_599\n      jumpi\n        /* \"#utility.yul\":10562:10839   */\n      jump(tag_597)\n        /* \"#utility.yul\":10612:10639   */\n    tag_598:\n        /* \"#utility.yul\":10630:10631   */\n      0x01\n        /* \"#utility.yul\":10621:10631   */\n      swap2\n      pop\n        /* \"#utility.yul\":10632:10637   */\n      pop\n      jump(tag_594)\n        /* \"#utility.yul\":10648:10839   */\n    tag_599:\n        /* \"#utility.yul\":10693:10696   */\n      0xff\n        /* \"#utility.yul\":10683:10691   */\n      dup5\n        /* \"#utility.yul\":10680:10697   */\n      gt\n        /* \"#utility.yul\":10677:10720   */\n      iszero\n      tag_600\n      jumpi\n        /* \"#utility.yul\":10700:10718   */\n      tag_601\n      tag_425\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":10677:10720   */\n    tag_600:\n        /* \"#utility.yul\":10749:10757   */\n      dup4\n        /* \"#utility.yul\":10746:10747   */\n      0x02\n        /* \"#utility.yul\":10742:10758   */\n      exp\n        /* \"#utility.yul\":10733:10758   */\n      swap2\n      pop\n        /* \"#utility.yul\":10784:10787   */\n      dup5\n        /* \"#utility.yul\":10777:10782   */\n      dup3\n        /* \"#utility.yul\":10774:10788   */\n      gt\n        /* \"#utility.yul\":10771:10811   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":10791:10809   */\n      tag_603\n      tag_425\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":10771:10811   */\n    tag_602:\n        /* \"#utility.yul\":10824:10829   */\n      pop\n      jump(tag_594)\n        /* \"#utility.yul\":10562:10839   */\n    tag_597:\n      pop\n        /* \"#utility.yul\":10948:10950   */\n      0x20\n        /* \"#utility.yul\":10938:10946   */\n      dup4\n        /* \"#utility.yul\":10935:10951   */\n      lt\n        /* \"#utility.yul\":10929:10932   */\n      0x0133\n        /* \"#utility.yul\":10923:10927   */\n      dup4\n        /* \"#utility.yul\":10920:10933   */\n      lt\n        /* \"#utility.yul\":10916:10952   */\n      and\n        /* \"#utility.yul\":10898:10900   */\n      0x4e\n        /* \"#utility.yul\":10888:10896   */\n      dup5\n        /* \"#utility.yul\":10885:10901   */\n      lt\n        /* \"#utility.yul\":10880:10882   */\n      0x0b\n        /* \"#utility.yul\":10874:10878   */\n      dup5\n        /* \"#utility.yul\":10871:10883   */\n      lt\n        /* \"#utility.yul\":10867:10902   */\n      and\n        /* \"#utility.yul\":10851:10962   */\n      or\n        /* \"#utility.yul\":10848:11094   */\n      iszero\n      tag_604\n      jumpi\n        /* \"#utility.yul\":11004:11012   */\n      dup3\n        /* \"#utility.yul\":10998:11002   */\n      dup3\n        /* \"#utility.yul\":10994:11013   */\n      exp\n        /* \"#utility.yul\":10985:11013   */\n      swap1\n      pop\n        /* \"#utility.yul\":11039:11042   */\n      dup4\n        /* \"#utility.yul\":11032:11037   */\n      dup2\n        /* \"#utility.yul\":11029:11043   */\n      gt\n        /* \"#utility.yul\":11026:11066   */\n      iszero\n      tag_605\n      jumpi\n        /* \"#utility.yul\":11046:11064   */\n      tag_606\n      tag_425\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":11026:11066   */\n    tag_605:\n        /* \"#utility.yul\":11079:11084   */\n      jump(tag_594)\n        /* \"#utility.yul\":10848:11094   */\n    tag_604:\n        /* \"#utility.yul\":11119:11161   */\n      tag_607\n        /* \"#utility.yul\":11157:11160   */\n      dup5\n        /* \"#utility.yul\":11147:11155   */\n      dup5\n        /* \"#utility.yul\":11141:11145   */\n      dup5\n        /* \"#utility.yul\":11138:11139   */\n      0x01\n        /* \"#utility.yul\":11119:11161   */\n      tag_436\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":11104:11161   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":11193:11197   */\n      dup2\n        /* \"#utility.yul\":11188:11191   */\n      dup5\n        /* \"#utility.yul\":11184:11198   */\n      div\n        /* \"#utility.yul\":11177:11182   */\n      dup2\n        /* \"#utility.yul\":11174:11199   */\n      gt\n        /* \"#utility.yul\":11171:11222   */\n      iszero\n      tag_608\n      jumpi\n        /* \"#utility.yul\":11202:11220   */\n      tag_609\n      tag_425\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":11171:11222   */\n    tag_608:\n        /* \"#utility.yul\":11251:11255   */\n      dup2\n        /* \"#utility.yul\":11244:11249   */\n      dup2\n        /* \"#utility.yul\":11240:11256   */\n      mul\n        /* \"#utility.yul\":11231:11256   */\n      swap1\n      pop\n        /* \"#utility.yul\":10189:11262   */\n    tag_594:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11268:11553   */\n    tag_195:\n        /* \"#utility.yul\":11328:11333   */\n      0x00\n        /* \"#utility.yul\":11352:11375   */\n      tag_611\n        /* \"#utility.yul\":11370:11374   */\n      dup3\n        /* \"#utility.yul\":11352:11375   */\n      tag_411\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":11344:11375   */\n      swap2\n      pop\n        /* \"#utility.yul\":11396:11423   */\n      tag_612\n        /* \"#utility.yul\":11414:11422   */\n      dup4\n        /* \"#utility.yul\":11396:11423   */\n      tag_411\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":11384:11423   */\n      swap3\n      pop\n        /* \"#utility.yul\":11442:11546   */\n      tag_613\n        /* \"#utility.yul\":11479:11545   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11469:11477   */\n      dup5\n        /* \"#utility.yul\":11463:11467   */\n      dup5\n        /* \"#utility.yul\":11442:11546   */\n      tag_437\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":11433:11546   */\n      swap1\n      pop\n        /* \"#utility.yul\":11268:11553   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11559:11739   */\n    tag_438:\n        /* \"#utility.yul\":11607:11684   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11604:11605   */\n      0x00\n        /* \"#utility.yul\":11597:11685   */\n      mstore\n        /* \"#utility.yul\":11704:11708   */\n      0x12\n        /* \"#utility.yul\":11701:11702   */\n      0x04\n        /* \"#utility.yul\":11694:11709   */\n      mstore\n        /* \"#utility.yul\":11728:11732   */\n      0x24\n        /* \"#utility.yul\":11725:11726   */\n      0x00\n        /* \"#utility.yul\":11718:11733   */\n      revert\n        /* \"#utility.yul\":11745:11930   */\n    tag_197:\n        /* \"#utility.yul\":11785:11786   */\n      0x00\n        /* \"#utility.yul\":11802:11822   */\n      tag_616\n        /* \"#utility.yul\":11820:11821   */\n      dup3\n        /* \"#utility.yul\":11802:11822   */\n      tag_411\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":11797:11822   */\n      swap2\n      pop\n        /* \"#utility.yul\":11836:11856   */\n      tag_617\n        /* \"#utility.yul\":11854:11855   */\n      dup4\n        /* \"#utility.yul\":11836:11856   */\n      tag_411\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":11831:11856   */\n      swap3\n      pop\n        /* \"#utility.yul\":11875:11876   */\n      dup3\n        /* \"#utility.yul\":11865:11900   */\n      tag_618\n      jumpi\n        /* \"#utility.yul\":11880:11898   */\n      tag_619\n      tag_438\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":11865:11900   */\n    tag_618:\n        /* \"#utility.yul\":11922:11923   */\n      dup3\n        /* \"#utility.yul\":11919:11920   */\n      dup3\n        /* \"#utility.yul\":11915:11924   */\n      div\n        /* \"#utility.yul\":11910:11924   */\n      swap1\n      pop\n        /* \"#utility.yul\":11745:11930   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11936:12103   */\n    tag_220:\n        /* \"#utility.yul\":11973:11976   */\n      0x00\n        /* \"#utility.yul\":11996:12018   */\n      tag_621\n        /* \"#utility.yul\":12012:12017   */\n      dup3\n        /* \"#utility.yul\":11996:12018   */\n      tag_422\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":11987:12018   */\n      swap2\n      pop\n        /* \"#utility.yul\":12040:12044   */\n      0xff\n        /* \"#utility.yul\":12033:12038   */\n      dup3\n        /* \"#utility.yul\":12030:12045   */\n      sub\n        /* \"#utility.yul\":12027:12068   */\n      tag_622\n      jumpi\n        /* \"#utility.yul\":12048:12066   */\n      tag_623\n      tag_425\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":12027:12068   */\n    tag_622:\n        /* \"#utility.yul\":12095:12096   */\n      0x01\n        /* \"#utility.yul\":12088:12093   */\n      dup3\n        /* \"#utility.yul\":12084:12097   */\n      add\n        /* \"#utility.yul\":12077:12097   */\n      swap1\n      pop\n        /* \"#utility.yul\":11936:12103   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12109:12457   */\n    tag_259:\n        /* \"#utility.yul\":12149:12156   */\n      0x00\n        /* \"#utility.yul\":12172:12192   */\n      tag_625\n        /* \"#utility.yul\":12190:12191   */\n      dup3\n        /* \"#utility.yul\":12172:12192   */\n      tag_411\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":12167:12192   */\n      swap2\n      pop\n        /* \"#utility.yul\":12206:12226   */\n      tag_626\n        /* \"#utility.yul\":12224:12225   */\n      dup4\n        /* \"#utility.yul\":12206:12226   */\n      tag_411\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":12201:12226   */\n      swap3\n      pop\n        /* \"#utility.yul\":12394:12395   */\n      dup2\n        /* \"#utility.yul\":12326:12392   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12322:12396   */\n      div\n        /* \"#utility.yul\":12319:12320   */\n      dup4\n        /* \"#utility.yul\":12316:12397   */\n      gt\n        /* \"#utility.yul\":12311:12312   */\n      dup3\n        /* \"#utility.yul\":12304:12313   */\n      iszero\n        /* \"#utility.yul\":12297:12314   */\n      iszero\n        /* \"#utility.yul\":12293:12398   */\n      and\n        /* \"#utility.yul\":12290:12421   */\n      iszero\n      tag_627\n      jumpi\n        /* \"#utility.yul\":12401:12419   */\n      tag_628\n      tag_425\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":12290:12421   */\n    tag_627:\n        /* \"#utility.yul\":12449:12450   */\n      dup3\n        /* \"#utility.yul\":12446:12447   */\n      dup3\n        /* \"#utility.yul\":12442:12451   */\n      mul\n        /* \"#utility.yul\":12431:12451   */\n      swap1\n      pop\n        /* \"#utility.yul\":12109:12457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12463:12768   */\n    tag_261:\n        /* \"#utility.yul\":12503:12506   */\n      0x00\n        /* \"#utility.yul\":12522:12542   */\n      tag_630\n        /* \"#utility.yul\":12540:12541   */\n      dup3\n        /* \"#utility.yul\":12522:12542   */\n      tag_411\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":12517:12542   */\n      swap2\n      pop\n        /* \"#utility.yul\":12556:12576   */\n      tag_631\n        /* \"#utility.yul\":12574:12575   */\n      dup4\n        /* \"#utility.yul\":12556:12576   */\n      tag_411\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":12551:12576   */\n      swap3\n      pop\n        /* \"#utility.yul\":12710:12711   */\n      dup3\n        /* \"#utility.yul\":12642:12708   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12638:12712   */\n      sub\n        /* \"#utility.yul\":12635:12636   */\n      dup3\n        /* \"#utility.yul\":12632:12713   */\n      gt\n        /* \"#utility.yul\":12629:12736   */\n      iszero\n      tag_632\n      jumpi\n        /* \"#utility.yul\":12716:12734   */\n      tag_633\n      tag_425\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":12629:12736   */\n    tag_632:\n        /* \"#utility.yul\":12760:12761   */\n      dup3\n        /* \"#utility.yul\":12757:12758   */\n      dup3\n        /* \"#utility.yul\":12753:12762   */\n      add\n        /* \"#utility.yul\":12746:12762   */\n      swap1\n      pop\n        /* \"#utility.yul\":12463:12768   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12774:12943   */\n    tag_439:\n        /* \"#utility.yul\":12858:12869   */\n      0x00\n        /* \"#utility.yul\":12892:12898   */\n      dup3\n        /* \"#utility.yul\":12887:12890   */\n      dup3\n        /* \"#utility.yul\":12880:12899   */\n      mstore\n        /* \"#utility.yul\":12932:12936   */\n      0x20\n        /* \"#utility.yul\":12927:12930   */\n      dup3\n        /* \"#utility.yul\":12923:12937   */\n      add\n        /* \"#utility.yul\":12908:12937   */\n      swap1\n      pop\n        /* \"#utility.yul\":12774:12943   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12949:13101   */\n    tag_440:\n        /* \"#utility.yul\":13089:13093   */\n      0x4250000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13085:13086   */\n      0x00\n        /* \"#utility.yul\":13077:13083   */\n      dup3\n        /* \"#utility.yul\":13073:13087   */\n      add\n        /* \"#utility.yul\":13066:13094   */\n      mstore\n        /* \"#utility.yul\":12949:13101   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13107:13472   */\n    tag_441:\n        /* \"#utility.yul\":13249:13252   */\n      0x00\n        /* \"#utility.yul\":13270:13336   */\n      tag_637\n        /* \"#utility.yul\":13334:13335   */\n      0x02\n        /* \"#utility.yul\":13329:13332   */\n      dup4\n        /* \"#utility.yul\":13270:13336   */\n      tag_439\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":13263:13336   */\n      swap2\n      pop\n        /* \"#utility.yul\":13345:13438   */\n      tag_638\n        /* \"#utility.yul\":13434:13437   */\n      dup3\n        /* \"#utility.yul\":13345:13438   */\n      tag_440\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":13463:13465   */\n      0x20\n        /* \"#utility.yul\":13458:13461   */\n      dup3\n        /* \"#utility.yul\":13454:13466   */\n      add\n        /* \"#utility.yul\":13447:13466   */\n      swap1\n      pop\n        /* \"#utility.yul\":13107:13472   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13478:13897   */\n    tag_269:\n        /* \"#utility.yul\":13644:13648   */\n      0x00\n        /* \"#utility.yul\":13682:13684   */\n      0x20\n        /* \"#utility.yul\":13671:13680   */\n      dup3\n        /* \"#utility.yul\":13667:13685   */\n      add\n        /* \"#utility.yul\":13659:13685   */\n      swap1\n      pop\n        /* \"#utility.yul\":13731:13740   */\n      dup2\n        /* \"#utility.yul\":13725:13729   */\n      dup2\n        /* \"#utility.yul\":13721:13741   */\n      sub\n        /* \"#utility.yul\":13717:13718   */\n      0x00\n        /* \"#utility.yul\":13706:13715   */\n      dup4\n        /* \"#utility.yul\":13702:13719   */\n      add\n        /* \"#utility.yul\":13695:13742   */\n      mstore\n        /* \"#utility.yul\":13759:13890   */\n      tag_640\n        /* \"#utility.yul\":13885:13889   */\n      dup2\n        /* \"#utility.yul\":13759:13890   */\n      tag_441\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":13751:13890   */\n      swap1\n      pop\n        /* \"#utility.yul\":13478:13897   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13903:14083   */\n    tag_272:\n        /* \"#utility.yul\":13951:14028   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13948:13949   */\n      0x00\n        /* \"#utility.yul\":13941:14029   */\n      mstore\n        /* \"#utility.yul\":14048:14052   */\n      0x41\n        /* \"#utility.yul\":14045:14046   */\n      0x04\n        /* \"#utility.yul\":14038:14053   */\n      mstore\n        /* \"#utility.yul\":14072:14076   */\n      0x24\n        /* \"#utility.yul\":14069:14070   */\n      0x00\n        /* \"#utility.yul\":14062:14077   */\n      revert\n        /* \"#utility.yul\":14089:14202   */\n    tag_442:\n        /* \"#utility.yul\":14155:14161   */\n      0x00\n        /* \"#utility.yul\":14189:14194   */\n      dup2\n        /* \"#utility.yul\":14183:14195   */\n      mload\n        /* \"#utility.yul\":14173:14195   */\n      swap1\n      pop\n        /* \"#utility.yul\":14089:14202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14208:14391   */\n    tag_443:\n        /* \"#utility.yul\":14306:14317   */\n      0x00\n        /* \"#utility.yul\":14340:14346   */\n      dup3\n        /* \"#utility.yul\":14335:14338   */\n      dup3\n        /* \"#utility.yul\":14328:14347   */\n      mstore\n        /* \"#utility.yul\":14380:14384   */\n      0x20\n        /* \"#utility.yul\":14375:14378   */\n      dup3\n        /* \"#utility.yul\":14371:14385   */\n      add\n        /* \"#utility.yul\":14356:14385   */\n      swap1\n      pop\n        /* \"#utility.yul\":14208:14391   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14397:14528   */\n    tag_444:\n        /* \"#utility.yul\":14463:14467   */\n      0x00\n        /* \"#utility.yul\":14486:14489   */\n      dup2\n        /* \"#utility.yul\":14478:14489   */\n      swap1\n      pop\n        /* \"#utility.yul\":14516:14520   */\n      0x20\n        /* \"#utility.yul\":14511:14514   */\n      dup3\n        /* \"#utility.yul\":14507:14521   */\n      add\n        /* \"#utility.yul\":14499:14521   */\n      swap1\n      pop\n        /* \"#utility.yul\":14397:14528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14534:14627   */\n    tag_445:\n        /* \"#utility.yul\":14570:14577   */\n      0x00\n        /* \"#utility.yul\":14610:14620   */\n      0xffffffff\n        /* \"#utility.yul\":14603:14608   */\n      dup3\n        /* \"#utility.yul\":14599:14621   */\n      and\n        /* \"#utility.yul\":14588:14621   */\n      swap1\n      pop\n        /* \"#utility.yul\":14534:14627   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14633:14738   */\n    tag_446:\n        /* \"#utility.yul\":14708:14731   */\n      tag_647\n        /* \"#utility.yul\":14725:14730   */\n      dup2\n        /* \"#utility.yul\":14708:14731   */\n      tag_445\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":14703:14706   */\n      dup3\n        /* \"#utility.yul\":14696:14732   */\n      mstore\n        /* \"#utility.yul\":14633:14738   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14744:14919   */\n    tag_447:\n        /* \"#utility.yul\":14811:14821   */\n      0x00\n        /* \"#utility.yul\":14832:14876   */\n      tag_649\n        /* \"#utility.yul\":14872:14875   */\n      dup4\n        /* \"#utility.yul\":14864:14870   */\n      dup4\n        /* \"#utility.yul\":14832:14876   */\n      tag_446\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":14908:14912   */\n      0x20\n        /* \"#utility.yul\":14903:14906   */\n      dup4\n        /* \"#utility.yul\":14899:14913   */\n      add\n        /* \"#utility.yul\":14885:14913   */\n      swap1\n      pop\n        /* \"#utility.yul\":14744:14919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14925:15037   */\n    tag_448:\n        /* \"#utility.yul\":14994:14998   */\n      0x00\n        /* \"#utility.yul\":15026:15030   */\n      0x20\n        /* \"#utility.yul\":15021:15024   */\n      dup3\n        /* \"#utility.yul\":15017:15031   */\n      add\n        /* \"#utility.yul\":15009:15031   */\n      swap1\n      pop\n        /* \"#utility.yul\":14925:15037   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15071:15795   */\n    tag_449:\n        /* \"#utility.yul\":15188:15191   */\n      0x00\n        /* \"#utility.yul\":15217:15270   */\n      tag_652\n        /* \"#utility.yul\":15264:15269   */\n      dup3\n        /* \"#utility.yul\":15217:15270   */\n      tag_442\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":15286:15371   */\n      tag_653\n        /* \"#utility.yul\":15364:15370   */\n      dup2\n        /* \"#utility.yul\":15359:15362   */\n      dup6\n        /* \"#utility.yul\":15286:15371   */\n      tag_443\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":15279:15371   */\n      swap4\n      pop\n        /* \"#utility.yul\":15395:15450   */\n      tag_654\n        /* \"#utility.yul\":15444:15449   */\n      dup4\n        /* \"#utility.yul\":15395:15450   */\n      tag_444\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":15473:15480   */\n      dup1\n        /* \"#utility.yul\":15504:15505   */\n      0x00\n        /* \"#utility.yul\":15489:15770   */\n    tag_655:\n        /* \"#utility.yul\":15514:15520   */\n      dup4\n        /* \"#utility.yul\":15511:15512   */\n      dup2\n        /* \"#utility.yul\":15508:15521   */\n      lt\n        /* \"#utility.yul\":15489:15770   */\n      iszero\n      tag_657\n      jumpi\n        /* \"#utility.yul\":15590:15596   */\n      dup2\n        /* \"#utility.yul\":15584:15597   */\n      mload\n        /* \"#utility.yul\":15617:15678   */\n      tag_658\n        /* \"#utility.yul\":15674:15677   */\n      dup9\n        /* \"#utility.yul\":15659:15672   */\n      dup3\n        /* \"#utility.yul\":15617:15678   */\n      tag_447\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":15610:15678   */\n      swap8\n      pop\n        /* \"#utility.yul\":15701:15760   */\n      tag_659\n        /* \"#utility.yul\":15753:15759   */\n      dup4\n        /* \"#utility.yul\":15701:15760   */\n      tag_448\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":15691:15760   */\n      swap3\n      pop\n        /* \"#utility.yul\":15549:15770   */\n      pop\n        /* \"#utility.yul\":15536:15537   */\n      0x01\n        /* \"#utility.yul\":15533:15534   */\n      dup2\n        /* \"#utility.yul\":15529:15538   */\n      add\n        /* \"#utility.yul\":15524:15538   */\n      swap1\n      pop\n        /* \"#utility.yul\":15489:15770   */\n      jump(tag_655)\n    tag_657:\n        /* \"#utility.yul\":15493:15507   */\n      pop\n        /* \"#utility.yul\":15786:15789   */\n      dup6\n        /* \"#utility.yul\":15779:15789   */\n      swap4\n      pop\n        /* \"#utility.yul\":15193:15795   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15071:15795   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15801:16170   */\n    tag_279:\n        /* \"#utility.yul\":15942:15946   */\n      0x00\n        /* \"#utility.yul\":15980:15982   */\n      0x20\n        /* \"#utility.yul\":15969:15978   */\n      dup3\n        /* \"#utility.yul\":15965:15983   */\n      add\n        /* \"#utility.yul\":15957:15983   */\n      swap1\n      pop\n        /* \"#utility.yul\":16029:16038   */\n      dup2\n        /* \"#utility.yul\":16023:16027   */\n      dup2\n        /* \"#utility.yul\":16019:16039   */\n      sub\n        /* \"#utility.yul\":16015:16016   */\n      0x00\n        /* \"#utility.yul\":16004:16013   */\n      dup4\n        /* \"#utility.yul\":16000:16017   */\n      add\n        /* \"#utility.yul\":15993:16040   */\n      mstore\n        /* \"#utility.yul\":16057:16163   */\n      tag_661\n        /* \"#utility.yul\":16158:16162   */\n      dup2\n        /* \"#utility.yul\":16149:16155   */\n      dup5\n        /* \"#utility.yul\":16057:16163   */\n      tag_449\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":16049:16163   */\n      swap1\n      pop\n        /* \"#utility.yul\":15801:16170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16176:16293   */\n    tag_450:\n        /* \"#utility.yul\":16285:16286   */\n      0x00\n        /* \"#utility.yul\":16282:16283   */\n      dup1\n        /* \"#utility.yul\":16275:16287   */\n      revert\n        /* \"#utility.yul\":16299:16401   */\n    tag_451:\n        /* \"#utility.yul\":16340:16346   */\n      0x00\n        /* \"#utility.yul\":16391:16393   */\n      0x1f\n        /* \"#utility.yul\":16387:16394   */\n      not\n        /* \"#utility.yul\":16382:16384   */\n      0x1f\n        /* \"#utility.yul\":16375:16380   */\n      dup4\n        /* \"#utility.yul\":16371:16385   */\n      add\n        /* \"#utility.yul\":16367:16395   */\n      and\n        /* \"#utility.yul\":16357:16395   */\n      swap1\n      pop\n        /* \"#utility.yul\":16299:16401   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16407:16688   */\n    tag_452:\n        /* \"#utility.yul\":16490:16517   */\n      tag_665\n        /* \"#utility.yul\":16512:16516   */\n      dup3\n        /* \"#utility.yul\":16490:16517   */\n      tag_451\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":16482:16488   */\n      dup2\n        /* \"#utility.yul\":16478:16518   */\n      add\n        /* \"#utility.yul\":16620:16626   */\n      dup2\n        /* \"#utility.yul\":16608:16618   */\n      dup2\n        /* \"#utility.yul\":16605:16627   */\n      lt\n        /* \"#utility.yul\":16584:16602   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16572:16582   */\n      dup3\n        /* \"#utility.yul\":16569:16603   */\n      gt\n        /* \"#utility.yul\":16566:16628   */\n      or\n        /* \"#utility.yul\":16563:16651   */\n      iszero\n      tag_666\n      jumpi\n        /* \"#utility.yul\":16631:16649   */\n      tag_667\n      tag_272\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":16563:16651   */\n    tag_666:\n        /* \"#utility.yul\":16671:16681   */\n      dup1\n        /* \"#utility.yul\":16667:16669   */\n      0x40\n        /* \"#utility.yul\":16660:16682   */\n      mstore\n        /* \"#utility.yul\":16450:16688   */\n      pop\n        /* \"#utility.yul\":16407:16688   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16694:16823   */\n    tag_453:\n        /* \"#utility.yul\":16728:16734   */\n      0x00\n        /* \"#utility.yul\":16755:16775   */\n      tag_669\n      tag_408\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":16745:16775   */\n      swap1\n      pop\n        /* \"#utility.yul\":16784:16817   */\n      tag_670\n        /* \"#utility.yul\":16812:16816   */\n      dup3\n        /* \"#utility.yul\":16804:16810   */\n      dup3\n        /* \"#utility.yul\":16784:16817   */\n      tag_452\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":16694:16823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16829:17138   */\n    tag_454:\n        /* \"#utility.yul\":16904:16908   */\n      0x00\n        /* \"#utility.yul\":16994:17012   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16986:16992   */\n      dup3\n        /* \"#utility.yul\":16983:17013   */\n      gt\n        /* \"#utility.yul\":16980:17036   */\n      iszero\n      tag_672\n      jumpi\n        /* \"#utility.yul\":17016:17034   */\n      tag_673\n      tag_272\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":16980:17036   */\n    tag_672:\n        /* \"#utility.yul\":17066:17070   */\n      0x20\n        /* \"#utility.yul\":17058:17064   */\n      dup3\n        /* \"#utility.yul\":17054:17071   */\n      mul\n        /* \"#utility.yul\":17046:17071   */\n      swap1\n      pop\n        /* \"#utility.yul\":17126:17130   */\n      0x20\n        /* \"#utility.yul\":17120:17124   */\n      dup2\n        /* \"#utility.yul\":17116:17131   */\n      add\n        /* \"#utility.yul\":17108:17131   */\n      swap1\n      pop\n        /* \"#utility.yul\":16829:17138   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17144:17261   */\n    tag_455:\n        /* \"#utility.yul\":17253:17254   */\n      0x00\n        /* \"#utility.yul\":17250:17251   */\n      dup1\n        /* \"#utility.yul\":17243:17255   */\n      revert\n        /* \"#utility.yul\":17267:17357   */\n    tag_456:\n        /* \"#utility.yul\":17302:17309   */\n      0x00\n        /* \"#utility.yul\":17345:17350   */\n      dup2\n        /* \"#utility.yul\":17342:17343   */\n      0x06\n        /* \"#utility.yul\":17331:17351   */\n      signextend\n        /* \"#utility.yul\":17320:17351   */\n      swap1\n      pop\n        /* \"#utility.yul\":17267:17357   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17363:17481   */\n    tag_457:\n        /* \"#utility.yul\":17434:17456   */\n      tag_677\n        /* \"#utility.yul\":17450:17455   */\n      dup2\n        /* \"#utility.yul\":17434:17456   */\n      tag_456\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":17427:17432   */\n      dup2\n        /* \"#utility.yul\":17424:17457   */\n      eq\n        /* \"#utility.yul\":17414:17475   */\n      tag_678\n      jumpi\n        /* \"#utility.yul\":17471:17472   */\n      0x00\n        /* \"#utility.yul\":17468:17469   */\n      dup1\n        /* \"#utility.yul\":17461:17473   */\n      revert\n        /* \"#utility.yul\":17414:17475   */\n    tag_678:\n        /* \"#utility.yul\":17363:17481   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17487:17626   */\n    tag_458:\n        /* \"#utility.yul\":17542:17547   */\n      0x00\n        /* \"#utility.yul\":17573:17579   */\n      dup2\n        /* \"#utility.yul\":17567:17580   */\n      mload\n        /* \"#utility.yul\":17558:17580   */\n      swap1\n      pop\n        /* \"#utility.yul\":17589:17620   */\n      tag_680\n        /* \"#utility.yul\":17614:17619   */\n      dup2\n        /* \"#utility.yul\":17589:17620   */\n      tag_457\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":17487:17626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17647:18373   */\n    tag_459:\n        /* \"#utility.yul\":17752:17757   */\n      0x00\n        /* \"#utility.yul\":17777:17856   */\n      tag_682\n        /* \"#utility.yul\":17793:17855   */\n      tag_683\n        /* \"#utility.yul\":17848:17854   */\n      dup5\n        /* \"#utility.yul\":17793:17855   */\n      tag_454\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":17777:17856   */\n      tag_453\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":17768:17856   */\n      swap1\n      pop\n        /* \"#utility.yul\":17876:17881   */\n      dup1\n        /* \"#utility.yul\":17905:17911   */\n      dup4\n        /* \"#utility.yul\":17898:17903   */\n      dup3\n        /* \"#utility.yul\":17891:17912   */\n      mstore\n        /* \"#utility.yul\":17939:17943   */\n      0x20\n        /* \"#utility.yul\":17932:17937   */\n      dup3\n        /* \"#utility.yul\":17928:17944   */\n      add\n        /* \"#utility.yul\":17921:17944   */\n      swap1\n      pop\n        /* \"#utility.yul\":17992:17996   */\n      0x20\n        /* \"#utility.yul\":17984:17990   */\n      dup5\n        /* \"#utility.yul\":17980:17997   */\n      mul\n        /* \"#utility.yul\":17972:17978   */\n      dup4\n        /* \"#utility.yul\":17968:17998   */\n      add\n        /* \"#utility.yul\":18021:18024   */\n      dup6\n        /* \"#utility.yul\":18013:18019   */\n      dup2\n        /* \"#utility.yul\":18010:18025   */\n      gt\n        /* \"#utility.yul\":18007:18129   */\n      iszero\n      tag_684\n      jumpi\n        /* \"#utility.yul\":18040:18119   */\n      tag_685\n      tag_455\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":18007:18129   */\n    tag_684:\n        /* \"#utility.yul\":18155:18161   */\n      dup4\n        /* \"#utility.yul\":18138:18367   */\n    tag_686:\n        /* \"#utility.yul\":18172:18178   */\n      dup2\n        /* \"#utility.yul\":18167:18170   */\n      dup2\n        /* \"#utility.yul\":18164:18179   */\n      lt\n        /* \"#utility.yul\":18138:18367   */\n      iszero\n      tag_688\n      jumpi\n        /* \"#utility.yul\":18247:18250   */\n      dup1\n        /* \"#utility.yul\":18276:18322   */\n      tag_689\n        /* \"#utility.yul\":18318:18321   */\n      dup9\n        /* \"#utility.yul\":18306:18316   */\n      dup3\n        /* \"#utility.yul\":18276:18322   */\n      tag_458\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":18271:18274   */\n      dup5\n        /* \"#utility.yul\":18264:18323   */\n      mstore\n        /* \"#utility.yul\":18352:18356   */\n      0x20\n        /* \"#utility.yul\":18347:18350   */\n      dup5\n        /* \"#utility.yul\":18343:18357   */\n      add\n        /* \"#utility.yul\":18336:18357   */\n      swap4\n      pop\n        /* \"#utility.yul\":18214:18367   */\n      pop\n        /* \"#utility.yul\":18198:18202   */\n      0x20\n        /* \"#utility.yul\":18193:18196   */\n      dup2\n        /* \"#utility.yul\":18189:18203   */\n      add\n        /* \"#utility.yul\":18182:18203   */\n      swap1\n      pop\n        /* \"#utility.yul\":18138:18367   */\n      jump(tag_686)\n    tag_688:\n        /* \"#utility.yul\":18142:18163   */\n      pop\n        /* \"#utility.yul\":17758:18373   */\n      pop\n      pop\n        /* \"#utility.yul\":17647:18373   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18394:18775   */\n    tag_460:\n        /* \"#utility.yul\":18474:18479   */\n      0x00\n        /* \"#utility.yul\":18523:18526   */\n      dup3\n        /* \"#utility.yul\":18516:18520   */\n      0x1f\n        /* \"#utility.yul\":18508:18514   */\n      dup4\n        /* \"#utility.yul\":18504:18521   */\n      add\n        /* \"#utility.yul\":18500:18527   */\n      slt\n        /* \"#utility.yul\":18490:18612   */\n      tag_691\n      jumpi\n        /* \"#utility.yul\":18531:18610   */\n      tag_692\n      tag_450\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":18490:18612   */\n    tag_691:\n        /* \"#utility.yul\":18641:18647   */\n      dup2\n        /* \"#utility.yul\":18635:18648   */\n      mload\n        /* \"#utility.yul\":18666:18769   */\n      tag_693\n        /* \"#utility.yul\":18765:18768   */\n      dup5\n        /* \"#utility.yul\":18757:18763   */\n      dup3\n        /* \"#utility.yul\":18750:18754   */\n      0x20\n        /* \"#utility.yul\":18742:18748   */\n      dup7\n        /* \"#utility.yul\":18738:18755   */\n      add\n        /* \"#utility.yul\":18666:18769   */\n      tag_459\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":18657:18769   */\n      swap2\n      pop\n        /* \"#utility.yul\":18480:18775   */\n      pop\n        /* \"#utility.yul\":18394:18775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18781:19092   */\n    tag_461:\n        /* \"#utility.yul\":18858:18862   */\n      0x00\n        /* \"#utility.yul\":18948:18966   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18940:18946   */\n      dup3\n        /* \"#utility.yul\":18937:18967   */\n      gt\n        /* \"#utility.yul\":18934:18990   */\n      iszero\n      tag_695\n      jumpi\n        /* \"#utility.yul\":18970:18988   */\n      tag_696\n      tag_272\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":18934:18990   */\n    tag_695:\n        /* \"#utility.yul\":19020:19024   */\n      0x20\n        /* \"#utility.yul\":19012:19018   */\n      dup3\n        /* \"#utility.yul\":19008:19025   */\n      mul\n        /* \"#utility.yul\":19000:19025   */\n      swap1\n      pop\n        /* \"#utility.yul\":19080:19084   */\n      0x20\n        /* \"#utility.yul\":19074:19078   */\n      dup2\n        /* \"#utility.yul\":19070:19085   */\n      add\n        /* \"#utility.yul\":19062:19085   */\n      swap1\n      pop\n        /* \"#utility.yul\":18781:19092   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19098:19220   */\n    tag_462:\n        /* \"#utility.yul\":19171:19195   */\n      tag_698\n        /* \"#utility.yul\":19189:19194   */\n      dup2\n        /* \"#utility.yul\":19171:19195   */\n      tag_415\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":19164:19169   */\n      dup2\n        /* \"#utility.yul\":19161:19196   */\n      eq\n        /* \"#utility.yul\":19151:19214   */\n      tag_699\n      jumpi\n        /* \"#utility.yul\":19210:19211   */\n      0x00\n        /* \"#utility.yul\":19207:19208   */\n      dup1\n        /* \"#utility.yul\":19200:19212   */\n      revert\n        /* \"#utility.yul\":19151:19214   */\n    tag_699:\n        /* \"#utility.yul\":19098:19220   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19226:19369   */\n    tag_463:\n        /* \"#utility.yul\":19283:19288   */\n      0x00\n        /* \"#utility.yul\":19314:19320   */\n      dup2\n        /* \"#utility.yul\":19308:19321   */\n      mload\n        /* \"#utility.yul\":19299:19321   */\n      swap1\n      pop\n        /* \"#utility.yul\":19330:19363   */\n      tag_701\n        /* \"#utility.yul\":19357:19362   */\n      dup2\n        /* \"#utility.yul\":19330:19363   */\n      tag_462\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":19226:19369   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19392:20124   */\n    tag_464:\n        /* \"#utility.yul\":19499:19504   */\n      0x00\n        /* \"#utility.yul\":19524:19605   */\n      tag_703\n        /* \"#utility.yul\":19540:19604   */\n      tag_704\n        /* \"#utility.yul\":19597:19603   */\n      dup5\n        /* \"#utility.yul\":19540:19604   */\n      tag_461\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":19524:19605   */\n      tag_453\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":19515:19605   */\n      swap1\n      pop\n        /* \"#utility.yul\":19625:19630   */\n      dup1\n        /* \"#utility.yul\":19654:19660   */\n      dup4\n        /* \"#utility.yul\":19647:19652   */\n      dup3\n        /* \"#utility.yul\":19640:19661   */\n      mstore\n        /* \"#utility.yul\":19688:19692   */\n      0x20\n        /* \"#utility.yul\":19681:19686   */\n      dup3\n        /* \"#utility.yul\":19677:19693   */\n      add\n        /* \"#utility.yul\":19670:19693   */\n      swap1\n      pop\n        /* \"#utility.yul\":19741:19745   */\n      0x20\n        /* \"#utility.yul\":19733:19739   */\n      dup5\n        /* \"#utility.yul\":19729:19746   */\n      mul\n        /* \"#utility.yul\":19721:19727   */\n      dup4\n        /* \"#utility.yul\":19717:19747   */\n      add\n        /* \"#utility.yul\":19770:19773   */\n      dup6\n        /* \"#utility.yul\":19762:19768   */\n      dup2\n        /* \"#utility.yul\":19759:19774   */\n      gt\n        /* \"#utility.yul\":19756:19878   */\n      iszero\n      tag_705\n      jumpi\n        /* \"#utility.yul\":19789:19868   */\n      tag_706\n      tag_455\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":19756:19878   */\n    tag_705:\n        /* \"#utility.yul\":19904:19910   */\n      dup4\n        /* \"#utility.yul\":19887:20118   */\n    tag_707:\n        /* \"#utility.yul\":19921:19927   */\n      dup2\n        /* \"#utility.yul\":19916:19919   */\n      dup2\n        /* \"#utility.yul\":19913:19928   */\n      lt\n        /* \"#utility.yul\":19887:20118   */\n      iszero\n      tag_709\n      jumpi\n        /* \"#utility.yul\":19996:19999   */\n      dup1\n        /* \"#utility.yul\":20025:20073   */\n      tag_710\n        /* \"#utility.yul\":20069:20072   */\n      dup9\n        /* \"#utility.yul\":20057:20067   */\n      dup3\n        /* \"#utility.yul\":20025:20073   */\n      tag_463\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":20020:20023   */\n      dup5\n        /* \"#utility.yul\":20013:20074   */\n      mstore\n        /* \"#utility.yul\":20103:20107   */\n      0x20\n        /* \"#utility.yul\":20098:20101   */\n      dup5\n        /* \"#utility.yul\":20094:20108   */\n      add\n        /* \"#utility.yul\":20087:20108   */\n      swap4\n      pop\n        /* \"#utility.yul\":19963:20118   */\n      pop\n        /* \"#utility.yul\":19947:19951   */\n      0x20\n        /* \"#utility.yul\":19942:19945   */\n      dup2\n        /* \"#utility.yul\":19938:19952   */\n      add\n        /* \"#utility.yul\":19931:19952   */\n      swap1\n      pop\n        /* \"#utility.yul\":19887:20118   */\n      jump(tag_707)\n    tag_709:\n        /* \"#utility.yul\":19891:19912   */\n      pop\n        /* \"#utility.yul\":19505:20124   */\n      pop\n      pop\n        /* \"#utility.yul\":19392:20124   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20147:20532   */\n    tag_465:\n        /* \"#utility.yul\":20229:20234   */\n      0x00\n        /* \"#utility.yul\":20278:20281   */\n      dup3\n        /* \"#utility.yul\":20271:20275   */\n      0x1f\n        /* \"#utility.yul\":20263:20269   */\n      dup4\n        /* \"#utility.yul\":20259:20276   */\n      add\n        /* \"#utility.yul\":20255:20282   */\n      slt\n        /* \"#utility.yul\":20245:20367   */\n      tag_712\n      jumpi\n        /* \"#utility.yul\":20286:20365   */\n      tag_713\n      tag_450\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":20245:20367   */\n    tag_712:\n        /* \"#utility.yul\":20396:20402   */\n      dup2\n        /* \"#utility.yul\":20390:20403   */\n      mload\n        /* \"#utility.yul\":20421:20526   */\n      tag_714\n        /* \"#utility.yul\":20522:20525   */\n      dup5\n        /* \"#utility.yul\":20514:20520   */\n      dup3\n        /* \"#utility.yul\":20507:20511   */\n      0x20\n        /* \"#utility.yul\":20499:20505   */\n      dup7\n        /* \"#utility.yul\":20495:20512   */\n      add\n        /* \"#utility.yul\":20421:20526   */\n      tag_464\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":20412:20526   */\n      swap2\n      pop\n        /* \"#utility.yul\":20235:20532   */\n      pop\n        /* \"#utility.yul\":20147:20532   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20538:21447   */\n    tag_283:\n        /* \"#utility.yul\":20665:20671   */\n      0x00\n        /* \"#utility.yul\":20673:20679   */\n      dup1\n        /* \"#utility.yul\":20722:20724   */\n      0x40\n        /* \"#utility.yul\":20710:20719   */\n      dup4\n        /* \"#utility.yul\":20701:20708   */\n      dup6\n        /* \"#utility.yul\":20697:20720   */\n      sub\n        /* \"#utility.yul\":20693:20725   */\n      slt\n        /* \"#utility.yul\":20690:20809   */\n      iszero\n      tag_716\n      jumpi\n        /* \"#utility.yul\":20728:20807   */\n      tag_717\n      tag_409\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":20690:20809   */\n    tag_716:\n        /* \"#utility.yul\":20869:20870   */\n      0x00\n        /* \"#utility.yul\":20858:20867   */\n      dup4\n        /* \"#utility.yul\":20854:20871   */\n      add\n        /* \"#utility.yul\":20848:20872   */\n      mload\n        /* \"#utility.yul\":20899:20917   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":20891:20897   */\n      dup2\n        /* \"#utility.yul\":20888:20918   */\n      gt\n        /* \"#utility.yul\":20885:21002   */\n      iszero\n      tag_718\n      jumpi\n        /* \"#utility.yul\":20921:21000   */\n      tag_719\n      tag_410\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":20885:21002   */\n    tag_718:\n        /* \"#utility.yul\":21026:21113   */\n      tag_720\n        /* \"#utility.yul\":21105:21112   */\n      dup6\n        /* \"#utility.yul\":21096:21102   */\n      dup3\n        /* \"#utility.yul\":21085:21094   */\n      dup7\n        /* \"#utility.yul\":21081:21103   */\n      add\n        /* \"#utility.yul\":21026:21113   */\n      tag_460\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":21016:21113   */\n      swap3\n      pop\n        /* \"#utility.yul\":20819:21123   */\n      pop\n        /* \"#utility.yul\":21183:21185   */\n      0x20\n        /* \"#utility.yul\":21172:21181   */\n      dup4\n        /* \"#utility.yul\":21168:21186   */\n      add\n        /* \"#utility.yul\":21162:21187   */\n      mload\n        /* \"#utility.yul\":21214:21232   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":21206:21212   */\n      dup2\n        /* \"#utility.yul\":21203:21233   */\n      gt\n        /* \"#utility.yul\":21200:21317   */\n      iszero\n      tag_721\n      jumpi\n        /* \"#utility.yul\":21236:21315   */\n      tag_722\n      tag_410\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":21200:21317   */\n    tag_721:\n        /* \"#utility.yul\":21341:21430   */\n      tag_723\n        /* \"#utility.yul\":21422:21429   */\n      dup6\n        /* \"#utility.yul\":21413:21419   */\n      dup3\n        /* \"#utility.yul\":21402:21411   */\n      dup7\n        /* \"#utility.yul\":21398:21420   */\n      add\n        /* \"#utility.yul\":21341:21430   */\n      tag_465\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":21331:21430   */\n      swap2\n      pop\n        /* \"#utility.yul\":21133:21440   */\n      pop\n        /* \"#utility.yul\":20538:21447   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21453:21927   */\n    tag_289:\n        /* \"#utility.yul\":21491:21495   */\n      0x00\n        /* \"#utility.yul\":21511:21529   */\n      tag_725\n        /* \"#utility.yul\":21527:21528   */\n      dup3\n        /* \"#utility.yul\":21511:21529   */\n      tag_456\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":21506:21529   */\n      swap2\n      pop\n        /* \"#utility.yul\":21543:21561   */\n      tag_726\n        /* \"#utility.yul\":21559:21560   */\n      dup4\n        /* \"#utility.yul\":21543:21561   */\n      tag_456\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":21538:21561   */\n      swap3\n      pop\n        /* \"#utility.yul\":21731:21732   */\n      dup3\n        /* \"#utility.yul\":21663:21729   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000\n        /* \"#utility.yul\":21659:21733   */\n      add\n        /* \"#utility.yul\":21656:21657   */\n      dup3\n        /* \"#utility.yul\":21652:21734   */\n      slt\n        /* \"#utility.yul\":21647:21648   */\n      0x00\n        /* \"#utility.yul\":21644:21645   */\n      dup5\n        /* \"#utility.yul\":21640:21649   */\n      slt\n        /* \"#utility.yul\":21633:21650   */\n      iszero\n        /* \"#utility.yul\":21629:21735   */\n      and\n        /* \"#utility.yul\":21626:21758   */\n      iszero\n      tag_727\n      jumpi\n        /* \"#utility.yul\":21738:21756   */\n      tag_728\n      tag_425\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":21626:21758   */\n    tag_727:\n        /* \"#utility.yul\":21867:21868   */\n      dup3\n        /* \"#utility.yul\":21849:21865   */\n      0x7fffffffffffff\n        /* \"#utility.yul\":21845:21869   */\n      add\n        /* \"#utility.yul\":21842:21843   */\n      dup3\n        /* \"#utility.yul\":21838:21870   */\n      sgt\n        /* \"#utility.yul\":21834:21835   */\n      0x00\n        /* \"#utility.yul\":21831:21832   */\n      dup5\n        /* \"#utility.yul\":21827:21836   */\n      slt\n        /* \"#utility.yul\":21823:21871   */\n      and\n        /* \"#utility.yul\":21820:21894   */\n      iszero\n      tag_729\n      jumpi\n        /* \"#utility.yul\":21874:21892   */\n      tag_730\n      tag_425\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":21820:21894   */\n    tag_729:\n        /* \"#utility.yul\":21919:21920   */\n      dup3\n        /* \"#utility.yul\":21916:21917   */\n      dup3\n        /* \"#utility.yul\":21912:21921   */\n      sub\n        /* \"#utility.yul\":21904:21921   */\n      swap1\n      pop\n        /* \"#utility.yul\":21453:21927   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21933:22124   */\n    tag_295:\n        /* \"#utility.yul\":21973:21977   */\n      0x00\n        /* \"#utility.yul\":21993:22013   */\n      tag_732\n        /* \"#utility.yul\":22011:22012   */\n      dup3\n        /* \"#utility.yul\":21993:22013   */\n      tag_415\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":21988:22013   */\n      swap2\n      pop\n        /* \"#utility.yul\":22027:22047   */\n      tag_733\n        /* \"#utility.yul\":22045:22046   */\n      dup4\n        /* \"#utility.yul\":22027:22047   */\n      tag_415\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":22022:22047   */\n      swap3\n      pop\n        /* \"#utility.yul\":22066:22067   */\n      dup3\n        /* \"#utility.yul\":22063:22064   */\n      dup3\n        /* \"#utility.yul\":22060:22068   */\n      lt\n        /* \"#utility.yul\":22057:22091   */\n      iszero\n      tag_734\n      jumpi\n        /* \"#utility.yul\":22071:22089   */\n      tag_735\n      tag_425\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":22057:22091   */\n    tag_734:\n        /* \"#utility.yul\":22116:22117   */\n      dup3\n        /* \"#utility.yul\":22113:22114   */\n      dup3\n        /* \"#utility.yul\":22109:22118   */\n      sub\n        /* \"#utility.yul\":22101:22118   */\n      swap1\n      pop\n        /* \"#utility.yul\":21933:22124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22130:22512   */\n    tag_297:\n        /* \"#utility.yul\":22168:22169   */\n      0x00\n        /* \"#utility.yul\":22185:22203   */\n      tag_737\n        /* \"#utility.yul\":22201:22202   */\n      dup3\n        /* \"#utility.yul\":22185:22203   */\n      tag_456\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":22180:22203   */\n      swap2\n      pop\n        /* \"#utility.yul\":22217:22235   */\n      tag_738\n        /* \"#utility.yul\":22233:22234   */\n      dup4\n        /* \"#utility.yul\":22217:22235   */\n      tag_456\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":22212:22235   */\n      swap3\n      pop\n        /* \"#utility.yul\":22254:22255   */\n      dup3\n        /* \"#utility.yul\":22244:22279   */\n      tag_739\n      jumpi\n        /* \"#utility.yul\":22259:22277   */\n      tag_740\n      tag_438\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":22244:22279   */\n    tag_739:\n        /* \"#utility.yul\":22445:22446   */\n      0x01\n        /* \"#utility.yul\":22442:22443   */\n      0x00\n        /* \"#utility.yul\":22438:22447   */\n      sub\n        /* \"#utility.yul\":22435:22436   */\n      dup4\n        /* \"#utility.yul\":22432:22448   */\n      eq\n        /* \"#utility.yul\":22351:22417   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000\n        /* \"#utility.yul\":22348:22349   */\n      dup4\n        /* \"#utility.yul\":22345:22418   */\n      eq\n        /* \"#utility.yul\":22328:22458   */\n      and\n        /* \"#utility.yul\":22325:22481   */\n      iszero\n      tag_741\n      jumpi\n        /* \"#utility.yul\":22461:22479   */\n      tag_742\n      tag_425\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":22325:22481   */\n    tag_741:\n        /* \"#utility.yul\":22504:22505   */\n      dup3\n        /* \"#utility.yul\":22501:22502   */\n      dup3\n        /* \"#utility.yul\":22496:22506   */\n      sdiv\n        /* \"#utility.yul\":22491:22506   */\n      swap1\n      pop\n        /* \"#utility.yul\":22130:22512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22518:22689   */\n    tag_300:\n        /* \"#utility.yul\":22548:22549   */\n      0x00\n        /* \"#utility.yul\":22565:22583   */\n      tag_744\n        /* \"#utility.yul\":22581:22582   */\n      dup3\n        /* \"#utility.yul\":22565:22583   */\n      tag_456\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":22560:22583   */\n      swap2\n      pop\n        /* \"#utility.yul\":22597:22615   */\n      tag_745\n        /* \"#utility.yul\":22613:22614   */\n      dup4\n        /* \"#utility.yul\":22597:22615   */\n      tag_456\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":22592:22615   */\n      swap3\n      pop\n        /* \"#utility.yul\":22634:22635   */\n      dup3\n        /* \"#utility.yul\":22624:22659   */\n      tag_746\n      jumpi\n        /* \"#utility.yul\":22639:22657   */\n      tag_747\n      tag_438\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":22624:22659   */\n    tag_746:\n        /* \"#utility.yul\":22681:22682   */\n      dup3\n        /* \"#utility.yul\":22678:22679   */\n      dup3\n        /* \"#utility.yul\":22673:22683   */\n      smod\n        /* \"#utility.yul\":22668:22683   */\n      swap1\n      pop\n        /* \"#utility.yul\":22518:22689   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22695:22785   */\n    tag_466:\n        /* \"#utility.yul\":22730:22737   */\n      0x00\n        /* \"#utility.yul\":22773:22778   */\n      dup2\n        /* \"#utility.yul\":22770:22771   */\n      0x02\n        /* \"#utility.yul\":22759:22779   */\n      signextend\n        /* \"#utility.yul\":22748:22779   */\n      swap1\n      pop\n        /* \"#utility.yul\":22695:22785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22791:23020   */\n    tag_303:\n        /* \"#utility.yul\":22828:22831   */\n      0x00\n        /* \"#utility.yul\":22851:22873   */\n      tag_750\n        /* \"#utility.yul\":22867:22872   */\n      dup3\n        /* \"#utility.yul\":22851:22873   */\n      tag_466\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":22842:22873   */\n      swap2\n      pop\n        /* \"#utility.yul\":22895:22961   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000\n        /* \"#utility.yul\":22888:22893   */\n      dup3\n        /* \"#utility.yul\":22885:22962   */\n      sub\n        /* \"#utility.yul\":22882:22985   */\n      tag_751\n      jumpi\n        /* \"#utility.yul\":22965:22983   */\n      tag_752\n      tag_425\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":22882:22985   */\n    tag_751:\n        /* \"#utility.yul\":23012:23013   */\n      0x01\n        /* \"#utility.yul\":23005:23010   */\n      dup3\n        /* \"#utility.yul\":23001:23014   */\n      sub\n        /* \"#utility.yul\":22994:23014   */\n      swap1\n      pop\n        /* \"#utility.yul\":22791:23020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23026:23160   */\n    tag_467:\n        /* \"#utility.yul\":23063:23070   */\n      0x00\n        /* \"#utility.yul\":23103:23153   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23096:23101   */\n      dup3\n        /* \"#utility.yul\":23092:23154   */\n      and\n        /* \"#utility.yul\":23081:23154   */\n      swap1\n      pop\n        /* \"#utility.yul\":23026:23160   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23166:23498   */\n    tag_305:\n        /* \"#utility.yul\":23206:23213   */\n      0x00\n        /* \"#utility.yul\":23229:23249   */\n      tag_755\n        /* \"#utility.yul\":23247:23248   */\n      dup3\n        /* \"#utility.yul\":23229:23249   */\n      tag_467\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":23224:23249   */\n      swap2\n      pop\n        /* \"#utility.yul\":23263:23283   */\n      tag_756\n        /* \"#utility.yul\":23281:23282   */\n      dup4\n        /* \"#utility.yul\":23263:23283   */\n      tag_467\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":23258:23283   */\n      swap3\n      pop\n        /* \"#utility.yul\":23435:23436   */\n      dup2\n        /* \"#utility.yul\":23383:23433   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23379:23437   */\n      div\n        /* \"#utility.yul\":23376:23377   */\n      dup4\n        /* \"#utility.yul\":23373:23438   */\n      gt\n        /* \"#utility.yul\":23368:23369   */\n      dup3\n        /* \"#utility.yul\":23361:23370   */\n      iszero\n        /* \"#utility.yul\":23354:23371   */\n      iszero\n        /* \"#utility.yul\":23350:23439   */\n      and\n        /* \"#utility.yul\":23347:23462   */\n      iszero\n      tag_757\n      jumpi\n        /* \"#utility.yul\":23442:23460   */\n      tag_758\n      tag_425\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":23347:23462   */\n    tag_757:\n        /* \"#utility.yul\":23490:23491   */\n      dup3\n        /* \"#utility.yul\":23487:23488   */\n      dup3\n        /* \"#utility.yul\":23483:23492   */\n      mul\n        /* \"#utility.yul\":23472:23492   */\n      swap1\n      pop\n        /* \"#utility.yul\":23166:23498   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23504:23689   */\n    tag_307:\n        /* \"#utility.yul\":23544:23545   */\n      0x00\n        /* \"#utility.yul\":23561:23581   */\n      tag_760\n        /* \"#utility.yul\":23579:23580   */\n      dup3\n        /* \"#utility.yul\":23561:23581   */\n      tag_467\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":23556:23581   */\n      swap2\n      pop\n        /* \"#utility.yul\":23595:23615   */\n      tag_761\n        /* \"#utility.yul\":23613:23614   */\n      dup4\n        /* \"#utility.yul\":23595:23615   */\n      tag_467\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":23590:23615   */\n      swap3\n      pop\n        /* \"#utility.yul\":23634:23635   */\n      dup3\n        /* \"#utility.yul\":23624:23659   */\n      tag_762\n      jumpi\n        /* \"#utility.yul\":23639:23657   */\n      tag_763\n      tag_438\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":23624:23659   */\n    tag_762:\n        /* \"#utility.yul\":23681:23682   */\n      dup3\n        /* \"#utility.yul\":23678:23679   */\n      dup3\n        /* \"#utility.yul\":23674:23683   */\n      div\n        /* \"#utility.yul\":23669:23683   */\n      swap1\n      pop\n        /* \"#utility.yul\":23504:23689   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23695:23771   */\n    tag_468:\n        /* \"#utility.yul\":23731:23738   */\n      0x00\n        /* \"#utility.yul\":23760:23765   */\n      dup2\n        /* \"#utility.yul\":23749:23765   */\n      swap1\n      pop\n        /* \"#utility.yul\":23695:23771   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23777:24005   */\n    tag_328:\n        /* \"#utility.yul\":23812:23815   */\n      0x00\n        /* \"#utility.yul\":23835:23858   */\n      tag_766\n        /* \"#utility.yul\":23852:23857   */\n      dup3\n        /* \"#utility.yul\":23835:23858   */\n      tag_468\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":23826:23858   */\n      swap2\n      pop\n        /* \"#utility.yul\":23880:23946   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23873:23878   */\n      dup3\n        /* \"#utility.yul\":23870:23947   */\n      sub\n        /* \"#utility.yul\":23867:23970   */\n      tag_767\n      jumpi\n        /* \"#utility.yul\":23950:23968   */\n      tag_768\n      tag_425\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":23867:23970   */\n    tag_767:\n        /* \"#utility.yul\":23993:23998   */\n      dup2\n        /* \"#utility.yul\":23990:23991   */\n      0x00\n        /* \"#utility.yul\":23986:23999   */\n      sub\n        /* \"#utility.yul\":23979:23999   */\n      swap1\n      pop\n        /* \"#utility.yul\":23777:24005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24011:24237   */\n    tag_330:\n        /* \"#utility.yul\":24045:24048   */\n      0x00\n        /* \"#utility.yul\":24068:24090   */\n      tag_770\n        /* \"#utility.yul\":24084:24089   */\n      dup3\n        /* \"#utility.yul\":24068:24090   */\n      tag_466\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":24059:24090   */\n      swap2\n      pop\n        /* \"#utility.yul\":24112:24178   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000\n        /* \"#utility.yul\":24105:24110   */\n      dup3\n        /* \"#utility.yul\":24102:24179   */\n      sub\n        /* \"#utility.yul\":24099:24202   */\n      tag_771\n      jumpi\n        /* \"#utility.yul\":24182:24200   */\n      tag_772\n      tag_425\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":24099:24202   */\n    tag_771:\n        /* \"#utility.yul\":24225:24230   */\n      dup2\n        /* \"#utility.yul\":24222:24223   */\n      0x00\n        /* \"#utility.yul\":24218:24231   */\n      sub\n        /* \"#utility.yul\":24211:24231   */\n      swap1\n      pop\n        /* \"#utility.yul\":24011:24237   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24243:24394   */\n    tag_469:\n        /* \"#utility.yul\":24383:24386   */\n      0x5400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24379:24380   */\n      0x00\n        /* \"#utility.yul\":24371:24377   */\n      dup3\n        /* \"#utility.yul\":24367:24381   */\n      add\n        /* \"#utility.yul\":24360:24387   */\n      mstore\n        /* \"#utility.yul\":24243:24394   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24400:24765   */\n    tag_470:\n        /* \"#utility.yul\":24542:24545   */\n      0x00\n        /* \"#utility.yul\":24563:24629   */\n      tag_775\n        /* \"#utility.yul\":24627:24628   */\n      0x01\n        /* \"#utility.yul\":24622:24625   */\n      dup4\n        /* \"#utility.yul\":24563:24629   */\n      tag_439\n      jump\t// in\n    tag_775:\n        /* \"#utility.yul\":24556:24629   */\n      swap2\n      pop\n        /* \"#utility.yul\":24638:24731   */\n      tag_776\n        /* \"#utility.yul\":24727:24730   */\n      dup3\n        /* \"#utility.yul\":24638:24731   */\n      tag_469\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":24756:24758   */\n      0x20\n        /* \"#utility.yul\":24751:24754   */\n      dup3\n        /* \"#utility.yul\":24747:24759   */\n      add\n        /* \"#utility.yul\":24740:24759   */\n      swap1\n      pop\n        /* \"#utility.yul\":24400:24765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24771:25190   */\n    tag_333:\n        /* \"#utility.yul\":24937:24941   */\n      0x00\n        /* \"#utility.yul\":24975:24977   */\n      0x20\n        /* \"#utility.yul\":24964:24973   */\n      dup3\n        /* \"#utility.yul\":24960:24978   */\n      add\n        /* \"#utility.yul\":24952:24978   */\n      swap1\n      pop\n        /* \"#utility.yul\":25024:25033   */\n      dup2\n        /* \"#utility.yul\":25018:25022   */\n      dup2\n        /* \"#utility.yul\":25014:25034   */\n      sub\n        /* \"#utility.yul\":25010:25011   */\n      0x00\n        /* \"#utility.yul\":24999:25008   */\n      dup4\n        /* \"#utility.yul\":24995:25012   */\n      add\n        /* \"#utility.yul\":24988:25035   */\n      mstore\n        /* \"#utility.yul\":25052:25183   */\n      tag_778\n        /* \"#utility.yul\":25178:25182   */\n      dup2\n        /* \"#utility.yul\":25052:25183   */\n      tag_470\n      jump\t// in\n    tag_778:\n        /* \"#utility.yul\":25044:25183   */\n      swap1\n      pop\n        /* \"#utility.yul\":24771:25190   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25196:25372   */\n    tag_377:\n        /* \"#utility.yul\":25228:25229   */\n      0x00\n        /* \"#utility.yul\":25245:25265   */\n      tag_780\n        /* \"#utility.yul\":25263:25264   */\n      dup3\n        /* \"#utility.yul\":25245:25265   */\n      tag_411\n      jump\t// in\n    tag_780:\n        /* \"#utility.yul\":25240:25265   */\n      swap2\n      pop\n        /* \"#utility.yul\":25279:25299   */\n      tag_781\n        /* \"#utility.yul\":25297:25298   */\n      dup4\n        /* \"#utility.yul\":25279:25299   */\n      tag_411\n      jump\t// in\n    tag_781:\n        /* \"#utility.yul\":25274:25299   */\n      swap3\n      pop\n        /* \"#utility.yul\":25318:25319   */\n      dup3\n        /* \"#utility.yul\":25308:25343   */\n      tag_782\n      jumpi\n        /* \"#utility.yul\":25323:25341   */\n      tag_783\n      tag_438\n      jump\t// in\n    tag_783:\n        /* \"#utility.yul\":25308:25343   */\n    tag_782:\n        /* \"#utility.yul\":25364:25365   */\n      dup3\n        /* \"#utility.yul\":25361:25362   */\n      dup3\n        /* \"#utility.yul\":25357:25366   */\n      mod\n        /* \"#utility.yul\":25352:25366   */\n      swap1\n      pop\n        /* \"#utility.yul\":25196:25372   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e411e61515cb12667beab63695944aa1802deb4b7b2f0efff52d3f77c949dee664736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_860": {
									"entryPoint": null,
									"id": 860,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506080516133eb61007c6000396000818161050301528181610847015281816108800152818161110901526112a001526133eb6000f3fe6080604052600436106100ec5760003560e01c8063990dc9db1161008a578063d825bfff11610059578063d825bfff14610324578063def1a5e814610361578063ec5568891461038d578063fed0a20e146103b8576100f6565b8063990dc9db1461026c5780639e955149146102a9578063b4014879146102d2578063cf9d4afa146102fb576100f6565b80634051b9aa116100c65780634051b9aa1461019e57806352fd856b146101c757806363b48ee6146101f25780637d0f7a881461022f576100f6565b80630cb1982b146100fb5780630fbbfa3e146101385780632637a47714610175576100f6565b366100f657600080fd5b600080fd5b34801561010757600080fd5b50610122600480360381019061011d9190612417565b6103e3565b60405161012f9190612453565b60405180910390f35b34801561014457600080fd5b5061015f600480360381019061015a91906124cc565b6104ce565b60405161016c9190612508565b60405180910390f35b34801561018157600080fd5b5061019c600480360381019061019791906124cc565b610501565b005b3480156101aa57600080fd5b506101c560048036038101906101c091906124cc565b61087e565b005b3480156101d357600080fd5b506101dc610bed565b6040516101e99190612453565b60405180910390f35b3480156101fe57600080fd5b5061021960048036038101906102149190612417565b610bf3565b6040516102269190612508565b60405180910390f35b34801561023b57600080fd5b50610256600480360381019061025191906124cc565b610c32565b6040516102639190612453565b60405180910390f35b34801561027857600080fd5b50610293600480360381019061028e9190612523565b610c4a565b6040516102a0919061257e565b60405180910390f35b3480156102b557600080fd5b506102d060048036038101906102cb91906124cc565b611069565b005b3480156102de57600080fd5b506102f960048036038101906102f49190612523565b611107565b005b34801561030757600080fd5b50610322600480360381019061031d91906124cc565b61129e565b005b34801561033057600080fd5b5061034b600480360381019061034691906124cc565b611374565b6040516103589190612508565b60405180910390f35b34801561036d57600080fd5b506103766113a7565b604051610384929190612599565b60405180910390f35b34801561039957600080fd5b506103a26115ce565b6040516103af9190612508565b60405180910390f35b3480156103c457600080fd5b506103cd6115f4565b6040516103da91906125de565b60405180910390f35b6000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633f0a07976040518163ffffffff1660e01b8152600401602060405180830381865afa158015610452573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610476919061260e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104ad57600080fd5b816104b6611607565b6104c0919061266a565b905080600081905550919050565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461055957600080fd5b6000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663a6fa0b7b836040518263ffffffff1660e01b81526004016105b99190612508565b600060405180830381600087803b1580156105d357600080fd5b505af11580156105e7573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16816040516024016106139190612508565b6040516020818303038152906040527fcf9d4afa000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161069d9190612718565b600060405180830381855af49150503d80600081146106d8576040519150601f19603f3d011682016040523d82523d6000602084013e6106dd565b606091505b5050506000600280549050905060005b818110156108445760006002828154811061070b5761070a61272f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb868373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161078e9190612508565b602060405180830381865afa1580156107ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cf9190612773565b6040518363ffffffff1660e01b81526004016107ec9291906127a0565b6020604051808303816000875af115801561080b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082f91906127f5565b5050808061083c90612822565b9150506106ed565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16ff5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806109935750600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633f0a07976040518163ffffffff1660e01b8152600401602060405180830381865afa158015610940573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610964919061260e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61099c57600080fd5b6002600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610a1b5760018081819054906101000a900460ff1680929190610a019061286a565b91906101000a81548160ff021916908360ff160217905550505b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600280549050905060005b81811015610be8578273ffffffffffffffffffffffffffffffffffffffff1660028281548110610aa057610a9f61272f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610bd5576002600183610af5919061266a565b81548110610b0657610b0561272f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660028281548110610b4557610b4461272f565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002805480610b9f57610b9e612893565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555b8080610be090612822565b915050610a6d565b505050565b60005481565b60028181548110610c0357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090505481565b600080600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16633f0a07976040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce1919061260e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610db357508073ffffffffffffffffffffffffffffffffffffffff1663da8909e56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d84919061260e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610dbc57600080fd5b6000600280549050905060005b8181101561105c57600060028281548110610de757610de661272f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506002600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036110485760008173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ea8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecc91906128ee565b905060128160ff161015610f9f578173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8960128460ff16610f07919061266a565b600a610f139190612a4e565b60018054906101000a900460ff1660ff168b610f2f9190612ac8565b610f399190612ac8565b6040518363ffffffff1660e01b8152600401610f569291906127a0565b6020604051808303816000875af1158015610f75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9991906127f5565b50611046565b60128160ff1603611045578173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8960018054906101000a900460ff1660ff168a610fe39190612ac8565b6040518363ffffffff1660e01b81526004016110009291906127a0565b6020604051808303816000875af115801561101f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104391906127f5565b505b5b505b50808061105490612822565b915050610dc9565b5060019250505092915050565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110c357600080fd5b80600160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461115f57600080fd5b600081036111b1576001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611237565b60018103611236576002600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060018081819054906101000a900460ff168092919061121c90612af9565b91906101000a81548160ff021916908360ff160217905550505b5b6002829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112f657600080fd5b6000600160009054906101000a900460ff1660ff161461131557600080fd5b80600160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060006101000a81548160ff021916908360ff16021790555050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663da8909e56040518163ffffffff1660e01b8152600401602060405180830381865afa158015611419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143d919061260e565b73ffffffffffffffffffffffffffffffffffffffff1663d0b06f5d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611487573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ab9190612773565b90506000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663da8909e56040518163ffffffff1660e01b8152600401602060405180830381865afa15801561151c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611540919061260e565b73ffffffffffffffffffffffffffffffffffffffff16637f8483a46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561158a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ae9190612773565b9050806115b9611607565b6115c3919061266a565b829350935050509091565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900460ff1681565b600080600280549050905060005b81811015611855576000600282815481106116335761163261272f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161169b9190612508565b602060405180830381865afa1580156116b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116dc9190612773565b90506000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506001810361182757600080611797600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600061185a565b509050611805818587600560008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611b2a565b91505080836118149190612b22565b8761181f9190612b7c565b96505061183f565b6002810361183e57818661183b9190612b7c565b95505b5b505050808061184d90612822565b915050611615565b505090565b60008060008363ffffffff16036118a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161189d90612c2f565b60405180910390fd5b6000600267ffffffffffffffff8111156118c3576118c2612c4f565b5b6040519080825280602002602001820160405280156118f15781602001602082028036833780820191505090505b50905083816000815181106119095761190861272f565b5b602002602001019063ffffffff16908163ffffffff16815250506000816001815181106119395761193861272f565b5b602002602001019063ffffffff16908163ffffffff16815250506000808673ffffffffffffffffffffffffffffffffffffffff1663883bdbfd846040518263ffffffff1660e01b815260040161198f9190612d4c565b600060405180830381865afa1580156119ac573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906119d59190612fc0565b915091506000826000815181106119ef576119ee61272f565b5b602002602001015183600181518110611a0b57611a0a61272f565b5b6020026020010151611a1d9190613038565b9050600082600081518110611a3557611a3461272f565b5b602002602001015183600181518110611a5157611a5061272f565b5b6020026020010151611a6391906130b3565b90508760030b82611a7491906130e7565b965060008260060b128015611a9b575060008860030b83611a959190613151565b60060b14155b15611aaf578680611aab9061318f565b9750505b600073ffffffffffffffffffffffffffffffffffffffff80168963ffffffff16611ad991906131fb565b905060208273ffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16901b81611b1b919061324d565b96505050505050509250929050565b600080611b3686611d36565b90506fffffffffffffffffffffffffffffffff80168173ffffffffffffffffffffffffffffffffffffffff1611611c505760008173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16611ba19190612b22565b90508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610611c1157611c0c7801000000000000000000000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683612203565b611c48565b611c4781876fffffffffffffffffffffffffffffffff167801000000000000000000000000000000000000000000000000612203565b5b925050611d2d565b6000611c928273ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1668010000000000000000612203565b90508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610611cfa57611cf5700100000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683612203565b611d29565b611d2881876fffffffffffffffffffffffffffffffff16700100000000000000000000000000000000612203565b5b9250505b50949350505050565b60008060008360020b12611d4d578260020b611d5b565b8260020b611d5a90613288565b5b90507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618611d87906132d0565b62ffffff16811115611dce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc590613364565b60405180910390fd5b6000806001831603611df157700100000000000000000000000000000000611e03565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060006002831614611e465760806ffff97272373d413259a46990580e213a82611e419190612b22565b901c90505b60006004831614611e745760806ffff2e50f5f656932ef12357cf3c7fdcc82611e6f9190612b22565b901c90505b60006008831614611ea25760806fffe5caca7e10e4e61c3624eaa0941cd082611e9d9190612b22565b901c90505b60006010831614611ed05760806fffcb9843d60f6159c9db58835c92664482611ecb9190612b22565b901c90505b60006020831614611efe5760806fff973b41fa98c081472e6896dfb254c082611ef99190612b22565b901c90505b60006040831614611f2c5760806fff2ea16466c96a3843ec78b326b5286182611f279190612b22565b901c90505b60006080831614611f5a5760806ffe5dee046a99a2a811c461f1969c305382611f559190612b22565b901c90505b6000610100831614611f895760806ffcbe86c7900a88aedcffc83b479aa3a482611f849190612b22565b901c90505b6000610200831614611fb85760806ff987a7253ac413176f2b074cf7815e5482611fb39190612b22565b901c90505b6000610400831614611fe75760806ff3392b0822b70005940c7a398e4b70f382611fe29190612b22565b901c90505b60006108008316146120165760806fe7159475a2c29b7443b29c7fa6e889d9826120119190612b22565b901c90505b60006110008316146120455760806fd097f3bdfd2022b8845ad8f792aa5825826120409190612b22565b901c90505b60006120008316146120745760806fa9f746462d870fdf8a65dc1f90e061e58261206f9190612b22565b901c90505b60006140008316146120a35760806f70d869a156d2a1b890bb3df62baf32f78261209e9190612b22565b901c90505b60006180008316146120d25760806f31be135f97d08fd981231505542fcfa6826120cd9190612b22565b901c90505b6000620100008316146121025760806f09aa508b5b7a84e1c677de54f3e99bc9826120fd9190612b22565b901c90505b6000620200008316146121315760806e5d6af8dedb81196699c329225ee6048261212c9190612b22565b901c90505b60006204000083161461215f5760806d2216e584f5fa1ea926041bedfe988261215a9190612b22565b901c90505b60006208000083161461218b5760806b048a170391f7dc42444e8fa2826121869190612b22565b901c90505b60008460020b13156121c657807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6121c39190612ac8565b90505b6000640100000000826121d99190613384565b146121e55760016121e8565b60005b60ff16602082901c6121fa9190612b7c565b92505050919050565b600080600080198587098587029250828110838203039150506000810361223d576000841161223157600080fd5b838204925050506123c6565b80841161224957600080fd5b60008486880990508281118203915080830392506000856001877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61228e919061266a565b6122989190612b7c565b16905080860495508084049350600181826000030401905080836122bc9190612b22565b84179350600060028760036122d19190612b22565b18905080876122e09190612b22565b60026122ec919061266a565b816122f79190612b22565b905080876123059190612b22565b6002612311919061266a565b8161231c9190612b22565b9050808761232a9190612b22565b6002612336919061266a565b816123419190612b22565b9050808761234f9190612b22565b600261235b919061266a565b816123669190612b22565b905080876123749190612b22565b6002612380919061266a565b8161238b9190612b22565b905080876123999190612b22565b60026123a5919061266a565b816123b09190612b22565b905080856123be9190612b22565b955050505050505b9392505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6123f4816123e1565b81146123ff57600080fd5b50565b600081359050612411816123eb565b92915050565b60006020828403121561242d5761242c6123d7565b5b600061243b84828501612402565b91505092915050565b61244d816123e1565b82525050565b60006020820190506124686000830184612444565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006124998261246e565b9050919050565b6124a98161248e565b81146124b457600080fd5b50565b6000813590506124c6816124a0565b92915050565b6000602082840312156124e2576124e16123d7565b5b60006124f0848285016124b7565b91505092915050565b6125028161248e565b82525050565b600060208201905061251d60008301846124f9565b92915050565b6000806040838503121561253a576125396123d7565b5b6000612548858286016124b7565b925050602061255985828601612402565b9150509250929050565b60008115159050919050565b61257881612563565b82525050565b6000602082019050612593600083018461256f565b92915050565b60006040820190506125ae6000830185612444565b6125bb6020830184612444565b9392505050565b600060ff82169050919050565b6125d8816125c2565b82525050565b60006020820190506125f360008301846125cf565b92915050565b600081519050612608816124a0565b92915050565b600060208284031215612624576126236123d7565b5b6000612632848285016125f9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612675826123e1565b9150612680836123e1565b9250828210156126935761269261263b565b5b828203905092915050565b600081519050919050565b600081905092915050565b60005b838110156126d25780820151818401526020810190506126b7565b838111156126e1576000848401525b50505050565b60006126f28261269e565b6126fc81856126a9565b935061270c8185602086016126b4565b80840191505092915050565b600061272482846126e7565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008151905061276d816123eb565b92915050565b600060208284031215612789576127886123d7565b5b60006127978482850161275e565b91505092915050565b60006040820190506127b560008301856124f9565b6127c26020830184612444565b9392505050565b6127d281612563565b81146127dd57600080fd5b50565b6000815190506127ef816127c9565b92915050565b60006020828403121561280b5761280a6123d7565b5b6000612819848285016127e0565b91505092915050565b600061282d826123e1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361285f5761285e61263b565b5b600182019050919050565b6000612875826125c2565b9150600082036128885761288761263b565b5b600182039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6128cb816125c2565b81146128d657600080fd5b50565b6000815190506128e8816128c2565b92915050565b600060208284031215612904576129036123d7565b5b6000612912848285016128d9565b91505092915050565b60008160011c9050919050565b6000808291508390505b60018511156129725780860481111561294e5761294d61263b565b5b600185161561295d5780820291505b808102905061296b8561291b565b9450612932565b94509492505050565b60008261298b5760019050612a47565b816129995760009050612a47565b81600181146129af57600281146129b9576129e8565b6001915050612a47565b60ff8411156129cb576129ca61263b565b5b8360020a9150848211156129e2576129e161263b565b5b50612a47565b5060208310610133831016604e8410600b8410161715612a1d5782820a905083811115612a1857612a1761263b565b5b612a47565b612a2a8484846001612928565b92509050818404811115612a4157612a4061263b565b5b81810290505b9392505050565b6000612a59826123e1565b9150612a64836123e1565b9250612a917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461297b565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612ad3826123e1565b9150612ade836123e1565b925082612aee57612aed612a99565b5b828204905092915050565b6000612b04826125c2565b915060ff8203612b1757612b1661263b565b5b600182019050919050565b6000612b2d826123e1565b9150612b38836123e1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612b7157612b7061263b565b5b828202905092915050565b6000612b87826123e1565b9150612b92836123e1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612bc757612bc661263b565b5b828201905092915050565b600082825260208201905092915050565b7f4250000000000000000000000000000000000000000000000000000000000000600082015250565b6000612c19600283612bd2565b9150612c2482612be3565b602082019050919050565b60006020820190508181036000830152612c4881612c0c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600063ffffffff82169050919050565b612cc381612caa565b82525050565b6000612cd58383612cba565b60208301905092915050565b6000602082019050919050565b6000612cf982612c7e565b612d038185612c89565b9350612d0e83612c9a565b8060005b83811015612d3f578151612d268882612cc9565b9750612d3183612ce1565b925050600181019050612d12565b5085935050505092915050565b60006020820190508181036000830152612d668184612cee565b905092915050565b600080fd5b6000601f19601f8301169050919050565b612d8d82612d73565b810181811067ffffffffffffffff82111715612dac57612dab612c4f565b5b80604052505050565b6000612dbf6123cd565b9050612dcb8282612d84565b919050565b600067ffffffffffffffff821115612deb57612dea612c4f565b5b602082029050602081019050919050565b600080fd5b60008160060b9050919050565b612e1781612e01565b8114612e2257600080fd5b50565b600081519050612e3481612e0e565b92915050565b6000612e4d612e4884612dd0565b612db5565b90508083825260208201905060208402830185811115612e7057612e6f612dfc565b5b835b81811015612e995780612e858882612e25565b845260208401935050602081019050612e72565b5050509392505050565b600082601f830112612eb857612eb7612d6e565b5b8151612ec8848260208601612e3a565b91505092915050565b600067ffffffffffffffff821115612eec57612eeb612c4f565b5b602082029050602081019050919050565b612f068161246e565b8114612f1157600080fd5b50565b600081519050612f2381612efd565b92915050565b6000612f3c612f3784612ed1565b612db5565b90508083825260208201905060208402830185811115612f5f57612f5e612dfc565b5b835b81811015612f885780612f748882612f14565b845260208401935050602081019050612f61565b5050509392505050565b600082601f830112612fa757612fa6612d6e565b5b8151612fb7848260208601612f29565b91505092915050565b60008060408385031215612fd757612fd66123d7565b5b600083015167ffffffffffffffff811115612ff557612ff46123dc565b5b61300185828601612ea3565b925050602083015167ffffffffffffffff811115613022576130216123dc565b5b61302e85828601612f92565b9150509250929050565b600061304382612e01565b915061304e83612e01565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000018212600084121516156130895761308861263b565b5b82667fffffffffffff0182136000841216156130a8576130a761263b565b5b828203905092915050565b60006130be8261246e565b91506130c98361246e565b9250828210156130dc576130db61263b565b5b828203905092915050565b60006130f282612e01565b91506130fd83612e01565b92508261310d5761310c612a99565b5b600160000383147fffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000831416156131465761314561263b565b5b828205905092915050565b600061315c82612e01565b915061316783612e01565b92508261317757613176612a99565b5b828207905092915050565b60008160020b9050919050565b600061319a82613182565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000082036131cc576131cb61263b565b5b600182039050919050565b600077ffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613206826131d7565b9150613211836131d7565b92508177ffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156132425761324161263b565b5b828202905092915050565b6000613258826131d7565b9150613263836131d7565b92508261327357613272612a99565b5b828204905092915050565b6000819050919050565b60006132938261327e565b91507f800000000000000000000000000000000000000000000000000000000000000082036132c5576132c461263b565b5b816000039050919050565b60006132db82613182565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000820361330d5761330c61263b565b5b816000039050919050565b7f5400000000000000000000000000000000000000000000000000000000000000600082015250565b600061334e600183612bd2565b915061335982613318565b602082019050919050565b6000602082019050818103600083015261337d81613341565b9050919050565b600061338f826123e1565b915061339a836123e1565b9250826133aa576133a9612a99565b5b82820690509291505056fea2646970667358221220e411e61515cb12667beab63695944aa1802deb4b7b2f0efff52d3f77c949dee664736f6c634300080e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x80 MLOAD PUSH2 0x33EB PUSH2 0x7C PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x503 ADD MSTORE DUP2 DUP2 PUSH2 0x847 ADD MSTORE DUP2 DUP2 PUSH2 0x880 ADD MSTORE DUP2 DUP2 PUSH2 0x1109 ADD MSTORE PUSH2 0x12A0 ADD MSTORE PUSH2 0x33EB PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x990DC9DB GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xD825BFFF GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD825BFFF EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xDEF1A5E8 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xEC556889 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xFED0A20E EQ PUSH2 0x3B8 JUMPI PUSH2 0xF6 JUMP JUMPDEST DUP1 PUSH4 0x990DC9DB EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x9E955149 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0xB4014879 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xCF9D4AFA EQ PUSH2 0x2FB JUMPI PUSH2 0xF6 JUMP JUMPDEST DUP1 PUSH4 0x4051B9AA GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x4051B9AA EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x52FD856B EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x63B48EE6 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x7D0F7A88 EQ PUSH2 0x22F JUMPI PUSH2 0xF6 JUMP JUMPDEST DUP1 PUSH4 0xCB1982B EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xFBBFA3E EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x2637A477 EQ PUSH2 0x175 JUMPI PUSH2 0xF6 JUMP JUMPDEST CALLDATASIZE PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH2 0x3E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x87E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0xC32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x1069 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0x1107 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x129E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x1374 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x376 PUSH2 0x13A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x384 SWAP3 SWAP2 SWAP1 PUSH2 0x2599 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x25DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3F0A0797 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x452 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x476 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH2 0x4B6 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA6FA0B7B DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x613 SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xCF9D4AFA00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x69D SWAP2 SWAP1 PUSH2 0x2718 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x6D8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x844 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x70B JUMPI PUSH2 0x70A PUSH2 0x272F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP7 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78E SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x2773 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EC SWAP3 SWAP2 SWAP1 PUSH2 0x27A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x80B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x82F SWAP2 SWAP1 PUSH2 0x27F5 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x83C SWAP1 PUSH2 0x2822 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6ED JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x993 JUMPI POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3F0A0797 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x940 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x964 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x99C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0xA1B JUMPI PUSH1 0x1 DUP1 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA01 SWAP1 PUSH2 0x286A JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBE8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAA0 JUMPI PUSH2 0xA9F PUSH2 0x272F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD5 JUMPI PUSH1 0x2 PUSH1 0x1 DUP4 PUSH2 0xAF5 SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xB06 JUMPI PUSH2 0xB05 PUSH2 0x272F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB45 JUMPI PUSH2 0xB44 PUSH2 0x272F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP1 SLOAD DUP1 PUSH2 0xB9F JUMPI PUSH2 0xB9E PUSH2 0x2893 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE JUMPDEST DUP1 DUP1 PUSH2 0xBE0 SWAP1 PUSH2 0x2822 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA6D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3F0A0797 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCBD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xDB3 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDA8909E5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD60 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD84 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xDBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x105C JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDE7 JUMPI PUSH2 0xDE6 PUSH2 0x272F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x2 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x1048 JUMPI PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEA8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xECC SWAP2 SWAP1 PUSH2 0x28EE JUMP JUMPDEST SWAP1 POP PUSH1 0x12 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xF9F JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP10 PUSH1 0x12 DUP5 PUSH1 0xFF AND PUSH2 0xF07 SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST PUSH1 0xA PUSH2 0xF13 SWAP2 SWAP1 PUSH2 0x2A4E JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP12 PUSH2 0xF2F SWAP2 SWAP1 PUSH2 0x2AC8 JUMP JUMPDEST PUSH2 0xF39 SWAP2 SWAP1 PUSH2 0x2AC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF56 SWAP3 SWAP2 SWAP1 PUSH2 0x27A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF75 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF99 SWAP2 SWAP1 PUSH2 0x27F5 JUMP JUMPDEST POP PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x12 DUP2 PUSH1 0xFF AND SUB PUSH2 0x1045 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP10 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP11 PUSH2 0xFE3 SWAP2 SWAP1 PUSH2 0x2AC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1000 SWAP3 SWAP2 SWAP1 PUSH2 0x27A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x101F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1043 SWAP2 SWAP1 PUSH2 0x27F5 JUMP JUMPDEST POP JUMPDEST JUMPDEST POP JUMPDEST POP DUP1 DUP1 PUSH2 0x1054 SWAP1 PUSH2 0x2822 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDC9 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x115F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x11B1 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1237 JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x1236 JUMPI PUSH1 0x2 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP1 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x121C SWAP1 PUSH2 0x2AF9 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMPDEST JUMPDEST PUSH1 0x2 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH2 0x1315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDA8909E5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1419 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x143D SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0B06F5D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1487 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14AB SWAP2 SWAP1 PUSH2 0x2773 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDA8909E5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x151C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1540 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7F8483A4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x158A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15AE SWAP2 SWAP1 PUSH2 0x2773 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x15B9 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x15C3 SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST DUP3 SWAP4 POP SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1855 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1633 JUMPI PUSH2 0x1632 PUSH2 0x272F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x169B SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16DC SWAP2 SWAP1 PUSH2 0x2773 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x1 DUP2 SUB PUSH2 0x1827 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1797 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH2 0x185A JUMP JUMPDEST POP SWAP1 POP PUSH2 0x1805 DUP2 DUP6 DUP8 PUSH1 0x5 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B2A JUMP JUMPDEST SWAP2 POP POP DUP1 DUP4 PUSH2 0x1814 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST DUP8 PUSH2 0x181F SWAP2 SWAP1 PUSH2 0x2B7C JUMP JUMPDEST SWAP7 POP POP PUSH2 0x183F JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x183E JUMPI DUP2 DUP7 PUSH2 0x183B SWAP2 SWAP1 PUSH2 0x2B7C JUMP JUMPDEST SWAP6 POP JUMPDEST JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x184D SWAP1 PUSH2 0x2822 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1615 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND SUB PUSH2 0x18A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x189D SWAP1 PUSH2 0x2C2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18C3 JUMPI PUSH2 0x18C2 PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x18F1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1909 JUMPI PUSH2 0x1908 PUSH2 0x272F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1939 JUMPI PUSH2 0x1938 PUSH2 0x272F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x883BDBFD DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x198F SWAP2 SWAP1 PUSH2 0x2D4C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19D5 SWAP2 SWAP1 PUSH2 0x2FC0 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x19EF JUMPI PUSH2 0x19EE PUSH2 0x272F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1A0B JUMPI PUSH2 0x1A0A PUSH2 0x272F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1A1D SWAP2 SWAP1 PUSH2 0x3038 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1A35 JUMPI PUSH2 0x1A34 PUSH2 0x272F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1A51 JUMPI PUSH2 0x1A50 PUSH2 0x272F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1A63 SWAP2 SWAP1 PUSH2 0x30B3 JUMP JUMPDEST SWAP1 POP DUP8 PUSH1 0x3 SIGNEXTEND DUP3 PUSH2 0x1A74 SWAP2 SWAP1 PUSH2 0x30E7 JUMP JUMPDEST SWAP7 POP PUSH1 0x0 DUP3 PUSH1 0x6 SIGNEXTEND SLT DUP1 ISZERO PUSH2 0x1A9B JUMPI POP PUSH1 0x0 DUP9 PUSH1 0x3 SIGNEXTEND DUP4 PUSH2 0x1A95 SWAP2 SWAP1 PUSH2 0x3151 JUMP JUMPDEST PUSH1 0x6 SIGNEXTEND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1AAF JUMPI DUP7 DUP1 PUSH2 0x1AAB SWAP1 PUSH2 0x318F JUMP JUMPDEST SWAP8 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP10 PUSH4 0xFFFFFFFF AND PUSH2 0x1AD9 SWAP2 SWAP1 PUSH2 0x31FB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SHL DUP2 PUSH2 0x1B1B SWAP2 SWAP1 PUSH2 0x324D JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B36 DUP7 PUSH2 0x1D36 JUMP JUMPDEST SWAP1 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x1C50 JUMPI PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BA1 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x1C11 JUMPI PUSH2 0x1C0C PUSH25 0x1000000000000000000000000000000000000000000000000 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x2203 JUMP JUMPDEST PUSH2 0x1C48 JUMP JUMPDEST PUSH2 0x1C47 DUP2 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH2 0x2203 JUMP JUMPDEST JUMPDEST SWAP3 POP POP PUSH2 0x1D2D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C92 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH9 0x10000000000000000 PUSH2 0x2203 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x1CFA JUMPI PUSH2 0x1CF5 PUSH17 0x100000000000000000000000000000000 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x2203 JUMP JUMPDEST PUSH2 0x1D29 JUMP JUMPDEST PUSH2 0x1D28 DUP2 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH17 0x100000000000000000000000000000000 PUSH2 0x2203 JUMP JUMPDEST JUMPDEST SWAP3 POP POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x1D4D JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x1D5B JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x1D5A SWAP1 PUSH2 0x3288 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH2 0x1D87 SWAP1 PUSH2 0x32D0 JUMP JUMPDEST PUSH3 0xFFFFFF AND DUP2 GT ISZERO PUSH2 0x1DCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DC5 SWAP1 PUSH2 0x3364 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 AND SUB PUSH2 0x1DF1 JUMPI PUSH17 0x100000000000000000000000000000000 PUSH2 0x1E03 JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP4 AND EQ PUSH2 0x1E46 JUMPI PUSH1 0x80 PUSH16 0xFFF97272373D413259A46990580E213A DUP3 PUSH2 0x1E41 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 AND EQ PUSH2 0x1E74 JUMPI PUSH1 0x80 PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC DUP3 PUSH2 0x1E6F SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 AND EQ PUSH2 0x1EA2 JUMPI PUSH1 0x80 PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 DUP3 PUSH2 0x1E9D SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP4 AND EQ PUSH2 0x1ED0 JUMPI PUSH1 0x80 PUSH16 0xFFCB9843D60F6159C9DB58835C926644 DUP3 PUSH2 0x1ECB SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 AND EQ PUSH2 0x1EFE JUMPI PUSH1 0x80 PUSH16 0xFF973B41FA98C081472E6896DFB254C0 DUP3 PUSH2 0x1EF9 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 AND EQ PUSH2 0x1F2C JUMPI PUSH1 0x80 PUSH16 0xFF2EA16466C96A3843EC78B326B52861 DUP3 PUSH2 0x1F27 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 AND EQ PUSH2 0x1F5A JUMPI PUSH1 0x80 PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 DUP3 PUSH2 0x1F55 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP4 AND EQ PUSH2 0x1F89 JUMPI PUSH1 0x80 PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 DUP3 PUSH2 0x1F84 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP4 AND EQ PUSH2 0x1FB8 JUMPI PUSH1 0x80 PUSH16 0xF987A7253AC413176F2B074CF7815E54 DUP3 PUSH2 0x1FB3 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x400 DUP4 AND EQ PUSH2 0x1FE7 JUMPI PUSH1 0x80 PUSH16 0xF3392B0822B70005940C7A398E4B70F3 DUP3 PUSH2 0x1FE2 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x800 DUP4 AND EQ PUSH2 0x2016 JUMPI PUSH1 0x80 PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 DUP3 PUSH2 0x2011 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x1000 DUP4 AND EQ PUSH2 0x2045 JUMPI PUSH1 0x80 PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 DUP3 PUSH2 0x2040 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x2000 DUP4 AND EQ PUSH2 0x2074 JUMPI PUSH1 0x80 PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 DUP3 PUSH2 0x206F SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x4000 DUP4 AND EQ PUSH2 0x20A3 JUMPI PUSH1 0x80 PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 DUP3 PUSH2 0x209E SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x8000 DUP4 AND EQ PUSH2 0x20D2 JUMPI PUSH1 0x80 PUSH16 0x31BE135F97D08FD981231505542FCFA6 DUP3 PUSH2 0x20CD SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x10000 DUP4 AND EQ PUSH2 0x2102 JUMPI PUSH1 0x80 PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 DUP3 PUSH2 0x20FD SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x20000 DUP4 AND EQ PUSH2 0x2131 JUMPI PUSH1 0x80 PUSH15 0x5D6AF8DEDB81196699C329225EE604 DUP3 PUSH2 0x212C SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x40000 DUP4 AND EQ PUSH2 0x215F JUMPI PUSH1 0x80 PUSH14 0x2216E584F5FA1EA926041BEDFE98 DUP3 PUSH2 0x215A SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x80000 DUP4 AND EQ PUSH2 0x218B JUMPI PUSH1 0x80 PUSH12 0x48A170391F7DC42444E8FA2 DUP3 PUSH2 0x2186 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x21C6 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x21C3 SWAP2 SWAP1 PUSH2 0x2AC8 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP3 PUSH2 0x21D9 SWAP2 SWAP1 PUSH2 0x3384 JUMP JUMPDEST EQ PUSH2 0x21E5 JUMPI PUSH1 0x1 PUSH2 0x21E8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR PUSH2 0x21FA SWAP2 SWAP1 PUSH2 0x2B7C JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH1 0x0 DUP2 SUB PUSH2 0x223D JUMPI PUSH1 0x0 DUP5 GT PUSH2 0x2231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 DIV SWAP3 POP POP POP PUSH2 0x23C6 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x2249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH1 0x0 DUP6 PUSH1 0x1 DUP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x228E SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST PUSH2 0x2298 SWAP2 SWAP1 PUSH2 0x2B7C JUMP JUMPDEST AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH1 0x0 SUB DIV ADD SWAP1 POP DUP1 DUP4 PUSH2 0x22BC SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST DUP5 OR SWAP4 POP PUSH1 0x0 PUSH1 0x2 DUP8 PUSH1 0x3 PUSH2 0x22D1 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST XOR SWAP1 POP DUP1 DUP8 PUSH2 0x22E0 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x22EC SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST DUP2 PUSH2 0x22F7 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH2 0x2305 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x2311 SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST DUP2 PUSH2 0x231C SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH2 0x232A SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x2336 SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST DUP2 PUSH2 0x2341 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH2 0x234F SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x235B SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST DUP2 PUSH2 0x2366 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH2 0x2374 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x2380 SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST DUP2 PUSH2 0x238B SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH2 0x2399 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x23A5 SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST DUP2 PUSH2 0x23B0 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 PUSH2 0x23BE SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23F4 DUP2 PUSH2 0x23E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x23FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2411 DUP2 PUSH2 0x23EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x242D JUMPI PUSH2 0x242C PUSH2 0x23D7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x243B DUP5 DUP3 DUP6 ADD PUSH2 0x2402 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x244D DUP2 PUSH2 0x23E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2468 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2444 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2499 DUP3 PUSH2 0x246E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24A9 DUP2 PUSH2 0x248E JUMP JUMPDEST DUP2 EQ PUSH2 0x24B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24C6 DUP2 PUSH2 0x24A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24E2 JUMPI PUSH2 0x24E1 PUSH2 0x23D7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24F0 DUP5 DUP3 DUP6 ADD PUSH2 0x24B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2502 DUP2 PUSH2 0x248E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x251D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x24F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x253A JUMPI PUSH2 0x2539 PUSH2 0x23D7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2548 DUP6 DUP3 DUP7 ADD PUSH2 0x24B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2559 DUP6 DUP3 DUP7 ADD PUSH2 0x2402 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2578 DUP2 PUSH2 0x2563 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2593 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x256F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x25AE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2444 JUMP JUMPDEST PUSH2 0x25BB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2444 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25D8 DUP2 PUSH2 0x25C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2608 DUP2 PUSH2 0x24A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2624 JUMPI PUSH2 0x2623 PUSH2 0x23D7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2632 DUP5 DUP3 DUP6 ADD PUSH2 0x25F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2675 DUP3 PUSH2 0x23E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2680 DUP4 PUSH2 0x23E1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2693 JUMPI PUSH2 0x2692 PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x26B7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x26E1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F2 DUP3 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x26FC DUP2 DUP6 PUSH2 0x26A9 JUMP JUMPDEST SWAP4 POP PUSH2 0x270C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26B4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2724 DUP3 DUP5 PUSH2 0x26E7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x276D DUP2 PUSH2 0x23EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2789 JUMPI PUSH2 0x2788 PUSH2 0x23D7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2797 DUP5 DUP3 DUP6 ADD PUSH2 0x275E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x27B5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x24F9 JUMP JUMPDEST PUSH2 0x27C2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2444 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x27D2 DUP2 PUSH2 0x2563 JUMP JUMPDEST DUP2 EQ PUSH2 0x27DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x27EF DUP2 PUSH2 0x27C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x280B JUMPI PUSH2 0x280A PUSH2 0x23D7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2819 DUP5 DUP3 DUP6 ADD PUSH2 0x27E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x282D DUP3 PUSH2 0x23E1 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x285F JUMPI PUSH2 0x285E PUSH2 0x263B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2875 DUP3 PUSH2 0x25C2 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x2888 JUMPI PUSH2 0x2887 PUSH2 0x263B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x28CB DUP2 PUSH2 0x25C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x28D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x28E8 DUP2 PUSH2 0x28C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2904 JUMPI PUSH2 0x2903 PUSH2 0x23D7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2912 DUP5 DUP3 DUP6 ADD PUSH2 0x28D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x2972 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x294E JUMPI PUSH2 0x294D PUSH2 0x263B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x295D JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x296B DUP6 PUSH2 0x291B JUMP JUMPDEST SWAP5 POP PUSH2 0x2932 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x298B JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2A47 JUMP JUMPDEST DUP2 PUSH2 0x2999 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2A47 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x29AF JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x29B9 JUMPI PUSH2 0x29E8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2A47 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x29CB JUMPI PUSH2 0x29CA PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x29E2 JUMPI PUSH2 0x29E1 PUSH2 0x263B JUMP JUMPDEST JUMPDEST POP PUSH2 0x2A47 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2A1D JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2A18 JUMPI PUSH2 0x2A17 PUSH2 0x263B JUMP JUMPDEST JUMPDEST PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0x2A2A DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2928 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2A41 JUMPI PUSH2 0x2A40 PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A59 DUP3 PUSH2 0x23E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A64 DUP4 PUSH2 0x23E1 JUMP JUMPDEST SWAP3 POP PUSH2 0x2A91 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x297B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2AD3 DUP3 PUSH2 0x23E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ADE DUP4 PUSH2 0x23E1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2AEE JUMPI PUSH2 0x2AED PUSH2 0x2A99 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B04 DUP3 PUSH2 0x25C2 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x2B17 JUMPI PUSH2 0x2B16 PUSH2 0x263B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2D DUP3 PUSH2 0x23E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B38 DUP4 PUSH2 0x23E1 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2B71 JUMPI PUSH2 0x2B70 PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B87 DUP3 PUSH2 0x23E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B92 DUP4 PUSH2 0x23E1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2BC7 JUMPI PUSH2 0x2BC6 PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4250000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C19 PUSH1 0x2 DUP4 PUSH2 0x2BD2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C24 DUP3 PUSH2 0x2BE3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C48 DUP2 PUSH2 0x2C0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CC3 DUP2 PUSH2 0x2CAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CD5 DUP4 DUP4 PUSH2 0x2CBA JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF9 DUP3 PUSH2 0x2C7E JUMP JUMPDEST PUSH2 0x2D03 DUP2 DUP6 PUSH2 0x2C89 JUMP JUMPDEST SWAP4 POP PUSH2 0x2D0E DUP4 PUSH2 0x2C9A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D3F JUMPI DUP2 MLOAD PUSH2 0x2D26 DUP9 DUP3 PUSH2 0x2CC9 JUMP JUMPDEST SWAP8 POP PUSH2 0x2D31 DUP4 PUSH2 0x2CE1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2D12 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D66 DUP2 DUP5 PUSH2 0x2CEE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D8D DUP3 PUSH2 0x2D73 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2DAC JUMPI PUSH2 0x2DAB PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DBF PUSH2 0x23CD JUMP JUMPDEST SWAP1 POP PUSH2 0x2DCB DUP3 DUP3 PUSH2 0x2D84 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2DEB JUMPI PUSH2 0x2DEA PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E17 DUP2 PUSH2 0x2E01 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2E34 DUP2 PUSH2 0x2E0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E4D PUSH2 0x2E48 DUP5 PUSH2 0x2DD0 JUMP JUMPDEST PUSH2 0x2DB5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2E70 JUMPI PUSH2 0x2E6F PUSH2 0x2DFC JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2E99 JUMPI DUP1 PUSH2 0x2E85 DUP9 DUP3 PUSH2 0x2E25 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2E72 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2EB8 JUMPI PUSH2 0x2EB7 PUSH2 0x2D6E JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x2EC8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2E3A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2EEC JUMPI PUSH2 0x2EEB PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F06 DUP2 PUSH2 0x246E JUMP JUMPDEST DUP2 EQ PUSH2 0x2F11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2F23 DUP2 PUSH2 0x2EFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F3C PUSH2 0x2F37 DUP5 PUSH2 0x2ED1 JUMP JUMPDEST PUSH2 0x2DB5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2F5F JUMPI PUSH2 0x2F5E PUSH2 0x2DFC JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2F88 JUMPI DUP1 PUSH2 0x2F74 DUP9 DUP3 PUSH2 0x2F14 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2F61 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2FA7 JUMPI PUSH2 0x2FA6 PUSH2 0x2D6E JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x2FB7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2F29 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FD7 JUMPI PUSH2 0x2FD6 PUSH2 0x23D7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FF5 JUMPI PUSH2 0x2FF4 PUSH2 0x23DC JUMP JUMPDEST JUMPDEST PUSH2 0x3001 DUP6 DUP3 DUP7 ADD PUSH2 0x2EA3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3022 JUMPI PUSH2 0x3021 PUSH2 0x23DC JUMP JUMPDEST JUMPDEST PUSH2 0x302E DUP6 DUP3 DUP7 ADD PUSH2 0x2F92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3043 DUP3 PUSH2 0x2E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x304E DUP4 PUSH2 0x2E01 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80000000000000 ADD DUP3 SLT PUSH1 0x0 DUP5 SLT ISZERO AND ISZERO PUSH2 0x3089 JUMPI PUSH2 0x3088 PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP3 PUSH7 0x7FFFFFFFFFFFFF ADD DUP3 SGT PUSH1 0x0 DUP5 SLT AND ISZERO PUSH2 0x30A8 JUMPI PUSH2 0x30A7 PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30BE DUP3 PUSH2 0x246E JUMP JUMPDEST SWAP2 POP PUSH2 0x30C9 DUP4 PUSH2 0x246E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x30DC JUMPI PUSH2 0x30DB PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30F2 DUP3 PUSH2 0x2E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x30FD DUP4 PUSH2 0x2E01 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x310D JUMPI PUSH2 0x310C PUSH2 0x2A99 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x0 SUB DUP4 EQ PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80000000000000 DUP4 EQ AND ISZERO PUSH2 0x3146 JUMPI PUSH2 0x3145 PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x315C DUP3 PUSH2 0x2E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x3167 DUP4 PUSH2 0x2E01 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3177 JUMPI PUSH2 0x3176 PUSH2 0x2A99 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SMOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x319A DUP3 PUSH2 0x3182 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP3 SUB PUSH2 0x31CC JUMPI PUSH2 0x31CB PUSH2 0x263B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3206 DUP3 PUSH2 0x31D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x3211 DUP4 PUSH2 0x31D7 JUMP JUMPDEST SWAP3 POP DUP2 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3242 JUMPI PUSH2 0x3241 PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3258 DUP3 PUSH2 0x31D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x3263 DUP4 PUSH2 0x31D7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3273 JUMPI PUSH2 0x3272 PUSH2 0x2A99 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3293 DUP3 PUSH2 0x327E JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 SUB PUSH2 0x32C5 JUMPI PUSH2 0x32C4 PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32DB DUP3 PUSH2 0x3182 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP3 SUB PUSH2 0x330D JUMPI PUSH2 0x330C PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x334E PUSH1 0x1 DUP4 PUSH2 0x2BD2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3359 DUP3 PUSH2 0x3318 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x337D DUP2 PUSH2 0x3341 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x338F DUP3 PUSH2 0x23E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x339A DUP4 PUSH2 0x23E1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x33AA JUMPI PUSH2 0x33A9 PUSH2 0x2A99 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 GT 0xE6 ISZERO ISZERO 0xCB SLT PUSH7 0x7BEAB63695944A LOG1 DUP1 0x2D 0xEB 0x4B PUSH28 0x2F0EFFF52D3F77C949DEE664736F6C634300080E0033000000000000 ",
							"sourceMap": "148:4871:13:-:0;;;608:56;;;;;;;;;;647:10;636:21;;;;;;;;;;148:4871;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@NAV_830": {
									"entryPoint": 3053,
									"id": 830,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1394": {
									"entryPoint": null,
									"id": 1394,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1401": {
									"entryPoint": null,
									"id": 1401,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addCoin_1217": {
									"entryPoint": 4359,
									"id": 1217,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@calculateNAV_1177": {
									"entryPoint": 5639,
									"id": 1177,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@coinArray_839": {
									"entryPoint": 3059,
									"id": 839,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@coinOracleAddr_847": {
									"entryPoint": 1230,
									"id": 847,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@coins_843": {
									"entryPoint": 3122,
									"id": 843,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@consult_1724": {
									"entryPoint": 6234,
									"id": 1724,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@delCoin_1293": {
									"entryPoint": 2174,
									"id": 1293,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deleteContract_1387": {
									"entryPoint": 1281,
									"id": 1387,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getQuoteAtTick_1822": {
									"entryPoint": 6954,
									"id": 1822,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@getSqrtRatioAtTick_2583": {
									"entryPoint": 7478,
									"id": 2583,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initContract_899": {
									"entryPoint": 4766,
									"id": 899,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@initDone_832": {
									"entryPoint": 5620,
									"id": 832,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mulDiv_1539": {
									"entryPoint": 8707,
									"id": 1539,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@oracleNAV_1082": {
									"entryPoint": 5031,
									"id": 1082,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@proxy_836": {
									"entryPoint": 5582,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@quoteIn_851": {
									"entryPoint": 4980,
									"id": 851,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFunds_1043": {
									"entryPoint": 3146,
									"id": 1043,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateNAV_930": {
									"entryPoint": 995,
									"id": 930,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@updateProxy_1311": {
									"entryPoint": 4201,
									"id": 1311,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_int56_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 11834,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint160_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 12073,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 9399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 9721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_int56_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 11939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint160_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 12178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 10208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int56_fromMemory": {
									"entryPoint": 11813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint160_fromMemory": {
									"entryPoint": 12052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 9218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 10078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 10457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 9742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_int56_$dyn_memory_ptrt_array$_t_uint160_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 12224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 10229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 9239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 10099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 10478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint32_to_t_uint32": {
									"entryPoint": 11465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint32_$dyn_memory_ptr_to_t_array$_t_uint32_$dyn_memory_ptr_fromStack": {
									"entryPoint": 11502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 9583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint32_to_t_uint32": {
									"entryPoint": 11450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 9679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10144,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint32_$dyn_memory_ptr__to_t_array$_t_uint32_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 11596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9625,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 9694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 11701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 9165,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_int56_$dyn_memory_ptr": {
									"entryPoint": 11728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint160_$dyn_memory_ptr": {
									"entryPoint": 11985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint32_$dyn_memory_ptr": {
									"entryPoint": 11418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint32_$dyn_memory_ptr": {
									"entryPoint": 11390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint32_$dyn_memory_ptr": {
									"entryPoint": 11489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint32_$dyn_memory_ptr_fromStack": {
									"entryPoint": 11401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 11218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 11132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_int56": {
									"entryPoint": 12519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint192": {
									"entryPoint": 12877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 10536,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 10830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 10619,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint192": {
									"entryPoint": 12795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_int56": {
									"entryPoint": 12344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint160": {
									"entryPoint": 12467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 9358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 12674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 12926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int56": {
									"entryPoint": 11777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint192": {
									"entryPoint": 12759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 11434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 9666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 9908,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_int24": {
									"entryPoint": 12687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"decrement_t_uint8": {
									"entryPoint": 10346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 11652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 10274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 11001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_int56": {
									"entryPoint": 12625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 13188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"negate_t_int24": {
									"entryPoint": 13008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"negate_t_int256": {
									"entryPoint": 12936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9787,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10905,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 10387,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10031,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 11343,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 11630,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 11772,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 9180,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9175,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 11635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 10523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb": {
									"entryPoint": 11235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc": {
									"entryPoint": 13080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int56": {
									"entryPoint": 11790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint160": {
									"entryPoint": 12029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 10434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:25375:17",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:17"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:17",
														"type": ""
													}
												],
												"src": "7:75:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:17"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:17"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:17",
														"type": ""
													}
												],
												"src": "334:77:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:17"
															},
															"nodeType": "YulIf",
															"src": "470:63:17"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:17",
														"type": ""
													}
												],
												"src": "417:122:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:17"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:17",
														"type": ""
													}
												],
												"src": "545:139:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:17"
															},
															"nodeType": "YulIf",
															"src": "766:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:17",
														"type": ""
													}
												],
												"src": "690:329:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:17"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:17",
														"type": ""
													}
												],
												"src": "1025:118:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:17",
														"type": ""
													}
												],
												"src": "1149:222:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:17",
														"type": ""
													}
												],
												"src": "1377:126:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:17",
														"type": ""
													}
												],
												"src": "1509:96:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:17"
															},
															"nodeType": "YulIf",
															"src": "1664:63:17"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:17",
														"type": ""
													}
												],
												"src": "1611:122:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:17"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:17",
														"type": ""
													}
												],
												"src": "1739:139:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1950:263:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1996:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:32:17"
															},
															"nodeType": "YulIf",
															"src": "1960:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "2089:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2133:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1920:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1931:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1943:6:17",
														"type": ""
													}
												],
												"src": "1884:329:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2284:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2301:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2324:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2306:17:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2294:37:17"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2272:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2279:3:17",
														"type": ""
													}
												],
												"src": "2219:118:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2441:124:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2451:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2463:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2474:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2459:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2459:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2451:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2531:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2544:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2555:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2540:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2540:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2487:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2487:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2487:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2413:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2425:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2436:4:17",
														"type": ""
													}
												],
												"src": "2343:222:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2654:391:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2700:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2702:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2702:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2702:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2675:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2684:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2671:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2671:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2696:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2667:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:32:17"
															},
															"nodeType": "YulIf",
															"src": "2664:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "2793:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2808:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2822:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2812:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2837:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2872:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2883:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2868:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2868:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2892:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2847:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2847:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2837:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2920:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2935:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2949:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2939:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2965:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3000:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3011:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2996:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2996:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3020:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2975:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2975:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2965:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2616:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2627:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2639:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2647:6:17",
														"type": ""
													}
												],
												"src": "2571:474:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3093:48:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3103:32:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3128:5:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3121:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3121:13:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3114:21:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3103:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3075:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3085:7:17",
														"type": ""
													}
												],
												"src": "3051:90:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3206:50:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3223:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3243:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3228:14:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3228:21:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3216:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3216:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3216:34:17"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3194:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3201:3:17",
														"type": ""
													}
												],
												"src": "3147:109:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3354:118:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3364:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3376:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3387:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3372:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3372:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3364:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3438:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3451:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3462:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3447:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3447:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3400:37:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3400:65:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3400:65:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3326:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3338:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3349:4:17",
														"type": ""
													}
												],
												"src": "3262:210:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3604:206:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3614:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3626:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3637:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3622:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3622:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3614:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3694:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3707:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3718:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3703:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3703:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3650:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3650:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3650:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3775:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3788:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3799:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3784:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3784:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3731:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3731:72:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3731:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3568:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3580:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3588:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3599:4:17",
														"type": ""
													}
												],
												"src": "3478:332:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3859:43:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3869:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3884:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3891:4:17",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3880:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3880:16:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3869:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3841:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3851:7:17",
														"type": ""
													}
												],
												"src": "3816:86:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3969:51:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3986:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4007:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "3991:15:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3991:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3979:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3979:35:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3979:35:17"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3957:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3964:3:17",
														"type": ""
													}
												],
												"src": "3908:112:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4120:120:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4130:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4142:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4153:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4138:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4138:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4130:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4206:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4219:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4230:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4215:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4215:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4166:39:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4166:67:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4166:67:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4092:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4104:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4115:4:17",
														"type": ""
													}
												],
												"src": "4026:214:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4309:80:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4319:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4334:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4328:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4328:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4319:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4377:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4350:26:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4350:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4350:33:17"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4287:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4295:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4303:5:17",
														"type": ""
													}
												],
												"src": "4246:143:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4472:274:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4518:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4520:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4520:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4520:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4493:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4502:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4489:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4489:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4514:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4485:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4485:32:17"
															},
															"nodeType": "YulIf",
															"src": "4482:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "4611:128:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4626:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4640:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4630:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4655:74:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4701:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4712:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4697:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4697:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4721:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4665:31:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4665:64:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4655:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4442:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4453:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4465:6:17",
														"type": ""
													}
												],
												"src": "4395:351:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4780:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4797:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4800:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4790:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4790:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4790:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4894:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4897:4:17",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4887:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4887:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4887:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4918:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4921:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4911:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4911:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4911:15:17"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4752:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4983:146:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4993:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5016:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4998:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4998:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4993:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5027:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5050:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5032:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5032:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5027:1:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5074:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5076:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5076:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5076:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5068:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5071:1:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5065:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5065:8:17"
															},
															"nodeType": "YulIf",
															"src": "5062:34:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5106:17:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5118:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5121:1:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5114:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5114:9:17"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5106:4:17"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4969:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4972:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4978:4:17",
														"type": ""
													}
												],
												"src": "4938:191:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5193:40:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5204:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5220:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5214:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5214:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5204:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5176:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5186:6:17",
														"type": ""
													}
												],
												"src": "5135:98:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5352:34:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5362:18:17",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5377:3:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5362:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5324:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5329:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5340:11:17",
														"type": ""
													}
												],
												"src": "5239:147:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5441:258:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5451:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5460:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5455:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5520:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5545:3:17"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5550:1:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5541:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5541:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "5564:3:17"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5569:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5560:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5560:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5554:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5554:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5534:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5534:39:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5534:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5481:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5484:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5478:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5478:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5492:19:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5494:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5503:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5506:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5499:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5499:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5494:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5474:3:17",
																"statements": []
															},
															"src": "5470:113:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5617:76:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5667:3:17"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "5672:6:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5663:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5663:16:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5681:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5656:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5656:27:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5656:27:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5598:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5601:6:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5595:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5595:13:17"
															},
															"nodeType": "YulIf",
															"src": "5592:101:17"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5423:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "5428:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5433:6:17",
														"type": ""
													}
												],
												"src": "5392:307:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5813:265:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5823:52:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5869:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5837:31:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5837:38:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5827:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5884:95:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5967:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5972:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5891:75:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5891:88:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5884:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6014:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6021:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6010:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6010:16:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6028:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6033:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5988:21:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5988:52:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5988:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6049:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6060:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6065:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6056:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6056:16:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6049:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5794:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5801:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5809:3:17",
														"type": ""
													}
												],
												"src": "5705:373:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6218:137:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6229:100:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6316:6:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6325:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6236:79:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6236:93:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6229:3:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6339:10:17",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6346:3:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6339:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6197:3:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6203:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6214:3:17",
														"type": ""
													}
												],
												"src": "6084:271:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6389:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6406:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6409:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6399:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6399:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6399:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6503:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6506:4:17",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6496:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6496:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6496:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6527:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6530:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6520:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6520:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6520:15:17"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "6361:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6610:80:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6620:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6635:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6629:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6629:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6620:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6678:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6651:26:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6651:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6651:33:17"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6588:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6596:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6604:5:17",
														"type": ""
													}
												],
												"src": "6547:143:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6773:274:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6819:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6821:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6821:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6821:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6794:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6803:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6790:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6790:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6815:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6786:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6786:32:17"
															},
															"nodeType": "YulIf",
															"src": "6783:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "6912:128:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6927:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6941:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6931:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6956:74:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7002:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7013:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6998:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6998:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7022:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6966:31:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6966:64:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6956:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6743:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6754:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6766:6:17",
														"type": ""
													}
												],
												"src": "6696:351:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7179:206:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7189:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7201:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7212:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7197:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7197:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7189:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7269:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7282:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7293:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7278:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7278:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7225:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7225:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7225:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7350:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7363:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7374:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7359:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7359:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7306:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7306:72:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7306:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7143:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7155:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7163:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7174:4:17",
														"type": ""
													}
												],
												"src": "7053:332:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7431:76:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7485:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7494:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7497:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7487:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7487:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7487:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7454:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7476:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "7461:14:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7461:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7451:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7451:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7444:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7444:40:17"
															},
															"nodeType": "YulIf",
															"src": "7441:60:17"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7424:5:17",
														"type": ""
													}
												],
												"src": "7391:116:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7573:77:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7583:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7592:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7592:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7583:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7638:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "7614:23:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7614:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7614:30:17"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7551:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7559:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7567:5:17",
														"type": ""
													}
												],
												"src": "7513:137:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7730:271:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7776:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7778:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7778:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7778:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7751:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7760:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7747:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7747:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7772:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7743:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7743:32:17"
															},
															"nodeType": "YulIf",
															"src": "7740:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "7869:125:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7884:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7898:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7888:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7913:71:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7956:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7967:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7952:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7952:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7976:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7923:28:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7923:61:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7913:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7700:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7711:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7723:6:17",
														"type": ""
													}
												],
												"src": "7656:345:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8050:190:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8060:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8087:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8069:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8069:24:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8060:5:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8183:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8185:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8185:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8185:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8108:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8115:66:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8105:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8105:77:17"
															},
															"nodeType": "YulIf",
															"src": "8102:103:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8214:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8225:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8232:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8221:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8221:13:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "8214:3:17"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8036:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "8046:3:17",
														"type": ""
													}
												],
												"src": "8007:233:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8287:126:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8297:31:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8322:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "8306:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8306:22:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8297:5:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8356:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8358:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8358:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8358:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8343:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8350:4:17",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8340:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8340:15:17"
															},
															"nodeType": "YulIf",
															"src": "8337:41:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8387:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8398:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8405:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8394:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8394:13:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "8387:3:17"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8273:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "8283:3:17",
														"type": ""
													}
												],
												"src": "8246:167:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8447:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8464:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8467:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8457:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8457:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8457:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8561:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8564:4:17",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8554:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8554:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8554:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8585:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8588:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8578:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8578:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8578:15:17"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "8419:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8646:77:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8701:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8710:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8713:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8703:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8703:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8703:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8669:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8692:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "8676:15:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8676:22:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8666:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8666:33:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8659:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8659:41:17"
															},
															"nodeType": "YulIf",
															"src": "8656:61:17"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8639:5:17",
														"type": ""
													}
												],
												"src": "8605:118:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8790:78:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8800:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8815:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8809:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8809:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8800:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8856:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "8831:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8831:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8831:31:17"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8768:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8776:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8784:5:17",
														"type": ""
													}
												],
												"src": "8729:139:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8949:272:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8995:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8997:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8997:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8970:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8979:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8966:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8966:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8991:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8962:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8962:32:17"
															},
															"nodeType": "YulIf",
															"src": "8959:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "9088:126:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9103:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9117:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9107:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9132:72:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9176:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9187:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9172:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9172:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9196:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9142:29:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9142:62:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9132:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8919:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8930:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8942:6:17",
														"type": ""
													}
												],
												"src": "8874:347:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9278:51:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9288:34:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9313:1:17",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9316:5:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "9309:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9309:13:17"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "9288:8:17"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9259:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "9269:8:17",
														"type": ""
													}
												],
												"src": "9227:102:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9408:775:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9418:15:17",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "9427:6:17"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "9418:5:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9442:14:17",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "9451:5:17"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "9442:4:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9500:677:17",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "9588:22:17",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "9590:16:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9590:18:17"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "9590:18:17"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "9566:4:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "9576:3:17"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "9581:4:17"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "9572:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9572:14:17"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "9563:2:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9563:24:17"
																		},
																		"nodeType": "YulIf",
																		"src": "9560:50:17"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "9655:419:17",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "10035:25:17",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "10048:5:17"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "10055:4:17"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "10044:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10044:16:17"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "10035:5:17"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "9630:8:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9640:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "9626:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9626:16:17"
																		},
																		"nodeType": "YulIf",
																		"src": "9623:451:17"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10087:23:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "10099:4:17"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "10105:4:17"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "10095:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10095:15:17"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "10087:4:17"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10123:44:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "10158:8:17"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "10135:22:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10135:32:17"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "10123:8:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "9476:8:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9486:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9473:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9473:15:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9489:2:17",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9469:3:17",
																"statements": []
															},
															"src": "9465:712:17"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "9363:6:17",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "9371:5:17",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "9378:8:17",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "9388:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "9396:5:17",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "9403:4:17",
														"type": ""
													}
												],
												"src": "9335:848:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10249:1013:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10444:20:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10446:10:17",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10455:1:17",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "10446:5:17"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "10457:5:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "10434:8:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10427:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10427:16:17"
															},
															"nodeType": "YulIf",
															"src": "10424:40:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10489:20:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10491:10:17",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10500:1:17",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "10491:5:17"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "10502:5:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "10483:4:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10476:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10476:12:17"
															},
															"nodeType": "YulIf",
															"src": "10473:36:17"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10619:20:17",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "10621:10:17",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10630:1:17",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "10621:5:17"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "10632:5:17"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "10612:27:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10617:1:17",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10663:176:17",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10698:22:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "10700:16:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10700:18:17"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "10700:18:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "10683:8:17"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10693:3:17",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "10680:2:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10680:17:17"
																				},
																				"nodeType": "YulIf",
																				"src": "10677:43:17"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "10733:25:17",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10746:1:17",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "10749:8:17"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "10742:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10742:16:17"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "10733:5:17"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10789:22:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "10791:16:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10791:18:17"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "10791:18:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "10777:5:17"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "10784:3:17"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "10774:2:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10774:14:17"
																				},
																				"nodeType": "YulIf",
																				"src": "10771:40:17"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "10824:5:17"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "10648:191:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10653:1:17",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "10569:4:17"
															},
															"nodeType": "YulSwitch",
															"src": "10562:277:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10971:123:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10985:28:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "10998:4:17"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "11004:8:17"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "10994:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10994:19:17"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "10985:5:17"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "11044:22:17",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "11046:16:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11046:18:17"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "11046:18:17"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "11032:5:17"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "11039:3:17"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "11029:2:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11029:14:17"
																		},
																		"nodeType": "YulIf",
																		"src": "11026:40:17"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "11079:5:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "10874:4:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10880:2:17",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "10871:2:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10871:12:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "10888:8:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10898:2:17",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "10885:2:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10885:16:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10867:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10867:35:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "10923:4:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10929:3:17",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "10920:2:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10920:13:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "10938:8:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10948:2:17",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "10935:2:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10935:16:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10916:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10916:36:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "10851:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10851:111:17"
															},
															"nodeType": "YulIf",
															"src": "10848:246:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11104:57:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11138:1:17",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "11141:4:17"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "11147:8:17"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "11157:3:17"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "11119:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11119:42:17"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "11104:5:17"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "11111:4:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11200:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11202:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11202:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11202:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "11177:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "11188:3:17"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "11193:4:17"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "11184:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11184:14:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11174:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11174:25:17"
															},
															"nodeType": "YulIf",
															"src": "11171:51:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11231:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "11244:5:17"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "11251:4:17"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11240:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11240:16:17"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "11231:5:17"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "10219:4:17",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "10225:8:17",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "10235:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "10243:5:17",
														"type": ""
													}
												],
												"src": "10189:1073:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11334:219:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11344:31:17",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "11370:4:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11352:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11352:23:17"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "11344:4:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11384:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "11414:8:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11396:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11396:27:17"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "11384:8:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11433:113:17",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "11463:4:17"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "11469:8:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11479:66:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "11442:20:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11442:104:17"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "11433:5:17"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "11309:4:17",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "11315:8:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "11328:5:17",
														"type": ""
													}
												],
												"src": "11268:285:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11587:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11604:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11607:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11597:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11597:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11597:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11701:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11704:4:17",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11694:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11694:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11694:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11725:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11728:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11718:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11718:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11718:15:17"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11559:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11787:143:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11797:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11820:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11802:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11802:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11797:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11831:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11854:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11836:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11836:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11831:1:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11878:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11880:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11880:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11880:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11875:1:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11868:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11868:9:17"
															},
															"nodeType": "YulIf",
															"src": "11865:35:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11910:14:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11919:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11922:1:17"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11915:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11915:9:17"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11910:1:17"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11776:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11779:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11785:1:17",
														"type": ""
													}
												],
												"src": "11745:185:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11977:126:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11987:31:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12012:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "11996:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11996:22:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11987:5:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12046:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12048:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12048:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12048:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12033:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12040:4:17",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12030:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12030:15:17"
															},
															"nodeType": "YulIf",
															"src": "12027:41:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12077:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12088:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12095:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12084:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12084:13:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12077:3:17"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11963:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11973:3:17",
														"type": ""
													}
												],
												"src": "11936:167:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12157:300:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12167:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12190:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12172:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12172:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12167:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12201:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12224:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12206:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12206:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12201:1:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12399:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12401:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12401:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12401:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12311:1:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12304:6:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12304:9:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12297:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12297:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12319:1:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12326:66:17",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12394:1:17"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "12322:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12322:74:17"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12316:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12316:81:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12293:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12293:105:17"
															},
															"nodeType": "YulIf",
															"src": "12290:131:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12431:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12446:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12449:1:17"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12442:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12442:9:17"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12431:7:17"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12140:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12143:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12149:7:17",
														"type": ""
													}
												],
												"src": "12109:348:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12507:261:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12517:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12540:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12522:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12522:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12517:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12551:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12574:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12556:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12556:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12551:1:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12714:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12716:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12716:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12716:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12635:1:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12642:66:17",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12710:1:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12638:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12638:74:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12632:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12632:81:17"
															},
															"nodeType": "YulIf",
															"src": "12629:107:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12746:16:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12757:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12760:1:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12753:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12753:9:17"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12746:3:17"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12494:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12497:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12503:3:17",
														"type": ""
													}
												],
												"src": "12463:305:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12870:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12887:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12892:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12880:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12880:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12880:19:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12908:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12927:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12932:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12923:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12923:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12908:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12842:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12847:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12858:11:17",
														"type": ""
													}
												],
												"src": "12774:169:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13055:46:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13077:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13085:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13073:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13073:14:17"
																	},
																	{
																		"hexValue": "4250",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13089:4:17",
																		"type": "",
																		"value": "BP"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13066:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13066:28:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13066:28:17"
														}
													]
												},
												"name": "store_literal_in_memory_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13047:6:17",
														"type": ""
													}
												],
												"src": "12949:152:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13253:219:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13263:73:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13329:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13334:1:17",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13270:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13270:66:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13263:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13434:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb",
																	"nodeType": "YulIdentifier",
																	"src": "13345:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13345:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13345:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13447:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13458:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13463:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13454:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13454:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13447:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13241:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13249:3:17",
														"type": ""
													}
												],
												"src": "13107:365:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13649:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13659:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13671:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13682:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13667:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13667:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13659:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13706:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13717:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13702:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13702:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13725:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13731:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13721:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13721:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13695:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13695:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13695:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13751:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13885:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13759:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13759:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13751:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13629:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13644:4:17",
														"type": ""
													}
												],
												"src": "13478:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13931:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13948:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13951:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13941:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13941:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13941:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14045:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14048:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14038:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14038:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14038:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14069:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14072:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14062:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14062:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14062:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "13903:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14162:40:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14173:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14189:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14183:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14183:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14173:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint32_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14145:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14155:6:17",
														"type": ""
													}
												],
												"src": "14089:113:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14318:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14335:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14340:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14328:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14328:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14328:19:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14356:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14375:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14380:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14371:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14371:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "14356:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint32_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14290:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14295:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "14306:11:17",
														"type": ""
													}
												],
												"src": "14208:183:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14468:60:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14478:11:17",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "14486:3:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "14478:4:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14499:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "14511:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14516:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14507:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14507:14:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "14499:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint32_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "14455:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14463:4:17",
														"type": ""
													}
												],
												"src": "14397:131:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14578:49:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14588:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14603:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14610:10:17",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14599:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14599:22:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14588:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14560:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14570:7:17",
														"type": ""
													}
												],
												"src": "14534:93:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14686:52:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14703:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14725:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "14708:16:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14708:23:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14696:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14696:36:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14696:36:17"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14674:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14681:3:17",
														"type": ""
													}
												],
												"src": "14633:105:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14822:97:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14864:6:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14872:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "14832:31:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14832:44:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14832:44:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14885:28:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14903:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14908:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14899:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14899:14:17"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "14885:10:17"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint32_to_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14795:6:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14803:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "14811:10:17",
														"type": ""
													}
												],
												"src": "14744:175:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14999:38:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15009:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "15021:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15026:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15017:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15017:14:17"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "15009:4:17"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint32_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "14986:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "14994:4:17",
														"type": ""
													}
												],
												"src": "14925:112:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15193:602:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15203:67:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15264:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint32_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15217:46:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15217:53:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15207:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15279:92:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15359:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15364:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint32_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15286:72:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15286:85:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15279:3:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15380:70:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15444:5:17"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint32_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15395:48:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15395:55:17"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "15384:7:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15459:21:17",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "15473:7:17"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "15463:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15549:221:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "15563:34:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "15590:6:17"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "15584:5:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15584:13:17"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "15567:13:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15610:68:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "15659:13:17"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "15674:3:17"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint32_to_t_uint32",
																				"nodeType": "YulIdentifier",
																				"src": "15617:41:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15617:61:17"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "15610:3:17"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15691:69:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "15753:6:17"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint32_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "15701:51:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15701:59:17"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15691:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15511:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15514:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15508:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15508:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "15522:18:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15524:14:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "15533:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15536:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15529:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15529:9:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "15524:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "15493:14:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "15495:10:17",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "15504:1:17",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "15499:1:17",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "15489:281:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15779:10:17",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "15786:3:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15779:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint32_$dyn_memory_ptr_to_t_array$_t_uint32_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15172:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15179:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15188:3:17",
														"type": ""
													}
												],
												"src": "15071:724:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15947:223:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15957:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15969:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15980:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15965:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15965:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15957:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16004:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16015:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16000:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16000:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16023:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16029:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16019:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16019:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15993:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15993:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15993:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16049:114:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16149:6:17"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16158:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint32_$dyn_memory_ptr_to_t_array$_t_uint32_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16057:91:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16057:106:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16049:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint32_$dyn_memory_ptr__to_t_array$_t_uint32_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15919:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15931:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15942:4:17",
														"type": ""
													}
												],
												"src": "15801:369:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16265:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16282:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16285:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16275:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16275:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16275:12:17"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "16176:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16347:54:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16357:38:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16375:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16382:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16371:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16371:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16391:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "16387:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16387:7:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16367:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16367:28:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "16357:6:17"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16330:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "16340:6:17",
														"type": ""
													}
												],
												"src": "16299:102:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16450:238:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16460:58:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "16482:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "16512:4:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "16490:21:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16490:27:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16478:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16478:40:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "16464:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16629:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "16631:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16631:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16631:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "16572:10:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16584:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16569:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16569:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "16608:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16620:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "16605:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16605:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "16566:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16566:62:17"
															},
															"nodeType": "YulIf",
															"src": "16563:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16667:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "16671:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16660:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16660:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16660:22:17"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16436:6:17",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "16444:4:17",
														"type": ""
													}
												],
												"src": "16407:281:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16735:88:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16745:30:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "16755:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16755:20:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "16745:6:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "16804:6:17"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "16812:4:17"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "16784:19:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16784:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16784:33:17"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "16719:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16728:6:17",
														"type": ""
													}
												],
												"src": "16694:129:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16909:229:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17014:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "17016:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17016:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17016:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16986:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16994:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16983:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16983:30:17"
															},
															"nodeType": "YulIf",
															"src": "16980:56:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17046:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17058:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17066:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "17054:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17054:17:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "17046:4:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17108:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "17120:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17126:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17116:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17116:15:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "17108:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_int56_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16893:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "16904:4:17",
														"type": ""
													}
												],
												"src": "16829:309:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17233:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17250:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17253:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17243:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17243:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17243:12:17"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "17144:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17310:47:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17320:31:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17342:1:17",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17345:5:17"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nodeType": "YulIdentifier",
																	"src": "17331:10:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17331:20:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "17320:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int56",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17292:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "17302:7:17",
														"type": ""
													}
												],
												"src": "17267:90:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17404:77:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17459:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17468:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17471:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17461:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17461:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17461:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17427:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17450:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int56",
																					"nodeType": "YulIdentifier",
																					"src": "17434:15:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17434:22:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17424:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17424:33:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17417:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17417:41:17"
															},
															"nodeType": "YulIf",
															"src": "17414:61:17"
														}
													]
												},
												"name": "validator_revert_t_int56",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17397:5:17",
														"type": ""
													}
												],
												"src": "17363:118:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17548:78:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17558:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "17573:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17567:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17567:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17558:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17614:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int56",
																	"nodeType": "YulIdentifier",
																	"src": "17589:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17589:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17589:31:17"
														}
													]
												},
												"name": "abi_decode_t_int56_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "17526:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17534:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17542:5:17",
														"type": ""
													}
												],
												"src": "17487:139:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17758:615:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17768:88:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "17848:6:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_int56_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "17793:54:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17793:62:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "17777:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17777:79:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "17768:5:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17865:16:17",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "17876:5:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "17869:3:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "17898:5:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17905:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17891:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17891:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17891:21:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17921:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "17932:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17939:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17928:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17928:16:17"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "17921:3:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17954:44:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "17972:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "17984:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17992:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "17980:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17980:17:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17968:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17968:30:17"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "17958:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18026:103:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "18040:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18040:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18040:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "18013:6:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "18021:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18010:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18010:15:17"
															},
															"nodeType": "YulIf",
															"src": "18007:122:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18214:153:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "18229:21:17",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "18247:3:17"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "18233:10:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "18271:3:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "18306:10:17"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "18318:3:17"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_int56_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "18276:29:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18276:46:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "18264:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18264:59:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18264:59:17"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "18336:21:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "18347:3:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18352:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "18343:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18343:14:17"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "18336:3:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "18167:3:17"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "18172:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "18164:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18164:15:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "18180:25:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18182:21:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "18193:3:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18198:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "18189:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18189:14:17"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "18182:3:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "18142:21:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "18144:17:17",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "18155:6:17"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "18148:3:17",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "18138:229:17"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_int56_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "17728:6:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17736:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17744:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "17752:5:17",
														"type": ""
													}
												],
												"src": "17647:726:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18480:295:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18529:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "18531:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18531:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18531:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18508:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18516:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18504:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18504:17:17"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "18523:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "18500:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18500:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18493:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18493:35:17"
															},
															"nodeType": "YulIf",
															"src": "18490:122:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18621:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "18641:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18635:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18635:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "18625:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18657:112:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "18742:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18750:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18738:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18738:17:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18757:6:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "18765:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_int56_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "18666:71:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18666:103:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "18657:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_int56_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "18458:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18466:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "18474:5:17",
														"type": ""
													}
												],
												"src": "18394:381:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18863:229:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18968:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "18970:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18970:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18970:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18940:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18948:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18937:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18937:30:17"
															},
															"nodeType": "YulIf",
															"src": "18934:56:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19000:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19012:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19020:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "19008:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19008:17:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "19000:4:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19062:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "19074:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19080:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19070:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19070:15:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "19062:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint160_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18847:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "18858:4:17",
														"type": ""
													}
												],
												"src": "18781:311:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19141:79:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19198:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19207:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19210:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19200:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19200:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19200:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19164:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19189:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "19171:17:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19171:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19161:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19161:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19154:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19154:43:17"
															},
															"nodeType": "YulIf",
															"src": "19151:63:17"
														}
													]
												},
												"name": "validator_revert_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19134:5:17",
														"type": ""
													}
												],
												"src": "19098:122:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19289:80:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19299:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "19314:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19308:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19308:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "19299:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19357:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "19330:26:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19330:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19330:33:17"
														}
													]
												},
												"name": "abi_decode_t_uint160_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "19267:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19275:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19283:5:17",
														"type": ""
													}
												],
												"src": "19226:143:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19505:619:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19515:90:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "19597:6:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint160_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "19540:56:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19540:64:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "19524:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19524:81:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "19515:5:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19614:16:17",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "19625:5:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "19618:3:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "19647:5:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19654:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19640:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19640:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19640:21:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19670:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "19681:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19688:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19677:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19677:16:17"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "19670:3:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19703:44:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "19721:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "19733:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19741:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "19729:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19729:17:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19717:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19717:30:17"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "19707:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19775:103:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "19789:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19789:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19789:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "19762:6:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "19770:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19759:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19759:15:17"
															},
															"nodeType": "YulIf",
															"src": "19756:122:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19963:155:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "19978:21:17",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "19996:3:17"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "19982:10:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "20020:3:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "20057:10:17"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "20069:3:17"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint160_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "20025:31:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20025:48:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "20013:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20013:61:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20013:61:17"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "20087:21:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "20098:3:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20103:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "20094:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20094:14:17"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "20087:3:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "19916:3:17"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "19921:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19913:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19913:15:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "19929:25:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "19931:21:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "19942:3:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19947:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "19938:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19938:14:17"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "19931:3:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "19891:21:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "19893:17:17",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "19904:6:17"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "19897:3:17",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "19887:231:17"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint160_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "19475:6:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19483:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19491:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "19499:5:17",
														"type": ""
													}
												],
												"src": "19392:732:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20235:297:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20284:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "20286:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20286:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20286:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20263:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20271:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20259:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20259:17:17"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "20278:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "20255:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20255:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20248:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20248:35:17"
															},
															"nodeType": "YulIf",
															"src": "20245:122:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20376:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "20396:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20390:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20390:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "20380:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20412:114:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "20499:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20507:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20495:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20495:17:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20514:6:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "20522:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint160_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "20421:73:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20421:105:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "20412:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint160_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "20213:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20221:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "20229:5:17",
														"type": ""
													}
												],
												"src": "20147:385:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20680:767:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20726:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "20728:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20728:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20728:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20701:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20710:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20697:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20697:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20722:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "20693:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20693:32:17"
															},
															"nodeType": "YulIf",
															"src": "20690:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "20819:304:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20834:38:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20858:9:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20869:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20854:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20854:17:17"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "20848:5:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20848:24:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20838:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "20919:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "20921:77:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20921:79:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "20921:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "20891:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20899:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "20888:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20888:30:17"
																	},
																	"nodeType": "YulIf",
																	"src": "20885:117:17"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21016:97:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21085:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21096:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21081:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21081:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21105:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_int56_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "21026:54:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21026:87:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "21016:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "21133:307:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21148:39:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21172:9:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "21183:2:17",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21168:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21168:18:17"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "21162:5:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21162:25:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "21152:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "21234:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "21236:77:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21236:79:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "21236:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "21206:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21214:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "21203:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21203:30:17"
																	},
																	"nodeType": "YulIf",
																	"src": "21200:117:17"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21331:99:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21402:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21413:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21398:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21398:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21422:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint160_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "21341:56:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21341:89:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "21331:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_int56_$dyn_memory_ptrt_array$_t_uint160_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20642:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "20653:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20665:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20673:6:17",
														"type": ""
													}
												],
												"src": "20538:909:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21496:431:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21506:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21527:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int56",
																	"nodeType": "YulIdentifier",
																	"src": "21511:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21511:18:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "21506:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21538:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21559:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int56",
																	"nodeType": "YulIdentifier",
																	"src": "21543:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21543:18:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "21538:1:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21736:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "21738:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21738:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21738:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "21644:1:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "21647:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "21640:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21640:9:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "21633:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21633:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "21656:1:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "21663:66:17",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "21731:1:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21659:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21659:74:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "21652:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21652:82:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21629:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21629:106:17"
															},
															"nodeType": "YulIf",
															"src": "21626:132:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21872:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "21874:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21874:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21874:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "21831:1:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21834:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "21827:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21827:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "21842:1:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "21849:16:17",
																						"type": "",
																						"value": "0x7fffffffffffff"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "21867:1:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21845:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21845:24:17"
																			}
																		],
																		"functionName": {
																			"name": "sgt",
																			"nodeType": "YulIdentifier",
																			"src": "21838:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21838:32:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21823:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21823:48:17"
															},
															"nodeType": "YulIf",
															"src": "21820:74:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21904:17:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21916:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21919:1:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "21912:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21912:9:17"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "21904:4:17"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_int56",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "21482:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "21485:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "21491:4:17",
														"type": ""
													}
												],
												"src": "21453:474:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21978:146:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21988:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22011:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "21993:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21993:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "21988:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22022:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22045:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "22027:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22027:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "22022:1:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22069:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "22071:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22071:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22071:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22063:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22066:1:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "22060:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22060:8:17"
															},
															"nodeType": "YulIf",
															"src": "22057:34:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22101:17:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22113:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22116:1:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "22109:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22109:9:17"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "22101:4:17"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "21964:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "21967:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "21973:4:17",
														"type": ""
													}
												],
												"src": "21933:191:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22170:342:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22180:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22201:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int56",
																	"nodeType": "YulIdentifier",
																	"src": "22185:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22185:18:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "22180:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22212:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22233:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int56",
																	"nodeType": "YulIdentifier",
																	"src": "22217:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22217:18:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "22212:1:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22257:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "22259:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22259:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22259:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22254:1:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22247:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22247:9:17"
															},
															"nodeType": "YulIf",
															"src": "22244:35:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22459:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "22461:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22461:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22461:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "22348:1:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22351:66:17",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "22345:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22345:73:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "22435:1:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "22442:1:17",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "22445:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "22438:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22438:9:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "22432:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22432:16:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "22328:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22328:130:17"
															},
															"nodeType": "YulIf",
															"src": "22325:156:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22491:15:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22501:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22504:1:17"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nodeType": "YulIdentifier",
																	"src": "22496:4:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22496:10:17"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "22491:1:17"
																}
															]
														}
													]
												},
												"name": "checked_div_t_int56",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22159:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22162:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "22168:1:17",
														"type": ""
													}
												],
												"src": "22130:382:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22550:139:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22560:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22581:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int56",
																	"nodeType": "YulIdentifier",
																	"src": "22565:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22565:18:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "22560:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22592:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22613:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int56",
																	"nodeType": "YulIdentifier",
																	"src": "22597:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22597:18:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "22592:1:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22637:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "22639:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22639:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22639:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22634:1:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22627:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22627:9:17"
															},
															"nodeType": "YulIf",
															"src": "22624:35:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22668:15:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22678:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22681:1:17"
																	}
																],
																"functionName": {
																	"name": "smod",
																	"nodeType": "YulIdentifier",
																	"src": "22673:4:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22673:10:17"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "22668:1:17"
																}
															]
														}
													]
												},
												"name": "mod_t_int56",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22539:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22542:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "22548:1:17",
														"type": ""
													}
												],
												"src": "22518:171:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22738:47:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22748:31:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22770:1:17",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22773:5:17"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nodeType": "YulIdentifier",
																	"src": "22759:10:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22759:20:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "22748:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22720:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "22730:7:17",
														"type": ""
													}
												],
												"src": "22695:90:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22832:188:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22842:31:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22867:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nodeType": "YulIdentifier",
																	"src": "22851:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22851:22:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "22842:5:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22963:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "22965:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22965:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22965:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22888:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22895:66:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "22885:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22885:77:17"
															},
															"nodeType": "YulIf",
															"src": "22882:103:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22994:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23005:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23012:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "23001:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23001:13:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "22994:3:17"
																}
															]
														}
													]
												},
												"name": "decrement_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22818:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "22828:3:17",
														"type": ""
													}
												],
												"src": "22791:229:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23071:89:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23081:73:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23096:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23103:50:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "23092:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23092:62:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "23081:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint192",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23053:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "23063:7:17",
														"type": ""
													}
												],
												"src": "23026:134:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23214:284:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23224:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23247:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint192",
																	"nodeType": "YulIdentifier",
																	"src": "23229:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23229:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "23224:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23258:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "23281:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint192",
																	"nodeType": "YulIdentifier",
																	"src": "23263:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23263:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "23258:1:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23440:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "23442:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23442:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23442:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "23368:1:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "23361:6:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23361:9:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "23354:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23354:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "23376:1:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "23383:50:17",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "23435:1:17"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "23379:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23379:58:17"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "23373:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23373:65:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "23350:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23350:89:17"
															},
															"nodeType": "YulIf",
															"src": "23347:115:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23472:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23487:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "23490:1:17"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "23483:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23483:9:17"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "23472:7:17"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint192",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "23197:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "23200:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "23206:7:17",
														"type": ""
													}
												],
												"src": "23166:332:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23546:143:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23556:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23579:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint192",
																	"nodeType": "YulIdentifier",
																	"src": "23561:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23561:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "23556:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23590:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "23613:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint192",
																	"nodeType": "YulIdentifier",
																	"src": "23595:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23595:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "23590:1:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23637:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "23639:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23639:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23639:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "23634:1:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "23627:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23627:9:17"
															},
															"nodeType": "YulIf",
															"src": "23624:35:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23669:14:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23678:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "23681:1:17"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "23674:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23674:9:17"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "23669:1:17"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint192",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "23535:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "23538:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "23544:1:17",
														"type": ""
													}
												],
												"src": "23504:185:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23739:32:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23749:16:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "23760:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "23749:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23721:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "23731:7:17",
														"type": ""
													}
												],
												"src": "23695:76:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23816:189:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23826:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23852:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "23835:16:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23835:23:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "23826:5:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23948:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "23950:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23950:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23950:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23873:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23880:66:17",
																		"type": "",
																		"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "23870:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23870:77:17"
															},
															"nodeType": "YulIf",
															"src": "23867:103:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23979:20:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23990:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23993:5:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "23986:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23986:13:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "23979:3:17"
																}
															]
														}
													]
												},
												"name": "negate_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23802:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "23812:3:17",
														"type": ""
													}
												],
												"src": "23777:228:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24049:188:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24059:31:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24084:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nodeType": "YulIdentifier",
																	"src": "24068:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24068:22:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "24059:5:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24180:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "24182:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24182:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24182:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24105:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24112:66:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "24102:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24102:77:17"
															},
															"nodeType": "YulIf",
															"src": "24099:103:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24211:20:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24222:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24225:5:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "24218:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24218:13:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "24211:3:17"
																}
															]
														}
													]
												},
												"name": "negate_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24035:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "24045:3:17",
														"type": ""
													}
												],
												"src": "24011:226:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24349:45:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24371:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24379:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24367:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24367:14:17"
																	},
																	{
																		"hexValue": "54",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24383:3:17",
																		"type": "",
																		"value": "T"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24360:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24360:27:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24360:27:17"
														}
													]
												},
												"name": "store_literal_in_memory_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24341:6:17",
														"type": ""
													}
												],
												"src": "24243:151:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24546:219:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24556:73:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24622:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24627:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24563:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24563:66:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24556:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24727:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																	"nodeType": "YulIdentifier",
																	"src": "24638:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24638:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24638:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24740:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24751:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24756:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24747:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24747:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24740:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24534:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24542:3:17",
														"type": ""
													}
												],
												"src": "24400:365:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24942:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24952:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24964:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24975:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24960:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24960:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24952:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24999:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25010:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24995:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24995:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25018:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25024:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25014:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25014:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24988:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24988:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24988:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25044:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25178:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25052:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25052:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25044:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24922:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24937:4:17",
														"type": ""
													}
												],
												"src": "24771:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25230:142:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25240:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25263:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25245:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25245:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25240:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25274:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25297:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25279:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25279:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "25274:1:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25321:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "25323:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25323:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25323:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25318:1:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "25311:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25311:9:17"
															},
															"nodeType": "YulIf",
															"src": "25308:35:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25352:14:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25361:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25364:1:17"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "25357:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25357:9:17"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "25352:1:17"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25219:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25222:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "25228:1:17",
														"type": ""
													}
												],
												"src": "25196:176:17"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function decrement_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb(memPtr) {\n\n        mstore(add(memPtr, 0), \"BP\")\n\n    }\n\n    function abi_encode_t_stringliteral_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 2)\n        store_literal_in_memory_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_array$_t_uint32_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint32_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint32_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint32_to_t_uint32(value0, pos) -> updatedPos {\n        abi_encode_t_uint32_to_t_uint32(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint32_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint32[] -> uint32[]\n    function abi_encode_t_array$_t_uint32_$dyn_memory_ptr_to_t_array$_t_uint32_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint32_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint32_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint32_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint32_to_t_uint32(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint32_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint32_$dyn_memory_ptr__to_t_array$_t_uint32_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint32_$dyn_memory_ptr_to_t_array$_t_uint32_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_int56_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_int56(value) -> cleaned {\n        cleaned := signextend(6, value)\n    }\n\n    function validator_revert_t_int56(value) {\n        if iszero(eq(value, cleanup_t_int56(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int56_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int56(value)\n    }\n\n    // int56[]\n    function abi_decode_available_length_t_array$_t_int56_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_int56_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_int56_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // int56[]\n    function abi_decode_t_array$_t_int56_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_int56_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_uint160_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function validator_revert_t_uint160(value) {\n        if iszero(eq(value, cleanup_t_uint160(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint160_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint160(value)\n    }\n\n    // uint160[]\n    function abi_decode_available_length_t_array$_t_uint160_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint160_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint160_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint160[]\n    function abi_decode_t_array$_t_uint160_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint160_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_int56_$dyn_memory_ptrt_array$_t_uint160_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_int56_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint160_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_int56(x, y) -> diff {\n        x := cleanup_t_int56(x)\n        y := cleanup_t_int56(y)\n\n        // underflow, if y >= 0 and x < (minValue + y)\n        if and(iszero(slt(y, 0)), slt(x, add(0xffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000, y))) { panic_error_0x11() }\n        // overflow, if y < 0 and x > (maxValue + y)\n        if and(slt(y, 0), sgt(x, add(0x7fffffffffffff, y))) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_sub_t_uint160(x, y) -> diff {\n        x := cleanup_t_uint160(x)\n        y := cleanup_t_uint160(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_div_t_int56(x, y) -> r {\n        x := cleanup_t_int56(x)\n        y := cleanup_t_int56(y)\n        if iszero(y) { panic_error_0x12() }\n\n        // overflow for minVal / -1\n        if and(\n            eq(x, 0xffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000),\n            eq(y, sub(0, 1))\n        ) { panic_error_0x11() }\n\n        r := sdiv(x, y)\n    }\n\n    function mod_t_int56(x, y) -> r {\n        x := cleanup_t_int56(x)\n        y := cleanup_t_int56(y)\n        if iszero(y) { panic_error_0x12() }\n        r := smod(x, y)\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function decrement_t_int24(value) -> ret {\n        value := cleanup_t_int24(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function cleanup_t_uint192(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function checked_mul_t_uint192(x, y) -> product {\n        x := cleanup_t_uint192(x)\n        y := cleanup_t_uint192(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_div_t_uint192(x, y) -> r {\n        x := cleanup_t_uint192(x)\n        y := cleanup_t_uint192(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function negate_t_int256(value) -> ret {\n        value := cleanup_t_int256(value)\n        if eq(value, 0x8000000000000000000000000000000000000000000000000000000000000000) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n\n    function negate_t_int24(value) -> ret {\n        value := cleanup_t_int24(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n\n    function store_literal_in_memory_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc(memPtr) {\n\n        mstore(add(memPtr, 0), \"T\")\n\n    }\n\n    function abi_encode_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 1)\n        store_literal_in_memory_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"828": [
									{
										"length": 32,
										"start": 1283
									},
									{
										"length": 32,
										"start": 2119
									},
									{
										"length": 32,
										"start": 2176
									},
									{
										"length": 32,
										"start": 4361
									},
									{
										"length": 32,
										"start": 4768
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100ec5760003560e01c8063990dc9db1161008a578063d825bfff11610059578063d825bfff14610324578063def1a5e814610361578063ec5568891461038d578063fed0a20e146103b8576100f6565b8063990dc9db1461026c5780639e955149146102a9578063b4014879146102d2578063cf9d4afa146102fb576100f6565b80634051b9aa116100c65780634051b9aa1461019e57806352fd856b146101c757806363b48ee6146101f25780637d0f7a881461022f576100f6565b80630cb1982b146100fb5780630fbbfa3e146101385780632637a47714610175576100f6565b366100f657600080fd5b600080fd5b34801561010757600080fd5b50610122600480360381019061011d9190612417565b6103e3565b60405161012f9190612453565b60405180910390f35b34801561014457600080fd5b5061015f600480360381019061015a91906124cc565b6104ce565b60405161016c9190612508565b60405180910390f35b34801561018157600080fd5b5061019c600480360381019061019791906124cc565b610501565b005b3480156101aa57600080fd5b506101c560048036038101906101c091906124cc565b61087e565b005b3480156101d357600080fd5b506101dc610bed565b6040516101e99190612453565b60405180910390f35b3480156101fe57600080fd5b5061021960048036038101906102149190612417565b610bf3565b6040516102269190612508565b60405180910390f35b34801561023b57600080fd5b50610256600480360381019061025191906124cc565b610c32565b6040516102639190612453565b60405180910390f35b34801561027857600080fd5b50610293600480360381019061028e9190612523565b610c4a565b6040516102a0919061257e565b60405180910390f35b3480156102b557600080fd5b506102d060048036038101906102cb91906124cc565b611069565b005b3480156102de57600080fd5b506102f960048036038101906102f49190612523565b611107565b005b34801561030757600080fd5b50610322600480360381019061031d91906124cc565b61129e565b005b34801561033057600080fd5b5061034b600480360381019061034691906124cc565b611374565b6040516103589190612508565b60405180910390f35b34801561036d57600080fd5b506103766113a7565b604051610384929190612599565b60405180910390f35b34801561039957600080fd5b506103a26115ce565b6040516103af9190612508565b60405180910390f35b3480156103c457600080fd5b506103cd6115f4565b6040516103da91906125de565b60405180910390f35b6000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633f0a07976040518163ffffffff1660e01b8152600401602060405180830381865afa158015610452573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610476919061260e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104ad57600080fd5b816104b6611607565b6104c0919061266a565b905080600081905550919050565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461055957600080fd5b6000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663a6fa0b7b836040518263ffffffff1660e01b81526004016105b99190612508565b600060405180830381600087803b1580156105d357600080fd5b505af11580156105e7573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16816040516024016106139190612508565b6040516020818303038152906040527fcf9d4afa000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161069d9190612718565b600060405180830381855af49150503d80600081146106d8576040519150601f19603f3d011682016040523d82523d6000602084013e6106dd565b606091505b5050506000600280549050905060005b818110156108445760006002828154811061070b5761070a61272f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb868373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161078e9190612508565b602060405180830381865afa1580156107ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cf9190612773565b6040518363ffffffff1660e01b81526004016107ec9291906127a0565b6020604051808303816000875af115801561080b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082f91906127f5565b5050808061083c90612822565b9150506106ed565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16ff5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806109935750600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633f0a07976040518163ffffffff1660e01b8152600401602060405180830381865afa158015610940573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610964919061260e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61099c57600080fd5b6002600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610a1b5760018081819054906101000a900460ff1680929190610a019061286a565b91906101000a81548160ff021916908360ff160217905550505b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600280549050905060005b81811015610be8578273ffffffffffffffffffffffffffffffffffffffff1660028281548110610aa057610a9f61272f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610bd5576002600183610af5919061266a565b81548110610b0657610b0561272f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660028281548110610b4557610b4461272f565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002805480610b9f57610b9e612893565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555b8080610be090612822565b915050610a6d565b505050565b60005481565b60028181548110610c0357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090505481565b600080600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16633f0a07976040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce1919061260e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610db357508073ffffffffffffffffffffffffffffffffffffffff1663da8909e56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d84919061260e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610dbc57600080fd5b6000600280549050905060005b8181101561105c57600060028281548110610de757610de661272f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506002600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036110485760008173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ea8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecc91906128ee565b905060128160ff161015610f9f578173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8960128460ff16610f07919061266a565b600a610f139190612a4e565b60018054906101000a900460ff1660ff168b610f2f9190612ac8565b610f399190612ac8565b6040518363ffffffff1660e01b8152600401610f569291906127a0565b6020604051808303816000875af1158015610f75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9991906127f5565b50611046565b60128160ff1603611045578173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8960018054906101000a900460ff1660ff168a610fe39190612ac8565b6040518363ffffffff1660e01b81526004016110009291906127a0565b6020604051808303816000875af115801561101f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104391906127f5565b505b5b505b50808061105490612822565b915050610dc9565b5060019250505092915050565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110c357600080fd5b80600160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461115f57600080fd5b600081036111b1576001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611237565b60018103611236576002600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060018081819054906101000a900460ff168092919061121c90612af9565b91906101000a81548160ff021916908360ff160217905550505b5b6002829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112f657600080fd5b6000600160009054906101000a900460ff1660ff161461131557600080fd5b80600160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060006101000a81548160ff021916908360ff16021790555050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663da8909e56040518163ffffffff1660e01b8152600401602060405180830381865afa158015611419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143d919061260e565b73ffffffffffffffffffffffffffffffffffffffff1663d0b06f5d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611487573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ab9190612773565b90506000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663da8909e56040518163ffffffff1660e01b8152600401602060405180830381865afa15801561151c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611540919061260e565b73ffffffffffffffffffffffffffffffffffffffff16637f8483a46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561158a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ae9190612773565b9050806115b9611607565b6115c3919061266a565b829350935050509091565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900460ff1681565b600080600280549050905060005b81811015611855576000600282815481106116335761163261272f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161169b9190612508565b602060405180830381865afa1580156116b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116dc9190612773565b90506000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506001810361182757600080611797600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600061185a565b509050611805818587600560008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611b2a565b91505080836118149190612b22565b8761181f9190612b7c565b96505061183f565b6002810361183e57818661183b9190612b7c565b95505b5b505050808061184d90612822565b915050611615565b505090565b60008060008363ffffffff16036118a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161189d90612c2f565b60405180910390fd5b6000600267ffffffffffffffff8111156118c3576118c2612c4f565b5b6040519080825280602002602001820160405280156118f15781602001602082028036833780820191505090505b50905083816000815181106119095761190861272f565b5b602002602001019063ffffffff16908163ffffffff16815250506000816001815181106119395761193861272f565b5b602002602001019063ffffffff16908163ffffffff16815250506000808673ffffffffffffffffffffffffffffffffffffffff1663883bdbfd846040518263ffffffff1660e01b815260040161198f9190612d4c565b600060405180830381865afa1580156119ac573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906119d59190612fc0565b915091506000826000815181106119ef576119ee61272f565b5b602002602001015183600181518110611a0b57611a0a61272f565b5b6020026020010151611a1d9190613038565b9050600082600081518110611a3557611a3461272f565b5b602002602001015183600181518110611a5157611a5061272f565b5b6020026020010151611a6391906130b3565b90508760030b82611a7491906130e7565b965060008260060b128015611a9b575060008860030b83611a959190613151565b60060b14155b15611aaf578680611aab9061318f565b9750505b600073ffffffffffffffffffffffffffffffffffffffff80168963ffffffff16611ad991906131fb565b905060208273ffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16901b81611b1b919061324d565b96505050505050509250929050565b600080611b3686611d36565b90506fffffffffffffffffffffffffffffffff80168173ffffffffffffffffffffffffffffffffffffffff1611611c505760008173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16611ba19190612b22565b90508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610611c1157611c0c7801000000000000000000000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683612203565b611c48565b611c4781876fffffffffffffffffffffffffffffffff167801000000000000000000000000000000000000000000000000612203565b5b925050611d2d565b6000611c928273ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1668010000000000000000612203565b90508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610611cfa57611cf5700100000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683612203565b611d29565b611d2881876fffffffffffffffffffffffffffffffff16700100000000000000000000000000000000612203565b5b9250505b50949350505050565b60008060008360020b12611d4d578260020b611d5b565b8260020b611d5a90613288565b5b90507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618611d87906132d0565b62ffffff16811115611dce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc590613364565b60405180910390fd5b6000806001831603611df157700100000000000000000000000000000000611e03565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060006002831614611e465760806ffff97272373d413259a46990580e213a82611e419190612b22565b901c90505b60006004831614611e745760806ffff2e50f5f656932ef12357cf3c7fdcc82611e6f9190612b22565b901c90505b60006008831614611ea25760806fffe5caca7e10e4e61c3624eaa0941cd082611e9d9190612b22565b901c90505b60006010831614611ed05760806fffcb9843d60f6159c9db58835c92664482611ecb9190612b22565b901c90505b60006020831614611efe5760806fff973b41fa98c081472e6896dfb254c082611ef99190612b22565b901c90505b60006040831614611f2c5760806fff2ea16466c96a3843ec78b326b5286182611f279190612b22565b901c90505b60006080831614611f5a5760806ffe5dee046a99a2a811c461f1969c305382611f559190612b22565b901c90505b6000610100831614611f895760806ffcbe86c7900a88aedcffc83b479aa3a482611f849190612b22565b901c90505b6000610200831614611fb85760806ff987a7253ac413176f2b074cf7815e5482611fb39190612b22565b901c90505b6000610400831614611fe75760806ff3392b0822b70005940c7a398e4b70f382611fe29190612b22565b901c90505b60006108008316146120165760806fe7159475a2c29b7443b29c7fa6e889d9826120119190612b22565b901c90505b60006110008316146120455760806fd097f3bdfd2022b8845ad8f792aa5825826120409190612b22565b901c90505b60006120008316146120745760806fa9f746462d870fdf8a65dc1f90e061e58261206f9190612b22565b901c90505b60006140008316146120a35760806f70d869a156d2a1b890bb3df62baf32f78261209e9190612b22565b901c90505b60006180008316146120d25760806f31be135f97d08fd981231505542fcfa6826120cd9190612b22565b901c90505b6000620100008316146121025760806f09aa508b5b7a84e1c677de54f3e99bc9826120fd9190612b22565b901c90505b6000620200008316146121315760806e5d6af8dedb81196699c329225ee6048261212c9190612b22565b901c90505b60006204000083161461215f5760806d2216e584f5fa1ea926041bedfe988261215a9190612b22565b901c90505b60006208000083161461218b5760806b048a170391f7dc42444e8fa2826121869190612b22565b901c90505b60008460020b13156121c657807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6121c39190612ac8565b90505b6000640100000000826121d99190613384565b146121e55760016121e8565b60005b60ff16602082901c6121fa9190612b7c565b92505050919050565b600080600080198587098587029250828110838203039150506000810361223d576000841161223157600080fd5b838204925050506123c6565b80841161224957600080fd5b60008486880990508281118203915080830392506000856001877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61228e919061266a565b6122989190612b7c565b16905080860495508084049350600181826000030401905080836122bc9190612b22565b84179350600060028760036122d19190612b22565b18905080876122e09190612b22565b60026122ec919061266a565b816122f79190612b22565b905080876123059190612b22565b6002612311919061266a565b8161231c9190612b22565b9050808761232a9190612b22565b6002612336919061266a565b816123419190612b22565b9050808761234f9190612b22565b600261235b919061266a565b816123669190612b22565b905080876123749190612b22565b6002612380919061266a565b8161238b9190612b22565b905080876123999190612b22565b60026123a5919061266a565b816123b09190612b22565b905080856123be9190612b22565b955050505050505b9392505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6123f4816123e1565b81146123ff57600080fd5b50565b600081359050612411816123eb565b92915050565b60006020828403121561242d5761242c6123d7565b5b600061243b84828501612402565b91505092915050565b61244d816123e1565b82525050565b60006020820190506124686000830184612444565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006124998261246e565b9050919050565b6124a98161248e565b81146124b457600080fd5b50565b6000813590506124c6816124a0565b92915050565b6000602082840312156124e2576124e16123d7565b5b60006124f0848285016124b7565b91505092915050565b6125028161248e565b82525050565b600060208201905061251d60008301846124f9565b92915050565b6000806040838503121561253a576125396123d7565b5b6000612548858286016124b7565b925050602061255985828601612402565b9150509250929050565b60008115159050919050565b61257881612563565b82525050565b6000602082019050612593600083018461256f565b92915050565b60006040820190506125ae6000830185612444565b6125bb6020830184612444565b9392505050565b600060ff82169050919050565b6125d8816125c2565b82525050565b60006020820190506125f360008301846125cf565b92915050565b600081519050612608816124a0565b92915050565b600060208284031215612624576126236123d7565b5b6000612632848285016125f9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612675826123e1565b9150612680836123e1565b9250828210156126935761269261263b565b5b828203905092915050565b600081519050919050565b600081905092915050565b60005b838110156126d25780820151818401526020810190506126b7565b838111156126e1576000848401525b50505050565b60006126f28261269e565b6126fc81856126a9565b935061270c8185602086016126b4565b80840191505092915050565b600061272482846126e7565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008151905061276d816123eb565b92915050565b600060208284031215612789576127886123d7565b5b60006127978482850161275e565b91505092915050565b60006040820190506127b560008301856124f9565b6127c26020830184612444565b9392505050565b6127d281612563565b81146127dd57600080fd5b50565b6000815190506127ef816127c9565b92915050565b60006020828403121561280b5761280a6123d7565b5b6000612819848285016127e0565b91505092915050565b600061282d826123e1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361285f5761285e61263b565b5b600182019050919050565b6000612875826125c2565b9150600082036128885761288761263b565b5b600182039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6128cb816125c2565b81146128d657600080fd5b50565b6000815190506128e8816128c2565b92915050565b600060208284031215612904576129036123d7565b5b6000612912848285016128d9565b91505092915050565b60008160011c9050919050565b6000808291508390505b60018511156129725780860481111561294e5761294d61263b565b5b600185161561295d5780820291505b808102905061296b8561291b565b9450612932565b94509492505050565b60008261298b5760019050612a47565b816129995760009050612a47565b81600181146129af57600281146129b9576129e8565b6001915050612a47565b60ff8411156129cb576129ca61263b565b5b8360020a9150848211156129e2576129e161263b565b5b50612a47565b5060208310610133831016604e8410600b8410161715612a1d5782820a905083811115612a1857612a1761263b565b5b612a47565b612a2a8484846001612928565b92509050818404811115612a4157612a4061263b565b5b81810290505b9392505050565b6000612a59826123e1565b9150612a64836123e1565b9250612a917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461297b565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612ad3826123e1565b9150612ade836123e1565b925082612aee57612aed612a99565b5b828204905092915050565b6000612b04826125c2565b915060ff8203612b1757612b1661263b565b5b600182019050919050565b6000612b2d826123e1565b9150612b38836123e1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612b7157612b7061263b565b5b828202905092915050565b6000612b87826123e1565b9150612b92836123e1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612bc757612bc661263b565b5b828201905092915050565b600082825260208201905092915050565b7f4250000000000000000000000000000000000000000000000000000000000000600082015250565b6000612c19600283612bd2565b9150612c2482612be3565b602082019050919050565b60006020820190508181036000830152612c4881612c0c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600063ffffffff82169050919050565b612cc381612caa565b82525050565b6000612cd58383612cba565b60208301905092915050565b6000602082019050919050565b6000612cf982612c7e565b612d038185612c89565b9350612d0e83612c9a565b8060005b83811015612d3f578151612d268882612cc9565b9750612d3183612ce1565b925050600181019050612d12565b5085935050505092915050565b60006020820190508181036000830152612d668184612cee565b905092915050565b600080fd5b6000601f19601f8301169050919050565b612d8d82612d73565b810181811067ffffffffffffffff82111715612dac57612dab612c4f565b5b80604052505050565b6000612dbf6123cd565b9050612dcb8282612d84565b919050565b600067ffffffffffffffff821115612deb57612dea612c4f565b5b602082029050602081019050919050565b600080fd5b60008160060b9050919050565b612e1781612e01565b8114612e2257600080fd5b50565b600081519050612e3481612e0e565b92915050565b6000612e4d612e4884612dd0565b612db5565b90508083825260208201905060208402830185811115612e7057612e6f612dfc565b5b835b81811015612e995780612e858882612e25565b845260208401935050602081019050612e72565b5050509392505050565b600082601f830112612eb857612eb7612d6e565b5b8151612ec8848260208601612e3a565b91505092915050565b600067ffffffffffffffff821115612eec57612eeb612c4f565b5b602082029050602081019050919050565b612f068161246e565b8114612f1157600080fd5b50565b600081519050612f2381612efd565b92915050565b6000612f3c612f3784612ed1565b612db5565b90508083825260208201905060208402830185811115612f5f57612f5e612dfc565b5b835b81811015612f885780612f748882612f14565b845260208401935050602081019050612f61565b5050509392505050565b600082601f830112612fa757612fa6612d6e565b5b8151612fb7848260208601612f29565b91505092915050565b60008060408385031215612fd757612fd66123d7565b5b600083015167ffffffffffffffff811115612ff557612ff46123dc565b5b61300185828601612ea3565b925050602083015167ffffffffffffffff811115613022576130216123dc565b5b61302e85828601612f92565b9150509250929050565b600061304382612e01565b915061304e83612e01565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000018212600084121516156130895761308861263b565b5b82667fffffffffffff0182136000841216156130a8576130a761263b565b5b828203905092915050565b60006130be8261246e565b91506130c98361246e565b9250828210156130dc576130db61263b565b5b828203905092915050565b60006130f282612e01565b91506130fd83612e01565b92508261310d5761310c612a99565b5b600160000383147fffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000831416156131465761314561263b565b5b828205905092915050565b600061315c82612e01565b915061316783612e01565b92508261317757613176612a99565b5b828207905092915050565b60008160020b9050919050565b600061319a82613182565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000082036131cc576131cb61263b565b5b600182039050919050565b600077ffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613206826131d7565b9150613211836131d7565b92508177ffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156132425761324161263b565b5b828202905092915050565b6000613258826131d7565b9150613263836131d7565b92508261327357613272612a99565b5b828204905092915050565b6000819050919050565b60006132938261327e565b91507f800000000000000000000000000000000000000000000000000000000000000082036132c5576132c461263b565b5b816000039050919050565b60006132db82613182565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000820361330d5761330c61263b565b5b816000039050919050565b7f5400000000000000000000000000000000000000000000000000000000000000600082015250565b600061334e600183612bd2565b915061335982613318565b602082019050919050565b6000602082019050818103600083015261337d81613341565b9050919050565b600061338f826123e1565b915061339a836123e1565b9250826133aa576133a9612a99565b5b82820690509291505056fea2646970667358221220e411e61515cb12667beab63695944aa1802deb4b7b2f0efff52d3f77c949dee664736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x990DC9DB GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xD825BFFF GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD825BFFF EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xDEF1A5E8 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xEC556889 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xFED0A20E EQ PUSH2 0x3B8 JUMPI PUSH2 0xF6 JUMP JUMPDEST DUP1 PUSH4 0x990DC9DB EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x9E955149 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0xB4014879 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xCF9D4AFA EQ PUSH2 0x2FB JUMPI PUSH2 0xF6 JUMP JUMPDEST DUP1 PUSH4 0x4051B9AA GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x4051B9AA EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x52FD856B EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x63B48EE6 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x7D0F7A88 EQ PUSH2 0x22F JUMPI PUSH2 0xF6 JUMP JUMPDEST DUP1 PUSH4 0xCB1982B EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xFBBFA3E EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x2637A477 EQ PUSH2 0x175 JUMPI PUSH2 0xF6 JUMP JUMPDEST CALLDATASIZE PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH2 0x3E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x87E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0xC32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x1069 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0x1107 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x129E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x1374 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x376 PUSH2 0x13A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x384 SWAP3 SWAP2 SWAP1 PUSH2 0x2599 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x25DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3F0A0797 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x452 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x476 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH2 0x4B6 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA6FA0B7B DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x613 SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xCF9D4AFA00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x69D SWAP2 SWAP1 PUSH2 0x2718 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x6D8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x844 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x70B JUMPI PUSH2 0x70A PUSH2 0x272F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP7 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78E SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x2773 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EC SWAP3 SWAP2 SWAP1 PUSH2 0x27A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x80B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x82F SWAP2 SWAP1 PUSH2 0x27F5 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x83C SWAP1 PUSH2 0x2822 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6ED JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x993 JUMPI POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3F0A0797 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x940 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x964 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x99C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0xA1B JUMPI PUSH1 0x1 DUP1 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA01 SWAP1 PUSH2 0x286A JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBE8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAA0 JUMPI PUSH2 0xA9F PUSH2 0x272F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD5 JUMPI PUSH1 0x2 PUSH1 0x1 DUP4 PUSH2 0xAF5 SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xB06 JUMPI PUSH2 0xB05 PUSH2 0x272F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB45 JUMPI PUSH2 0xB44 PUSH2 0x272F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP1 SLOAD DUP1 PUSH2 0xB9F JUMPI PUSH2 0xB9E PUSH2 0x2893 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE JUMPDEST DUP1 DUP1 PUSH2 0xBE0 SWAP1 PUSH2 0x2822 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA6D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3F0A0797 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCBD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xDB3 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDA8909E5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD60 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD84 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xDBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x105C JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDE7 JUMPI PUSH2 0xDE6 PUSH2 0x272F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x2 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x1048 JUMPI PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEA8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xECC SWAP2 SWAP1 PUSH2 0x28EE JUMP JUMPDEST SWAP1 POP PUSH1 0x12 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xF9F JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP10 PUSH1 0x12 DUP5 PUSH1 0xFF AND PUSH2 0xF07 SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST PUSH1 0xA PUSH2 0xF13 SWAP2 SWAP1 PUSH2 0x2A4E JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP12 PUSH2 0xF2F SWAP2 SWAP1 PUSH2 0x2AC8 JUMP JUMPDEST PUSH2 0xF39 SWAP2 SWAP1 PUSH2 0x2AC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF56 SWAP3 SWAP2 SWAP1 PUSH2 0x27A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF75 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF99 SWAP2 SWAP1 PUSH2 0x27F5 JUMP JUMPDEST POP PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x12 DUP2 PUSH1 0xFF AND SUB PUSH2 0x1045 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP10 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP11 PUSH2 0xFE3 SWAP2 SWAP1 PUSH2 0x2AC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1000 SWAP3 SWAP2 SWAP1 PUSH2 0x27A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x101F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1043 SWAP2 SWAP1 PUSH2 0x27F5 JUMP JUMPDEST POP JUMPDEST JUMPDEST POP JUMPDEST POP DUP1 DUP1 PUSH2 0x1054 SWAP1 PUSH2 0x2822 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDC9 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x115F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x11B1 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1237 JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x1236 JUMPI PUSH1 0x2 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP1 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x121C SWAP1 PUSH2 0x2AF9 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMPDEST JUMPDEST PUSH1 0x2 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH2 0x1315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDA8909E5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1419 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x143D SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0B06F5D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1487 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14AB SWAP2 SWAP1 PUSH2 0x2773 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDA8909E5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x151C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1540 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7F8483A4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x158A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15AE SWAP2 SWAP1 PUSH2 0x2773 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x15B9 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x15C3 SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST DUP3 SWAP4 POP SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1855 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1633 JUMPI PUSH2 0x1632 PUSH2 0x272F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x169B SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16DC SWAP2 SWAP1 PUSH2 0x2773 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x1 DUP2 SUB PUSH2 0x1827 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1797 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH2 0x185A JUMP JUMPDEST POP SWAP1 POP PUSH2 0x1805 DUP2 DUP6 DUP8 PUSH1 0x5 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B2A JUMP JUMPDEST SWAP2 POP POP DUP1 DUP4 PUSH2 0x1814 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST DUP8 PUSH2 0x181F SWAP2 SWAP1 PUSH2 0x2B7C JUMP JUMPDEST SWAP7 POP POP PUSH2 0x183F JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x183E JUMPI DUP2 DUP7 PUSH2 0x183B SWAP2 SWAP1 PUSH2 0x2B7C JUMP JUMPDEST SWAP6 POP JUMPDEST JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x184D SWAP1 PUSH2 0x2822 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1615 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND SUB PUSH2 0x18A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x189D SWAP1 PUSH2 0x2C2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18C3 JUMPI PUSH2 0x18C2 PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x18F1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1909 JUMPI PUSH2 0x1908 PUSH2 0x272F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1939 JUMPI PUSH2 0x1938 PUSH2 0x272F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x883BDBFD DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x198F SWAP2 SWAP1 PUSH2 0x2D4C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19D5 SWAP2 SWAP1 PUSH2 0x2FC0 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x19EF JUMPI PUSH2 0x19EE PUSH2 0x272F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1A0B JUMPI PUSH2 0x1A0A PUSH2 0x272F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1A1D SWAP2 SWAP1 PUSH2 0x3038 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1A35 JUMPI PUSH2 0x1A34 PUSH2 0x272F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1A51 JUMPI PUSH2 0x1A50 PUSH2 0x272F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1A63 SWAP2 SWAP1 PUSH2 0x30B3 JUMP JUMPDEST SWAP1 POP DUP8 PUSH1 0x3 SIGNEXTEND DUP3 PUSH2 0x1A74 SWAP2 SWAP1 PUSH2 0x30E7 JUMP JUMPDEST SWAP7 POP PUSH1 0x0 DUP3 PUSH1 0x6 SIGNEXTEND SLT DUP1 ISZERO PUSH2 0x1A9B JUMPI POP PUSH1 0x0 DUP9 PUSH1 0x3 SIGNEXTEND DUP4 PUSH2 0x1A95 SWAP2 SWAP1 PUSH2 0x3151 JUMP JUMPDEST PUSH1 0x6 SIGNEXTEND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1AAF JUMPI DUP7 DUP1 PUSH2 0x1AAB SWAP1 PUSH2 0x318F JUMP JUMPDEST SWAP8 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP10 PUSH4 0xFFFFFFFF AND PUSH2 0x1AD9 SWAP2 SWAP1 PUSH2 0x31FB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SHL DUP2 PUSH2 0x1B1B SWAP2 SWAP1 PUSH2 0x324D JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B36 DUP7 PUSH2 0x1D36 JUMP JUMPDEST SWAP1 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x1C50 JUMPI PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BA1 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x1C11 JUMPI PUSH2 0x1C0C PUSH25 0x1000000000000000000000000000000000000000000000000 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x2203 JUMP JUMPDEST PUSH2 0x1C48 JUMP JUMPDEST PUSH2 0x1C47 DUP2 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH2 0x2203 JUMP JUMPDEST JUMPDEST SWAP3 POP POP PUSH2 0x1D2D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C92 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH9 0x10000000000000000 PUSH2 0x2203 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x1CFA JUMPI PUSH2 0x1CF5 PUSH17 0x100000000000000000000000000000000 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x2203 JUMP JUMPDEST PUSH2 0x1D29 JUMP JUMPDEST PUSH2 0x1D28 DUP2 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH17 0x100000000000000000000000000000000 PUSH2 0x2203 JUMP JUMPDEST JUMPDEST SWAP3 POP POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x1D4D JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x1D5B JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x1D5A SWAP1 PUSH2 0x3288 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH2 0x1D87 SWAP1 PUSH2 0x32D0 JUMP JUMPDEST PUSH3 0xFFFFFF AND DUP2 GT ISZERO PUSH2 0x1DCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DC5 SWAP1 PUSH2 0x3364 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 AND SUB PUSH2 0x1DF1 JUMPI PUSH17 0x100000000000000000000000000000000 PUSH2 0x1E03 JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP4 AND EQ PUSH2 0x1E46 JUMPI PUSH1 0x80 PUSH16 0xFFF97272373D413259A46990580E213A DUP3 PUSH2 0x1E41 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 AND EQ PUSH2 0x1E74 JUMPI PUSH1 0x80 PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC DUP3 PUSH2 0x1E6F SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 AND EQ PUSH2 0x1EA2 JUMPI PUSH1 0x80 PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 DUP3 PUSH2 0x1E9D SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP4 AND EQ PUSH2 0x1ED0 JUMPI PUSH1 0x80 PUSH16 0xFFCB9843D60F6159C9DB58835C926644 DUP3 PUSH2 0x1ECB SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 AND EQ PUSH2 0x1EFE JUMPI PUSH1 0x80 PUSH16 0xFF973B41FA98C081472E6896DFB254C0 DUP3 PUSH2 0x1EF9 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 AND EQ PUSH2 0x1F2C JUMPI PUSH1 0x80 PUSH16 0xFF2EA16466C96A3843EC78B326B52861 DUP3 PUSH2 0x1F27 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 AND EQ PUSH2 0x1F5A JUMPI PUSH1 0x80 PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 DUP3 PUSH2 0x1F55 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP4 AND EQ PUSH2 0x1F89 JUMPI PUSH1 0x80 PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 DUP3 PUSH2 0x1F84 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP4 AND EQ PUSH2 0x1FB8 JUMPI PUSH1 0x80 PUSH16 0xF987A7253AC413176F2B074CF7815E54 DUP3 PUSH2 0x1FB3 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x400 DUP4 AND EQ PUSH2 0x1FE7 JUMPI PUSH1 0x80 PUSH16 0xF3392B0822B70005940C7A398E4B70F3 DUP3 PUSH2 0x1FE2 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x800 DUP4 AND EQ PUSH2 0x2016 JUMPI PUSH1 0x80 PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 DUP3 PUSH2 0x2011 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x1000 DUP4 AND EQ PUSH2 0x2045 JUMPI PUSH1 0x80 PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 DUP3 PUSH2 0x2040 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x2000 DUP4 AND EQ PUSH2 0x2074 JUMPI PUSH1 0x80 PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 DUP3 PUSH2 0x206F SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x4000 DUP4 AND EQ PUSH2 0x20A3 JUMPI PUSH1 0x80 PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 DUP3 PUSH2 0x209E SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x8000 DUP4 AND EQ PUSH2 0x20D2 JUMPI PUSH1 0x80 PUSH16 0x31BE135F97D08FD981231505542FCFA6 DUP3 PUSH2 0x20CD SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x10000 DUP4 AND EQ PUSH2 0x2102 JUMPI PUSH1 0x80 PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 DUP3 PUSH2 0x20FD SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x20000 DUP4 AND EQ PUSH2 0x2131 JUMPI PUSH1 0x80 PUSH15 0x5D6AF8DEDB81196699C329225EE604 DUP3 PUSH2 0x212C SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x40000 DUP4 AND EQ PUSH2 0x215F JUMPI PUSH1 0x80 PUSH14 0x2216E584F5FA1EA926041BEDFE98 DUP3 PUSH2 0x215A SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x80000 DUP4 AND EQ PUSH2 0x218B JUMPI PUSH1 0x80 PUSH12 0x48A170391F7DC42444E8FA2 DUP3 PUSH2 0x2186 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x21C6 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x21C3 SWAP2 SWAP1 PUSH2 0x2AC8 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP3 PUSH2 0x21D9 SWAP2 SWAP1 PUSH2 0x3384 JUMP JUMPDEST EQ PUSH2 0x21E5 JUMPI PUSH1 0x1 PUSH2 0x21E8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR PUSH2 0x21FA SWAP2 SWAP1 PUSH2 0x2B7C JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH1 0x0 DUP2 SUB PUSH2 0x223D JUMPI PUSH1 0x0 DUP5 GT PUSH2 0x2231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 DIV SWAP3 POP POP POP PUSH2 0x23C6 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x2249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH1 0x0 DUP6 PUSH1 0x1 DUP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x228E SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST PUSH2 0x2298 SWAP2 SWAP1 PUSH2 0x2B7C JUMP JUMPDEST AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH1 0x0 SUB DIV ADD SWAP1 POP DUP1 DUP4 PUSH2 0x22BC SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST DUP5 OR SWAP4 POP PUSH1 0x0 PUSH1 0x2 DUP8 PUSH1 0x3 PUSH2 0x22D1 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST XOR SWAP1 POP DUP1 DUP8 PUSH2 0x22E0 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x22EC SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST DUP2 PUSH2 0x22F7 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH2 0x2305 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x2311 SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST DUP2 PUSH2 0x231C SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH2 0x232A SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x2336 SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST DUP2 PUSH2 0x2341 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH2 0x234F SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x235B SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST DUP2 PUSH2 0x2366 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH2 0x2374 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x2380 SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST DUP2 PUSH2 0x238B SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH2 0x2399 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x23A5 SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST DUP2 PUSH2 0x23B0 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 PUSH2 0x23BE SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23F4 DUP2 PUSH2 0x23E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x23FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2411 DUP2 PUSH2 0x23EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x242D JUMPI PUSH2 0x242C PUSH2 0x23D7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x243B DUP5 DUP3 DUP6 ADD PUSH2 0x2402 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x244D DUP2 PUSH2 0x23E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2468 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2444 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2499 DUP3 PUSH2 0x246E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24A9 DUP2 PUSH2 0x248E JUMP JUMPDEST DUP2 EQ PUSH2 0x24B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24C6 DUP2 PUSH2 0x24A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24E2 JUMPI PUSH2 0x24E1 PUSH2 0x23D7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24F0 DUP5 DUP3 DUP6 ADD PUSH2 0x24B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2502 DUP2 PUSH2 0x248E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x251D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x24F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x253A JUMPI PUSH2 0x2539 PUSH2 0x23D7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2548 DUP6 DUP3 DUP7 ADD PUSH2 0x24B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2559 DUP6 DUP3 DUP7 ADD PUSH2 0x2402 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2578 DUP2 PUSH2 0x2563 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2593 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x256F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x25AE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2444 JUMP JUMPDEST PUSH2 0x25BB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2444 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25D8 DUP2 PUSH2 0x25C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2608 DUP2 PUSH2 0x24A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2624 JUMPI PUSH2 0x2623 PUSH2 0x23D7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2632 DUP5 DUP3 DUP6 ADD PUSH2 0x25F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2675 DUP3 PUSH2 0x23E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2680 DUP4 PUSH2 0x23E1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2693 JUMPI PUSH2 0x2692 PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x26B7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x26E1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F2 DUP3 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x26FC DUP2 DUP6 PUSH2 0x26A9 JUMP JUMPDEST SWAP4 POP PUSH2 0x270C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26B4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2724 DUP3 DUP5 PUSH2 0x26E7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x276D DUP2 PUSH2 0x23EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2789 JUMPI PUSH2 0x2788 PUSH2 0x23D7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2797 DUP5 DUP3 DUP6 ADD PUSH2 0x275E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x27B5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x24F9 JUMP JUMPDEST PUSH2 0x27C2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2444 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x27D2 DUP2 PUSH2 0x2563 JUMP JUMPDEST DUP2 EQ PUSH2 0x27DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x27EF DUP2 PUSH2 0x27C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x280B JUMPI PUSH2 0x280A PUSH2 0x23D7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2819 DUP5 DUP3 DUP6 ADD PUSH2 0x27E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x282D DUP3 PUSH2 0x23E1 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x285F JUMPI PUSH2 0x285E PUSH2 0x263B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2875 DUP3 PUSH2 0x25C2 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x2888 JUMPI PUSH2 0x2887 PUSH2 0x263B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x28CB DUP2 PUSH2 0x25C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x28D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x28E8 DUP2 PUSH2 0x28C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2904 JUMPI PUSH2 0x2903 PUSH2 0x23D7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2912 DUP5 DUP3 DUP6 ADD PUSH2 0x28D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x2972 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x294E JUMPI PUSH2 0x294D PUSH2 0x263B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x295D JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x296B DUP6 PUSH2 0x291B JUMP JUMPDEST SWAP5 POP PUSH2 0x2932 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x298B JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2A47 JUMP JUMPDEST DUP2 PUSH2 0x2999 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2A47 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x29AF JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x29B9 JUMPI PUSH2 0x29E8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2A47 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x29CB JUMPI PUSH2 0x29CA PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x29E2 JUMPI PUSH2 0x29E1 PUSH2 0x263B JUMP JUMPDEST JUMPDEST POP PUSH2 0x2A47 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2A1D JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2A18 JUMPI PUSH2 0x2A17 PUSH2 0x263B JUMP JUMPDEST JUMPDEST PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0x2A2A DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2928 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2A41 JUMPI PUSH2 0x2A40 PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A59 DUP3 PUSH2 0x23E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A64 DUP4 PUSH2 0x23E1 JUMP JUMPDEST SWAP3 POP PUSH2 0x2A91 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x297B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2AD3 DUP3 PUSH2 0x23E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ADE DUP4 PUSH2 0x23E1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2AEE JUMPI PUSH2 0x2AED PUSH2 0x2A99 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B04 DUP3 PUSH2 0x25C2 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x2B17 JUMPI PUSH2 0x2B16 PUSH2 0x263B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2D DUP3 PUSH2 0x23E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B38 DUP4 PUSH2 0x23E1 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2B71 JUMPI PUSH2 0x2B70 PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B87 DUP3 PUSH2 0x23E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B92 DUP4 PUSH2 0x23E1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2BC7 JUMPI PUSH2 0x2BC6 PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4250000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C19 PUSH1 0x2 DUP4 PUSH2 0x2BD2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C24 DUP3 PUSH2 0x2BE3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C48 DUP2 PUSH2 0x2C0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CC3 DUP2 PUSH2 0x2CAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CD5 DUP4 DUP4 PUSH2 0x2CBA JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF9 DUP3 PUSH2 0x2C7E JUMP JUMPDEST PUSH2 0x2D03 DUP2 DUP6 PUSH2 0x2C89 JUMP JUMPDEST SWAP4 POP PUSH2 0x2D0E DUP4 PUSH2 0x2C9A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D3F JUMPI DUP2 MLOAD PUSH2 0x2D26 DUP9 DUP3 PUSH2 0x2CC9 JUMP JUMPDEST SWAP8 POP PUSH2 0x2D31 DUP4 PUSH2 0x2CE1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2D12 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D66 DUP2 DUP5 PUSH2 0x2CEE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D8D DUP3 PUSH2 0x2D73 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2DAC JUMPI PUSH2 0x2DAB PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DBF PUSH2 0x23CD JUMP JUMPDEST SWAP1 POP PUSH2 0x2DCB DUP3 DUP3 PUSH2 0x2D84 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2DEB JUMPI PUSH2 0x2DEA PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E17 DUP2 PUSH2 0x2E01 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2E34 DUP2 PUSH2 0x2E0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E4D PUSH2 0x2E48 DUP5 PUSH2 0x2DD0 JUMP JUMPDEST PUSH2 0x2DB5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2E70 JUMPI PUSH2 0x2E6F PUSH2 0x2DFC JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2E99 JUMPI DUP1 PUSH2 0x2E85 DUP9 DUP3 PUSH2 0x2E25 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2E72 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2EB8 JUMPI PUSH2 0x2EB7 PUSH2 0x2D6E JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x2EC8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2E3A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2EEC JUMPI PUSH2 0x2EEB PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F06 DUP2 PUSH2 0x246E JUMP JUMPDEST DUP2 EQ PUSH2 0x2F11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2F23 DUP2 PUSH2 0x2EFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F3C PUSH2 0x2F37 DUP5 PUSH2 0x2ED1 JUMP JUMPDEST PUSH2 0x2DB5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2F5F JUMPI PUSH2 0x2F5E PUSH2 0x2DFC JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2F88 JUMPI DUP1 PUSH2 0x2F74 DUP9 DUP3 PUSH2 0x2F14 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2F61 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2FA7 JUMPI PUSH2 0x2FA6 PUSH2 0x2D6E JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x2FB7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2F29 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FD7 JUMPI PUSH2 0x2FD6 PUSH2 0x23D7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FF5 JUMPI PUSH2 0x2FF4 PUSH2 0x23DC JUMP JUMPDEST JUMPDEST PUSH2 0x3001 DUP6 DUP3 DUP7 ADD PUSH2 0x2EA3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3022 JUMPI PUSH2 0x3021 PUSH2 0x23DC JUMP JUMPDEST JUMPDEST PUSH2 0x302E DUP6 DUP3 DUP7 ADD PUSH2 0x2F92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3043 DUP3 PUSH2 0x2E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x304E DUP4 PUSH2 0x2E01 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80000000000000 ADD DUP3 SLT PUSH1 0x0 DUP5 SLT ISZERO AND ISZERO PUSH2 0x3089 JUMPI PUSH2 0x3088 PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP3 PUSH7 0x7FFFFFFFFFFFFF ADD DUP3 SGT PUSH1 0x0 DUP5 SLT AND ISZERO PUSH2 0x30A8 JUMPI PUSH2 0x30A7 PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30BE DUP3 PUSH2 0x246E JUMP JUMPDEST SWAP2 POP PUSH2 0x30C9 DUP4 PUSH2 0x246E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x30DC JUMPI PUSH2 0x30DB PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30F2 DUP3 PUSH2 0x2E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x30FD DUP4 PUSH2 0x2E01 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x310D JUMPI PUSH2 0x310C PUSH2 0x2A99 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x0 SUB DUP4 EQ PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80000000000000 DUP4 EQ AND ISZERO PUSH2 0x3146 JUMPI PUSH2 0x3145 PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x315C DUP3 PUSH2 0x2E01 JUMP JUMPDEST SWAP2 POP PUSH2 0x3167 DUP4 PUSH2 0x2E01 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3177 JUMPI PUSH2 0x3176 PUSH2 0x2A99 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SMOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x319A DUP3 PUSH2 0x3182 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP3 SUB PUSH2 0x31CC JUMPI PUSH2 0x31CB PUSH2 0x263B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3206 DUP3 PUSH2 0x31D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x3211 DUP4 PUSH2 0x31D7 JUMP JUMPDEST SWAP3 POP DUP2 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3242 JUMPI PUSH2 0x3241 PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3258 DUP3 PUSH2 0x31D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x3263 DUP4 PUSH2 0x31D7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3273 JUMPI PUSH2 0x3272 PUSH2 0x2A99 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3293 DUP3 PUSH2 0x327E JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 SUB PUSH2 0x32C5 JUMPI PUSH2 0x32C4 PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32DB DUP3 PUSH2 0x3182 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP3 SUB PUSH2 0x330D JUMPI PUSH2 0x330C PUSH2 0x263B JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x334E PUSH1 0x1 DUP4 PUSH2 0x2BD2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3359 DUP3 PUSH2 0x3318 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x337D DUP2 PUSH2 0x3341 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x338F DUP3 PUSH2 0x23E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x339A DUP4 PUSH2 0x23E1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x33AA JUMPI PUSH2 0x33A9 PUSH2 0x2A99 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 GT 0xE6 ISZERO ISZERO 0xCB SLT PUSH7 0x7BEAB63695944A LOG1 DUP1 0x2D 0xEB 0x4B PUSH28 0x2F0EFFF52D3F77C949DEE664736F6C634300080E0033000000000000 ",
							"sourceMap": "148:4871:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4935:8;;;148:4871;5002:8;;;980:226;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;405:50;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4327:557;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3714:459;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;215:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;308:26;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;337:38;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1216:772;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4179:138;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3438:266;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;843:131;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;484:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1998:530;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;284:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;236:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;980:226;1050:11;1106:5;;;;;;;;;;;1099:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1085:46;;:10;:46;;;1077:55;;;;;;1168:9;1151:14;:12;:14::i;:::-;:26;;;;:::i;:::-;1142:35;;1193:6;1187:3;:12;;;;980:226;;;:::o;405:50::-;;;;;;;;;;;;;;;;;;;;;;:::o;4327:557::-;731:8;717:22;;:10;:22;;;709:31;;;;;;4421:17:::1;4441:5;;;;;;;;;;;4421:25;;4463:9;4456:32;;;4489:7;4456:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4507:7;:20;;4577:9;4528:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4507:81;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4598:6;4607:9;:16;;;;4598:25;;4637:6;4633:204;4653:1;4649;:5;4633:204;;;4683:23;4709:9;4719:1;4709:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4683:38;;4742:15;4735:32;;;4768:7;4784:15;4777:33;;;4819:4;4777:48;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4735:91;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4669:168;4656:3;;;;;:::i;:::-;;;;4633:204;;;;4867:8;4846:31;;;3714:459:::0;3794:8;3780:22;;:10;:22;;;:72;;;;3827:5;;;;;;;;;;;3820:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3806:46;;:10;:46;;;3780:72;3772:81;;;;;;3885:1;3866:5;:15;3872:8;3866:15;;;;;;;;;;;;;;;;:20;3863:34;;3888:7;;:9;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3863:34;3925:1;3907:5;:15;3913:8;3907:15;;;;;;;;;;;;;;;:19;;;;3936:6;3945:9;:16;;;;3936:25;;3975:6;3971:196;3991:1;3987;:5;3971:196;;;4040:8;4024:24;;:9;4034:1;4024:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:24;;;4021:136;;4095:9;4107:1;4105;:3;;;;:::i;:::-;4095:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4080:9;4090:1;4080:12;;;;;;;;:::i;:::-;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;4127:9;:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;4021:136;3994:3;;;;;:::i;:::-;;;;3971:196;;;;3762:411;3714:459;:::o;215:15::-;;;;:::o;308:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;337:38::-;;;;;;;;;;;;;;;;;:::o;1216:772::-;1308:4;1328:17;1348:5;;;;;;;;;;;1328:25;;1392:9;1385:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1371:50;;:10;:50;;;:106;;;;1446:9;1439:36;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1425:52;;:10;:52;;;1371:106;1363:115;;;;;;1488:6;1497:9;:16;;;;1488:25;;1536:6;1532:429;1552:1;1548;:5;1532:429;;;1582:16;1601:9;1611:1;1601:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1582:31;;1649:1;1630:5;:15;1636:8;1630:15;;;;;;;;;;;;;;;;:20;1627:324;;1682:14;1706:8;1699:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1682:44;;1758:2;1747:8;:13;;;1744:192;;;1769:8;1762:25;;;1788:2;1836;1826:8;1821:14;;:17;;;;:::i;:::-;1816:2;:23;;;;:::i;:::-;1808:7;;;;;;;;;;1792:23;;:15;:23;;;;:::i;:::-;:47;;;;:::i;:::-;1762:78;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1744:192;;;1878:2;1866:8;:14;;;1863:73;;1889:8;1882:25;;;1908:2;1928:7;;;;;;;;;;1912:23;;:15;:23;;;;:::i;:::-;1882:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1863:73;1744:192;1664:287;1627:324;1568:393;1555:3;;;;;:::i;:::-;;;;1532:429;;;;1977:4;1970:11;;;;1216:772;;;;:::o;4179:138::-;4279:5;;;;;;;;;;;4265:19;;:10;:19;;;4257:28;;;;;;4303:7;4295:5;;:15;;;;;;;;;;;;;;;;;;4179:138;:::o;3438:266::-;731:8;717:22;;:10;:22;;;709:31;;;;;;3536:1:::1;3526:6;:11:::0;3523:141:::1;;3557:1;3539:5;:15;3545:8;3539:15;;;;;;;;;;;;;;;:19;;;;3523:141;;;3586:1;3576:6;:11:::0;3573:91:::1;;3629:1;3611:5;:15;3617:8;3611:15;;;;;;;;;;;;;;;:19;;;;3644:7;::::0;:9:::1;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3573:91;3523:141;3673:9;3688:8;3673:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3438:266:::0;;:::o;843:131::-;731:8;717:22;;:10;:22;;;709:31;;;;;;817:1:::1;805:8;;;;;;;;;;;:13;;;797:22;;;::::0;::::1;;936:9:::2;928:5;;:17;;;;;;;;;;;;;;;;;;966:1;955:8:::0;::::2;:12;;;;;;;;;;;;;;;;;;843:131:::0;:::o;484:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;1998:530::-;2042:4;2048;2297:16;2337:5;;;;;;;;;;;2330:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2316:61;;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2297:82;;2389:9;2422:5;;;;;;;;;;;2415:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2401:65;;;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2389:79;;2503:4;2486:14;:12;:14::i;:::-;:21;;;;:::i;:::-;2509:11;2478:43;;;;;;1998:530;;:::o;284:20::-;;;;;;;;;;;;;:::o;236:21::-;;;;;;;;;;;;;:::o;2538:890::-;2585:11;2742:6;2751:9;:16;;;;2742:25;;2781:6;2777:645;2797:1;2793;:5;2777:645;;;2827:12;2842:9;2852:1;2842:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2827:27;;2868:12;2890:4;2883:22;;;2914:4;2883:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2868:52;;2934:11;2948:5;:11;2954:4;2948:11;;;;;;;;;;;;;;;;2934:25;;2999:1;2989:6;:11;2986:425;;3032:10;3092:24;3121:46;3143:14;:20;3158:4;3143:20;;;;;;;;;;;;;;;;;;;;;;;;;3165:1;3121:21;:46::i;:::-;3091:76;;;3197:87;3226:18;3254:7;3264:4;3270:7;:13;3278:4;3270:13;;;;;;;;;;;;;;;;;;;;;;;;;3197:28;:87::i;:::-;3189:95;;3060:243;3340:5;3330:7;:15;;;;:::i;:::-;3320:25;;;;;:::i;:::-;;;3014:346;2986:425;;;3391:1;3381:6;:11;3378:33;;3404:7;3394:17;;;;;:::i;:::-;;;3378:33;2986:425;2813:609;;;2800:3;;;;;:::i;:::-;;;;2777:645;;;;2602:826;2538:890;:::o;808:1241:15:-;905:24;931:29;998:1;984:10;:15;;;976:30;;;;;;;;;;;;:::i;:::-;;;;;;;;;1017:27;1060:1;1047:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1017:45;;1089:10;1072:11;1084:1;1072:14;;;;;;;;:::i;:::-;;;;;;;:27;;;;;;;;;;;1126:1;1109:11;1121:1;1109:14;;;;;;;;:::i;:::-;;;;;;;:18;;;;;;;;;;;1139:30;1171:51;1253:4;1238:28;;;1267:11;1238:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1138:141;;;;1290:26;1340:15;1356:1;1340:18;;;;;;;;:::i;:::-;;;;;;;;1319:15;1335:1;1319:18;;;;;;;;:::i;:::-;;;;;;;;:39;;;;:::i;:::-;1290:68;;1368:43;1466:34;1501:1;1466:37;;;;;;;;:::i;:::-;;;;;;;;1426:34;1461:1;1426:37;;;;;;;;:::i;:::-;;;;;;;;:77;;;;:::i;:::-;1368:135;;1570:10;1541:40;;:20;:40;;;;:::i;:::-;1514:68;;1664:1;1641:20;:24;;;:75;;;;;1714:1;1699:10;1670:40;;:20;:40;;;;:::i;:::-;:45;;;;1641:75;1637:101;;;1718:20;;;;;:::i;:::-;;;;1637:101;1866:22;1913:17;1891:39;;1899:10;1891:19;;:39;;;;:::i;:::-;1866:64;;2038:2;1998:35;1990:44;;:50;;;;1972:14;:69;;;;:::i;:::-;1940:102;;966:1083;;;;;;808:1241;;;;;:::o;2553:955::-;2709:19;2740:20;2763:33;2791:4;2763:27;:33::i;:::-;2740:56;;2931:17;2915:33;;:12;:33;;;2911:591;;2964:17;3008:12;2984:36;;2992:12;2984:21;;:36;;;;:::i;:::-;2964:56;;3060:10;3048:22;;:9;:22;;;:156;;3156:48;3172:8;3182:10;3156:48;;3194:9;3156:15;:48::i;:::-;3048:156;;;3089:48;3105:9;3116:10;3089:48;;3128:8;3089:15;:48::i;:::-;3048:156;3034:170;;2950:265;2911:591;;;3235:17;3255:52;3271:12;3255:52;;3285:12;3255:52;;3299:7;3255:15;:52::i;:::-;3235:72;;3347:10;3335:22;;:9;:22;;;:156;;3443:48;3459:8;3469:10;3443:48;;3481:9;3443:15;:48::i;:::-;3335:156;;;3376:48;3392:9;3403:10;3376:48;;3415:8;3376:15;:48::i;:::-;3335:156;3321:170;;3221:281;2911:591;2730:778;2553:955;;;;;;:::o;1355:2588:16:-;1418:20;1450:15;1475:1;1468:4;:8;;;:57;;1519:4;1512:12;;1468:57;;;1495:4;1488:12;;1487:13;;;:::i;:::-;1468:57;1450:75;;477:7;637:9;;;:::i;:::-;1554:25;;1543:7;:36;;1535:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1596:13;1629:1;1622:3;1612:7;:13;:18;:93;;1670:35;1612:93;;;1633:34;1612:93;1596:109;;;;1736:1;1729:3;1719:7;:13;:18;1715:83;;1795:3;1756:34;1748:5;:42;;;;:::i;:::-;1747:51;;1739:59;;1715:83;1829:1;1822:3;1812:7;:13;:18;1808:83;;1888:3;1849:34;1841:5;:42;;;;:::i;:::-;1840:51;;1832:59;;1808:83;1922:1;1915:3;1905:7;:13;:18;1901:83;;1981:3;1942:34;1934:5;:42;;;;:::i;:::-;1933:51;;1925:59;;1901:83;2016:1;2008:4;1998:7;:14;:19;1994:84;;2075:3;2036:34;2028:5;:42;;;;:::i;:::-;2027:51;;2019:59;;1994:84;2110:1;2102:4;2092:7;:14;:19;2088:84;;2169:3;2130:34;2122:5;:42;;;;:::i;:::-;2121:51;;2113:59;;2088:84;2204:1;2196:4;2186:7;:14;:19;2182:84;;2263:3;2224:34;2216:5;:42;;;;:::i;:::-;2215:51;;2207:59;;2182:84;2298:1;2290:4;2280:7;:14;:19;2276:84;;2357:3;2318:34;2310:5;:42;;;;:::i;:::-;2309:51;;2301:59;;2276:84;2393:1;2384:5;2374:7;:15;:20;2370:85;;2452:3;2413:34;2405:5;:42;;;;:::i;:::-;2404:51;;2396:59;;2370:85;2488:1;2479:5;2469:7;:15;:20;2465:85;;2547:3;2508:34;2500:5;:42;;;;:::i;:::-;2499:51;;2491:59;;2465:85;2583:1;2574:5;2564:7;:15;:20;2560:85;;2642:3;2603:34;2595:5;:42;;;;:::i;:::-;2594:51;;2586:59;;2560:85;2678:1;2669:5;2659:7;:15;:20;2655:85;;2737:3;2698:34;2690:5;:42;;;;:::i;:::-;2689:51;;2681:59;;2655:85;2774:1;2764:6;2754:7;:16;:21;2750:86;;2833:3;2794:34;2786:5;:42;;;;:::i;:::-;2785:51;;2777:59;;2750:86;2870:1;2860:6;2850:7;:16;:21;2846:86;;2929:3;2890:34;2882:5;:42;;;;:::i;:::-;2881:51;;2873:59;;2846:86;2966:1;2956:6;2946:7;:16;:21;2942:86;;3025:3;2986:34;2978:5;:42;;;;:::i;:::-;2977:51;;2969:59;;2942:86;3062:1;3052:6;3042:7;:16;:21;3038:86;;3121:3;3082:34;3074:5;:42;;;;:::i;:::-;3073:51;;3065:59;;3038:86;3159:1;3148:7;3138;:17;:22;3134:86;;3217:3;3179:33;3171:5;:41;;;;:::i;:::-;3170:50;;3162:58;;3134:86;3255:1;3244:7;3234;:17;:22;3230:85;;3312:3;3275:32;3267:5;:40;;;;:::i;:::-;3266:49;;3258:57;;3230:85;3350:1;3339:7;3329;:17;:22;3325:83;;3405:3;3370:30;3362:5;:38;;;;:::i;:::-;3361:47;;3353:55;;3325:83;3443:1;3432:7;3422;:17;:22;3418:78;;3493:3;3463:25;3455:5;:33;;;;:::i;:::-;3454:42;;3446:50;;3418:78;3518:1;3511:4;:8;;;3507:47;;;3549:5;3529:17;:25;;;;:::i;:::-;3521:33;;3507:47;3925:1;3913:7;3904:5;:17;;;;:::i;:::-;:22;:30;;3933:1;3904:30;;;3929:1;3904:30;3887:48;;3897:2;3888:5;:11;;3887:48;;;;:::i;:::-;3864:72;;1440:2503;;1355:2588;;;:::o;742:3801:14:-;854:14;1183:13;1251;1368:1;1364:6;1361:1;1358;1351:20;1400:1;1397;1393:9;1384:18;;1451:5;1447:2;1444:13;1436:5;1432:2;1428:14;1424:34;1415:43;;1327:141;1549:1;1540:5;:10;1536:179;;1588:1;1574:11;:15;1566:24;;;;;;1652:11;1645:5;1641:23;1631:33;;1691:13;;;;1536:179;1842:5;1828:11;:19;1820:28;;;;;;2125:17;2201:11;2198:1;2195;2188:25;2175:38;;2344:5;2333:9;2330:20;2323:5;2319:32;2310:41;;2384:9;2377:5;2373:21;2364:30;;2553:12;2608:11;2603:1;2589:11;2569:17;:31;;;;:::i;:::-;:35;;;;:::i;:::-;2568:51;2553:66;;2730:4;2717:11;2713:22;2698:37;;2852:4;2845:5;2841:16;2832:25;;3106:1;3099:4;3092;3089:1;3085:12;3081:23;3077:31;3069:39;;3144:4;3136:5;:12;;;;:::i;:::-;3127:21;;;;3482:11;3516:1;3501:11;3497:1;:15;;;;:::i;:::-;3496:21;3482:35;;3757:3;3743:11;:17;;;;:::i;:::-;3739:1;:21;;;;:::i;:::-;3732:28;;;;;:::i;:::-;;;3815:3;3801:11;:17;;;;:::i;:::-;3797:1;:21;;;;:::i;:::-;3790:28;;;;;:::i;:::-;;;3874:3;3860:11;:17;;;;:::i;:::-;3856:1;:21;;;;:::i;:::-;3849:28;;;;;:::i;:::-;;;3933:3;3919:11;:17;;;;:::i;:::-;3915:1;:21;;;;:::i;:::-;3908:28;;;;;:::i;:::-;;;3992:3;3978:11;:17;;;;:::i;:::-;3974:1;:21;;;;:::i;:::-;3967:28;;;;;:::i;:::-;;;4052:3;4038:11;:17;;;;:::i;:::-;4034:1;:21;;;;:::i;:::-;4027:28;;;;;:::i;:::-;;;4510:3;4502:5;:11;;;;:::i;:::-;4493:20;;4523:13;;;;;742:3801;;;;;;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:118::-;2306:24;2324:5;2306:24;:::i;:::-;2301:3;2294:37;2219:118;;:::o;2343:222::-;2436:4;2474:2;2463:9;2459:18;2451:26;;2487:71;2555:1;2544:9;2540:17;2531:6;2487:71;:::i;:::-;2343:222;;;;:::o;2571:474::-;2639:6;2647;2696:2;2684:9;2675:7;2671:23;2667:32;2664:119;;;2702:79;;:::i;:::-;2664:119;2822:1;2847:53;2892:7;2883:6;2872:9;2868:22;2847:53;:::i;:::-;2837:63;;2793:117;2949:2;2975:53;3020:7;3011:6;3000:9;2996:22;2975:53;:::i;:::-;2965:63;;2920:118;2571:474;;;;;:::o;3051:90::-;3085:7;3128:5;3121:13;3114:21;3103:32;;3051:90;;;:::o;3147:109::-;3228:21;3243:5;3228:21;:::i;:::-;3223:3;3216:34;3147:109;;:::o;3262:210::-;3349:4;3387:2;3376:9;3372:18;3364:26;;3400:65;3462:1;3451:9;3447:17;3438:6;3400:65;:::i;:::-;3262:210;;;;:::o;3478:332::-;3599:4;3637:2;3626:9;3622:18;3614:26;;3650:71;3718:1;3707:9;3703:17;3694:6;3650:71;:::i;:::-;3731:72;3799:2;3788:9;3784:18;3775:6;3731:72;:::i;:::-;3478:332;;;;;:::o;3816:86::-;3851:7;3891:4;3884:5;3880:16;3869:27;;3816:86;;;:::o;3908:112::-;3991:22;4007:5;3991:22;:::i;:::-;3986:3;3979:35;3908:112;;:::o;4026:214::-;4115:4;4153:2;4142:9;4138:18;4130:26;;4166:67;4230:1;4219:9;4215:17;4206:6;4166:67;:::i;:::-;4026:214;;;;:::o;4246:143::-;4303:5;4334:6;4328:13;4319:22;;4350:33;4377:5;4350:33;:::i;:::-;4246:143;;;;:::o;4395:351::-;4465:6;4514:2;4502:9;4493:7;4489:23;4485:32;4482:119;;;4520:79;;:::i;:::-;4482:119;4640:1;4665:64;4721:7;4712:6;4701:9;4697:22;4665:64;:::i;:::-;4655:74;;4611:128;4395:351;;;;:::o;4752:180::-;4800:77;4797:1;4790:88;4897:4;4894:1;4887:15;4921:4;4918:1;4911:15;4938:191;4978:4;4998:20;5016:1;4998:20;:::i;:::-;4993:25;;5032:20;5050:1;5032:20;:::i;:::-;5027:25;;5071:1;5068;5065:8;5062:34;;;5076:18;;:::i;:::-;5062:34;5121:1;5118;5114:9;5106:17;;4938:191;;;;:::o;5135:98::-;5186:6;5220:5;5214:12;5204:22;;5135:98;;;:::o;5239:147::-;5340:11;5377:3;5362:18;;5239:147;;;;:::o;5392:307::-;5460:1;5470:113;5484:6;5481:1;5478:13;5470:113;;;5569:1;5564:3;5560:11;5554:18;5550:1;5545:3;5541:11;5534:39;5506:2;5503:1;5499:10;5494:15;;5470:113;;;5601:6;5598:1;5595:13;5592:101;;;5681:1;5672:6;5667:3;5663:16;5656:27;5592:101;5441:258;5392:307;;;:::o;5705:373::-;5809:3;5837:38;5869:5;5837:38;:::i;:::-;5891:88;5972:6;5967:3;5891:88;:::i;:::-;5884:95;;5988:52;6033:6;6028:3;6021:4;6014:5;6010:16;5988:52;:::i;:::-;6065:6;6060:3;6056:16;6049:23;;5813:265;5705:373;;;;:::o;6084:271::-;6214:3;6236:93;6325:3;6316:6;6236:93;:::i;:::-;6229:100;;6346:3;6339:10;;6084:271;;;;:::o;6361:180::-;6409:77;6406:1;6399:88;6506:4;6503:1;6496:15;6530:4;6527:1;6520:15;6547:143;6604:5;6635:6;6629:13;6620:22;;6651:33;6678:5;6651:33;:::i;:::-;6547:143;;;;:::o;6696:351::-;6766:6;6815:2;6803:9;6794:7;6790:23;6786:32;6783:119;;;6821:79;;:::i;:::-;6783:119;6941:1;6966:64;7022:7;7013:6;7002:9;6998:22;6966:64;:::i;:::-;6956:74;;6912:128;6696:351;;;;:::o;7053:332::-;7174:4;7212:2;7201:9;7197:18;7189:26;;7225:71;7293:1;7282:9;7278:17;7269:6;7225:71;:::i;:::-;7306:72;7374:2;7363:9;7359:18;7350:6;7306:72;:::i;:::-;7053:332;;;;;:::o;7391:116::-;7461:21;7476:5;7461:21;:::i;:::-;7454:5;7451:32;7441:60;;7497:1;7494;7487:12;7441:60;7391:116;:::o;7513:137::-;7567:5;7598:6;7592:13;7583:22;;7614:30;7638:5;7614:30;:::i;:::-;7513:137;;;;:::o;7656:345::-;7723:6;7772:2;7760:9;7751:7;7747:23;7743:32;7740:119;;;7778:79;;:::i;:::-;7740:119;7898:1;7923:61;7976:7;7967:6;7956:9;7952:22;7923:61;:::i;:::-;7913:71;;7869:125;7656:345;;;;:::o;8007:233::-;8046:3;8069:24;8087:5;8069:24;:::i;:::-;8060:33;;8115:66;8108:5;8105:77;8102:103;;8185:18;;:::i;:::-;8102:103;8232:1;8225:5;8221:13;8214:20;;8007:233;;;:::o;8246:167::-;8283:3;8306:22;8322:5;8306:22;:::i;:::-;8297:31;;8350:4;8343:5;8340:15;8337:41;;8358:18;;:::i;:::-;8337:41;8405:1;8398:5;8394:13;8387:20;;8246:167;;;:::o;8419:180::-;8467:77;8464:1;8457:88;8564:4;8561:1;8554:15;8588:4;8585:1;8578:15;8605:118;8676:22;8692:5;8676:22;:::i;:::-;8669:5;8666:33;8656:61;;8713:1;8710;8703:12;8656:61;8605:118;:::o;8729:139::-;8784:5;8815:6;8809:13;8800:22;;8831:31;8856:5;8831:31;:::i;:::-;8729:139;;;;:::o;8874:347::-;8942:6;8991:2;8979:9;8970:7;8966:23;8962:32;8959:119;;;8997:79;;:::i;:::-;8959:119;9117:1;9142:62;9196:7;9187:6;9176:9;9172:22;9142:62;:::i;:::-;9132:72;;9088:126;8874:347;;;;:::o;9227:102::-;9269:8;9316:5;9313:1;9309:13;9288:34;;9227:102;;;:::o;9335:848::-;9396:5;9403:4;9427:6;9418:15;;9451:5;9442:14;;9465:712;9486:1;9476:8;9473:15;9465:712;;;9581:4;9576:3;9572:14;9566:4;9563:24;9560:50;;;9590:18;;:::i;:::-;9560:50;9640:1;9630:8;9626:16;9623:451;;;10055:4;10048:5;10044:16;10035:25;;9623:451;10105:4;10099;10095:15;10087:23;;10135:32;10158:8;10135:32;:::i;:::-;10123:44;;9465:712;;;9335:848;;;;;;;:::o;10189:1073::-;10243:5;10434:8;10424:40;;10455:1;10446:10;;10457:5;;10424:40;10483:4;10473:36;;10500:1;10491:10;;10502:5;;10473:36;10569:4;10617:1;10612:27;;;;10653:1;10648:191;;;;10562:277;;10612:27;10630:1;10621:10;;10632:5;;;10648:191;10693:3;10683:8;10680:17;10677:43;;;10700:18;;:::i;:::-;10677:43;10749:8;10746:1;10742:16;10733:25;;10784:3;10777:5;10774:14;10771:40;;;10791:18;;:::i;:::-;10771:40;10824:5;;;10562:277;;10948:2;10938:8;10935:16;10929:3;10923:4;10920:13;10916:36;10898:2;10888:8;10885:16;10880:2;10874:4;10871:12;10867:35;10851:111;10848:246;;;11004:8;10998:4;10994:19;10985:28;;11039:3;11032:5;11029:14;11026:40;;;11046:18;;:::i;:::-;11026:40;11079:5;;10848:246;11119:42;11157:3;11147:8;11141:4;11138:1;11119:42;:::i;:::-;11104:57;;;;11193:4;11188:3;11184:14;11177:5;11174:25;11171:51;;;11202:18;;:::i;:::-;11171:51;11251:4;11244:5;11240:16;11231:25;;10189:1073;;;;;;:::o;11268:285::-;11328:5;11352:23;11370:4;11352:23;:::i;:::-;11344:31;;11396:27;11414:8;11396:27;:::i;:::-;11384:39;;11442:104;11479:66;11469:8;11463:4;11442:104;:::i;:::-;11433:113;;11268:285;;;;:::o;11559:180::-;11607:77;11604:1;11597:88;11704:4;11701:1;11694:15;11728:4;11725:1;11718:15;11745:185;11785:1;11802:20;11820:1;11802:20;:::i;:::-;11797:25;;11836:20;11854:1;11836:20;:::i;:::-;11831:25;;11875:1;11865:35;;11880:18;;:::i;:::-;11865:35;11922:1;11919;11915:9;11910:14;;11745:185;;;;:::o;11936:167::-;11973:3;11996:22;12012:5;11996:22;:::i;:::-;11987:31;;12040:4;12033:5;12030:15;12027:41;;12048:18;;:::i;:::-;12027:41;12095:1;12088:5;12084:13;12077:20;;11936:167;;;:::o;12109:348::-;12149:7;12172:20;12190:1;12172:20;:::i;:::-;12167:25;;12206:20;12224:1;12206:20;:::i;:::-;12201:25;;12394:1;12326:66;12322:74;12319:1;12316:81;12311:1;12304:9;12297:17;12293:105;12290:131;;;12401:18;;:::i;:::-;12290:131;12449:1;12446;12442:9;12431:20;;12109:348;;;;:::o;12463:305::-;12503:3;12522:20;12540:1;12522:20;:::i;:::-;12517:25;;12556:20;12574:1;12556:20;:::i;:::-;12551:25;;12710:1;12642:66;12638:74;12635:1;12632:81;12629:107;;;12716:18;;:::i;:::-;12629:107;12760:1;12757;12753:9;12746:16;;12463:305;;;;:::o;12774:169::-;12858:11;12892:6;12887:3;12880:19;12932:4;12927:3;12923:14;12908:29;;12774:169;;;;:::o;12949:152::-;13089:4;13085:1;13077:6;13073:14;13066:28;12949:152;:::o;13107:365::-;13249:3;13270:66;13334:1;13329:3;13270:66;:::i;:::-;13263:73;;13345:93;13434:3;13345:93;:::i;:::-;13463:2;13458:3;13454:12;13447:19;;13107:365;;;:::o;13478:419::-;13644:4;13682:2;13671:9;13667:18;13659:26;;13731:9;13725:4;13721:20;13717:1;13706:9;13702:17;13695:47;13759:131;13885:4;13759:131;:::i;:::-;13751:139;;13478:419;;;:::o;13903:180::-;13951:77;13948:1;13941:88;14048:4;14045:1;14038:15;14072:4;14069:1;14062:15;14089:113;14155:6;14189:5;14183:12;14173:22;;14089:113;;;:::o;14208:183::-;14306:11;14340:6;14335:3;14328:19;14380:4;14375:3;14371:14;14356:29;;14208:183;;;;:::o;14397:131::-;14463:4;14486:3;14478:11;;14516:4;14511:3;14507:14;14499:22;;14397:131;;;:::o;14534:93::-;14570:7;14610:10;14603:5;14599:22;14588:33;;14534:93;;;:::o;14633:105::-;14708:23;14725:5;14708:23;:::i;:::-;14703:3;14696:36;14633:105;;:::o;14744:175::-;14811:10;14832:44;14872:3;14864:6;14832:44;:::i;:::-;14908:4;14903:3;14899:14;14885:28;;14744:175;;;;:::o;14925:112::-;14994:4;15026;15021:3;15017:14;15009:22;;14925:112;;;:::o;15071:724::-;15188:3;15217:53;15264:5;15217:53;:::i;:::-;15286:85;15364:6;15359:3;15286:85;:::i;:::-;15279:92;;15395:55;15444:5;15395:55;:::i;:::-;15473:7;15504:1;15489:281;15514:6;15511:1;15508:13;15489:281;;;15590:6;15584:13;15617:61;15674:3;15659:13;15617:61;:::i;:::-;15610:68;;15701:59;15753:6;15701:59;:::i;:::-;15691:69;;15549:221;15536:1;15533;15529:9;15524:14;;15489:281;;;15493:14;15786:3;15779:10;;15193:602;;;15071:724;;;;:::o;15801:369::-;15942:4;15980:2;15969:9;15965:18;15957:26;;16029:9;16023:4;16019:20;16015:1;16004:9;16000:17;15993:47;16057:106;16158:4;16149:6;16057:106;:::i;:::-;16049:114;;15801:369;;;;:::o;16176:117::-;16285:1;16282;16275:12;16299:102;16340:6;16391:2;16387:7;16382:2;16375:5;16371:14;16367:28;16357:38;;16299:102;;;:::o;16407:281::-;16490:27;16512:4;16490:27;:::i;:::-;16482:6;16478:40;16620:6;16608:10;16605:22;16584:18;16572:10;16569:34;16566:62;16563:88;;;16631:18;;:::i;:::-;16563:88;16671:10;16667:2;16660:22;16450:238;16407:281;;:::o;16694:129::-;16728:6;16755:20;;:::i;:::-;16745:30;;16784:33;16812:4;16804:6;16784:33;:::i;:::-;16694:129;;;:::o;16829:309::-;16904:4;16994:18;16986:6;16983:30;16980:56;;;17016:18;;:::i;:::-;16980:56;17066:4;17058:6;17054:17;17046:25;;17126:4;17120;17116:15;17108:23;;16829:309;;;:::o;17144:117::-;17253:1;17250;17243:12;17267:90;17302:7;17345:5;17342:1;17331:20;17320:31;;17267:90;;;:::o;17363:118::-;17434:22;17450:5;17434:22;:::i;:::-;17427:5;17424:33;17414:61;;17471:1;17468;17461:12;17414:61;17363:118;:::o;17487:139::-;17542:5;17573:6;17567:13;17558:22;;17589:31;17614:5;17589:31;:::i;:::-;17487:139;;;;:::o;17647:726::-;17752:5;17777:79;17793:62;17848:6;17793:62;:::i;:::-;17777:79;:::i;:::-;17768:88;;17876:5;17905:6;17898:5;17891:21;17939:4;17932:5;17928:16;17921:23;;17992:4;17984:6;17980:17;17972:6;17968:30;18021:3;18013:6;18010:15;18007:122;;;18040:79;;:::i;:::-;18007:122;18155:6;18138:229;18172:6;18167:3;18164:15;18138:229;;;18247:3;18276:46;18318:3;18306:10;18276:46;:::i;:::-;18271:3;18264:59;18352:4;18347:3;18343:14;18336:21;;18214:153;18198:4;18193:3;18189:14;18182:21;;18138:229;;;18142:21;17758:615;;17647:726;;;;;:::o;18394:381::-;18474:5;18523:3;18516:4;18508:6;18504:17;18500:27;18490:122;;18531:79;;:::i;:::-;18490:122;18641:6;18635:13;18666:103;18765:3;18757:6;18750:4;18742:6;18738:17;18666:103;:::i;:::-;18657:112;;18480:295;18394:381;;;;:::o;18781:311::-;18858:4;18948:18;18940:6;18937:30;18934:56;;;18970:18;;:::i;:::-;18934:56;19020:4;19012:6;19008:17;19000:25;;19080:4;19074;19070:15;19062:23;;18781:311;;;:::o;19098:122::-;19171:24;19189:5;19171:24;:::i;:::-;19164:5;19161:35;19151:63;;19210:1;19207;19200:12;19151:63;19098:122;:::o;19226:143::-;19283:5;19314:6;19308:13;19299:22;;19330:33;19357:5;19330:33;:::i;:::-;19226:143;;;;:::o;19392:732::-;19499:5;19524:81;19540:64;19597:6;19540:64;:::i;:::-;19524:81;:::i;:::-;19515:90;;19625:5;19654:6;19647:5;19640:21;19688:4;19681:5;19677:16;19670:23;;19741:4;19733:6;19729:17;19721:6;19717:30;19770:3;19762:6;19759:15;19756:122;;;19789:79;;:::i;:::-;19756:122;19904:6;19887:231;19921:6;19916:3;19913:15;19887:231;;;19996:3;20025:48;20069:3;20057:10;20025:48;:::i;:::-;20020:3;20013:61;20103:4;20098:3;20094:14;20087:21;;19963:155;19947:4;19942:3;19938:14;19931:21;;19887:231;;;19891:21;19505:619;;19392:732;;;;;:::o;20147:385::-;20229:5;20278:3;20271:4;20263:6;20259:17;20255:27;20245:122;;20286:79;;:::i;:::-;20245:122;20396:6;20390:13;20421:105;20522:3;20514:6;20507:4;20499:6;20495:17;20421:105;:::i;:::-;20412:114;;20235:297;20147:385;;;;:::o;20538:909::-;20665:6;20673;20722:2;20710:9;20701:7;20697:23;20693:32;20690:119;;;20728:79;;:::i;:::-;20690:119;20869:1;20858:9;20854:17;20848:24;20899:18;20891:6;20888:30;20885:117;;;20921:79;;:::i;:::-;20885:117;21026:87;21105:7;21096:6;21085:9;21081:22;21026:87;:::i;:::-;21016:97;;20819:304;21183:2;21172:9;21168:18;21162:25;21214:18;21206:6;21203:30;21200:117;;;21236:79;;:::i;:::-;21200:117;21341:89;21422:7;21413:6;21402:9;21398:22;21341:89;:::i;:::-;21331:99;;21133:307;20538:909;;;;;:::o;21453:474::-;21491:4;21511:18;21527:1;21511:18;:::i;:::-;21506:23;;21543:18;21559:1;21543:18;:::i;:::-;21538:23;;21731:1;21663:66;21659:74;21656:1;21652:82;21647:1;21644;21640:9;21633:17;21629:106;21626:132;;;21738:18;;:::i;:::-;21626:132;21867:1;21849:16;21845:24;21842:1;21838:32;21834:1;21831;21827:9;21823:48;21820:74;;;21874:18;;:::i;:::-;21820:74;21919:1;21916;21912:9;21904:17;;21453:474;;;;:::o;21933:191::-;21973:4;21993:20;22011:1;21993:20;:::i;:::-;21988:25;;22027:20;22045:1;22027:20;:::i;:::-;22022:25;;22066:1;22063;22060:8;22057:34;;;22071:18;;:::i;:::-;22057:34;22116:1;22113;22109:9;22101:17;;21933:191;;;;:::o;22130:382::-;22168:1;22185:18;22201:1;22185:18;:::i;:::-;22180:23;;22217:18;22233:1;22217:18;:::i;:::-;22212:23;;22254:1;22244:35;;22259:18;;:::i;:::-;22244:35;22445:1;22442;22438:9;22435:1;22432:16;22351:66;22348:1;22345:73;22328:130;22325:156;;;22461:18;;:::i;:::-;22325:156;22504:1;22501;22496:10;22491:15;;22130:382;;;;:::o;22518:171::-;22548:1;22565:18;22581:1;22565:18;:::i;:::-;22560:23;;22597:18;22613:1;22597:18;:::i;:::-;22592:23;;22634:1;22624:35;;22639:18;;:::i;:::-;22624:35;22681:1;22678;22673:10;22668:15;;22518:171;;;;:::o;22695:90::-;22730:7;22773:5;22770:1;22759:20;22748:31;;22695:90;;;:::o;22791:229::-;22828:3;22851:22;22867:5;22851:22;:::i;:::-;22842:31;;22895:66;22888:5;22885:77;22882:103;;22965:18;;:::i;:::-;22882:103;23012:1;23005:5;23001:13;22994:20;;22791:229;;;:::o;23026:134::-;23063:7;23103:50;23096:5;23092:62;23081:73;;23026:134;;;:::o;23166:332::-;23206:7;23229:20;23247:1;23229:20;:::i;:::-;23224:25;;23263:20;23281:1;23263:20;:::i;:::-;23258:25;;23435:1;23383:50;23379:58;23376:1;23373:65;23368:1;23361:9;23354:17;23350:89;23347:115;;;23442:18;;:::i;:::-;23347:115;23490:1;23487;23483:9;23472:20;;23166:332;;;;:::o;23504:185::-;23544:1;23561:20;23579:1;23561:20;:::i;:::-;23556:25;;23595:20;23613:1;23595:20;:::i;:::-;23590:25;;23634:1;23624:35;;23639:18;;:::i;:::-;23624:35;23681:1;23678;23674:9;23669:14;;23504:185;;;;:::o;23695:76::-;23731:7;23760:5;23749:16;;23695:76;;;:::o;23777:228::-;23812:3;23835:23;23852:5;23835:23;:::i;:::-;23826:32;;23880:66;23873:5;23870:77;23867:103;;23950:18;;:::i;:::-;23867:103;23993:5;23990:1;23986:13;23979:20;;23777:228;;;:::o;24011:226::-;24045:3;24068:22;24084:5;24068:22;:::i;:::-;24059:31;;24112:66;24105:5;24102:77;24099:103;;24182:18;;:::i;:::-;24099:103;24225:5;24222:1;24218:13;24211:20;;24011:226;;;:::o;24243:151::-;24383:3;24379:1;24371:6;24367:14;24360:27;24243:151;:::o;24400:365::-;24542:3;24563:66;24627:1;24622:3;24563:66;:::i;:::-;24556:73;;24638:93;24727:3;24638:93;:::i;:::-;24756:2;24751:3;24747:12;24740:19;;24400:365;;;:::o;24771:419::-;24937:4;24975:2;24964:9;24960:18;24952:26;;25024:9;25018:4;25014:20;25010:1;24999:9;24995:17;24988:47;25052:131;25178:4;25052:131;:::i;:::-;25044:139;;24771:419;;;:::o;25196:176::-;25228:1;25245:20;25263:1;25245:20;:::i;:::-;25240:25;;25279:20;25297:1;25279:20;:::i;:::-;25274:25;;25318:1;25308:35;;25323:18;;:::i;:::-;25308:35;25364:1;25361;25357:9;25352:14;;25196:176;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2658200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "181",
								"NAV()": "2474",
								"addCoin(address,uint256)": "infinite",
								"coinArray(uint256)": "5023",
								"coinOracleAddr(address)": "infinite",
								"coins(address)": "2903",
								"delCoin(address)": "infinite",
								"deleteContract(address)": "infinite",
								"initContract(address)": "infinite",
								"initDone()": "2559",
								"oracleNAV()": "infinite",
								"proxy()": "2630",
								"quoteIn(address)": "infinite",
								"transferFunds(address,uint256)": "infinite",
								"updateNAV(uint256)": "infinite",
								"updateProxy(address)": "27037"
							},
							"internal": {
								"calculateNAV()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 148,
									"end": 5019,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 608,
									"end": 664,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 608,
									"end": 664,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 608,
									"end": 664,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 608,
									"end": 664,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 608,
									"end": 664,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 608,
									"end": 664,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 608,
									"end": 664,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 608,
									"end": 664,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 608,
									"end": 664,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 608,
									"end": 664,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 608,
									"end": 664,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 647,
									"end": 657,
									"name": "CALLER",
									"source": 13
								},
								{
									"begin": 636,
									"end": 657,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 636,
									"end": 657,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 636,
									"end": 657,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 636,
									"end": 657,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 636,
									"end": 657,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 636,
									"end": 657,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 636,
									"end": 657,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 636,
									"end": 657,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 636,
									"end": 657,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 636,
									"end": 657,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "ASSIGNIMMUTABLE",
									"source": 13,
									"value": "828"
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e411e61515cb12667beab63695944aa1802deb4b7b2f0efff52d3f77c949dee664736f6c634300080e0033",
									".code": [
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "990DC9DB"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "D825BFFF"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "D825BFFF"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "DEF1A5E8"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "EC556889"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "FED0A20E"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "990DC9DB"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "9E955149"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "B4014879"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "CF9D4AFA"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "4051B9AA"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "4051B9AA"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "52FD856B"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "63B48EE6"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "7D0F7A88"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "CB1982B"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "FBBFA3E"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "2637A477"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 4943,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4935,
											"end": 4943,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 4943,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5002,
											"end": 5010,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5010,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5002,
											"end": 5010,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 980,
											"end": 1206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 980,
											"end": 1206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 980,
											"end": 1206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 405,
											"end": 455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 405,
											"end": 455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 405,
											"end": 455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 4327,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 4327,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 3714,
											"end": 4173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 3714,
											"end": 4173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 215,
											"end": 230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 215,
											"end": 230,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 230,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 215,
											"end": 230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 215,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 215,
											"end": 230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 215,
											"end": 230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 230,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 215,
											"end": 230,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 215,
											"end": 230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 215,
											"end": 230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 230,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 308,
											"end": 334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 308,
											"end": 334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 308,
											"end": 334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 337,
											"end": 375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 337,
											"end": 375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 337,
											"end": 375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 1216,
											"end": 1988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 1216,
											"end": 1988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 1216,
											"end": 1988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 4179,
											"end": 4317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 4179,
											"end": 4317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 3438,
											"end": 3704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 3438,
											"end": 3704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 843,
											"end": 974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 843,
											"end": 974,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 974,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 843,
											"end": 974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 843,
											"end": 974,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 843,
											"end": 974,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 843,
											"end": 974,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 843,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 843,
											"end": 974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 843,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 843,
											"end": 974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 484,
											"end": 527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 484,
											"end": 527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 484,
											"end": 527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 1998,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 1998,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 284,
											"end": 304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 284,
											"end": 304,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 284,
											"end": 304,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 284,
											"end": 304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 284,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 284,
											"end": 304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 284,
											"end": 304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 284,
											"end": 304,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 284,
											"end": 304,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 284,
											"end": 304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 284,
											"end": 304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 284,
											"end": 304,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 236,
											"end": 257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 236,
											"end": 257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1061,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1129,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1099,
											"end": 1129,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1129,
											"name": "PUSH",
											"source": 13,
											"value": "3F0A0797"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 1099,
											"end": 1131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1085,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1085,
											"end": 1131,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1085,
											"end": 1095,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1085,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1085,
											"end": 1131,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1085,
											"end": 1131,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1151,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 1151,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 1151,
											"end": 1165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1151,
											"end": 1165,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 1151,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1151,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 1151,
											"end": 1177,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1151,
											"end": 1177,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1151,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 1151,
											"end": 1177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1151,
											"end": 1177,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 1151,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1142,
											"end": 1177,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1142,
											"end": 1177,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1190,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1199,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1199,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1199,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1199,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 731,
											"end": 739,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "828"
										},
										{
											"begin": 717,
											"end": 739,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 717,
											"end": 739,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 717,
											"end": 727,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 717,
											"end": 739,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 717,
											"end": 739,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 717,
											"end": 739,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 709,
											"end": 740,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 740,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 709,
											"end": 740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 4438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4441,
											"end": 4446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4441,
											"end": 4446,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4441,
											"end": 4446,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4441,
											"end": 4446,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4441,
											"end": 4446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4441,
											"end": 4446,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4441,
											"end": 4446,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4441,
											"end": 4446,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4441,
											"end": 4446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4441,
											"end": 4446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 4446,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 4446,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4463,
											"end": 4472,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4456,
											"end": 4488,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "A6FA0B7B"
										},
										{
											"begin": 4489,
											"end": 4496,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 4456,
											"end": 4497,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4497,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4497,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4514,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4507,
											"end": 4527,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4577,
											"end": 4586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 4528,
											"end": 4587,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "CF9D4AFA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 4507,
											"end": 4588,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "DELEGATECALL",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4598,
											"end": 4604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4607,
											"end": 4616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4607,
											"end": 4623,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4623,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4623,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4623,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4598,
											"end": 4623,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4598,
											"end": 4623,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4637,
											"end": 4643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4633,
											"end": 4837,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 4633,
											"end": 4837,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4653,
											"end": 4654,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4649,
											"end": 4650,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4649,
											"end": 4654,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4837,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4837,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 4633,
											"end": 4837,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4683,
											"end": 4706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4719,
											"end": 4720,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 4709,
											"end": 4721,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4683,
											"end": 4721,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4683,
											"end": 4721,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4742,
											"end": 4757,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4735,
											"end": 4767,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "A9059CBB"
										},
										{
											"begin": 4768,
											"end": 4775,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4784,
											"end": 4799,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4777,
											"end": 4810,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 4819,
											"end": 4823,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 4777,
											"end": 4825,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4825,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 4777,
											"end": 4825,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4735,
											"end": 4826,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4826,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 4735,
											"end": 4826,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4669,
											"end": 4837,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4656,
											"end": 4659,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4656,
											"end": 4659,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4656,
											"end": 4659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 4656,
											"end": 4659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4656,
											"end": 4659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 4656,
											"end": 4659,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4656,
											"end": 4659,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 4656,
											"end": 4659,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4656,
											"end": 4659,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4656,
											"end": 4659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4656,
											"end": 4659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4837,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 4633,
											"end": 4837,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4837,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 4633,
											"end": 4837,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4837,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4867,
											"end": 4875,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "828"
										},
										{
											"begin": 4846,
											"end": 4877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4846,
											"end": 4877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4846,
											"end": 4877,
											"modifierDepth": 1,
											"name": "SELFDESTRUCT",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3794,
											"end": 3802,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "828"
										},
										{
											"begin": 3780,
											"end": 3802,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3780,
											"end": 3802,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3780,
											"end": 3790,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3780,
											"end": 3802,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3780,
											"end": 3802,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3780,
											"end": 3802,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3780,
											"end": 3852,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3780,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 3780,
											"end": 3852,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3780,
											"end": 3852,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3827,
											"end": 3832,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3827,
											"end": 3832,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3827,
											"end": 3832,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3827,
											"end": 3832,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3827,
											"end": 3832,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3827,
											"end": 3832,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3827,
											"end": 3832,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3827,
											"end": 3832,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3827,
											"end": 3832,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3827,
											"end": 3832,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3827,
											"end": 3832,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3850,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3820,
											"end": 3850,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3850,
											"name": "PUSH",
											"source": 13,
											"value": "3F0A0797"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 3820,
											"end": 3852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3806,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3806,
											"end": 3852,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3806,
											"end": 3816,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3806,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3806,
											"end": 3852,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3806,
											"end": 3852,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3780,
											"end": 3852,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 3780,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3772,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 3772,
											"end": 3853,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3772,
											"end": 3853,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3772,
											"end": 3853,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3772,
											"end": 3853,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3772,
											"end": 3853,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 3772,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3885,
											"end": 3886,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3866,
											"end": 3871,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 3880,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3866,
											"end": 3886,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3863,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 3863,
											"end": 3897,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3895,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3888,
											"end": 3895,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 3888,
											"end": 3897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3863,
											"end": 3897,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 3863,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3907,
											"end": 3912,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3913,
											"end": 3921,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3936,
											"end": 3942,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 3954,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3945,
											"end": 3961,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3945,
											"end": 3961,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3945,
											"end": 3961,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3945,
											"end": 3961,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3936,
											"end": 3961,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3936,
											"end": 3961,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3975,
											"end": 3981,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 4167,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 3971,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3991,
											"end": 3992,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3987,
											"end": 3988,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3987,
											"end": 3992,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3971,
											"end": 4167,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3971,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 3971,
											"end": 4167,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4040,
											"end": 4048,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4048,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4024,
											"end": 4048,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4033,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4034,
											"end": 4035,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 4024,
											"end": 4036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4048,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4024,
											"end": 4048,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4048,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4021,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 4021,
											"end": 4157,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4104,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4107,
											"end": 4108,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4105,
											"end": 4106,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 4105,
											"end": 4108,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4108,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 4105,
											"end": 4108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4108,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 4105,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 4095,
											"end": 4109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4089,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4090,
											"end": 4091,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 4080,
											"end": 4092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "tag",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "tag",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4136,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 4127,
											"end": 4142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4021,
											"end": 4157,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 4021,
											"end": 4157,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 3994,
											"end": 3997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3971,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 3971,
											"end": 4167,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3971,
											"end": 4167,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 3971,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3971,
											"end": 4167,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3762,
											"end": 4173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 215,
											"end": 230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 230,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "tag",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1308,
											"end": 1312,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1345,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1353,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1353,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1392,
											"end": 1401,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1419,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1385,
											"end": 1419,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1419,
											"name": "PUSH",
											"source": 13,
											"value": "3F0A0797"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 1385,
											"end": 1421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1371,
											"end": 1421,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1381,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1371,
											"end": 1421,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1421,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1477,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 1371,
											"end": 1477,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1446,
											"end": 1455,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1475,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1475,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1475,
											"name": "PUSH",
											"source": 13,
											"value": "DA8909E5"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 1439,
											"end": 1477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1425,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1425,
											"end": 1477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1425,
											"end": 1435,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1425,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1425,
											"end": 1477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1425,
											"end": 1477,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1477,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 1371,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1363,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 1363,
											"end": 1478,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1363,
											"end": 1478,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1363,
											"end": 1478,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1363,
											"end": 1478,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1363,
											"end": 1478,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 1363,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1497,
											"end": 1513,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1497,
											"end": 1513,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1497,
											"end": 1513,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1497,
											"end": 1513,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1961,
											"name": "tag",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 1532,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1548,
											"end": 1549,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 1961,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 1532,
											"end": 1961,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1582,
											"end": 1598,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1610,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1611,
											"end": 1612,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 1601,
											"end": 1613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1582,
											"end": 1613,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1582,
											"end": 1613,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1649,
											"end": 1650,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1630,
											"end": 1635,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1636,
											"end": 1644,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1650,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1627,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 1627,
											"end": 1951,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1682,
											"end": 1696,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1714,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "PUSH",
											"source": 13,
											"value": "313CE567"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 1699,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1682,
											"end": 1726,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1682,
											"end": 1726,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1758,
											"end": 1760,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 1747,
											"end": 1755,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1747,
											"end": 1760,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1747,
											"end": 1760,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1747,
											"end": 1760,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1744,
											"end": 1936,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1744,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 1744,
											"end": 1936,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1769,
											"end": 1777,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1787,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1762,
											"end": 1787,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1787,
											"name": "PUSH",
											"source": 13,
											"value": "A9059CBB"
										},
										{
											"begin": 1788,
											"end": 1790,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 1836,
											"end": 1838,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 1826,
											"end": 1834,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 1821,
											"end": 1838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1816,
											"end": 1818,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 1816,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 1816,
											"end": 1839,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1816,
											"end": 1839,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1816,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 1816,
											"end": 1839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1816,
											"end": 1839,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 1816,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1815,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1808,
											"end": 1815,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1815,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1815,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1815,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1808,
											"end": 1815,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1815,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1815,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1815,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1808,
											"end": 1815,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1792,
											"end": 1807,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 1792,
											"end": 1815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1792,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 1792,
											"end": 1839,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1792,
											"end": 1839,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1792,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 1792,
											"end": 1839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1792,
											"end": 1839,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 1792,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 1762,
											"end": 1840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 1762,
											"end": 1840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "tag",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1744,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 1744,
											"end": 1936,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1744,
											"end": 1936,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 1744,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1878,
											"end": 1880,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 1866,
											"end": 1874,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1866,
											"end": 1880,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1866,
											"end": 1880,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1866,
											"end": 1880,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1863,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 1863,
											"end": 1936,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 1897,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1907,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1882,
											"end": 1907,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1907,
											"name": "PUSH",
											"source": 13,
											"value": "A9059CBB"
										},
										{
											"begin": 1908,
											"end": 1910,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1912,
											"end": 1935,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1912,
											"end": 1935,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1912,
											"end": 1927,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 1912,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 1912,
											"end": 1935,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1912,
											"end": 1935,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1912,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 1912,
											"end": 1935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1912,
											"end": 1935,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 1912,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 1882,
											"end": 1936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 1882,
											"end": 1936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1863,
											"end": 1936,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 1863,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1744,
											"end": 1936,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 1744,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1664,
											"end": 1951,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1627,
											"end": 1951,
											"name": "tag",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 1627,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1568,
											"end": 1961,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1558,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1558,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 1555,
											"end": 1558,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 1555,
											"end": 1558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1558,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 1555,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1558,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1558,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1558,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 1532,
											"end": 1961,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 1961,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 1532,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 1961,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 1981,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1970,
											"end": 1981,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1970,
											"end": 1981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1970,
											"end": 1981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1970,
											"end": 1981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4284,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4265,
											"end": 4284,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4275,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4284,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4265,
											"end": 4284,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4284,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4257,
											"end": 4285,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 4257,
											"end": 4285,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4257,
											"end": 4285,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4257,
											"end": 4285,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4257,
											"end": 4285,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4257,
											"end": 4285,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 4257,
											"end": 4285,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4310,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4300,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4295,
											"end": 4300,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 731,
											"end": 739,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "828"
										},
										{
											"begin": 717,
											"end": 739,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 717,
											"end": 739,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 717,
											"end": 727,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 717,
											"end": 739,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 717,
											"end": 739,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 717,
											"end": 739,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 709,
											"end": 740,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 740,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "tag",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 709,
											"end": 740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3526,
											"end": 3532,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3526,
											"end": 3537,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3523,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 3523,
											"end": 3664,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3557,
											"end": 3558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3539,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 3539,
											"end": 3554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3545,
											"end": 3553,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3539,
											"end": 3554,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3539,
											"end": 3554,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3554,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3554,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3539,
											"end": 3554,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3554,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3554,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3554,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3539,
											"end": 3554,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3554,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3558,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3558,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3558,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3523,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 3523,
											"end": 3664,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3523,
											"end": 3664,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 3523,
											"end": 3664,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3586,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3576,
											"end": 3582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3587,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3573,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 3573,
											"end": 3664,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3629,
											"end": 3630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 3611,
											"end": 3626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3617,
											"end": 3625,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3611,
											"end": 3626,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3611,
											"end": 3626,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3626,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3626,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3611,
											"end": 3626,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3626,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3626,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3626,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3611,
											"end": 3626,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3611,
											"end": 3626,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3630,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3630,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3630,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3630,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3644,
											"end": 3651,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 3644,
											"end": 3653,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3573,
											"end": 3664,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 3573,
											"end": 3664,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3523,
											"end": 3664,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 3523,
											"end": 3664,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3688,
											"end": 3696,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 843,
											"end": 974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 731,
											"end": 739,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "828"
										},
										{
											"begin": 717,
											"end": 739,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 717,
											"end": 739,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 717,
											"end": 727,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 717,
											"end": 739,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 717,
											"end": 739,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 717,
											"end": 739,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 709,
											"end": 740,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 740,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 709,
											"end": 740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 817,
											"end": 818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 805,
											"end": 813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 805,
											"end": 813,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 805,
											"end": 813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 805,
											"end": 813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 805,
											"end": 813,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 805,
											"end": 813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 805,
											"end": 813,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 805,
											"end": 813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 805,
											"end": 813,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 805,
											"end": 818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 805,
											"end": 818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 805,
											"end": 818,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 797,
											"end": 819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 797,
											"end": 819,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 797,
											"end": 819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 819,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 797,
											"end": 819,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 797,
											"end": 819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 797,
											"end": 819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 936,
											"end": 945,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 928,
											"end": 933,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 928,
											"end": 933,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 928,
											"end": 945,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 928,
											"end": 945,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 928,
											"end": 945,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 928,
											"end": 945,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 928,
											"end": 945,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 928,
											"end": 945,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 945,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 928,
											"end": 945,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 928,
											"end": 945,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 928,
											"end": 945,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 928,
											"end": 945,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 928,
											"end": 945,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 945,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 928,
											"end": 945,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 928,
											"end": 945,
											"modifierDepth": 2,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 928,
											"end": 945,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 928,
											"end": 945,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 928,
											"end": 945,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 966,
											"end": 967,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 955,
											"end": 963,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 955,
											"end": 963,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 955,
											"end": 967,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 955,
											"end": 967,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 955,
											"end": 967,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 955,
											"end": 967,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"modifierDepth": 2,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2052,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2362,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2330,
											"end": 2362,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2362,
											"name": "PUSH",
											"source": 13,
											"value": "DA8909E5"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 2330,
											"end": 2364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2377,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2316,
											"end": 2377,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2377,
											"name": "PUSH",
											"source": 13,
											"value": "D0B06F5D"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 2316,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2297,
											"end": 2379,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2297,
											"end": 2379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2389,
											"end": 2398,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2447,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2415,
											"end": 2447,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2447,
											"name": "PUSH",
											"source": 13,
											"value": "DA8909E5"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 2415,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2466,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2401,
											"end": 2466,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2466,
											"name": "PUSH",
											"source": 13,
											"value": "7F8483A4"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 2401,
											"end": 2468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2389,
											"end": 2468,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2389,
											"end": 2468,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2503,
											"end": 2507,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2486,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 2486,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 2486,
											"end": 2500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2486,
											"end": 2500,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 2486,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2486,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 2486,
											"end": 2507,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2486,
											"end": 2507,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2486,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 2486,
											"end": 2507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2486,
											"end": 2507,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 2486,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2509,
											"end": 2520,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2478,
											"end": 2521,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2478,
											"end": 2521,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2478,
											"end": 2521,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2478,
											"end": 2521,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2478,
											"end": 2521,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2478,
											"end": 2521,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 284,
											"end": 304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 284,
											"end": 304,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 284,
											"end": 304,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 284,
											"end": 304,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 284,
											"end": 304,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2538,
											"end": 3428,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 2538,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2596,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2751,
											"end": 2760,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2751,
											"end": 2767,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2751,
											"end": 2767,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2751,
											"end": 2767,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2751,
											"end": 2767,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2742,
											"end": 2767,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2742,
											"end": 2767,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2781,
											"end": 2787,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2777,
											"end": 3422,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 2777,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2797,
											"end": 2798,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2793,
											"end": 2794,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2793,
											"end": 2798,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2777,
											"end": 3422,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2777,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 2777,
											"end": 3422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2827,
											"end": 2839,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2851,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2852,
											"end": 2853,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 2842,
											"end": 2854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2827,
											"end": 2854,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2827,
											"end": 2854,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2868,
											"end": 2880,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2894,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2905,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2883,
											"end": 2905,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2905,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 2914,
											"end": 2918,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 2883,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 2883,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2934,
											"end": 2945,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2953,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2958,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2934,
											"end": 2959,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2934,
											"end": 2959,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2999,
											"end": 3000,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2989,
											"end": 2995,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2989,
											"end": 3000,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 2986,
											"end": 3411,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3032,
											"end": 3042,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3116,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 3143,
											"end": 3157,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3162,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3165,
											"end": 3166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3121,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 3121,
											"end": 3167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3091,
											"end": 3167,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3091,
											"end": 3167,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3091,
											"end": 3167,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 3226,
											"end": 3244,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3254,
											"end": 3261,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3264,
											"end": 3268,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3277,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3282,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 3197,
											"end": 3284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3284,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 3197,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3189,
											"end": 3284,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3189,
											"end": 3284,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3303,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3340,
											"end": 3345,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3330,
											"end": 3337,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 3330,
											"end": 3345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3345,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 3320,
											"end": 3345,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3345,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 3320,
											"end": 3345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3345,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 3320,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3345,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3345,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3014,
											"end": 3360,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 2986,
											"end": 3411,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3411,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 2986,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3391,
											"end": 3392,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3381,
											"end": 3387,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3381,
											"end": 3392,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3378,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 3378,
											"end": 3411,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3404,
											"end": 3411,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 3394,
											"end": 3411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3378,
											"end": 3411,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 3378,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3411,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 2986,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2813,
											"end": 3422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2813,
											"end": 3422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2813,
											"end": 3422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 2800,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2777,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 2777,
											"end": 3422,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2777,
											"end": 3422,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 2777,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2777,
											"end": 3422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2602,
											"end": 3428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2538,
											"end": 3428,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2538,
											"end": 3428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 808,
											"end": 2049,
											"name": "tag",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 808,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 905,
											"end": 929,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 960,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 998,
											"end": 999,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 994,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 984,
											"end": 999,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 984,
											"end": 999,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 984,
											"end": 999,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "PUSH",
											"source": 15,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 976,
											"end": 1006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "tag",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "tag",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1017,
											"end": 1044,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1061,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 1047,
											"end": 1062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "tag",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "tag",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "tag",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1017,
											"end": 1062,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1017,
											"end": 1062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1089,
											"end": 1099,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1083,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1084,
											"end": 1085,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 1072,
											"end": 1086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "tag",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "tag",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1099,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1099,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1072,
											"end": 1099,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1099,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1099,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1099,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1072,
											"end": 1099,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1099,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1099,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1099,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1099,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1120,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1121,
											"end": 1122,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 1109,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "tag",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "tag",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1127,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1127,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1127,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1127,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1127,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1127,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1127,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1127,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1127,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1127,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1127,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1169,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1222,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1253,
											"end": 1257,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1266,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1238,
											"end": 1266,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1266,
											"name": "PUSH",
											"source": 15,
											"value": "883BDBFD"
										},
										{
											"begin": 1267,
											"end": 1278,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 1238,
											"end": 1279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "tag",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "tag",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 1238,
											"end": 1279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "tag",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1138,
											"end": 1279,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1138,
											"end": 1279,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1138,
											"end": 1279,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1138,
											"end": 1279,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1290,
											"end": 1316,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1340,
											"end": 1355,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1356,
											"end": 1357,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 1340,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "tag",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "tag",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1334,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1335,
											"end": 1336,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 1319,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "tag",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "tag",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 1319,
											"end": 1358,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1358,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 1319,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1358,
											"name": "tag",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 1319,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1290,
											"end": 1358,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1290,
											"end": 1358,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1500,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1501,
											"end": 1502,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 1466,
											"end": 1503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "tag",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "tag",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1460,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1461,
											"end": 1462,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 1426,
											"end": 1463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "tag",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "tag",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 1426,
											"end": 1503,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1503,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 1426,
											"end": 1503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1503,
											"name": "tag",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 1426,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1368,
											"end": 1503,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1368,
											"end": 1503,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1570,
											"end": 1580,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1541,
											"end": 1581,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 1541,
											"end": 1581,
											"name": "SIGNEXTEND",
											"source": 15
										},
										{
											"begin": 1541,
											"end": 1561,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1541,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 1541,
											"end": 1581,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1541,
											"end": 1581,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1541,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 1541,
											"end": 1581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1541,
											"end": 1581,
											"name": "tag",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 1541,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1582,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1582,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1664,
											"end": 1665,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1641,
											"end": 1661,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1641,
											"end": 1665,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 1641,
											"end": 1665,
											"name": "SIGNEXTEND",
											"source": 15
										},
										{
											"begin": 1641,
											"end": 1665,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1641,
											"end": 1716,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1641,
											"end": 1716,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1641,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 1641,
											"end": 1716,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1641,
											"end": 1716,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1714,
											"end": 1715,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1709,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 1670,
											"end": 1710,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 1670,
											"end": 1710,
											"name": "SIGNEXTEND",
											"source": 15
										},
										{
											"begin": 1670,
											"end": 1690,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1670,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 1670,
											"end": 1710,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1670,
											"end": 1710,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1670,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 1670,
											"end": 1710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1670,
											"end": 1710,
											"name": "tag",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 1670,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1670,
											"end": 1715,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 1670,
											"end": 1715,
											"name": "SIGNEXTEND",
											"source": 15
										},
										{
											"begin": 1670,
											"end": 1715,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1670,
											"end": 1715,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1641,
											"end": 1716,
											"name": "tag",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 1641,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1738,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 1637,
											"end": 1738,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 1738,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 1738,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 1718,
											"end": 1738,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 1718,
											"end": 1738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 1738,
											"name": "tag",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 1718,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 1738,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 1738,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 1738,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1738,
											"name": "tag",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 1637,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1866,
											"end": 1888,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1913,
											"end": 1930,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1891,
											"end": 1930,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1891,
											"end": 1930,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 1909,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 1891,
											"end": 1910,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1891,
											"end": 1910,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1891,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 1891,
											"end": 1930,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1891,
											"end": 1930,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1891,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 1891,
											"end": 1930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1891,
											"end": 1930,
											"name": "tag",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 1891,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1866,
											"end": 1930,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1866,
											"end": 1930,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2038,
											"end": 2040,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2033,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1990,
											"end": 2034,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2034,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1990,
											"end": 2040,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2040,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1990,
											"end": 2040,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1990,
											"end": 2040,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1972,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 1972,
											"end": 2041,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1972,
											"end": 2041,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1972,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 1972,
											"end": 2041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1972,
											"end": 2041,
											"name": "tag",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 1972,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1940,
											"end": 2042,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 1940,
											"end": 2042,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 966,
											"end": 2049,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 966,
											"end": 2049,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 966,
											"end": 2049,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 966,
											"end": 2049,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 966,
											"end": 2049,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 966,
											"end": 2049,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 808,
											"end": 2049,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 808,
											"end": 2049,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 808,
											"end": 2049,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 808,
											"end": 2049,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 808,
											"end": 2049,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 808,
											"end": 2049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2553,
											"end": 3508,
											"name": "tag",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 2553,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2728,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2763,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 2791,
											"end": 2795,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2763,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 2763,
											"end": 2796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2763,
											"end": 2796,
											"name": "tag",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 2763,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2740,
											"end": 2796,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2740,
											"end": 2796,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2931,
											"end": 2948,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2915,
											"end": 2948,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2915,
											"end": 2948,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2915,
											"end": 2927,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2915,
											"end": 2948,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2915,
											"end": 2948,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2915,
											"end": 2948,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2911,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 2911,
											"end": 3502,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 2981,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3020,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2984,
											"end": 3020,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2984,
											"end": 3020,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2992,
											"end": 3004,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2984,
											"end": 3005,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2984,
											"end": 3005,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2984,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 2984,
											"end": 3020,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2984,
											"end": 3020,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2984,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 2984,
											"end": 3020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2984,
											"end": 3020,
											"name": "tag",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 2984,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 3020,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 3020,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3060,
											"end": 3070,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3048,
											"end": 3070,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3048,
											"end": 3070,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3048,
											"end": 3057,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3048,
											"end": 3070,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3048,
											"end": 3070,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3048,
											"end": 3070,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3048,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 3048,
											"end": 3204,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3156,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 3172,
											"end": 3180,
											"name": "PUSH",
											"source": 15,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3182,
											"end": 3192,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3156,
											"end": 3204,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3156,
											"end": 3204,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3194,
											"end": 3203,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3156,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 3156,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3156,
											"end": 3204,
											"name": "tag",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 3156,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3048,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 3048,
											"end": 3204,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3048,
											"end": 3204,
											"name": "tag",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 3048,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3089,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3116,
											"end": 3126,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3089,
											"end": 3137,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3089,
											"end": 3137,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3128,
											"end": 3136,
											"name": "PUSH",
											"source": 15,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3089,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 3089,
											"end": 3137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3089,
											"end": 3137,
											"name": "tag",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 3089,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3048,
											"end": 3204,
											"name": "tag",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 3048,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3034,
											"end": 3204,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3034,
											"end": 3204,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2950,
											"end": 3215,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2911,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 2911,
											"end": 3502,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2911,
											"end": 3502,
											"name": "tag",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 2911,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3235,
											"end": 3252,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 3271,
											"end": 3283,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3255,
											"end": 3307,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3255,
											"end": 3307,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3285,
											"end": 3297,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3255,
											"end": 3307,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3255,
											"end": 3307,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3299,
											"end": 3306,
											"name": "PUSH",
											"source": 15,
											"value": "10000000000000000"
										},
										{
											"begin": 3255,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 3255,
											"end": 3307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3255,
											"end": 3307,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 3255,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3235,
											"end": 3307,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3235,
											"end": 3307,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3347,
											"end": 3357,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3335,
											"end": 3357,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3335,
											"end": 3357,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3335,
											"end": 3344,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3335,
											"end": 3357,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3335,
											"end": 3357,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3335,
											"end": 3357,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3335,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 3335,
											"end": 3491,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3443,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 3459,
											"end": 3467,
											"name": "PUSH",
											"source": 15,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 3469,
											"end": 3479,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3443,
											"end": 3491,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3443,
											"end": 3491,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3481,
											"end": 3490,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3443,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 3443,
											"end": 3491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3443,
											"end": 3491,
											"name": "tag",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 3443,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3335,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 3335,
											"end": 3491,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3335,
											"end": 3491,
											"name": "tag",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 3335,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3376,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 3392,
											"end": 3401,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3403,
											"end": 3413,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3376,
											"end": 3424,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3376,
											"end": 3424,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3415,
											"end": 3423,
											"name": "PUSH",
											"source": 15,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 3376,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 3376,
											"end": 3424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3376,
											"end": 3424,
											"name": "tag",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 3376,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3335,
											"end": 3491,
											"name": "tag",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 3335,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3321,
											"end": 3491,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3321,
											"end": 3491,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3221,
											"end": 3502,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2911,
											"end": 3502,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 2911,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2730,
											"end": 3508,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2553,
											"end": 3508,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2553,
											"end": 3508,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2553,
											"end": 3508,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2553,
											"end": 3508,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2553,
											"end": 3508,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2553,
											"end": 3508,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2553,
											"end": 3508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1355,
											"end": 3943,
											"name": "tag",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 1355,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1418,
											"end": 1438,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1465,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1475,
											"end": 1476,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1472,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1468,
											"end": 1476,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 1468,
											"end": 1476,
											"name": "SIGNEXTEND",
											"source": 16
										},
										{
											"begin": 1468,
											"end": 1476,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1519,
											"end": 1523,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1512,
											"end": 1524,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 1512,
											"end": 1524,
											"name": "SIGNEXTEND",
											"source": 16
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "tag",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1495,
											"end": 1499,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1500,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 1488,
											"end": 1500,
											"name": "SIGNEXTEND",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 1487,
											"end": 1500,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 1487,
											"end": 1500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1500,
											"name": "tag",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 1487,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "tag",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1450,
											"end": 1525,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1450,
											"end": 1525,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 477,
											"end": 484,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 637,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 637,
											"end": 646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 637,
											"end": 646,
											"name": "tag",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1554,
											"end": 1579,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFF"
										},
										{
											"begin": 1554,
											"end": 1579,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1543,
											"end": 1550,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1543,
											"end": 1579,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 1543,
											"end": 1579,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 1535,
											"end": 1585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "tag",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "tag",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1630,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1622,
											"end": 1625,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1612,
											"end": 1619,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1612,
											"end": 1625,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1612,
											"end": 1630,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1670,
											"end": 1705,
											"name": "PUSH",
											"source": 16,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "tag",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1633,
											"end": 1667,
											"name": "PUSH",
											"source": 16,
											"value": "FFFCB933BD6FAD37AA2D162D1A594001"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "tag",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1596,
											"end": 1705,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1596,
											"end": 1705,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1596,
											"end": 1705,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1596,
											"end": 1705,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1736,
											"end": 1737,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1732,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 1719,
											"end": 1726,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1719,
											"end": 1732,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1719,
											"end": 1737,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1715,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 1715,
											"end": 1798,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1795,
											"end": 1798,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 1756,
											"end": 1790,
											"name": "PUSH",
											"source": 16,
											"value": "FFF97272373D413259A46990580E213A"
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 1748,
											"end": 1790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "tag",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1747,
											"end": 1798,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1747,
											"end": 1798,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 1739,
											"end": 1798,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1739,
											"end": 1798,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1715,
											"end": 1798,
											"name": "tag",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 1715,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1829,
											"end": 1830,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1825,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1812,
											"end": 1819,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1812,
											"end": 1825,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1808,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 1808,
											"end": 1891,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1888,
											"end": 1891,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 1849,
											"end": 1883,
											"name": "PUSH",
											"source": 16,
											"value": "FFF2E50F5F656932EF12357CF3C7FDCC"
										},
										{
											"begin": 1841,
											"end": 1846,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1841,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 1841,
											"end": 1883,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1841,
											"end": 1883,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1841,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 1841,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1841,
											"end": 1883,
											"name": "tag",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 1841,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1840,
											"end": 1891,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1840,
											"end": 1891,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 1832,
											"end": 1891,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1832,
											"end": 1891,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1808,
											"end": 1891,
											"name": "tag",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 1808,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1915,
											"end": 1918,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 1905,
											"end": 1912,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1905,
											"end": 1923,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1901,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 1901,
											"end": 1984,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1981,
											"end": 1984,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 1942,
											"end": 1976,
											"name": "PUSH",
											"source": 16,
											"value": "FFE5CACA7E10E4E61C3624EAA0941CD0"
										},
										{
											"begin": 1934,
											"end": 1939,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 1934,
											"end": 1976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "tag",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1933,
											"end": 1984,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1933,
											"end": 1984,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 1925,
											"end": 1984,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1925,
											"end": 1984,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1901,
											"end": 1984,
											"name": "tag",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 1901,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2016,
											"end": 2017,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2008,
											"end": 2012,
											"name": "PUSH",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 1998,
											"end": 2005,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1998,
											"end": 2017,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1994,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 1994,
											"end": 2078,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2075,
											"end": 2078,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "PUSH",
											"source": 16,
											"value": "FFCB9843D60F6159C9DB58835C926644"
										},
										{
											"begin": 2028,
											"end": 2033,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2028,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 2028,
											"end": 2070,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2028,
											"end": 2070,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2028,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 2028,
											"end": 2070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2028,
											"end": 2070,
											"name": "tag",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 2028,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2027,
											"end": 2078,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2027,
											"end": 2078,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2019,
											"end": 2078,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2019,
											"end": 2078,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1994,
											"end": 2078,
											"name": "tag",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 1994,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2110,
											"end": 2111,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2106,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2092,
											"end": 2099,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2092,
											"end": 2111,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2088,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 2088,
											"end": 2172,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2169,
											"end": 2172,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "PUSH",
											"source": 16,
											"value": "FF973B41FA98C081472E6896DFB254C0"
										},
										{
											"begin": 2122,
											"end": 2127,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 2122,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "tag",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2172,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2172,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2113,
											"end": 2172,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2113,
											"end": 2172,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2088,
											"end": 2172,
											"name": "tag",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 2088,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2204,
											"end": 2205,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2200,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2186,
											"end": 2200,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2186,
											"end": 2205,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 2182,
											"end": 2266,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2263,
											"end": 2266,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "PUSH",
											"source": 16,
											"value": "FF2EA16466C96A3843EC78B326B52861"
										},
										{
											"begin": 2216,
											"end": 2221,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2216,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 2216,
											"end": 2258,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2216,
											"end": 2258,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2216,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 2216,
											"end": 2258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2216,
											"end": 2258,
											"name": "tag",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 2216,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2215,
											"end": 2266,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2215,
											"end": 2266,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2207,
											"end": 2266,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2207,
											"end": 2266,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2266,
											"name": "tag",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 2182,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2298,
											"end": 2299,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2294,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2280,
											"end": 2287,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2280,
											"end": 2294,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2280,
											"end": 2299,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2276,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 2276,
											"end": 2360,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2360,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2318,
											"end": 2352,
											"name": "PUSH",
											"source": 16,
											"value": "FE5DEE046A99A2A811C461F1969C3053"
										},
										{
											"begin": 2310,
											"end": 2315,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2310,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "349"
										},
										{
											"begin": 2310,
											"end": 2352,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2310,
											"end": 2352,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2310,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 2310,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2310,
											"end": 2352,
											"name": "tag",
											"source": 16,
											"value": "349"
										},
										{
											"begin": 2310,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2309,
											"end": 2360,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2309,
											"end": 2360,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2301,
											"end": 2360,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2301,
											"end": 2360,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2276,
											"end": 2360,
											"name": "tag",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 2276,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2393,
											"end": 2394,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2389,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2374,
											"end": 2381,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2374,
											"end": 2389,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2374,
											"end": 2394,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2370,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "350"
										},
										{
											"begin": 2370,
											"end": 2455,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2452,
											"end": 2455,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2413,
											"end": 2447,
											"name": "PUSH",
											"source": 16,
											"value": "FCBE86C7900A88AEDCFFC83B479AA3A4"
										},
										{
											"begin": 2405,
											"end": 2410,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2405,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 2405,
											"end": 2447,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2405,
											"end": 2447,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2405,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 2405,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2405,
											"end": 2447,
											"name": "tag",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 2405,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2404,
											"end": 2455,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2404,
											"end": 2455,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2396,
											"end": 2455,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2396,
											"end": 2455,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2370,
											"end": 2455,
											"name": "tag",
											"source": 16,
											"value": "350"
										},
										{
											"begin": 2370,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2488,
											"end": 2489,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2479,
											"end": 2484,
											"name": "PUSH",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 2469,
											"end": 2476,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2469,
											"end": 2484,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2469,
											"end": 2489,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2465,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 2465,
											"end": 2550,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2547,
											"end": 2550,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2508,
											"end": 2542,
											"name": "PUSH",
											"source": 16,
											"value": "F987A7253AC413176F2B074CF7815E54"
										},
										{
											"begin": 2500,
											"end": 2505,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 2500,
											"end": 2542,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2542,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 2500,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2542,
											"name": "tag",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 2500,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2499,
											"end": 2550,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2499,
											"end": 2550,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2491,
											"end": 2550,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2491,
											"end": 2550,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2465,
											"end": 2550,
											"name": "tag",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 2465,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2583,
											"end": 2584,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2579,
											"name": "PUSH",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 2564,
											"end": 2571,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2564,
											"end": 2579,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2564,
											"end": 2584,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2560,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 2560,
											"end": 2645,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2642,
											"end": 2645,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2603,
											"end": 2637,
											"name": "PUSH",
											"source": 16,
											"value": "F3392B0822B70005940C7A398E4B70F3"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2595,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 2595,
											"end": 2637,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2595,
											"end": 2637,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2595,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 2595,
											"end": 2637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2595,
											"end": 2637,
											"name": "tag",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 2595,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2594,
											"end": 2645,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2594,
											"end": 2645,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2586,
											"end": 2645,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2586,
											"end": 2645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2560,
											"end": 2645,
											"name": "tag",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 2560,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2678,
											"end": 2679,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2669,
											"end": 2674,
											"name": "PUSH",
											"source": 16,
											"value": "800"
										},
										{
											"begin": 2659,
											"end": 2666,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2659,
											"end": 2674,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2659,
											"end": 2679,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2655,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "356"
										},
										{
											"begin": 2655,
											"end": 2740,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2737,
											"end": 2740,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "PUSH",
											"source": 16,
											"value": "E7159475A2C29B7443B29C7FA6E889D9"
										},
										{
											"begin": 2690,
											"end": 2695,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2690,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 2690,
											"end": 2732,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2690,
											"end": 2732,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2690,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 2690,
											"end": 2732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2690,
											"end": 2732,
											"name": "tag",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 2690,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2689,
											"end": 2740,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2689,
											"end": 2740,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2681,
											"end": 2740,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2681,
											"end": 2740,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2655,
											"end": 2740,
											"name": "tag",
											"source": 16,
											"value": "356"
										},
										{
											"begin": 2655,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2774,
											"end": 2775,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "PUSH",
											"source": 16,
											"value": "1000"
										},
										{
											"begin": 2754,
											"end": 2761,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2754,
											"end": 2770,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2754,
											"end": 2775,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2750,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "358"
										},
										{
											"begin": 2750,
											"end": 2836,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2833,
											"end": 2836,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2794,
											"end": 2828,
											"name": "PUSH",
											"source": 16,
											"value": "D097F3BDFD2022B8845AD8F792AA5825"
										},
										{
											"begin": 2786,
											"end": 2791,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2786,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 2786,
											"end": 2828,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2786,
											"end": 2828,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2786,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 2786,
											"end": 2828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2786,
											"end": 2828,
											"name": "tag",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 2786,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2785,
											"end": 2836,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2785,
											"end": 2836,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2777,
											"end": 2836,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2777,
											"end": 2836,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2750,
											"end": 2836,
											"name": "tag",
											"source": 16,
											"value": "358"
										},
										{
											"begin": 2750,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2870,
											"end": 2871,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "PUSH",
											"source": 16,
											"value": "2000"
										},
										{
											"begin": 2850,
											"end": 2857,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2850,
											"end": 2866,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2846,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 2846,
											"end": 2932,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2929,
											"end": 2932,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2890,
											"end": 2924,
											"name": "PUSH",
											"source": 16,
											"value": "A9F746462D870FDF8A65DC1F90E061E5"
										},
										{
											"begin": 2882,
											"end": 2887,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2882,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 2882,
											"end": 2924,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2882,
											"end": 2924,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2882,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 2882,
											"end": 2924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2882,
											"end": 2924,
											"name": "tag",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 2882,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2881,
											"end": 2932,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2881,
											"end": 2932,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2873,
											"end": 2932,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2873,
											"end": 2932,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2846,
											"end": 2932,
											"name": "tag",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 2846,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "PUSH",
											"source": 16,
											"value": "4000"
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2946,
											"end": 2962,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2946,
											"end": 2967,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2942,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 2942,
											"end": 3028,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3025,
											"end": 3028,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2986,
											"end": 3020,
											"name": "PUSH",
											"source": 16,
											"value": "70D869A156D2A1B890BB3DF62BAF32F7"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2978,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 2978,
											"end": 3020,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2978,
											"end": 3020,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2978,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 2978,
											"end": 3020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2978,
											"end": 3020,
											"name": "tag",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 2978,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2977,
											"end": 3028,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2977,
											"end": 3028,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2969,
											"end": 3028,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2969,
											"end": 3028,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2942,
											"end": 3028,
											"name": "tag",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 2942,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3062,
											"end": 3063,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3058,
											"name": "PUSH",
											"source": 16,
											"value": "8000"
										},
										{
											"begin": 3042,
											"end": 3049,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3042,
											"end": 3058,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3042,
											"end": 3063,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 3038,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 3038,
											"end": 3124,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3121,
											"end": 3124,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 3082,
											"end": 3116,
											"name": "PUSH",
											"source": 16,
											"value": "31BE135F97D08FD981231505542FCFA6"
										},
										{
											"begin": 3074,
											"end": 3079,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3074,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 3074,
											"end": 3116,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3074,
											"end": 3116,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3074,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 3074,
											"end": 3116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3074,
											"end": 3116,
											"name": "tag",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 3074,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3073,
											"end": 3124,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3073,
											"end": 3124,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 3065,
											"end": 3124,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3065,
											"end": 3124,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3038,
											"end": 3124,
											"name": "tag",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 3038,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3159,
											"end": 3160,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3155,
											"name": "PUSH",
											"source": 16,
											"value": "10000"
										},
										{
											"begin": 3138,
											"end": 3145,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3138,
											"end": 3155,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3138,
											"end": 3160,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 3134,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 3134,
											"end": 3220,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3217,
											"end": 3220,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 3179,
											"end": 3212,
											"name": "PUSH",
											"source": 16,
											"value": "9AA508B5B7A84E1C677DE54F3E99BC9"
										},
										{
											"begin": 3171,
											"end": 3176,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3171,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 3171,
											"end": 3212,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3171,
											"end": 3212,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3171,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 3171,
											"end": 3212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3171,
											"end": 3212,
											"name": "tag",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 3171,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3170,
											"end": 3220,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3170,
											"end": 3220,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 3162,
											"end": 3220,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3162,
											"end": 3220,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3134,
											"end": 3220,
											"name": "tag",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 3134,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3255,
											"end": 3256,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3251,
											"name": "PUSH",
											"source": 16,
											"value": "20000"
										},
										{
											"begin": 3234,
											"end": 3241,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3234,
											"end": 3251,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3234,
											"end": 3256,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 3230,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 3230,
											"end": 3315,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3312,
											"end": 3315,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 3275,
											"end": 3307,
											"name": "PUSH",
											"source": 16,
											"value": "5D6AF8DEDB81196699C329225EE604"
										},
										{
											"begin": 3267,
											"end": 3272,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3267,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 3267,
											"end": 3307,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3267,
											"end": 3307,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3267,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 3267,
											"end": 3307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3267,
											"end": 3307,
											"name": "tag",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 3267,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3266,
											"end": 3315,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3266,
											"end": 3315,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 3258,
											"end": 3315,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3258,
											"end": 3315,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3230,
											"end": 3315,
											"name": "tag",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 3230,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3350,
											"end": 3351,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "PUSH",
											"source": 16,
											"value": "40000"
										},
										{
											"begin": 3329,
											"end": 3336,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3329,
											"end": 3346,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3329,
											"end": 3351,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 3325,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 3325,
											"end": 3408,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3405,
											"end": 3408,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 3370,
											"end": 3400,
											"name": "PUSH",
											"source": 16,
											"value": "2216E584F5FA1EA926041BEDFE98"
										},
										{
											"begin": 3362,
											"end": 3367,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 3362,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "tag",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3361,
											"end": 3408,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3361,
											"end": 3408,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 3353,
											"end": 3408,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3353,
											"end": 3408,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3325,
											"end": 3408,
											"name": "tag",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 3325,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3443,
											"end": 3444,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3439,
											"name": "PUSH",
											"source": 16,
											"value": "80000"
										},
										{
											"begin": 3422,
											"end": 3429,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3439,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3444,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 3418,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 3418,
											"end": 3496,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3493,
											"end": 3496,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 3463,
											"end": 3488,
											"name": "PUSH",
											"source": 16,
											"value": "48A170391F7DC42444E8FA2"
										},
										{
											"begin": 3455,
											"end": 3460,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 3455,
											"end": 3488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "tag",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 3446,
											"end": 3496,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3446,
											"end": 3496,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3418,
											"end": 3496,
											"name": "tag",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 3418,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3518,
											"end": 3519,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3511,
											"end": 3515,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3511,
											"end": 3519,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 3511,
											"end": 3519,
											"name": "SIGNEXTEND",
											"source": 16
										},
										{
											"begin": 3511,
											"end": 3519,
											"name": "SGT",
											"source": 16
										},
										{
											"begin": 3507,
											"end": 3554,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3507,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 3507,
											"end": 3554,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3529,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 3529,
											"end": 3554,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3529,
											"end": 3554,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3529,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "197"
										},
										{
											"begin": 3529,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3529,
											"end": 3554,
											"name": "tag",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 3529,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3521,
											"end": 3554,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3521,
											"end": 3554,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3507,
											"end": 3554,
											"name": "tag",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 3507,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3913,
											"end": 3920,
											"name": "PUSH",
											"source": 16,
											"value": "100000000"
										},
										{
											"begin": 3904,
											"end": 3909,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3904,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 3904,
											"end": 3921,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3904,
											"end": 3921,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3904,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 3904,
											"end": 3921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3904,
											"end": 3921,
											"name": "tag",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 3904,
											"end": 3921,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3904,
											"end": 3926,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3933,
											"end": 3934,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "tag",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3929,
											"end": 3930,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "tag",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3897,
											"end": 3899,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3888,
											"end": 3893,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "261"
										},
										{
											"begin": 3887,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "tag",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1440,
											"end": 3943,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1440,
											"end": 3943,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1355,
											"end": 3943,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1355,
											"end": 3943,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1355,
											"end": 3943,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1355,
											"end": 3943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 742,
											"end": 4543,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 742,
											"end": 4543,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 854,
											"end": 868,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1196,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1251,
											"end": 1264,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1364,
											"end": 1370,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1358,
											"end": 1359,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1351,
											"end": 1371,
											"name": "MULMOD",
											"source": 14
										},
										{
											"begin": 1400,
											"end": 1401,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1397,
											"end": 1398,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1402,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1384,
											"end": 1402,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1384,
											"end": 1402,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1451,
											"end": 1456,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1447,
											"end": 1449,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1444,
											"end": 1457,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1436,
											"end": 1441,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1432,
											"end": 1434,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1428,
											"end": 1442,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1424,
											"end": 1458,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1415,
											"end": 1458,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1415,
											"end": 1458,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1327,
											"end": 1468,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1545,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1540,
											"end": 1550,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1536,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 1536,
											"end": 1715,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1589,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1574,
											"end": 1585,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1574,
											"end": 1589,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1566,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 1566,
											"end": 1590,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1566,
											"end": 1590,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1590,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1566,
											"end": 1590,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1566,
											"end": 1590,
											"name": "tag",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 1566,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1652,
											"end": 1663,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1645,
											"end": 1650,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1664,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1631,
											"end": 1664,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1631,
											"end": 1664,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1691,
											"end": 1704,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1691,
											"end": 1704,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1691,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 1691,
											"end": 1704,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1536,
											"end": 1715,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 1536,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1842,
											"end": 1847,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1828,
											"end": 1839,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2212,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2195,
											"end": 2196,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 2188,
											"end": 2213,
											"name": "MULMOD",
											"source": 14
										},
										{
											"begin": 2175,
											"end": 2213,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2175,
											"end": 2213,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2344,
											"end": 2349,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2333,
											"end": 2342,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2330,
											"end": 2350,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2323,
											"end": 2328,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2319,
											"end": 2351,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2351,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2384,
											"end": 2393,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2377,
											"end": 2382,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2373,
											"end": 2394,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2364,
											"end": 2394,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2364,
											"end": 2394,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2619,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2603,
											"end": 2604,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2589,
											"end": 2600,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2569,
											"end": 2586,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 2569,
											"end": 2600,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2569,
											"end": 2600,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2569,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 2569,
											"end": 2600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2569,
											"end": 2600,
											"name": "tag",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 2569,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 2569,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2568,
											"end": 2619,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2553,
											"end": 2619,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2553,
											"end": 2619,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2730,
											"end": 2734,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2717,
											"end": 2728,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2713,
											"end": 2735,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 2698,
											"end": 2735,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 2698,
											"end": 2735,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2852,
											"end": 2856,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2845,
											"end": 2850,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 2832,
											"end": 2857,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2832,
											"end": 2857,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3106,
											"end": 3107,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3099,
											"end": 3103,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3096,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3089,
											"end": 3090,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3081,
											"end": 3104,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3077,
											"end": 3108,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3069,
											"end": 3108,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3069,
											"end": 3108,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3144,
											"end": 3148,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3136,
											"end": 3141,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3136,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 3136,
											"end": 3148,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3136,
											"end": 3148,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3136,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3136,
											"end": 3148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3136,
											"end": 3148,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 3136,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3127,
											"end": 3148,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3127,
											"end": 3148,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 3127,
											"end": 3148,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3127,
											"end": 3148,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3493,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3517,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3501,
											"end": 3512,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3497,
											"end": 3498,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3497,
											"end": 3512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "tag",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3496,
											"end": 3517,
											"name": "XOR",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3517,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3517,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3757,
											"end": 3760,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3743,
											"end": 3754,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3743,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 3743,
											"end": 3760,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3743,
											"end": 3760,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3743,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3743,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3743,
											"end": 3760,
											"name": "tag",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 3743,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3739,
											"end": 3740,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 3739,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "tag",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3732,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3815,
											"end": 3818,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3801,
											"end": 3812,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3801,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 3801,
											"end": 3818,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3801,
											"end": 3818,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3801,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3801,
											"end": 3818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3801,
											"end": 3818,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 3801,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3797,
											"end": 3798,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 3797,
											"end": 3818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "tag",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3790,
											"end": 3818,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3790,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 3790,
											"end": 3818,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3790,
											"end": 3818,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3790,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3790,
											"end": 3818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3790,
											"end": 3818,
											"name": "tag",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 3790,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3790,
											"end": 3818,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3790,
											"end": 3818,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3877,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3860,
											"end": 3871,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3860,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 3860,
											"end": 3877,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3860,
											"end": 3877,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3860,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3860,
											"end": 3877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3860,
											"end": 3877,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 3860,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3856,
											"end": 3857,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3856,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 3856,
											"end": 3877,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3856,
											"end": 3877,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3856,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 3856,
											"end": 3877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3856,
											"end": 3877,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 3856,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3849,
											"end": 3877,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3849,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 3849,
											"end": 3877,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3849,
											"end": 3877,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3849,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3849,
											"end": 3877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3849,
											"end": 3877,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 3849,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3849,
											"end": 3877,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3849,
											"end": 3877,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3933,
											"end": 3936,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 3930,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 3919,
											"end": 3936,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 3936,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3919,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 3936,
											"name": "tag",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 3919,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3915,
											"end": 3916,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3915,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 3915,
											"end": 3936,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3915,
											"end": 3936,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3915,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 3915,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3915,
											"end": 3936,
											"name": "tag",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 3915,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3908,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "tag",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3992,
											"end": 3995,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3978,
											"end": 3989,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3978,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 3978,
											"end": 3995,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3978,
											"end": 3995,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3978,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3978,
											"end": 3995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3978,
											"end": 3995,
											"name": "tag",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 3978,
											"end": 3995,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3974,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 3974,
											"end": 3995,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3974,
											"end": 3995,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3974,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 3974,
											"end": 3995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3974,
											"end": 3995,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 3974,
											"end": 3995,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3967,
											"end": 3995,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3967,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 3967,
											"end": 3995,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3967,
											"end": 3995,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3967,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3967,
											"end": 3995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3967,
											"end": 3995,
											"name": "tag",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 3967,
											"end": 3995,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3967,
											"end": 3995,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3967,
											"end": 3995,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4052,
											"end": 4055,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4038,
											"end": 4049,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4038,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 4038,
											"end": 4055,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4038,
											"end": 4055,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4038,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 4038,
											"end": 4055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4038,
											"end": 4055,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 4038,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4034,
											"end": 4035,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 4034,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 4034,
											"end": 4055,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4034,
											"end": 4055,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4034,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 4034,
											"end": 4055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4034,
											"end": 4055,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 4034,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4027,
											"end": 4055,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4027,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 4027,
											"end": 4055,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4027,
											"end": 4055,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4027,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 4027,
											"end": 4055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4027,
											"end": 4055,
											"name": "tag",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 4027,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4027,
											"end": 4055,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4027,
											"end": 4055,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4510,
											"end": 4513,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4502,
											"end": 4507,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4502,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 4502,
											"end": 4513,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4502,
											"end": 4513,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4502,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 4502,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4502,
											"end": 4513,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 4502,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4493,
											"end": 4513,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4493,
											"end": 4513,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4523,
											"end": 4536,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4523,
											"end": 4536,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4523,
											"end": 4536,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4523,
											"end": 4536,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4523,
											"end": 4536,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 742,
											"end": 4543,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 742,
											"end": 4543,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 742,
											"end": 4543,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 742,
											"end": 4543,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 742,
											"end": 4543,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 742,
											"end": 4543,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 742,
											"end": 4543,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 742,
											"end": 4543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 17,
											"value": "408"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 17,
											"value": "410"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 17,
											"value": "412"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "477"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 17,
											"value": "477"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "478"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 17,
											"value": "478"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 17,
											"value": "413"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "480"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "412"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 17,
											"value": "480"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "482"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "483"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 17,
											"value": "483"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 17,
											"value": "482"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "484"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "413"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 17,
											"value": "484"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 17,
											"value": "414"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "488"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "414"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 17,
											"value": "488"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 17,
											"value": "415"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 17,
											"value": "416"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "491"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "415"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 17,
											"value": "491"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 17,
											"value": "417"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "493"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "416"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 17,
											"value": "493"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "494"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 17,
											"value": "494"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "417"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "499"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 17,
											"value": "499"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "tag",
											"source": 17,
											"value": "419"
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "416"
										},
										{
											"begin": 2306,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "tag",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2301,
											"end": 2304,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2294,
											"end": 2331,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2219,
											"end": 2337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "tag",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2436,
											"end": 2440,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2476,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2472,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2459,
											"end": 2477,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "504"
										},
										{
											"begin": 2555,
											"end": 2556,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2553,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2540,
											"end": 2557,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "419"
										},
										{
											"begin": 2487,
											"end": 2558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "tag",
											"source": 17,
											"value": "504"
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2343,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "tag",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2639,
											"end": 2645,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2696,
											"end": 2698,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2684,
											"end": 2693,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2675,
											"end": 2682,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2667,
											"end": 2699,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2702,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "507"
										},
										{
											"begin": 2702,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 2702,
											"end": 2781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2702,
											"end": 2781,
											"name": "tag",
											"source": 17,
											"value": "507"
										},
										{
											"begin": 2702,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "tag",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2822,
											"end": 2823,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2872,
											"end": 2881,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2868,
											"end": 2890,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2847,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 2847,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2847,
											"end": 2900,
											"name": "tag",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 2847,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2837,
											"end": 2900,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2837,
											"end": 2900,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2793,
											"end": 2910,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2949,
											"end": 2951,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "509"
										},
										{
											"begin": 3020,
											"end": 3027,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3011,
											"end": 3017,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2996,
											"end": 3018,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "413"
										},
										{
											"begin": 2975,
											"end": 3028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "tag",
											"source": 17,
											"value": "509"
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2965,
											"end": 3028,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2965,
											"end": 3028,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3038,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2571,
											"end": 3045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "tag",
											"source": 17,
											"value": "420"
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3085,
											"end": 3092,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3128,
											"end": 3133,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3121,
											"end": 3134,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3114,
											"end": 3135,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3103,
											"end": 3135,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3103,
											"end": 3135,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3051,
											"end": 3141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3147,
											"end": 3256,
											"name": "tag",
											"source": 17,
											"value": "421"
										},
										{
											"begin": 3147,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3228,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "512"
										},
										{
											"begin": 3243,
											"end": 3248,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3228,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "420"
										},
										{
											"begin": 3228,
											"end": 3249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3228,
											"end": 3249,
											"name": "tag",
											"source": 17,
											"value": "512"
										},
										{
											"begin": 3228,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3223,
											"end": 3226,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3147,
											"end": 3256,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3147,
											"end": 3256,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3147,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "tag",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3349,
											"end": 3353,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3389,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3376,
											"end": 3385,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3400,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3460,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3447,
											"end": 3464,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3438,
											"end": 3444,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3400,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "421"
										},
										{
											"begin": 3400,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3400,
											"end": 3465,
											"name": "tag",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 3400,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3262,
											"end": 3472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3478,
											"end": 3810,
											"name": "tag",
											"source": 17,
											"value": "89"
										},
										{
											"begin": 3478,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3599,
											"end": 3603,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3639,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3626,
											"end": 3635,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3622,
											"end": 3640,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3614,
											"end": 3640,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3614,
											"end": 3640,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3650,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "516"
										},
										{
											"begin": 3718,
											"end": 3719,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3716,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3703,
											"end": 3720,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3694,
											"end": 3700,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3650,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "414"
										},
										{
											"begin": 3650,
											"end": 3721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3650,
											"end": 3721,
											"name": "tag",
											"source": 17,
											"value": "516"
										},
										{
											"begin": 3650,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3731,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "517"
										},
										{
											"begin": 3799,
											"end": 3801,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3788,
											"end": 3797,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3784,
											"end": 3802,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3775,
											"end": 3781,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3731,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "414"
										},
										{
											"begin": 3731,
											"end": 3803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3731,
											"end": 3803,
											"name": "tag",
											"source": 17,
											"value": "517"
										},
										{
											"begin": 3731,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3478,
											"end": 3810,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3478,
											"end": 3810,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3478,
											"end": 3810,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3478,
											"end": 3810,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3478,
											"end": 3810,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3478,
											"end": 3810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3816,
											"end": 3902,
											"name": "tag",
											"source": 17,
											"value": "422"
										},
										{
											"begin": 3816,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3891,
											"end": 3895,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 3884,
											"end": 3889,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3880,
											"end": 3896,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3869,
											"end": 3896,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3869,
											"end": 3896,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3816,
											"end": 3902,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3816,
											"end": 3902,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3816,
											"end": 3902,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3816,
											"end": 3902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3908,
											"end": 4020,
											"name": "tag",
											"source": 17,
											"value": "423"
										},
										{
											"begin": 3908,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3991,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "520"
										},
										{
											"begin": 4007,
											"end": 4012,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3991,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "422"
										},
										{
											"begin": 3991,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3991,
											"end": 4013,
											"name": "tag",
											"source": 17,
											"value": "520"
										},
										{
											"begin": 3991,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3986,
											"end": 3989,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3979,
											"end": 4014,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3908,
											"end": 4020,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3908,
											"end": 4020,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3908,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4026,
											"end": 4240,
											"name": "tag",
											"source": 17,
											"value": "98"
										},
										{
											"begin": 4026,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4115,
											"end": 4119,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4153,
											"end": 4155,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4142,
											"end": 4151,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4138,
											"end": 4156,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4130,
											"end": 4156,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4130,
											"end": 4156,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4166,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "522"
										},
										{
											"begin": 4230,
											"end": 4231,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4219,
											"end": 4228,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4215,
											"end": 4232,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4206,
											"end": 4212,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4166,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "423"
										},
										{
											"begin": 4166,
											"end": 4233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4166,
											"end": 4233,
											"name": "tag",
											"source": 17,
											"value": "522"
										},
										{
											"begin": 4166,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4026,
											"end": 4240,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4026,
											"end": 4240,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4026,
											"end": 4240,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4026,
											"end": 4240,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4026,
											"end": 4240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4246,
											"end": 4389,
											"name": "tag",
											"source": 17,
											"value": "424"
										},
										{
											"begin": 4246,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4303,
											"end": 4308,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4334,
											"end": 4340,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4328,
											"end": 4341,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4319,
											"end": 4341,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4319,
											"end": 4341,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4350,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "524"
										},
										{
											"begin": 4377,
											"end": 4382,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4350,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "417"
										},
										{
											"begin": 4350,
											"end": 4383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4350,
											"end": 4383,
											"name": "tag",
											"source": 17,
											"value": "524"
										},
										{
											"begin": 4350,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4246,
											"end": 4389,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4246,
											"end": 4389,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4246,
											"end": 4389,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4246,
											"end": 4389,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4246,
											"end": 4389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4395,
											"end": 4746,
											"name": "tag",
											"source": 17,
											"value": "103"
										},
										{
											"begin": 4395,
											"end": 4746,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4465,
											"end": 4471,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4514,
											"end": 4516,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4502,
											"end": 4511,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4493,
											"end": 4500,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4489,
											"end": 4512,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4485,
											"end": 4517,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4482,
											"end": 4601,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4482,
											"end": 4601,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "526"
										},
										{
											"begin": 4482,
											"end": 4601,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4520,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "527"
										},
										{
											"begin": 4520,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 4520,
											"end": 4599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4520,
											"end": 4599,
											"name": "tag",
											"source": 17,
											"value": "527"
										},
										{
											"begin": 4520,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4482,
											"end": 4601,
											"name": "tag",
											"source": 17,
											"value": "526"
										},
										{
											"begin": 4482,
											"end": 4601,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4640,
											"end": 4641,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4665,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "528"
										},
										{
											"begin": 4721,
											"end": 4728,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4712,
											"end": 4718,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4701,
											"end": 4710,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4697,
											"end": 4719,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4665,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "424"
										},
										{
											"begin": 4665,
											"end": 4729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4665,
											"end": 4729,
											"name": "tag",
											"source": 17,
											"value": "528"
										},
										{
											"begin": 4665,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4655,
											"end": 4729,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4655,
											"end": 4729,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4611,
											"end": 4739,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4395,
											"end": 4746,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4395,
											"end": 4746,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4395,
											"end": 4746,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4395,
											"end": 4746,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4395,
											"end": 4746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4752,
											"end": 4932,
											"name": "tag",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 4752,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4800,
											"end": 4877,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4797,
											"end": 4798,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4878,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4897,
											"end": 4901,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 4894,
											"end": 4895,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4887,
											"end": 4902,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4921,
											"end": 4925,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 4918,
											"end": 4919,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4911,
											"end": 4926,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4938,
											"end": 5129,
											"name": "tag",
											"source": 17,
											"value": "108"
										},
										{
											"begin": 4938,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4978,
											"end": 4982,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "531"
										},
										{
											"begin": 5016,
											"end": 5017,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4998,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 4998,
											"end": 5018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4998,
											"end": 5018,
											"name": "tag",
											"source": 17,
											"value": "531"
										},
										{
											"begin": 4998,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4993,
											"end": 5018,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4993,
											"end": 5018,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5032,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "532"
										},
										{
											"begin": 5050,
											"end": 5051,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5032,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 5032,
											"end": 5052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5032,
											"end": 5052,
											"name": "tag",
											"source": 17,
											"value": "532"
										},
										{
											"begin": 5032,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5027,
											"end": 5052,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5027,
											"end": 5052,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5071,
											"end": 5072,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5068,
											"end": 5069,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5065,
											"end": 5073,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 5062,
											"end": 5096,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5062,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 5062,
											"end": 5096,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "534"
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 5076,
											"end": 5094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "tag",
											"source": 17,
											"value": "534"
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5062,
											"end": 5096,
											"name": "tag",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 5062,
											"end": 5096,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5121,
											"end": 5122,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5118,
											"end": 5119,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5114,
											"end": 5123,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5106,
											"end": 5123,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5106,
											"end": 5123,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4938,
											"end": 5129,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4938,
											"end": 5129,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4938,
											"end": 5129,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4938,
											"end": 5129,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4938,
											"end": 5129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5135,
											"end": 5233,
											"name": "tag",
											"source": 17,
											"value": "426"
										},
										{
											"begin": 5135,
											"end": 5233,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5186,
											"end": 5192,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5220,
											"end": 5225,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5214,
											"end": 5226,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5135,
											"end": 5233,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5135,
											"end": 5233,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5135,
											"end": 5233,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5135,
											"end": 5233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5239,
											"end": 5386,
											"name": "tag",
											"source": 17,
											"value": "427"
										},
										{
											"begin": 5239,
											"end": 5386,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5340,
											"end": 5351,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5377,
											"end": 5380,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5362,
											"end": 5380,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5362,
											"end": 5380,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5239,
											"end": 5386,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5239,
											"end": 5386,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5239,
											"end": 5386,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5239,
											"end": 5386,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5239,
											"end": 5386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5392,
											"end": 5699,
											"name": "tag",
											"source": 17,
											"value": "428"
										},
										{
											"begin": 5392,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5460,
											"end": 5461,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5470,
											"end": 5583,
											"name": "tag",
											"source": 17,
											"value": "538"
										},
										{
											"begin": 5470,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5490,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5481,
											"end": 5482,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5478,
											"end": 5491,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 5470,
											"end": 5583,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5470,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "540"
										},
										{
											"begin": 5470,
											"end": 5583,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5569,
											"end": 5570,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5564,
											"end": 5567,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5560,
											"end": 5571,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5550,
											"end": 5551,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5545,
											"end": 5548,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5541,
											"end": 5552,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5534,
											"end": 5573,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5506,
											"end": 5508,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5503,
											"end": 5504,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5499,
											"end": 5509,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5494,
											"end": 5509,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5494,
											"end": 5509,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5470,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "538"
										},
										{
											"begin": 5470,
											"end": 5583,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5470,
											"end": 5583,
											"name": "tag",
											"source": 17,
											"value": "540"
										},
										{
											"begin": 5470,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5601,
											"end": 5607,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5598,
											"end": 5599,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5595,
											"end": 5608,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 5592,
											"end": 5693,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5592,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "541"
										},
										{
											"begin": 5592,
											"end": 5693,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5681,
											"end": 5682,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5672,
											"end": 5678,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5667,
											"end": 5670,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5663,
											"end": 5679,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5656,
											"end": 5683,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5592,
											"end": 5693,
											"name": "tag",
											"source": 17,
											"value": "541"
										},
										{
											"begin": 5592,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5441,
											"end": 5699,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5392,
											"end": 5699,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5392,
											"end": 5699,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5392,
											"end": 5699,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5392,
											"end": 5699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5705,
											"end": 6078,
											"name": "tag",
											"source": 17,
											"value": "429"
										},
										{
											"begin": 5705,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5809,
											"end": 5812,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5837,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "543"
										},
										{
											"begin": 5869,
											"end": 5874,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5837,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "426"
										},
										{
											"begin": 5837,
											"end": 5875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5837,
											"end": 5875,
											"name": "tag",
											"source": 17,
											"value": "543"
										},
										{
											"begin": 5837,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5891,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "544"
										},
										{
											"begin": 5972,
											"end": 5978,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5967,
											"end": 5970,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5891,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "427"
										},
										{
											"begin": 5891,
											"end": 5979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5891,
											"end": 5979,
											"name": "tag",
											"source": 17,
											"value": "544"
										},
										{
											"begin": 5891,
											"end": 5979,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5884,
											"end": 5979,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 5884,
											"end": 5979,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5988,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "545"
										},
										{
											"begin": 6033,
											"end": 6039,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6028,
											"end": 6031,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6021,
											"end": 6025,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6014,
											"end": 6019,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 6010,
											"end": 6026,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5988,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "428"
										},
										{
											"begin": 5988,
											"end": 6040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5988,
											"end": 6040,
											"name": "tag",
											"source": 17,
											"value": "545"
										},
										{
											"begin": 5988,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6065,
											"end": 6071,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6060,
											"end": 6063,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6056,
											"end": 6072,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6049,
											"end": 6072,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6049,
											"end": 6072,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5813,
											"end": 6078,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5705,
											"end": 6078,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5705,
											"end": 6078,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5705,
											"end": 6078,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5705,
											"end": 6078,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5705,
											"end": 6078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6084,
											"end": 6355,
											"name": "tag",
											"source": 17,
											"value": "118"
										},
										{
											"begin": 6084,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6214,
											"end": 6217,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6236,
											"end": 6329,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "547"
										},
										{
											"begin": 6325,
											"end": 6328,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6316,
											"end": 6322,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6236,
											"end": 6329,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "429"
										},
										{
											"begin": 6236,
											"end": 6329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6236,
											"end": 6329,
											"name": "tag",
											"source": 17,
											"value": "547"
										},
										{
											"begin": 6236,
											"end": 6329,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6229,
											"end": 6329,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6229,
											"end": 6329,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6346,
											"end": 6349,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6339,
											"end": 6349,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6339,
											"end": 6349,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6084,
											"end": 6355,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6084,
											"end": 6355,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6084,
											"end": 6355,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6084,
											"end": 6355,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6084,
											"end": 6355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6361,
											"end": 6541,
											"name": "tag",
											"source": 17,
											"value": "127"
										},
										{
											"begin": 6361,
											"end": 6541,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6409,
											"end": 6486,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6406,
											"end": 6407,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6399,
											"end": 6487,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6506,
											"end": 6510,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 6503,
											"end": 6504,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6496,
											"end": 6511,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6530,
											"end": 6534,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 6527,
											"end": 6528,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6520,
											"end": 6535,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 6690,
											"name": "tag",
											"source": 17,
											"value": "430"
										},
										{
											"begin": 6547,
											"end": 6690,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6604,
											"end": 6609,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6635,
											"end": 6641,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6629,
											"end": 6642,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6620,
											"end": 6642,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6620,
											"end": 6642,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6651,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 6678,
											"end": 6683,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6651,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "412"
										},
										{
											"begin": 6651,
											"end": 6684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6651,
											"end": 6684,
											"name": "tag",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 6651,
											"end": 6684,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 6690,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 6690,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 6690,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 6690,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6547,
											"end": 6690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6696,
											"end": 7047,
											"name": "tag",
											"source": 17,
											"value": "133"
										},
										{
											"begin": 6696,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6766,
											"end": 6772,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6815,
											"end": 6817,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6812,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6794,
											"end": 6801,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6790,
											"end": 6813,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6786,
											"end": 6818,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 6783,
											"end": 6902,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6783,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 6783,
											"end": 6902,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6821,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 6821,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 6821,
											"end": 6900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6821,
											"end": 6900,
											"name": "tag",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 6821,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6783,
											"end": 6902,
											"name": "tag",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 6783,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6941,
											"end": 6942,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6966,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "554"
										},
										{
											"begin": 7022,
											"end": 7029,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7013,
											"end": 7019,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6998,
											"end": 7020,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6966,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "430"
										},
										{
											"begin": 6966,
											"end": 7030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6966,
											"end": 7030,
											"name": "tag",
											"source": 17,
											"value": "554"
										},
										{
											"begin": 6966,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6956,
											"end": 7030,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6956,
											"end": 7030,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 7040,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6696,
											"end": 7047,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6696,
											"end": 7047,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6696,
											"end": 7047,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6696,
											"end": 7047,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6696,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7053,
											"end": 7385,
											"name": "tag",
											"source": 17,
											"value": "135"
										},
										{
											"begin": 7053,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7174,
											"end": 7178,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7212,
											"end": 7214,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7210,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7197,
											"end": 7215,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7189,
											"end": 7215,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7189,
											"end": 7215,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7225,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 7293,
											"end": 7294,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7282,
											"end": 7291,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7278,
											"end": 7295,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7269,
											"end": 7275,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7225,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "419"
										},
										{
											"begin": 7225,
											"end": 7296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7225,
											"end": 7296,
											"name": "tag",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 7225,
											"end": 7296,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7306,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "557"
										},
										{
											"begin": 7374,
											"end": 7376,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7363,
											"end": 7372,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7359,
											"end": 7377,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7350,
											"end": 7356,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7306,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "414"
										},
										{
											"begin": 7306,
											"end": 7378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7306,
											"end": 7378,
											"name": "tag",
											"source": 17,
											"value": "557"
										},
										{
											"begin": 7306,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7053,
											"end": 7385,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 7053,
											"end": 7385,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7053,
											"end": 7385,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7053,
											"end": 7385,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7053,
											"end": 7385,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7053,
											"end": 7385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7391,
											"end": 7507,
											"name": "tag",
											"source": 17,
											"value": "431"
										},
										{
											"begin": 7391,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7461,
											"end": 7482,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 7476,
											"end": 7481,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7461,
											"end": 7482,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "420"
										},
										{
											"begin": 7461,
											"end": 7482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7461,
											"end": 7482,
											"name": "tag",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 7461,
											"end": 7482,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7454,
											"end": 7459,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7451,
											"end": 7483,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 7441,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "560"
										},
										{
											"begin": 7441,
											"end": 7501,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7497,
											"end": 7498,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7494,
											"end": 7495,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7487,
											"end": 7499,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7441,
											"end": 7501,
											"name": "tag",
											"source": 17,
											"value": "560"
										},
										{
											"begin": 7441,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7391,
											"end": 7507,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7391,
											"end": 7507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7513,
											"end": 7650,
											"name": "tag",
											"source": 17,
											"value": "432"
										},
										{
											"begin": 7513,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7567,
											"end": 7572,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7598,
											"end": 7604,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7592,
											"end": 7605,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7583,
											"end": 7605,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7583,
											"end": 7605,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7614,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 7638,
											"end": 7643,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7614,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "431"
										},
										{
											"begin": 7614,
											"end": 7644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7614,
											"end": 7644,
											"name": "tag",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 7614,
											"end": 7644,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7513,
											"end": 7650,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7513,
											"end": 7650,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7513,
											"end": 7650,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7513,
											"end": 7650,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7513,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7656,
											"end": 8001,
											"name": "tag",
											"source": 17,
											"value": "139"
										},
										{
											"begin": 7656,
											"end": 8001,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7723,
											"end": 7729,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7772,
											"end": 7774,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7760,
											"end": 7769,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7751,
											"end": 7758,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7747,
											"end": 7770,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7743,
											"end": 7775,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 7740,
											"end": 7859,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7740,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "564"
										},
										{
											"begin": 7740,
											"end": 7859,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7778,
											"end": 7857,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "565"
										},
										{
											"begin": 7778,
											"end": 7857,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 7778,
											"end": 7857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7778,
											"end": 7857,
											"name": "tag",
											"source": 17,
											"value": "565"
										},
										{
											"begin": 7778,
											"end": 7857,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7740,
											"end": 7859,
											"name": "tag",
											"source": 17,
											"value": "564"
										},
										{
											"begin": 7740,
											"end": 7859,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7898,
											"end": 7899,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7923,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "566"
										},
										{
											"begin": 7976,
											"end": 7983,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7967,
											"end": 7973,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7956,
											"end": 7965,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7952,
											"end": 7974,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7923,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "432"
										},
										{
											"begin": 7923,
											"end": 7984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7923,
											"end": 7984,
											"name": "tag",
											"source": 17,
											"value": "566"
										},
										{
											"begin": 7923,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7913,
											"end": 7984,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7913,
											"end": 7984,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7869,
											"end": 7994,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7656,
											"end": 8001,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7656,
											"end": 8001,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7656,
											"end": 8001,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7656,
											"end": 8001,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7656,
											"end": 8001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8007,
											"end": 8240,
											"name": "tag",
											"source": 17,
											"value": "141"
										},
										{
											"begin": 8007,
											"end": 8240,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8046,
											"end": 8049,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8069,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "568"
										},
										{
											"begin": 8087,
											"end": 8092,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8069,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 8069,
											"end": 8093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8069,
											"end": 8093,
											"name": "tag",
											"source": 17,
											"value": "568"
										},
										{
											"begin": 8069,
											"end": 8093,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8060,
											"end": 8093,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8060,
											"end": 8093,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8115,
											"end": 8181,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8108,
											"end": 8113,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8105,
											"end": 8182,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 8102,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "569"
										},
										{
											"begin": 8102,
											"end": 8205,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8185,
											"end": 8203,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 8185,
											"end": 8203,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 8185,
											"end": 8203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8185,
											"end": 8203,
											"name": "tag",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 8185,
											"end": 8203,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8102,
											"end": 8205,
											"name": "tag",
											"source": 17,
											"value": "569"
										},
										{
											"begin": 8102,
											"end": 8205,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8232,
											"end": 8233,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 8225,
											"end": 8230,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8221,
											"end": 8234,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8214,
											"end": 8234,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8214,
											"end": 8234,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8007,
											"end": 8240,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8007,
											"end": 8240,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8007,
											"end": 8240,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8007,
											"end": 8240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8246,
											"end": 8413,
											"name": "tag",
											"source": 17,
											"value": "150"
										},
										{
											"begin": 8246,
											"end": 8413,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8283,
											"end": 8286,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8306,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 8322,
											"end": 8327,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8306,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "422"
										},
										{
											"begin": 8306,
											"end": 8328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8306,
											"end": 8328,
											"name": "tag",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 8306,
											"end": 8328,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8297,
											"end": 8328,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8297,
											"end": 8328,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8350,
											"end": 8354,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8343,
											"end": 8348,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8340,
											"end": 8355,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 8337,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "573"
										},
										{
											"begin": 8337,
											"end": 8378,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8358,
											"end": 8376,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "574"
										},
										{
											"begin": 8358,
											"end": 8376,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 8358,
											"end": 8376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8358,
											"end": 8376,
											"name": "tag",
											"source": 17,
											"value": "574"
										},
										{
											"begin": 8358,
											"end": 8376,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8337,
											"end": 8378,
											"name": "tag",
											"source": 17,
											"value": "573"
										},
										{
											"begin": 8337,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8405,
											"end": 8406,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 8398,
											"end": 8403,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8394,
											"end": 8407,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 8387,
											"end": 8407,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8387,
											"end": 8407,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8246,
											"end": 8413,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8246,
											"end": 8413,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8246,
											"end": 8413,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8246,
											"end": 8413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8419,
											"end": 8599,
											"name": "tag",
											"source": 17,
											"value": "167"
										},
										{
											"begin": 8419,
											"end": 8599,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8467,
											"end": 8544,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8464,
											"end": 8465,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8457,
											"end": 8545,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8564,
											"end": 8568,
											"name": "PUSH",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 8561,
											"end": 8562,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 8554,
											"end": 8569,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8588,
											"end": 8592,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8585,
											"end": 8586,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8578,
											"end": 8593,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 8605,
											"end": 8723,
											"name": "tag",
											"source": 17,
											"value": "433"
										},
										{
											"begin": 8605,
											"end": 8723,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8676,
											"end": 8698,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 8692,
											"end": 8697,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8676,
											"end": 8698,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "422"
										},
										{
											"begin": 8676,
											"end": 8698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8676,
											"end": 8698,
											"name": "tag",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 8676,
											"end": 8698,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8669,
											"end": 8674,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8666,
											"end": 8699,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 8656,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 8656,
											"end": 8717,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8713,
											"end": 8714,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8710,
											"end": 8711,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8703,
											"end": 8715,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 8656,
											"end": 8717,
											"name": "tag",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 8656,
											"end": 8717,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8605,
											"end": 8723,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8605,
											"end": 8723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8729,
											"end": 8868,
											"name": "tag",
											"source": 17,
											"value": "434"
										},
										{
											"begin": 8729,
											"end": 8868,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8784,
											"end": 8789,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8815,
											"end": 8821,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 8800,
											"end": 8822,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8800,
											"end": 8822,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8831,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "580"
										},
										{
											"begin": 8856,
											"end": 8861,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8831,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "433"
										},
										{
											"begin": 8831,
											"end": 8862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8831,
											"end": 8862,
											"name": "tag",
											"source": 17,
											"value": "580"
										},
										{
											"begin": 8831,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8729,
											"end": 8868,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8729,
											"end": 8868,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8729,
											"end": 8868,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8729,
											"end": 8868,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8729,
											"end": 8868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8874,
											"end": 9221,
											"name": "tag",
											"source": 17,
											"value": "191"
										},
										{
											"begin": 8874,
											"end": 9221,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8942,
											"end": 8948,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8991,
											"end": 8993,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8979,
											"end": 8988,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8970,
											"end": 8977,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8966,
											"end": 8989,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 8962,
											"end": 8994,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 8959,
											"end": 9078,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8959,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "582"
										},
										{
											"begin": 8959,
											"end": 9078,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8997,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "583"
										},
										{
											"begin": 8997,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 8997,
											"end": 9076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8997,
											"end": 9076,
											"name": "tag",
											"source": 17,
											"value": "583"
										},
										{
											"begin": 8997,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8959,
											"end": 9078,
											"name": "tag",
											"source": 17,
											"value": "582"
										},
										{
											"begin": 8959,
											"end": 9078,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9117,
											"end": 9118,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9142,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "584"
										},
										{
											"begin": 9196,
											"end": 9203,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9187,
											"end": 9193,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9176,
											"end": 9185,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9172,
											"end": 9194,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9142,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "434"
										},
										{
											"begin": 9142,
											"end": 9204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9142,
											"end": 9204,
											"name": "tag",
											"source": 17,
											"value": "584"
										},
										{
											"begin": 9142,
											"end": 9204,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9132,
											"end": 9204,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9132,
											"end": 9204,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9088,
											"end": 9214,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8874,
											"end": 9221,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8874,
											"end": 9221,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8874,
											"end": 9221,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8874,
											"end": 9221,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8874,
											"end": 9221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9227,
											"end": 9329,
											"name": "tag",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 9227,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9269,
											"end": 9277,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9316,
											"end": 9321,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9313,
											"end": 9314,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 9309,
											"end": 9322,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 9288,
											"end": 9322,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9288,
											"end": 9322,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9227,
											"end": 9329,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9227,
											"end": 9329,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9227,
											"end": 9329,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9227,
											"end": 9329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9335,
											"end": 10183,
											"name": "tag",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 9335,
											"end": 10183,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9396,
											"end": 9401,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9403,
											"end": 9407,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9427,
											"end": 9433,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9418,
											"end": 9433,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9418,
											"end": 9433,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9451,
											"end": 9456,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9442,
											"end": 9456,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9442,
											"end": 9456,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9465,
											"end": 10177,
											"name": "tag",
											"source": 17,
											"value": "587"
										},
										{
											"begin": 9465,
											"end": 10177,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9486,
											"end": 9487,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 9476,
											"end": 9484,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9473,
											"end": 9488,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 9465,
											"end": 10177,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9465,
											"end": 10177,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "589"
										},
										{
											"begin": 9465,
											"end": 10177,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9581,
											"end": 9585,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9576,
											"end": 9579,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9572,
											"end": 9586,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 9566,
											"end": 9570,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9563,
											"end": 9587,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 9560,
											"end": 9610,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9560,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "590"
										},
										{
											"begin": 9560,
											"end": 9610,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "591"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 9590,
											"end": 9608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "tag",
											"source": 17,
											"value": "591"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9560,
											"end": 9610,
											"name": "tag",
											"source": 17,
											"value": "590"
										},
										{
											"begin": 9560,
											"end": 9610,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9640,
											"end": 9641,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 9630,
											"end": 9638,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9626,
											"end": 9642,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 9623,
											"end": 10074,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9623,
											"end": 10074,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "592"
										},
										{
											"begin": 9623,
											"end": 10074,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10055,
											"end": 10059,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10048,
											"end": 10053,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10044,
											"end": 10060,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 10035,
											"end": 10060,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10035,
											"end": 10060,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9623,
											"end": 10074,
											"name": "tag",
											"source": 17,
											"value": "592"
										},
										{
											"begin": 9623,
											"end": 10074,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10105,
											"end": 10109,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10099,
											"end": 10103,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10095,
											"end": 10110,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 10087,
											"end": 10110,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10087,
											"end": 10110,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10135,
											"end": 10167,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "593"
										},
										{
											"begin": 10158,
											"end": 10166,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10135,
											"end": 10167,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 10135,
											"end": 10167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10135,
											"end": 10167,
											"name": "tag",
											"source": 17,
											"value": "593"
										},
										{
											"begin": 10135,
											"end": 10167,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10123,
											"end": 10167,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 10123,
											"end": 10167,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9465,
											"end": 10177,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "587"
										},
										{
											"begin": 9465,
											"end": 10177,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9465,
											"end": 10177,
											"name": "tag",
											"source": 17,
											"value": "589"
										},
										{
											"begin": 9465,
											"end": 10177,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9335,
											"end": 10183,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 9335,
											"end": 10183,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9335,
											"end": 10183,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 9335,
											"end": 10183,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9335,
											"end": 10183,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9335,
											"end": 10183,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9335,
											"end": 10183,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9335,
											"end": 10183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10189,
											"end": 11262,
											"name": "tag",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 10189,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10243,
											"end": 10248,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10434,
											"end": 10442,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10424,
											"end": 10464,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "595"
										},
										{
											"begin": 10424,
											"end": 10464,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10455,
											"end": 10456,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 10446,
											"end": 10456,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10446,
											"end": 10456,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10457,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "594"
										},
										{
											"begin": 10457,
											"end": 10462,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10424,
											"end": 10464,
											"name": "tag",
											"source": 17,
											"value": "595"
										},
										{
											"begin": 10424,
											"end": 10464,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10483,
											"end": 10487,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10473,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "596"
										},
										{
											"begin": 10473,
											"end": 10509,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10500,
											"end": 10501,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10491,
											"end": 10501,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10491,
											"end": 10501,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10502,
											"end": 10507,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "594"
										},
										{
											"begin": 10502,
											"end": 10507,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10473,
											"end": 10509,
											"name": "tag",
											"source": 17,
											"value": "596"
										},
										{
											"begin": 10473,
											"end": 10509,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10569,
											"end": 10573,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10617,
											"end": 10618,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 10612,
											"end": 10639,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10612,
											"end": 10639,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 10612,
											"end": 10639,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 10612,
											"end": 10639,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10653,
											"end": 10654,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 10648,
											"end": 10839,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10648,
											"end": 10839,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 10648,
											"end": 10839,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "599"
										},
										{
											"begin": 10648,
											"end": 10839,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10562,
											"end": 10839,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "597"
										},
										{
											"begin": 10562,
											"end": 10839,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10612,
											"end": 10639,
											"name": "tag",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 10612,
											"end": 10639,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10630,
											"end": 10631,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 10621,
											"end": 10631,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10621,
											"end": 10631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10632,
											"end": 10637,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10632,
											"end": 10637,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "594"
										},
										{
											"begin": 10632,
											"end": 10637,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10648,
											"end": 10839,
											"name": "tag",
											"source": 17,
											"value": "599"
										},
										{
											"begin": 10648,
											"end": 10839,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10693,
											"end": 10696,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 10683,
											"end": 10691,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10680,
											"end": 10697,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 10677,
											"end": 10720,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10677,
											"end": 10720,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "600"
										},
										{
											"begin": 10677,
											"end": 10720,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10700,
											"end": 10718,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "601"
										},
										{
											"begin": 10700,
											"end": 10718,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 10700,
											"end": 10718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10700,
											"end": 10718,
											"name": "tag",
											"source": 17,
											"value": "601"
										},
										{
											"begin": 10700,
											"end": 10718,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10677,
											"end": 10720,
											"name": "tag",
											"source": 17,
											"value": "600"
										},
										{
											"begin": 10677,
											"end": 10720,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10749,
											"end": 10757,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10746,
											"end": 10747,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 10742,
											"end": 10758,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 10733,
											"end": 10758,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10733,
											"end": 10758,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10784,
											"end": 10787,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10777,
											"end": 10782,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10774,
											"end": 10788,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 10771,
											"end": 10811,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10771,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 10771,
											"end": 10811,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10791,
											"end": 10809,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 10791,
											"end": 10809,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 10791,
											"end": 10809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10791,
											"end": 10809,
											"name": "tag",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 10791,
											"end": 10809,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10771,
											"end": 10811,
											"name": "tag",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 10771,
											"end": 10811,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10824,
											"end": 10829,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10824,
											"end": 10829,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "594"
										},
										{
											"begin": 10824,
											"end": 10829,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10562,
											"end": 10839,
											"name": "tag",
											"source": 17,
											"value": "597"
										},
										{
											"begin": 10562,
											"end": 10839,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10562,
											"end": 10839,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10948,
											"end": 10950,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10938,
											"end": 10946,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10935,
											"end": 10951,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 10929,
											"end": 10932,
											"name": "PUSH",
											"source": 17,
											"value": "133"
										},
										{
											"begin": 10923,
											"end": 10927,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10920,
											"end": 10933,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 10916,
											"end": 10952,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 10898,
											"end": 10900,
											"name": "PUSH",
											"source": 17,
											"value": "4E"
										},
										{
											"begin": 10888,
											"end": 10896,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 10880,
											"end": 10882,
											"name": "PUSH",
											"source": 17,
											"value": "B"
										},
										{
											"begin": 10874,
											"end": 10878,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10871,
											"end": 10883,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 10867,
											"end": 10902,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 10851,
											"end": 10962,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 10848,
											"end": 11094,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10848,
											"end": 11094,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "604"
										},
										{
											"begin": 10848,
											"end": 11094,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11004,
											"end": 11012,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10998,
											"end": 11002,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10994,
											"end": 11013,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 10985,
											"end": 11013,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10985,
											"end": 11013,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11039,
											"end": 11042,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11032,
											"end": 11037,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11029,
											"end": 11043,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 11026,
											"end": 11066,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11026,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "605"
										},
										{
											"begin": 11026,
											"end": 11066,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11046,
											"end": 11064,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "606"
										},
										{
											"begin": 11046,
											"end": 11064,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 11046,
											"end": 11064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11046,
											"end": 11064,
											"name": "tag",
											"source": 17,
											"value": "606"
										},
										{
											"begin": 11046,
											"end": 11064,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11026,
											"end": 11066,
											"name": "tag",
											"source": 17,
											"value": "605"
										},
										{
											"begin": 11026,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11079,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "594"
										},
										{
											"begin": 11079,
											"end": 11084,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10848,
											"end": 11094,
											"name": "tag",
											"source": 17,
											"value": "604"
										},
										{
											"begin": 10848,
											"end": 11094,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11119,
											"end": 11161,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "607"
										},
										{
											"begin": 11157,
											"end": 11160,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11147,
											"end": 11155,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11141,
											"end": 11145,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11138,
											"end": 11139,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 11119,
											"end": 11161,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 11119,
											"end": 11161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11119,
											"end": 11161,
											"name": "tag",
											"source": 17,
											"value": "607"
										},
										{
											"begin": 11119,
											"end": 11161,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11104,
											"end": 11161,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11104,
											"end": 11161,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11104,
											"end": 11161,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11104,
											"end": 11161,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11193,
											"end": 11197,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11188,
											"end": 11191,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11184,
											"end": 11198,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 11177,
											"end": 11182,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11174,
											"end": 11199,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 11171,
											"end": 11222,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11171,
											"end": 11222,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "608"
										},
										{
											"begin": 11171,
											"end": 11222,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11202,
											"end": 11220,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "609"
										},
										{
											"begin": 11202,
											"end": 11220,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 11202,
											"end": 11220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11202,
											"end": 11220,
											"name": "tag",
											"source": 17,
											"value": "609"
										},
										{
											"begin": 11202,
											"end": 11220,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11171,
											"end": 11222,
											"name": "tag",
											"source": 17,
											"value": "608"
										},
										{
											"begin": 11171,
											"end": 11222,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11251,
											"end": 11255,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11244,
											"end": 11249,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11240,
											"end": 11256,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 11231,
											"end": 11256,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11231,
											"end": 11256,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10189,
											"end": 11262,
											"name": "tag",
											"source": 17,
											"value": "594"
										},
										{
											"begin": 10189,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10189,
											"end": 11262,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 10189,
											"end": 11262,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10189,
											"end": 11262,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10189,
											"end": 11262,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10189,
											"end": 11262,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10189,
											"end": 11262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11268,
											"end": 11553,
											"name": "tag",
											"source": 17,
											"value": "195"
										},
										{
											"begin": 11268,
											"end": 11553,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11328,
											"end": 11333,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11352,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "611"
										},
										{
											"begin": 11370,
											"end": 11374,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11352,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 11352,
											"end": 11375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11352,
											"end": 11375,
											"name": "tag",
											"source": 17,
											"value": "611"
										},
										{
											"begin": 11352,
											"end": 11375,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11344,
											"end": 11375,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11344,
											"end": 11375,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11396,
											"end": 11423,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "612"
										},
										{
											"begin": 11414,
											"end": 11422,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11396,
											"end": 11423,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 11396,
											"end": 11423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11396,
											"end": 11423,
											"name": "tag",
											"source": 17,
											"value": "612"
										},
										{
											"begin": 11396,
											"end": 11423,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11384,
											"end": 11423,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11384,
											"end": 11423,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11442,
											"end": 11546,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "613"
										},
										{
											"begin": 11479,
											"end": 11545,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11469,
											"end": 11477,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11463,
											"end": 11467,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11442,
											"end": 11546,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 11442,
											"end": 11546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11442,
											"end": 11546,
											"name": "tag",
											"source": 17,
											"value": "613"
										},
										{
											"begin": 11442,
											"end": 11546,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11433,
											"end": 11546,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11433,
											"end": 11546,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11268,
											"end": 11553,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11268,
											"end": 11553,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11268,
											"end": 11553,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11268,
											"end": 11553,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11268,
											"end": 11553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11559,
											"end": 11739,
											"name": "tag",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 11559,
											"end": 11739,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11607,
											"end": 11684,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11604,
											"end": 11605,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11597,
											"end": 11685,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11704,
											"end": 11708,
											"name": "PUSH",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 11701,
											"end": 11702,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 11694,
											"end": 11709,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11728,
											"end": 11732,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 11725,
											"end": 11726,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11718,
											"end": 11733,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 11745,
											"end": 11930,
											"name": "tag",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 11745,
											"end": 11930,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11785,
											"end": 11786,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11802,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "616"
										},
										{
											"begin": 11820,
											"end": 11821,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11802,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 11802,
											"end": 11822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11802,
											"end": 11822,
											"name": "tag",
											"source": 17,
											"value": "616"
										},
										{
											"begin": 11802,
											"end": 11822,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11797,
											"end": 11822,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11797,
											"end": 11822,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11836,
											"end": 11856,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "617"
										},
										{
											"begin": 11854,
											"end": 11855,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11836,
											"end": 11856,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 11836,
											"end": 11856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11836,
											"end": 11856,
											"name": "tag",
											"source": 17,
											"value": "617"
										},
										{
											"begin": 11836,
											"end": 11856,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11831,
											"end": 11856,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11831,
											"end": 11856,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11875,
											"end": 11876,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11865,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "618"
										},
										{
											"begin": 11865,
											"end": 11900,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11880,
											"end": 11898,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "619"
										},
										{
											"begin": 11880,
											"end": 11898,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 11880,
											"end": 11898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11880,
											"end": 11898,
											"name": "tag",
											"source": 17,
											"value": "619"
										},
										{
											"begin": 11880,
											"end": 11898,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11865,
											"end": 11900,
											"name": "tag",
											"source": 17,
											"value": "618"
										},
										{
											"begin": 11865,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11922,
											"end": 11923,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11919,
											"end": 11920,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11915,
											"end": 11924,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 11910,
											"end": 11924,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11910,
											"end": 11924,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11745,
											"end": 11930,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11745,
											"end": 11930,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11745,
											"end": 11930,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11745,
											"end": 11930,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11745,
											"end": 11930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11936,
											"end": 12103,
											"name": "tag",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 11936,
											"end": 12103,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11973,
											"end": 11976,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11996,
											"end": 12018,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "621"
										},
										{
											"begin": 12012,
											"end": 12017,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11996,
											"end": 12018,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "422"
										},
										{
											"begin": 11996,
											"end": 12018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11996,
											"end": 12018,
											"name": "tag",
											"source": 17,
											"value": "621"
										},
										{
											"begin": 11996,
											"end": 12018,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11987,
											"end": 12018,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11987,
											"end": 12018,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12040,
											"end": 12044,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 12033,
											"end": 12038,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12030,
											"end": 12045,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 12027,
											"end": 12068,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "622"
										},
										{
											"begin": 12027,
											"end": 12068,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12048,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "623"
										},
										{
											"begin": 12048,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 12048,
											"end": 12066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12048,
											"end": 12066,
											"name": "tag",
											"source": 17,
											"value": "623"
										},
										{
											"begin": 12048,
											"end": 12066,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12027,
											"end": 12068,
											"name": "tag",
											"source": 17,
											"value": "622"
										},
										{
											"begin": 12027,
											"end": 12068,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12095,
											"end": 12096,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 12088,
											"end": 12093,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12084,
											"end": 12097,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12077,
											"end": 12097,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12077,
											"end": 12097,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11936,
											"end": 12103,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11936,
											"end": 12103,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11936,
											"end": 12103,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11936,
											"end": 12103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12109,
											"end": 12457,
											"name": "tag",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 12109,
											"end": 12457,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12149,
											"end": 12156,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12172,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "625"
										},
										{
											"begin": 12190,
											"end": 12191,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12172,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 12172,
											"end": 12192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12172,
											"end": 12192,
											"name": "tag",
											"source": 17,
											"value": "625"
										},
										{
											"begin": 12172,
											"end": 12192,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12167,
											"end": 12192,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12167,
											"end": 12192,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12206,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "626"
										},
										{
											"begin": 12224,
											"end": 12225,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12206,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 12206,
											"end": 12226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12206,
											"end": 12226,
											"name": "tag",
											"source": 17,
											"value": "626"
										},
										{
											"begin": 12206,
											"end": 12226,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12201,
											"end": 12226,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12201,
											"end": 12226,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12394,
											"end": 12395,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12326,
											"end": 12392,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12322,
											"end": 12396,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 12319,
											"end": 12320,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12316,
											"end": 12397,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 12311,
											"end": 12312,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12304,
											"end": 12313,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12297,
											"end": 12314,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12293,
											"end": 12398,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 12290,
											"end": 12421,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12290,
											"end": 12421,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "627"
										},
										{
											"begin": 12290,
											"end": 12421,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12401,
											"end": 12419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "628"
										},
										{
											"begin": 12401,
											"end": 12419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 12401,
											"end": 12419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12401,
											"end": 12419,
											"name": "tag",
											"source": 17,
											"value": "628"
										},
										{
											"begin": 12401,
											"end": 12419,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12290,
											"end": 12421,
											"name": "tag",
											"source": 17,
											"value": "627"
										},
										{
											"begin": 12290,
											"end": 12421,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12449,
											"end": 12450,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12446,
											"end": 12447,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12442,
											"end": 12451,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 12431,
											"end": 12451,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12431,
											"end": 12451,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12109,
											"end": 12457,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12109,
											"end": 12457,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12109,
											"end": 12457,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12109,
											"end": 12457,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12109,
											"end": 12457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12463,
											"end": 12768,
											"name": "tag",
											"source": 17,
											"value": "261"
										},
										{
											"begin": 12463,
											"end": 12768,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12503,
											"end": 12506,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12522,
											"end": 12542,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "630"
										},
										{
											"begin": 12540,
											"end": 12541,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12522,
											"end": 12542,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 12522,
											"end": 12542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12522,
											"end": 12542,
											"name": "tag",
											"source": 17,
											"value": "630"
										},
										{
											"begin": 12522,
											"end": 12542,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12517,
											"end": 12542,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12517,
											"end": 12542,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12556,
											"end": 12576,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "631"
										},
										{
											"begin": 12574,
											"end": 12575,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12556,
											"end": 12576,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 12556,
											"end": 12576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12556,
											"end": 12576,
											"name": "tag",
											"source": 17,
											"value": "631"
										},
										{
											"begin": 12556,
											"end": 12576,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12551,
											"end": 12576,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12551,
											"end": 12576,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12710,
											"end": 12711,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12642,
											"end": 12708,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12638,
											"end": 12712,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 12635,
											"end": 12636,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12632,
											"end": 12713,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 12629,
											"end": 12736,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12629,
											"end": 12736,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "632"
										},
										{
											"begin": 12629,
											"end": 12736,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "633"
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 12716,
											"end": 12734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "tag",
											"source": 17,
											"value": "633"
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12629,
											"end": 12736,
											"name": "tag",
											"source": 17,
											"value": "632"
										},
										{
											"begin": 12629,
											"end": 12736,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12760,
											"end": 12761,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12757,
											"end": 12758,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12753,
											"end": 12762,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12746,
											"end": 12762,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12746,
											"end": 12762,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12463,
											"end": 12768,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12463,
											"end": 12768,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12463,
											"end": 12768,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12463,
											"end": 12768,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12463,
											"end": 12768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12774,
											"end": 12943,
											"name": "tag",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 12774,
											"end": 12943,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12858,
											"end": 12869,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12892,
											"end": 12898,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12887,
											"end": 12890,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12880,
											"end": 12899,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12932,
											"end": 12936,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12927,
											"end": 12930,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12923,
											"end": 12937,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12774,
											"end": 12943,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12774,
											"end": 12943,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12774,
											"end": 12943,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12774,
											"end": 12943,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12774,
											"end": 12943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12949,
											"end": 13101,
											"name": "tag",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 12949,
											"end": 13101,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13089,
											"end": 13093,
											"name": "PUSH",
											"source": 17,
											"value": "4250000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13085,
											"end": 13086,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13077,
											"end": 13083,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13073,
											"end": 13087,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13066,
											"end": 13094,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12949,
											"end": 13101,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12949,
											"end": 13101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13107,
											"end": 13472,
											"name": "tag",
											"source": 17,
											"value": "441"
										},
										{
											"begin": 13107,
											"end": 13472,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13249,
											"end": 13252,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13270,
											"end": 13336,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "637"
										},
										{
											"begin": 13334,
											"end": 13335,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 13329,
											"end": 13332,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13270,
											"end": 13336,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 13270,
											"end": 13336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13270,
											"end": 13336,
											"name": "tag",
											"source": 17,
											"value": "637"
										},
										{
											"begin": 13270,
											"end": 13336,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13263,
											"end": 13336,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13263,
											"end": 13336,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13345,
											"end": 13438,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "638"
										},
										{
											"begin": 13434,
											"end": 13437,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13345,
											"end": 13438,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 13345,
											"end": 13438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13345,
											"end": 13438,
											"name": "tag",
											"source": 17,
											"value": "638"
										},
										{
											"begin": 13345,
											"end": 13438,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13463,
											"end": 13465,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13458,
											"end": 13461,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13447,
											"end": 13466,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13447,
											"end": 13466,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13107,
											"end": 13472,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13107,
											"end": 13472,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13107,
											"end": 13472,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13107,
											"end": 13472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13478,
											"end": 13897,
											"name": "tag",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 13478,
											"end": 13897,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13644,
											"end": 13648,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13682,
											"end": 13684,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13671,
											"end": 13680,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13667,
											"end": 13685,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13659,
											"end": 13685,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13659,
											"end": 13685,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13731,
											"end": 13740,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13725,
											"end": 13729,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13721,
											"end": 13741,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 13717,
											"end": 13718,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13706,
											"end": 13715,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13702,
											"end": 13719,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13695,
											"end": 13742,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13759,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "640"
										},
										{
											"begin": 13885,
											"end": 13889,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13759,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "441"
										},
										{
											"begin": 13759,
											"end": 13890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13759,
											"end": 13890,
											"name": "tag",
											"source": 17,
											"value": "640"
										},
										{
											"begin": 13759,
											"end": 13890,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13751,
											"end": 13890,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13751,
											"end": 13890,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13478,
											"end": 13897,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13478,
											"end": 13897,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13478,
											"end": 13897,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13478,
											"end": 13897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13903,
											"end": 14083,
											"name": "tag",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 13903,
											"end": 14083,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13951,
											"end": 14028,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13948,
											"end": 13949,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13941,
											"end": 14029,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14048,
											"end": 14052,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 14045,
											"end": 14046,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 14038,
											"end": 14053,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14072,
											"end": 14076,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 14069,
											"end": 14070,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14062,
											"end": 14077,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 14089,
											"end": 14202,
											"name": "tag",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 14089,
											"end": 14202,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14155,
											"end": 14161,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14189,
											"end": 14194,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14183,
											"end": 14195,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 14173,
											"end": 14195,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14173,
											"end": 14195,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14089,
											"end": 14202,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14089,
											"end": 14202,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14089,
											"end": 14202,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14089,
											"end": 14202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14208,
											"end": 14391,
											"name": "tag",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 14208,
											"end": 14391,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14306,
											"end": 14317,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14340,
											"end": 14346,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14335,
											"end": 14338,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14328,
											"end": 14347,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14380,
											"end": 14384,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14375,
											"end": 14378,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14371,
											"end": 14385,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14356,
											"end": 14385,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14356,
											"end": 14385,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14208,
											"end": 14391,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 14208,
											"end": 14391,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14208,
											"end": 14391,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14208,
											"end": 14391,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14208,
											"end": 14391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14397,
											"end": 14528,
											"name": "tag",
											"source": 17,
											"value": "444"
										},
										{
											"begin": 14397,
											"end": 14528,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14463,
											"end": 14467,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14486,
											"end": 14489,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14478,
											"end": 14489,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14478,
											"end": 14489,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14516,
											"end": 14520,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14511,
											"end": 14514,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14507,
											"end": 14521,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14499,
											"end": 14521,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14499,
											"end": 14521,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14397,
											"end": 14528,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14397,
											"end": 14528,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14397,
											"end": 14528,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14397,
											"end": 14528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14534,
											"end": 14627,
											"name": "tag",
											"source": 17,
											"value": "445"
										},
										{
											"begin": 14534,
											"end": 14627,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14570,
											"end": 14577,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14610,
											"end": 14620,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14603,
											"end": 14608,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14599,
											"end": 14621,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 14588,
											"end": 14621,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14588,
											"end": 14621,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14534,
											"end": 14627,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14534,
											"end": 14627,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14534,
											"end": 14627,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14534,
											"end": 14627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14633,
											"end": 14738,
											"name": "tag",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 14633,
											"end": 14738,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14708,
											"end": 14731,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "647"
										},
										{
											"begin": 14725,
											"end": 14730,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14708,
											"end": 14731,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "445"
										},
										{
											"begin": 14708,
											"end": 14731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14708,
											"end": 14731,
											"name": "tag",
											"source": 17,
											"value": "647"
										},
										{
											"begin": 14708,
											"end": 14731,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14703,
											"end": 14706,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14696,
											"end": 14732,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14633,
											"end": 14738,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14633,
											"end": 14738,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14633,
											"end": 14738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14744,
											"end": 14919,
											"name": "tag",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 14744,
											"end": 14919,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14811,
											"end": 14821,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14832,
											"end": 14876,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "649"
										},
										{
											"begin": 14872,
											"end": 14875,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14864,
											"end": 14870,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14832,
											"end": 14876,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 14832,
											"end": 14876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14832,
											"end": 14876,
											"name": "tag",
											"source": 17,
											"value": "649"
										},
										{
											"begin": 14832,
											"end": 14876,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14908,
											"end": 14912,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14903,
											"end": 14906,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14899,
											"end": 14913,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14885,
											"end": 14913,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14885,
											"end": 14913,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14744,
											"end": 14919,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 14744,
											"end": 14919,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14744,
											"end": 14919,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14744,
											"end": 14919,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14744,
											"end": 14919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14925,
											"end": 15037,
											"name": "tag",
											"source": 17,
											"value": "448"
										},
										{
											"begin": 14925,
											"end": 15037,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14994,
											"end": 14998,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15026,
											"end": 15030,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15021,
											"end": 15024,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15017,
											"end": 15031,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15009,
											"end": 15031,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15009,
											"end": 15031,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14925,
											"end": 15037,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14925,
											"end": 15037,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14925,
											"end": 15037,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14925,
											"end": 15037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15071,
											"end": 15795,
											"name": "tag",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 15071,
											"end": 15795,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15188,
											"end": 15191,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15217,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "652"
										},
										{
											"begin": 15264,
											"end": 15269,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15217,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 15217,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15217,
											"end": 15270,
											"name": "tag",
											"source": 17,
											"value": "652"
										},
										{
											"begin": 15217,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15286,
											"end": 15371,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "653"
										},
										{
											"begin": 15364,
											"end": 15370,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15359,
											"end": 15362,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 15286,
											"end": 15371,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 15286,
											"end": 15371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15286,
											"end": 15371,
											"name": "tag",
											"source": 17,
											"value": "653"
										},
										{
											"begin": 15286,
											"end": 15371,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15279,
											"end": 15371,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 15279,
											"end": 15371,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15395,
											"end": 15450,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "654"
										},
										{
											"begin": 15444,
											"end": 15449,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15395,
											"end": 15450,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "444"
										},
										{
											"begin": 15395,
											"end": 15450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15395,
											"end": 15450,
											"name": "tag",
											"source": 17,
											"value": "654"
										},
										{
											"begin": 15395,
											"end": 15450,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15473,
											"end": 15480,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 15504,
											"end": 15505,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15489,
											"end": 15770,
											"name": "tag",
											"source": 17,
											"value": "655"
										},
										{
											"begin": 15489,
											"end": 15770,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15514,
											"end": 15520,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15511,
											"end": 15512,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15508,
											"end": 15521,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 15489,
											"end": 15770,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 15489,
											"end": 15770,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "657"
										},
										{
											"begin": 15489,
											"end": 15770,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 15590,
											"end": 15596,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15584,
											"end": 15597,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 15617,
											"end": 15678,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "658"
										},
										{
											"begin": 15674,
											"end": 15677,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 15659,
											"end": 15672,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15617,
											"end": 15678,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 15617,
											"end": 15678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15617,
											"end": 15678,
											"name": "tag",
											"source": 17,
											"value": "658"
										},
										{
											"begin": 15617,
											"end": 15678,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15610,
											"end": 15678,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 15610,
											"end": 15678,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15701,
											"end": 15760,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "659"
										},
										{
											"begin": 15753,
											"end": 15759,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15701,
											"end": 15760,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "448"
										},
										{
											"begin": 15701,
											"end": 15760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15701,
											"end": 15760,
											"name": "tag",
											"source": 17,
											"value": "659"
										},
										{
											"begin": 15701,
											"end": 15760,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15691,
											"end": 15760,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 15691,
											"end": 15760,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15549,
											"end": 15770,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15536,
											"end": 15537,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 15533,
											"end": 15534,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15529,
											"end": 15538,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15524,
											"end": 15538,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15524,
											"end": 15538,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15489,
											"end": 15770,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "655"
										},
										{
											"begin": 15489,
											"end": 15770,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15489,
											"end": 15770,
											"name": "tag",
											"source": 17,
											"value": "657"
										},
										{
											"begin": 15489,
											"end": 15770,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15493,
											"end": 15507,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15786,
											"end": 15789,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 15779,
											"end": 15789,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 15779,
											"end": 15789,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15193,
											"end": 15795,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15193,
											"end": 15795,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15193,
											"end": 15795,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15071,
											"end": 15795,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 15071,
											"end": 15795,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15071,
											"end": 15795,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15071,
											"end": 15795,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15071,
											"end": 15795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15801,
											"end": 16170,
											"name": "tag",
											"source": 17,
											"value": "279"
										},
										{
											"begin": 15801,
											"end": 16170,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15942,
											"end": 15946,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15980,
											"end": 15982,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15969,
											"end": 15978,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15965,
											"end": 15983,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15957,
											"end": 15983,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15957,
											"end": 15983,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16029,
											"end": 16038,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16023,
											"end": 16027,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16019,
											"end": 16039,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 16015,
											"end": 16016,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16004,
											"end": 16013,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16000,
											"end": 16017,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15993,
											"end": 16040,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16057,
											"end": 16163,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "661"
										},
										{
											"begin": 16158,
											"end": 16162,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16149,
											"end": 16155,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16057,
											"end": 16163,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 16057,
											"end": 16163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16057,
											"end": 16163,
											"name": "tag",
											"source": 17,
											"value": "661"
										},
										{
											"begin": 16057,
											"end": 16163,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16049,
											"end": 16163,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16049,
											"end": 16163,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15801,
											"end": 16170,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 15801,
											"end": 16170,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15801,
											"end": 16170,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15801,
											"end": 16170,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15801,
											"end": 16170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16176,
											"end": 16293,
											"name": "tag",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 16176,
											"end": 16293,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16285,
											"end": 16286,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16282,
											"end": 16283,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 16275,
											"end": 16287,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 16299,
											"end": 16401,
											"name": "tag",
											"source": 17,
											"value": "451"
										},
										{
											"begin": 16299,
											"end": 16401,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16340,
											"end": 16346,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16391,
											"end": 16393,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 16387,
											"end": 16394,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 16382,
											"end": 16384,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 16375,
											"end": 16380,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16371,
											"end": 16385,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16367,
											"end": 16395,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 16357,
											"end": 16395,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16357,
											"end": 16395,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16299,
											"end": 16401,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16299,
											"end": 16401,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16299,
											"end": 16401,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16299,
											"end": 16401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16407,
											"end": 16688,
											"name": "tag",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 16407,
											"end": 16688,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16490,
											"end": 16517,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "665"
										},
										{
											"begin": 16512,
											"end": 16516,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16490,
											"end": 16517,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "451"
										},
										{
											"begin": 16490,
											"end": 16517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16490,
											"end": 16517,
											"name": "tag",
											"source": 17,
											"value": "665"
										},
										{
											"begin": 16490,
											"end": 16517,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16482,
											"end": 16488,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16478,
											"end": 16518,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16620,
											"end": 16626,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16608,
											"end": 16618,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16605,
											"end": 16627,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 16584,
											"end": 16602,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16572,
											"end": 16582,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16569,
											"end": 16603,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 16566,
											"end": 16628,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 16563,
											"end": 16651,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 16563,
											"end": 16651,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "666"
										},
										{
											"begin": 16563,
											"end": 16651,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 16631,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "667"
										},
										{
											"begin": 16631,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 16631,
											"end": 16649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16631,
											"end": 16649,
											"name": "tag",
											"source": 17,
											"value": "667"
										},
										{
											"begin": 16631,
											"end": 16649,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16563,
											"end": 16651,
											"name": "tag",
											"source": 17,
											"value": "666"
										},
										{
											"begin": 16563,
											"end": 16651,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16671,
											"end": 16681,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 16667,
											"end": 16669,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 16660,
											"end": 16682,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16450,
											"end": 16688,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16407,
											"end": 16688,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16407,
											"end": 16688,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16407,
											"end": 16688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16694,
											"end": 16823,
											"name": "tag",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 16694,
											"end": 16823,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16728,
											"end": 16734,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16755,
											"end": 16775,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "669"
										},
										{
											"begin": 16755,
											"end": 16775,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "408"
										},
										{
											"begin": 16755,
											"end": 16775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16755,
											"end": 16775,
											"name": "tag",
											"source": 17,
											"value": "669"
										},
										{
											"begin": 16755,
											"end": 16775,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16745,
											"end": 16775,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16745,
											"end": 16775,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16784,
											"end": 16817,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "670"
										},
										{
											"begin": 16812,
											"end": 16816,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16804,
											"end": 16810,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16784,
											"end": 16817,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 16784,
											"end": 16817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16784,
											"end": 16817,
											"name": "tag",
											"source": 17,
											"value": "670"
										},
										{
											"begin": 16784,
											"end": 16817,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16694,
											"end": 16823,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16694,
											"end": 16823,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16694,
											"end": 16823,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16694,
											"end": 16823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16829,
											"end": 17138,
											"name": "tag",
											"source": 17,
											"value": "454"
										},
										{
											"begin": 16829,
											"end": 17138,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16904,
											"end": 16908,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16994,
											"end": 17012,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16986,
											"end": 16992,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16983,
											"end": 17013,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 16980,
											"end": 17036,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 16980,
											"end": 17036,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "672"
										},
										{
											"begin": 16980,
											"end": 17036,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 17016,
											"end": 17034,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "673"
										},
										{
											"begin": 17016,
											"end": 17034,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 17016,
											"end": 17034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17016,
											"end": 17034,
											"name": "tag",
											"source": 17,
											"value": "673"
										},
										{
											"begin": 17016,
											"end": 17034,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16980,
											"end": 17036,
											"name": "tag",
											"source": 17,
											"value": "672"
										},
										{
											"begin": 16980,
											"end": 17036,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17066,
											"end": 17070,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17058,
											"end": 17064,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17054,
											"end": 17071,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 17046,
											"end": 17071,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17046,
											"end": 17071,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17126,
											"end": 17130,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17120,
											"end": 17124,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17116,
											"end": 17131,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17108,
											"end": 17131,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17108,
											"end": 17131,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16829,
											"end": 17138,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16829,
											"end": 17138,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16829,
											"end": 17138,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16829,
											"end": 17138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17144,
											"end": 17261,
											"name": "tag",
											"source": 17,
											"value": "455"
										},
										{
											"begin": 17144,
											"end": 17261,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17253,
											"end": 17254,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17250,
											"end": 17251,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 17243,
											"end": 17255,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 17267,
											"end": 17357,
											"name": "tag",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 17267,
											"end": 17357,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17302,
											"end": 17309,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17345,
											"end": 17350,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17342,
											"end": 17343,
											"name": "PUSH",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 17331,
											"end": 17351,
											"name": "SIGNEXTEND",
											"source": 17
										},
										{
											"begin": 17320,
											"end": 17351,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17320,
											"end": 17351,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17267,
											"end": 17357,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17267,
											"end": 17357,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17267,
											"end": 17357,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17267,
											"end": 17357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17363,
											"end": 17481,
											"name": "tag",
											"source": 17,
											"value": "457"
										},
										{
											"begin": 17363,
											"end": 17481,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17434,
											"end": 17456,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "677"
										},
										{
											"begin": 17450,
											"end": 17455,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17434,
											"end": 17456,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 17434,
											"end": 17456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17434,
											"end": 17456,
											"name": "tag",
											"source": 17,
											"value": "677"
										},
										{
											"begin": 17434,
											"end": 17456,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17427,
											"end": 17432,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17424,
											"end": 17457,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 17414,
											"end": 17475,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "678"
										},
										{
											"begin": 17414,
											"end": 17475,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 17471,
											"end": 17472,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17468,
											"end": 17469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 17461,
											"end": 17473,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 17414,
											"end": 17475,
											"name": "tag",
											"source": 17,
											"value": "678"
										},
										{
											"begin": 17414,
											"end": 17475,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17363,
											"end": 17481,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17363,
											"end": 17481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17487,
											"end": 17626,
											"name": "tag",
											"source": 17,
											"value": "458"
										},
										{
											"begin": 17487,
											"end": 17626,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17542,
											"end": 17547,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17573,
											"end": 17579,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17567,
											"end": 17580,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 17558,
											"end": 17580,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17558,
											"end": 17580,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17589,
											"end": 17620,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "680"
										},
										{
											"begin": 17614,
											"end": 17619,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17589,
											"end": 17620,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "457"
										},
										{
											"begin": 17589,
											"end": 17620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17589,
											"end": 17620,
											"name": "tag",
											"source": 17,
											"value": "680"
										},
										{
											"begin": 17589,
											"end": 17620,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17487,
											"end": 17626,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 17487,
											"end": 17626,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17487,
											"end": 17626,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17487,
											"end": 17626,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17487,
											"end": 17626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17647,
											"end": 18373,
											"name": "tag",
											"source": 17,
											"value": "459"
										},
										{
											"begin": 17647,
											"end": 18373,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17752,
											"end": 17757,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17777,
											"end": 17856,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "682"
										},
										{
											"begin": 17793,
											"end": 17855,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "683"
										},
										{
											"begin": 17848,
											"end": 17854,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 17793,
											"end": 17855,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "454"
										},
										{
											"begin": 17793,
											"end": 17855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17793,
											"end": 17855,
											"name": "tag",
											"source": 17,
											"value": "683"
										},
										{
											"begin": 17793,
											"end": 17855,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17777,
											"end": 17856,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 17777,
											"end": 17856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17777,
											"end": 17856,
											"name": "tag",
											"source": 17,
											"value": "682"
										},
										{
											"begin": 17777,
											"end": 17856,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17768,
											"end": 17856,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17768,
											"end": 17856,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17876,
											"end": 17881,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 17905,
											"end": 17911,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17898,
											"end": 17903,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17891,
											"end": 17912,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17939,
											"end": 17943,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17932,
											"end": 17937,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17928,
											"end": 17944,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17921,
											"end": 17944,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17921,
											"end": 17944,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17992,
											"end": 17996,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17984,
											"end": 17990,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 17980,
											"end": 17997,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 17972,
											"end": 17978,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17968,
											"end": 17998,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18021,
											"end": 18024,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 18013,
											"end": 18019,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18010,
											"end": 18025,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 18007,
											"end": 18129,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 18007,
											"end": 18129,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "684"
										},
										{
											"begin": 18007,
											"end": 18129,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 18040,
											"end": 18119,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "685"
										},
										{
											"begin": 18040,
											"end": 18119,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "455"
										},
										{
											"begin": 18040,
											"end": 18119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18040,
											"end": 18119,
											"name": "tag",
											"source": 17,
											"value": "685"
										},
										{
											"begin": 18040,
											"end": 18119,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18007,
											"end": 18129,
											"name": "tag",
											"source": 17,
											"value": "684"
										},
										{
											"begin": 18007,
											"end": 18129,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18155,
											"end": 18161,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 18138,
											"end": 18367,
											"name": "tag",
											"source": 17,
											"value": "686"
										},
										{
											"begin": 18138,
											"end": 18367,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18172,
											"end": 18178,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18167,
											"end": 18170,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18164,
											"end": 18179,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 18138,
											"end": 18367,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 18138,
											"end": 18367,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "688"
										},
										{
											"begin": 18138,
											"end": 18367,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 18247,
											"end": 18250,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 18276,
											"end": 18322,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "689"
										},
										{
											"begin": 18318,
											"end": 18321,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 18306,
											"end": 18316,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18276,
											"end": 18322,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "458"
										},
										{
											"begin": 18276,
											"end": 18322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18276,
											"end": 18322,
											"name": "tag",
											"source": 17,
											"value": "689"
										},
										{
											"begin": 18276,
											"end": 18322,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18271,
											"end": 18274,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 18264,
											"end": 18323,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18352,
											"end": 18356,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 18347,
											"end": 18350,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 18343,
											"end": 18357,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18336,
											"end": 18357,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 18336,
											"end": 18357,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18214,
											"end": 18367,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18198,
											"end": 18202,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 18193,
											"end": 18196,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18189,
											"end": 18203,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18182,
											"end": 18203,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18182,
											"end": 18203,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18138,
											"end": 18367,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "686"
										},
										{
											"begin": 18138,
											"end": 18367,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18138,
											"end": 18367,
											"name": "tag",
											"source": 17,
											"value": "688"
										},
										{
											"begin": 18138,
											"end": 18367,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18142,
											"end": 18163,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17758,
											"end": 18373,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17758,
											"end": 18373,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17647,
											"end": 18373,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 17647,
											"end": 18373,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 17647,
											"end": 18373,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17647,
											"end": 18373,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17647,
											"end": 18373,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17647,
											"end": 18373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18394,
											"end": 18775,
											"name": "tag",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 18394,
											"end": 18775,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18474,
											"end": 18479,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18523,
											"end": 18526,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18516,
											"end": 18520,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 18508,
											"end": 18514,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 18504,
											"end": 18521,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18500,
											"end": 18527,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 18490,
											"end": 18612,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "691"
										},
										{
											"begin": 18490,
											"end": 18612,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 18531,
											"end": 18610,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "692"
										},
										{
											"begin": 18531,
											"end": 18610,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 18531,
											"end": 18610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18531,
											"end": 18610,
											"name": "tag",
											"source": 17,
											"value": "692"
										},
										{
											"begin": 18531,
											"end": 18610,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18490,
											"end": 18612,
											"name": "tag",
											"source": 17,
											"value": "691"
										},
										{
											"begin": 18490,
											"end": 18612,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18641,
											"end": 18647,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18635,
											"end": 18648,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 18666,
											"end": 18769,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "693"
										},
										{
											"begin": 18765,
											"end": 18768,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 18757,
											"end": 18763,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18750,
											"end": 18754,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 18742,
											"end": 18748,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 18738,
											"end": 18755,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18666,
											"end": 18769,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "459"
										},
										{
											"begin": 18666,
											"end": 18769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18666,
											"end": 18769,
											"name": "tag",
											"source": 17,
											"value": "693"
										},
										{
											"begin": 18666,
											"end": 18769,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18657,
											"end": 18769,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18657,
											"end": 18769,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18480,
											"end": 18775,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18394,
											"end": 18775,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 18394,
											"end": 18775,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18394,
											"end": 18775,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18394,
											"end": 18775,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18394,
											"end": 18775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18781,
											"end": 19092,
											"name": "tag",
											"source": 17,
											"value": "461"
										},
										{
											"begin": 18781,
											"end": 19092,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18858,
											"end": 18862,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18948,
											"end": 18966,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18940,
											"end": 18946,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18937,
											"end": 18967,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 18934,
											"end": 18990,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 18934,
											"end": 18990,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "695"
										},
										{
											"begin": 18934,
											"end": 18990,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 18970,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "696"
										},
										{
											"begin": 18970,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 18970,
											"end": 18988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18970,
											"end": 18988,
											"name": "tag",
											"source": 17,
											"value": "696"
										},
										{
											"begin": 18970,
											"end": 18988,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18934,
											"end": 18990,
											"name": "tag",
											"source": 17,
											"value": "695"
										},
										{
											"begin": 18934,
											"end": 18990,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19020,
											"end": 19024,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19012,
											"end": 19018,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19008,
											"end": 19025,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 19000,
											"end": 19025,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19000,
											"end": 19025,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19080,
											"end": 19084,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19074,
											"end": 19078,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19070,
											"end": 19085,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19062,
											"end": 19085,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19062,
											"end": 19085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18781,
											"end": 19092,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18781,
											"end": 19092,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18781,
											"end": 19092,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18781,
											"end": 19092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19098,
											"end": 19220,
											"name": "tag",
											"source": 17,
											"value": "462"
										},
										{
											"begin": 19098,
											"end": 19220,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19171,
											"end": 19195,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "698"
										},
										{
											"begin": 19189,
											"end": 19194,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19171,
											"end": 19195,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "415"
										},
										{
											"begin": 19171,
											"end": 19195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19171,
											"end": 19195,
											"name": "tag",
											"source": 17,
											"value": "698"
										},
										{
											"begin": 19171,
											"end": 19195,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19164,
											"end": 19169,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19161,
											"end": 19196,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 19151,
											"end": 19214,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "699"
										},
										{
											"begin": 19151,
											"end": 19214,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 19210,
											"end": 19211,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19207,
											"end": 19208,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 19200,
											"end": 19212,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 19151,
											"end": 19214,
											"name": "tag",
											"source": 17,
											"value": "699"
										},
										{
											"begin": 19151,
											"end": 19214,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19098,
											"end": 19220,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19098,
											"end": 19220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19226,
											"end": 19369,
											"name": "tag",
											"source": 17,
											"value": "463"
										},
										{
											"begin": 19226,
											"end": 19369,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19283,
											"end": 19288,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19314,
											"end": 19320,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19308,
											"end": 19321,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 19299,
											"end": 19321,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19299,
											"end": 19321,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19330,
											"end": 19363,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "701"
										},
										{
											"begin": 19357,
											"end": 19362,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19330,
											"end": 19363,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "462"
										},
										{
											"begin": 19330,
											"end": 19363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19330,
											"end": 19363,
											"name": "tag",
											"source": 17,
											"value": "701"
										},
										{
											"begin": 19330,
											"end": 19363,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19226,
											"end": 19369,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 19226,
											"end": 19369,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19226,
											"end": 19369,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19226,
											"end": 19369,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19226,
											"end": 19369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19392,
											"end": 20124,
											"name": "tag",
											"source": 17,
											"value": "464"
										},
										{
											"begin": 19392,
											"end": 20124,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19499,
											"end": 19504,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19524,
											"end": 19605,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "703"
										},
										{
											"begin": 19540,
											"end": 19604,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "704"
										},
										{
											"begin": 19597,
											"end": 19603,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 19540,
											"end": 19604,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "461"
										},
										{
											"begin": 19540,
											"end": 19604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19540,
											"end": 19604,
											"name": "tag",
											"source": 17,
											"value": "704"
										},
										{
											"begin": 19540,
											"end": 19604,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19524,
											"end": 19605,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 19524,
											"end": 19605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19524,
											"end": 19605,
											"name": "tag",
											"source": 17,
											"value": "703"
										},
										{
											"begin": 19524,
											"end": 19605,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19515,
											"end": 19605,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19515,
											"end": 19605,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19625,
											"end": 19630,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 19654,
											"end": 19660,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19647,
											"end": 19652,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19640,
											"end": 19661,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 19688,
											"end": 19692,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19681,
											"end": 19686,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19677,
											"end": 19693,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19670,
											"end": 19693,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19670,
											"end": 19693,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19741,
											"end": 19745,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19733,
											"end": 19739,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 19729,
											"end": 19746,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 19721,
											"end": 19727,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19717,
											"end": 19747,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19770,
											"end": 19773,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 19762,
											"end": 19768,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19759,
											"end": 19774,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 19756,
											"end": 19878,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 19756,
											"end": 19878,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "705"
										},
										{
											"begin": 19756,
											"end": 19878,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 19789,
											"end": 19868,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "706"
										},
										{
											"begin": 19789,
											"end": 19868,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "455"
										},
										{
											"begin": 19789,
											"end": 19868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19789,
											"end": 19868,
											"name": "tag",
											"source": 17,
											"value": "706"
										},
										{
											"begin": 19789,
											"end": 19868,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19756,
											"end": 19878,
											"name": "tag",
											"source": 17,
											"value": "705"
										},
										{
											"begin": 19756,
											"end": 19878,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19904,
											"end": 19910,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19887,
											"end": 20118,
											"name": "tag",
											"source": 17,
											"value": "707"
										},
										{
											"begin": 19887,
											"end": 20118,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19921,
											"end": 19927,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19916,
											"end": 19919,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19913,
											"end": 19928,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 19887,
											"end": 20118,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 19887,
											"end": 20118,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "709"
										},
										{
											"begin": 19887,
											"end": 20118,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 19996,
											"end": 19999,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 20025,
											"end": 20073,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "710"
										},
										{
											"begin": 20069,
											"end": 20072,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 20057,
											"end": 20067,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20025,
											"end": 20073,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "463"
										},
										{
											"begin": 20025,
											"end": 20073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20025,
											"end": 20073,
											"name": "tag",
											"source": 17,
											"value": "710"
										},
										{
											"begin": 20025,
											"end": 20073,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20020,
											"end": 20023,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 20013,
											"end": 20074,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20103,
											"end": 20107,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 20098,
											"end": 20101,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 20094,
											"end": 20108,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20087,
											"end": 20108,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 20087,
											"end": 20108,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19963,
											"end": 20118,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19947,
											"end": 19951,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19942,
											"end": 19945,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19938,
											"end": 19952,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19931,
											"end": 19952,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19931,
											"end": 19952,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19887,
											"end": 20118,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "707"
										},
										{
											"begin": 19887,
											"end": 20118,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19887,
											"end": 20118,
											"name": "tag",
											"source": 17,
											"value": "709"
										},
										{
											"begin": 19887,
											"end": 20118,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19891,
											"end": 19912,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19505,
											"end": 20124,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19505,
											"end": 20124,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19392,
											"end": 20124,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 19392,
											"end": 20124,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 19392,
											"end": 20124,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19392,
											"end": 20124,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19392,
											"end": 20124,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19392,
											"end": 20124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20147,
											"end": 20532,
											"name": "tag",
											"source": 17,
											"value": "465"
										},
										{
											"begin": 20147,
											"end": 20532,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20229,
											"end": 20234,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20278,
											"end": 20281,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20271,
											"end": 20275,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 20263,
											"end": 20269,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20259,
											"end": 20276,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20255,
											"end": 20282,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 20245,
											"end": 20367,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "712"
										},
										{
											"begin": 20245,
											"end": 20367,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 20286,
											"end": 20365,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "713"
										},
										{
											"begin": 20286,
											"end": 20365,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 20286,
											"end": 20365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20286,
											"end": 20365,
											"name": "tag",
											"source": 17,
											"value": "713"
										},
										{
											"begin": 20286,
											"end": 20365,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20245,
											"end": 20367,
											"name": "tag",
											"source": 17,
											"value": "712"
										},
										{
											"begin": 20245,
											"end": 20367,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20396,
											"end": 20402,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20390,
											"end": 20403,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 20421,
											"end": 20526,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "714"
										},
										{
											"begin": 20522,
											"end": 20525,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 20514,
											"end": 20520,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20507,
											"end": 20511,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 20499,
											"end": 20505,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 20495,
											"end": 20512,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20421,
											"end": 20526,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "464"
										},
										{
											"begin": 20421,
											"end": 20526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20421,
											"end": 20526,
											"name": "tag",
											"source": 17,
											"value": "714"
										},
										{
											"begin": 20421,
											"end": 20526,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20412,
											"end": 20526,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20412,
											"end": 20526,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20235,
											"end": 20532,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20147,
											"end": 20532,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 20147,
											"end": 20532,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20147,
											"end": 20532,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20147,
											"end": 20532,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20147,
											"end": 20532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20538,
											"end": 21447,
											"name": "tag",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 20538,
											"end": 21447,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20665,
											"end": 20671,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20673,
											"end": 20679,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 20722,
											"end": 20724,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 20710,
											"end": 20719,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20701,
											"end": 20708,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 20697,
											"end": 20720,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 20693,
											"end": 20725,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 20690,
											"end": 20809,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 20690,
											"end": 20809,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "716"
										},
										{
											"begin": 20690,
											"end": 20809,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 20728,
											"end": 20807,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "717"
										},
										{
											"begin": 20728,
											"end": 20807,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 20728,
											"end": 20807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20728,
											"end": 20807,
											"name": "tag",
											"source": 17,
											"value": "717"
										},
										{
											"begin": 20728,
											"end": 20807,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20690,
											"end": 20809,
											"name": "tag",
											"source": 17,
											"value": "716"
										},
										{
											"begin": 20690,
											"end": 20809,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20869,
											"end": 20870,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20858,
											"end": 20867,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20854,
											"end": 20871,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20848,
											"end": 20872,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 20899,
											"end": 20917,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20891,
											"end": 20897,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20888,
											"end": 20918,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 20885,
											"end": 21002,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 20885,
											"end": 21002,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "718"
										},
										{
											"begin": 20885,
											"end": 21002,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 20921,
											"end": 21000,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "719"
										},
										{
											"begin": 20921,
											"end": 21000,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "410"
										},
										{
											"begin": 20921,
											"end": 21000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20921,
											"end": 21000,
											"name": "tag",
											"source": 17,
											"value": "719"
										},
										{
											"begin": 20921,
											"end": 21000,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20885,
											"end": 21002,
											"name": "tag",
											"source": 17,
											"value": "718"
										},
										{
											"begin": 20885,
											"end": 21002,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21026,
											"end": 21113,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "720"
										},
										{
											"begin": 21105,
											"end": 21112,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 21096,
											"end": 21102,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21085,
											"end": 21094,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 21081,
											"end": 21103,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21026,
											"end": 21113,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 21026,
											"end": 21113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21026,
											"end": 21113,
											"name": "tag",
											"source": 17,
											"value": "720"
										},
										{
											"begin": 21026,
											"end": 21113,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21016,
											"end": 21113,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 21016,
											"end": 21113,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20819,
											"end": 21123,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21183,
											"end": 21185,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 21172,
											"end": 21181,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 21168,
											"end": 21186,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21162,
											"end": 21187,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 21214,
											"end": 21232,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21206,
											"end": 21212,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21203,
											"end": 21233,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 21200,
											"end": 21317,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 21200,
											"end": 21317,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "721"
										},
										{
											"begin": 21200,
											"end": 21317,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 21236,
											"end": 21315,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "722"
										},
										{
											"begin": 21236,
											"end": 21315,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "410"
										},
										{
											"begin": 21236,
											"end": 21315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21236,
											"end": 21315,
											"name": "tag",
											"source": 17,
											"value": "722"
										},
										{
											"begin": 21236,
											"end": 21315,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21200,
											"end": 21317,
											"name": "tag",
											"source": 17,
											"value": "721"
										},
										{
											"begin": 21200,
											"end": 21317,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21341,
											"end": 21430,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "723"
										},
										{
											"begin": 21422,
											"end": 21429,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 21413,
											"end": 21419,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21402,
											"end": 21411,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 21398,
											"end": 21420,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21341,
											"end": 21430,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "465"
										},
										{
											"begin": 21341,
											"end": 21430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21341,
											"end": 21430,
											"name": "tag",
											"source": 17,
											"value": "723"
										},
										{
											"begin": 21341,
											"end": 21430,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21331,
											"end": 21430,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21331,
											"end": 21430,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21133,
											"end": 21440,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20538,
											"end": 21447,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 20538,
											"end": 21447,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20538,
											"end": 21447,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 20538,
											"end": 21447,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20538,
											"end": 21447,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20538,
											"end": 21447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21453,
											"end": 21927,
											"name": "tag",
											"source": 17,
											"value": "289"
										},
										{
											"begin": 21453,
											"end": 21927,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21491,
											"end": 21495,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21511,
											"end": 21529,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "725"
										},
										{
											"begin": 21527,
											"end": 21528,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21511,
											"end": 21529,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 21511,
											"end": 21529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21511,
											"end": 21529,
											"name": "tag",
											"source": 17,
											"value": "725"
										},
										{
											"begin": 21511,
											"end": 21529,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21506,
											"end": 21529,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21506,
											"end": 21529,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21543,
											"end": 21561,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "726"
										},
										{
											"begin": 21559,
											"end": 21560,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 21543,
											"end": 21561,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 21543,
											"end": 21561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21543,
											"end": 21561,
											"name": "tag",
											"source": 17,
											"value": "726"
										},
										{
											"begin": 21543,
											"end": 21561,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21538,
											"end": 21561,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 21538,
											"end": 21561,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21731,
											"end": 21732,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21663,
											"end": 21729,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80000000000000"
										},
										{
											"begin": 21659,
											"end": 21733,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21656,
											"end": 21657,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21652,
											"end": 21734,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 21647,
											"end": 21648,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21644,
											"end": 21645,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 21640,
											"end": 21649,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 21633,
											"end": 21650,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 21629,
											"end": 21735,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 21626,
											"end": 21758,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 21626,
											"end": 21758,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "727"
										},
										{
											"begin": 21626,
											"end": 21758,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 21738,
											"end": 21756,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "728"
										},
										{
											"begin": 21738,
											"end": 21756,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 21738,
											"end": 21756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21738,
											"end": 21756,
											"name": "tag",
											"source": 17,
											"value": "728"
										},
										{
											"begin": 21738,
											"end": 21756,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21626,
											"end": 21758,
											"name": "tag",
											"source": 17,
											"value": "727"
										},
										{
											"begin": 21626,
											"end": 21758,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21867,
											"end": 21868,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21849,
											"end": 21865,
											"name": "PUSH",
											"source": 17,
											"value": "7FFFFFFFFFFFFF"
										},
										{
											"begin": 21845,
											"end": 21869,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21842,
											"end": 21843,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21838,
											"end": 21870,
											"name": "SGT",
											"source": 17
										},
										{
											"begin": 21834,
											"end": 21835,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21831,
											"end": 21832,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 21827,
											"end": 21836,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 21823,
											"end": 21871,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 21820,
											"end": 21894,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 21820,
											"end": 21894,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "729"
										},
										{
											"begin": 21820,
											"end": 21894,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 21874,
											"end": 21892,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "730"
										},
										{
											"begin": 21874,
											"end": 21892,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 21874,
											"end": 21892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21874,
											"end": 21892,
											"name": "tag",
											"source": 17,
											"value": "730"
										},
										{
											"begin": 21874,
											"end": 21892,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21820,
											"end": 21894,
											"name": "tag",
											"source": 17,
											"value": "729"
										},
										{
											"begin": 21820,
											"end": 21894,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21919,
											"end": 21920,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21916,
											"end": 21917,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21912,
											"end": 21921,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 21904,
											"end": 21921,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21904,
											"end": 21921,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21453,
											"end": 21927,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 21453,
											"end": 21927,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21453,
											"end": 21927,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21453,
											"end": 21927,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21453,
											"end": 21927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21933,
											"end": 22124,
											"name": "tag",
											"source": 17,
											"value": "295"
										},
										{
											"begin": 21933,
											"end": 22124,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21973,
											"end": 21977,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21993,
											"end": 22013,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "732"
										},
										{
											"begin": 22011,
											"end": 22012,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21993,
											"end": 22013,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "415"
										},
										{
											"begin": 21993,
											"end": 22013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21993,
											"end": 22013,
											"name": "tag",
											"source": 17,
											"value": "732"
										},
										{
											"begin": 21993,
											"end": 22013,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21988,
											"end": 22013,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21988,
											"end": 22013,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22027,
											"end": 22047,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "733"
										},
										{
											"begin": 22045,
											"end": 22046,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22027,
											"end": 22047,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "415"
										},
										{
											"begin": 22027,
											"end": 22047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22027,
											"end": 22047,
											"name": "tag",
											"source": 17,
											"value": "733"
										},
										{
											"begin": 22027,
											"end": 22047,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22022,
											"end": 22047,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 22022,
											"end": 22047,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22066,
											"end": 22067,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22063,
											"end": 22064,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22060,
											"end": 22068,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 22057,
											"end": 22091,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 22057,
											"end": 22091,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "734"
										},
										{
											"begin": 22057,
											"end": 22091,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 22071,
											"end": 22089,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "735"
										},
										{
											"begin": 22071,
											"end": 22089,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 22071,
											"end": 22089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22071,
											"end": 22089,
											"name": "tag",
											"source": 17,
											"value": "735"
										},
										{
											"begin": 22071,
											"end": 22089,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22057,
											"end": 22091,
											"name": "tag",
											"source": 17,
											"value": "734"
										},
										{
											"begin": 22057,
											"end": 22091,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22116,
											"end": 22117,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22113,
											"end": 22114,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22109,
											"end": 22118,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 22101,
											"end": 22118,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22101,
											"end": 22118,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21933,
											"end": 22124,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 21933,
											"end": 22124,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21933,
											"end": 22124,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21933,
											"end": 22124,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21933,
											"end": 22124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22130,
											"end": 22512,
											"name": "tag",
											"source": 17,
											"value": "297"
										},
										{
											"begin": 22130,
											"end": 22512,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22168,
											"end": 22169,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22185,
											"end": 22203,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "737"
										},
										{
											"begin": 22201,
											"end": 22202,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22185,
											"end": 22203,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 22185,
											"end": 22203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22185,
											"end": 22203,
											"name": "tag",
											"source": 17,
											"value": "737"
										},
										{
											"begin": 22185,
											"end": 22203,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22180,
											"end": 22203,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22180,
											"end": 22203,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22217,
											"end": 22235,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "738"
										},
										{
											"begin": 22233,
											"end": 22234,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22217,
											"end": 22235,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 22217,
											"end": 22235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22217,
											"end": 22235,
											"name": "tag",
											"source": 17,
											"value": "738"
										},
										{
											"begin": 22217,
											"end": 22235,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22212,
											"end": 22235,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 22212,
											"end": 22235,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22254,
											"end": 22255,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22244,
											"end": 22279,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "739"
										},
										{
											"begin": 22244,
											"end": 22279,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 22259,
											"end": 22277,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "740"
										},
										{
											"begin": 22259,
											"end": 22277,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 22259,
											"end": 22277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22259,
											"end": 22277,
											"name": "tag",
											"source": 17,
											"value": "740"
										},
										{
											"begin": 22259,
											"end": 22277,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22244,
											"end": 22279,
											"name": "tag",
											"source": 17,
											"value": "739"
										},
										{
											"begin": 22244,
											"end": 22279,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22445,
											"end": 22446,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 22442,
											"end": 22443,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22438,
											"end": 22447,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 22435,
											"end": 22436,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22432,
											"end": 22448,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 22351,
											"end": 22417,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80000000000000"
										},
										{
											"begin": 22348,
											"end": 22349,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22345,
											"end": 22418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 22328,
											"end": 22458,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 22325,
											"end": 22481,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 22325,
											"end": 22481,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "741"
										},
										{
											"begin": 22325,
											"end": 22481,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 22461,
											"end": 22479,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "742"
										},
										{
											"begin": 22461,
											"end": 22479,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 22461,
											"end": 22479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22461,
											"end": 22479,
											"name": "tag",
											"source": 17,
											"value": "742"
										},
										{
											"begin": 22461,
											"end": 22479,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22325,
											"end": 22481,
											"name": "tag",
											"source": 17,
											"value": "741"
										},
										{
											"begin": 22325,
											"end": 22481,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22504,
											"end": 22505,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22501,
											"end": 22502,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22496,
											"end": 22506,
											"name": "SDIV",
											"source": 17
										},
										{
											"begin": 22491,
											"end": 22506,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22491,
											"end": 22506,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22130,
											"end": 22512,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 22130,
											"end": 22512,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22130,
											"end": 22512,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22130,
											"end": 22512,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22130,
											"end": 22512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22518,
											"end": 22689,
											"name": "tag",
											"source": 17,
											"value": "300"
										},
										{
											"begin": 22518,
											"end": 22689,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22548,
											"end": 22549,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22565,
											"end": 22583,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "744"
										},
										{
											"begin": 22581,
											"end": 22582,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22565,
											"end": 22583,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 22565,
											"end": 22583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22565,
											"end": 22583,
											"name": "tag",
											"source": 17,
											"value": "744"
										},
										{
											"begin": 22565,
											"end": 22583,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22560,
											"end": 22583,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22560,
											"end": 22583,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22597,
											"end": 22615,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "745"
										},
										{
											"begin": 22613,
											"end": 22614,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22597,
											"end": 22615,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 22597,
											"end": 22615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22597,
											"end": 22615,
											"name": "tag",
											"source": 17,
											"value": "745"
										},
										{
											"begin": 22597,
											"end": 22615,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22592,
											"end": 22615,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 22592,
											"end": 22615,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22634,
											"end": 22635,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22624,
											"end": 22659,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "746"
										},
										{
											"begin": 22624,
											"end": 22659,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 22639,
											"end": 22657,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "747"
										},
										{
											"begin": 22639,
											"end": 22657,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 22639,
											"end": 22657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22639,
											"end": 22657,
											"name": "tag",
											"source": 17,
											"value": "747"
										},
										{
											"begin": 22639,
											"end": 22657,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22624,
											"end": 22659,
											"name": "tag",
											"source": 17,
											"value": "746"
										},
										{
											"begin": 22624,
											"end": 22659,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22681,
											"end": 22682,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22678,
											"end": 22679,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22673,
											"end": 22683,
											"name": "SMOD",
											"source": 17
										},
										{
											"begin": 22668,
											"end": 22683,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22668,
											"end": 22683,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22518,
											"end": 22689,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 22518,
											"end": 22689,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22518,
											"end": 22689,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22518,
											"end": 22689,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22518,
											"end": 22689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22695,
											"end": 22785,
											"name": "tag",
											"source": 17,
											"value": "466"
										},
										{
											"begin": 22695,
											"end": 22785,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22730,
											"end": 22737,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22773,
											"end": 22778,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22770,
											"end": 22771,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 22759,
											"end": 22779,
											"name": "SIGNEXTEND",
											"source": 17
										},
										{
											"begin": 22748,
											"end": 22779,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22748,
											"end": 22779,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22695,
											"end": 22785,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22695,
											"end": 22785,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22695,
											"end": 22785,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22695,
											"end": 22785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22791,
											"end": 23020,
											"name": "tag",
											"source": 17,
											"value": "303"
										},
										{
											"begin": 22791,
											"end": 23020,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22828,
											"end": 22831,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22851,
											"end": 22873,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "750"
										},
										{
											"begin": 22867,
											"end": 22872,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22851,
											"end": 22873,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "466"
										},
										{
											"begin": 22851,
											"end": 22873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22851,
											"end": 22873,
											"name": "tag",
											"source": 17,
											"value": "750"
										},
										{
											"begin": 22851,
											"end": 22873,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22842,
											"end": 22873,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22842,
											"end": 22873,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22895,
											"end": 22961,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000"
										},
										{
											"begin": 22888,
											"end": 22893,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22885,
											"end": 22962,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 22882,
											"end": 22985,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "751"
										},
										{
											"begin": 22882,
											"end": 22985,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 22965,
											"end": 22983,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "752"
										},
										{
											"begin": 22965,
											"end": 22983,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 22965,
											"end": 22983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22965,
											"end": 22983,
											"name": "tag",
											"source": 17,
											"value": "752"
										},
										{
											"begin": 22965,
											"end": 22983,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22882,
											"end": 22985,
											"name": "tag",
											"source": 17,
											"value": "751"
										},
										{
											"begin": 22882,
											"end": 22985,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23012,
											"end": 23013,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 23005,
											"end": 23010,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23001,
											"end": 23014,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 22994,
											"end": 23014,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22994,
											"end": 23014,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22791,
											"end": 23020,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22791,
											"end": 23020,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22791,
											"end": 23020,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22791,
											"end": 23020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23026,
											"end": 23160,
											"name": "tag",
											"source": 17,
											"value": "467"
										},
										{
											"begin": 23026,
											"end": 23160,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23063,
											"end": 23070,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23103,
											"end": 23153,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23096,
											"end": 23101,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23092,
											"end": 23154,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 23081,
											"end": 23154,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23081,
											"end": 23154,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23026,
											"end": 23160,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23026,
											"end": 23160,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23026,
											"end": 23160,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23026,
											"end": 23160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23166,
											"end": 23498,
											"name": "tag",
											"source": 17,
											"value": "305"
										},
										{
											"begin": 23166,
											"end": 23498,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23206,
											"end": 23213,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23229,
											"end": 23249,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "755"
										},
										{
											"begin": 23247,
											"end": 23248,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23229,
											"end": 23249,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "467"
										},
										{
											"begin": 23229,
											"end": 23249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23229,
											"end": 23249,
											"name": "tag",
											"source": 17,
											"value": "755"
										},
										{
											"begin": 23229,
											"end": 23249,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23224,
											"end": 23249,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23224,
											"end": 23249,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23263,
											"end": 23283,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "756"
										},
										{
											"begin": 23281,
											"end": 23282,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 23263,
											"end": 23283,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "467"
										},
										{
											"begin": 23263,
											"end": 23283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23263,
											"end": 23283,
											"name": "tag",
											"source": 17,
											"value": "756"
										},
										{
											"begin": 23263,
											"end": 23283,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23258,
											"end": 23283,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 23258,
											"end": 23283,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23435,
											"end": 23436,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23383,
											"end": 23433,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23379,
											"end": 23437,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 23376,
											"end": 23377,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 23373,
											"end": 23438,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 23368,
											"end": 23369,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23361,
											"end": 23370,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 23354,
											"end": 23371,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 23350,
											"end": 23439,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 23347,
											"end": 23462,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 23347,
											"end": 23462,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "757"
										},
										{
											"begin": 23347,
											"end": 23462,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 23442,
											"end": 23460,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "758"
										},
										{
											"begin": 23442,
											"end": 23460,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 23442,
											"end": 23460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23442,
											"end": 23460,
											"name": "tag",
											"source": 17,
											"value": "758"
										},
										{
											"begin": 23442,
											"end": 23460,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23347,
											"end": 23462,
											"name": "tag",
											"source": 17,
											"value": "757"
										},
										{
											"begin": 23347,
											"end": 23462,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23490,
											"end": 23491,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23487,
											"end": 23488,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23483,
											"end": 23492,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 23472,
											"end": 23492,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23472,
											"end": 23492,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23166,
											"end": 23498,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 23166,
											"end": 23498,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23166,
											"end": 23498,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23166,
											"end": 23498,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23166,
											"end": 23498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23504,
											"end": 23689,
											"name": "tag",
											"source": 17,
											"value": "307"
										},
										{
											"begin": 23504,
											"end": 23689,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23544,
											"end": 23545,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23561,
											"end": 23581,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "760"
										},
										{
											"begin": 23579,
											"end": 23580,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23561,
											"end": 23581,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "467"
										},
										{
											"begin": 23561,
											"end": 23581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23561,
											"end": 23581,
											"name": "tag",
											"source": 17,
											"value": "760"
										},
										{
											"begin": 23561,
											"end": 23581,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23556,
											"end": 23581,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23556,
											"end": 23581,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23595,
											"end": 23615,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "761"
										},
										{
											"begin": 23613,
											"end": 23614,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 23595,
											"end": 23615,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "467"
										},
										{
											"begin": 23595,
											"end": 23615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23595,
											"end": 23615,
											"name": "tag",
											"source": 17,
											"value": "761"
										},
										{
											"begin": 23595,
											"end": 23615,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23590,
											"end": 23615,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 23590,
											"end": 23615,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23634,
											"end": 23635,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23624,
											"end": 23659,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "762"
										},
										{
											"begin": 23624,
											"end": 23659,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 23639,
											"end": 23657,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "763"
										},
										{
											"begin": 23639,
											"end": 23657,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 23639,
											"end": 23657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23639,
											"end": 23657,
											"name": "tag",
											"source": 17,
											"value": "763"
										},
										{
											"begin": 23639,
											"end": 23657,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23624,
											"end": 23659,
											"name": "tag",
											"source": 17,
											"value": "762"
										},
										{
											"begin": 23624,
											"end": 23659,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23681,
											"end": 23682,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23678,
											"end": 23679,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23674,
											"end": 23683,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 23669,
											"end": 23683,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23669,
											"end": 23683,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23504,
											"end": 23689,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 23504,
											"end": 23689,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23504,
											"end": 23689,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23504,
											"end": 23689,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23504,
											"end": 23689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23695,
											"end": 23771,
											"name": "tag",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 23695,
											"end": 23771,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23731,
											"end": 23738,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23760,
											"end": 23765,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23749,
											"end": 23765,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23749,
											"end": 23765,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23695,
											"end": 23771,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23695,
											"end": 23771,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23695,
											"end": 23771,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23695,
											"end": 23771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23777,
											"end": 24005,
											"name": "tag",
											"source": 17,
											"value": "328"
										},
										{
											"begin": 23777,
											"end": 24005,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23812,
											"end": 23815,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23835,
											"end": 23858,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "766"
										},
										{
											"begin": 23852,
											"end": 23857,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23835,
											"end": 23858,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 23835,
											"end": 23858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23835,
											"end": 23858,
											"name": "tag",
											"source": 17,
											"value": "766"
										},
										{
											"begin": 23835,
											"end": 23858,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23826,
											"end": 23858,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23826,
											"end": 23858,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23880,
											"end": 23946,
											"name": "PUSH",
											"source": 17,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23873,
											"end": 23878,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23870,
											"end": 23947,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 23867,
											"end": 23970,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "767"
										},
										{
											"begin": 23867,
											"end": 23970,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 23950,
											"end": 23968,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "768"
										},
										{
											"begin": 23950,
											"end": 23968,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 23950,
											"end": 23968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23950,
											"end": 23968,
											"name": "tag",
											"source": 17,
											"value": "768"
										},
										{
											"begin": 23950,
											"end": 23968,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23867,
											"end": 23970,
											"name": "tag",
											"source": 17,
											"value": "767"
										},
										{
											"begin": 23867,
											"end": 23970,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23993,
											"end": 23998,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23990,
											"end": 23991,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23986,
											"end": 23999,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 23979,
											"end": 23999,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23979,
											"end": 23999,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23777,
											"end": 24005,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23777,
											"end": 24005,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23777,
											"end": 24005,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23777,
											"end": 24005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24011,
											"end": 24237,
											"name": "tag",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 24011,
											"end": 24237,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24045,
											"end": 24048,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24068,
											"end": 24090,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "770"
										},
										{
											"begin": 24084,
											"end": 24089,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24068,
											"end": 24090,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "466"
										},
										{
											"begin": 24068,
											"end": 24090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24068,
											"end": 24090,
											"name": "tag",
											"source": 17,
											"value": "770"
										},
										{
											"begin": 24068,
											"end": 24090,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24059,
											"end": 24090,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24059,
											"end": 24090,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24112,
											"end": 24178,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000"
										},
										{
											"begin": 24105,
											"end": 24110,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24102,
											"end": 24179,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 24099,
											"end": 24202,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "771"
										},
										{
											"begin": 24099,
											"end": 24202,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 24182,
											"end": 24200,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "772"
										},
										{
											"begin": 24182,
											"end": 24200,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 24182,
											"end": 24200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24182,
											"end": 24200,
											"name": "tag",
											"source": 17,
											"value": "772"
										},
										{
											"begin": 24182,
											"end": 24200,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24099,
											"end": 24202,
											"name": "tag",
											"source": 17,
											"value": "771"
										},
										{
											"begin": 24099,
											"end": 24202,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24225,
											"end": 24230,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24222,
											"end": 24223,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24218,
											"end": 24231,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 24211,
											"end": 24231,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24211,
											"end": 24231,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24011,
											"end": 24237,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24011,
											"end": 24237,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24011,
											"end": 24237,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24011,
											"end": 24237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24243,
											"end": 24394,
											"name": "tag",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 24243,
											"end": 24394,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24383,
											"end": 24386,
											"name": "PUSH",
											"source": 17,
											"value": "5400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24379,
											"end": 24380,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24371,
											"end": 24377,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24367,
											"end": 24381,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24360,
											"end": 24387,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 24243,
											"end": 24394,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24243,
											"end": 24394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24400,
											"end": 24765,
											"name": "tag",
											"source": 17,
											"value": "470"
										},
										{
											"begin": 24400,
											"end": 24765,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24542,
											"end": 24545,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24563,
											"end": 24629,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "775"
										},
										{
											"begin": 24627,
											"end": 24628,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 24622,
											"end": 24625,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 24563,
											"end": 24629,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 24563,
											"end": 24629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24563,
											"end": 24629,
											"name": "tag",
											"source": 17,
											"value": "775"
										},
										{
											"begin": 24563,
											"end": 24629,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24556,
											"end": 24629,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24556,
											"end": 24629,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24638,
											"end": 24731,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "776"
										},
										{
											"begin": 24727,
											"end": 24730,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24638,
											"end": 24731,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 24638,
											"end": 24731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24638,
											"end": 24731,
											"name": "tag",
											"source": 17,
											"value": "776"
										},
										{
											"begin": 24638,
											"end": 24731,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24756,
											"end": 24758,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 24751,
											"end": 24754,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24747,
											"end": 24759,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24740,
											"end": 24759,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24740,
											"end": 24759,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24400,
											"end": 24765,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24400,
											"end": 24765,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24400,
											"end": 24765,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24400,
											"end": 24765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24771,
											"end": 25190,
											"name": "tag",
											"source": 17,
											"value": "333"
										},
										{
											"begin": 24771,
											"end": 25190,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24937,
											"end": 24941,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24975,
											"end": 24977,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 24964,
											"end": 24973,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24960,
											"end": 24978,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24952,
											"end": 24978,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24952,
											"end": 24978,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25024,
											"end": 25033,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 25018,
											"end": 25022,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 25014,
											"end": 25034,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 25010,
											"end": 25011,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24999,
											"end": 25008,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 24995,
											"end": 25012,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24988,
											"end": 25035,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 25052,
											"end": 25183,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "778"
										},
										{
											"begin": 25178,
											"end": 25182,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 25052,
											"end": 25183,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "470"
										},
										{
											"begin": 25052,
											"end": 25183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25052,
											"end": 25183,
											"name": "tag",
											"source": 17,
											"value": "778"
										},
										{
											"begin": 25052,
											"end": 25183,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25044,
											"end": 25183,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25044,
											"end": 25183,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24771,
											"end": 25190,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24771,
											"end": 25190,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24771,
											"end": 25190,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24771,
											"end": 25190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25196,
											"end": 25372,
											"name": "tag",
											"source": 17,
											"value": "377"
										},
										{
											"begin": 25196,
											"end": 25372,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25228,
											"end": 25229,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25245,
											"end": 25265,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "780"
										},
										{
											"begin": 25263,
											"end": 25264,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25245,
											"end": 25265,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 25245,
											"end": 25265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25245,
											"end": 25265,
											"name": "tag",
											"source": 17,
											"value": "780"
										},
										{
											"begin": 25245,
											"end": 25265,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25240,
											"end": 25265,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 25240,
											"end": 25265,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25279,
											"end": 25299,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "781"
										},
										{
											"begin": 25297,
											"end": 25298,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 25279,
											"end": 25299,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 25279,
											"end": 25299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25279,
											"end": 25299,
											"name": "tag",
											"source": 17,
											"value": "781"
										},
										{
											"begin": 25279,
											"end": 25299,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25274,
											"end": 25299,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 25274,
											"end": 25299,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25318,
											"end": 25319,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25308,
											"end": 25343,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "782"
										},
										{
											"begin": 25308,
											"end": 25343,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 25323,
											"end": 25341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "783"
										},
										{
											"begin": 25323,
											"end": 25341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 25323,
											"end": 25341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25323,
											"end": 25341,
											"name": "tag",
											"source": 17,
											"value": "783"
										},
										{
											"begin": 25323,
											"end": 25341,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25308,
											"end": 25343,
											"name": "tag",
											"source": 17,
											"value": "782"
										},
										{
											"begin": 25308,
											"end": 25343,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25364,
											"end": 25365,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25361,
											"end": 25362,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25357,
											"end": 25366,
											"name": "MOD",
											"source": 17
										},
										{
											"begin": 25352,
											"end": 25366,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25352,
											"end": 25366,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25196,
											"end": 25372,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 25196,
											"end": 25372,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 25196,
											"end": 25372,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25196,
											"end": 25372,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25196,
											"end": 25372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"TFGv3/Contracts/Interfaces/IERC20.sol",
								"TFGv3/Contracts/Interfaces/IProxy.sol",
								"TFGv3/Contracts/Interfaces/ISCCommission.sol",
								"TFGv3/Contracts/Interfaces/ISCExchange.sol",
								"TFGv3/Contracts/Interfaces/ISCOps.sol",
								"TFGv3/Contracts/Interfaces/ISCStorage.sol",
								"TFGv3/Contracts/SCStorage.sol",
								"TFGv3/Contracts/libraries/FullMath.sol",
								"TFGv3/Contracts/libraries/OracleLibrary.sol",
								"TFGv3/Contracts/libraries/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"NAV()": "52fd856b",
							"addCoin(address,uint256)": "b4014879",
							"coinArray(uint256)": "63b48ee6",
							"coinOracleAddr(address)": "0fbbfa3e",
							"coins(address)": "7d0f7a88",
							"delCoin(address)": "4051b9aa",
							"deleteContract(address)": "2637a477",
							"initContract(address)": "cf9d4afa",
							"initDone()": "fed0a20e",
							"oracleNAV()": "def1a5e8",
							"proxy()": "ec556889",
							"quoteIn(address)": "d825bfff",
							"transferFunds(address,uint256)": "990dc9db",
							"updateNAV(uint256)": "0cb1982b",
							"updateProxy(address)": "9e955149"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"NAV\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"coinAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stable\",\"type\":\"uint256\"}],\"name\":\"addCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"coinArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"coinOracleAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"coins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"coinAddr\",\"type\":\"address\"}],\"name\":\"delCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"deleteContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"name\":\"initContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initDone\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleNAV\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"quoteIn\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalToTransfer\",\"type\":\"uint256\"}],\"name\":\"transferFunds\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"comission\",\"type\":\"uint256\"}],\"name\":\"updateNAV\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newNAV\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"updateProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TFGv3/Contracts/SCStorage.sol\":\"SCStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"TFGv3/Contracts/Interfaces/IERC20.sol\":{\"keccak256\":\"0x59a03f41c93e1e60f5d0cd67af555cb474afb987990fb47dc128c74ea5a960f2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7de853bafd2ce286ab83b7acba0d271df56d08efafeaf050f94a7972668a8b8d\",\"dweb:/ipfs/QmXTDrwjPT3VWQTrRE94LrbDb1yFcKEHWDbRurXBgWaXBu\"]},\"TFGv3/Contracts/Interfaces/IProxy.sol\":{\"keccak256\":\"0x457ec80cafbaf6e5f70cf6364557fdc497e802c3617a15966fc6c79fa995d044\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://23e2a5b5168b3235a983595e31036adf66060d62ae9e5f6d097df1b1e6559f34\",\"dweb:/ipfs/QmajmGCZ4LhmUJL3eFh8kKRLRuR31SMUnqNbcFjeKCoQD5\"]},\"TFGv3/Contracts/Interfaces/ISCCommission.sol\":{\"keccak256\":\"0x9f9b9e99159eabe43404d867a64018b9b659c8eb1634603dd5ac3959536f943a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://199b2f59b06b0a015d00136b9b6198b051183f26baf374c78462286aae037f5e\",\"dweb:/ipfs/QmYA9CWEVqwN84CGoEwAUWi9w2R9t3xp7xfnEc9bxHwjMi\"]},\"TFGv3/Contracts/Interfaces/ISCExchange.sol\":{\"keccak256\":\"0x31ea8830f6820ac5dbe085226419a2ec19d0a3d12aec8148ab69cd31da5c856b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fbf0a05b5b50f2b9beecc7ef90eb7af924a40f2e1a248cce747d9f44284c1379\",\"dweb:/ipfs/QmbKkQSU64e7Z31pKveJnC7jdVLnW7uaYALtbcnYiXjf7y\"]},\"TFGv3/Contracts/Interfaces/ISCOps.sol\":{\"keccak256\":\"0x3e4655a10df0f0cf6c011a9bb55cd9592061d2b7a6540ffbc04c8267d4513940\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9945f611e8120c4e6a9108006e8938e2e062858de2d31c4c3cba9a3167afc971\",\"dweb:/ipfs/Qmb7KDX9ai8RHcnFiY9cwqiFAtmvXsUMQaUr4XhZkzTm6q\"]},\"TFGv3/Contracts/Interfaces/ISCStorage.sol\":{\"keccak256\":\"0x44fa27b592c9491dd280b6b8c0363b817cb957a52abdb27579776d4e5e083d31\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://28e367601b9c8293cbb61bb7eaf04515fa2a5eb5af002b70198ffc36e9944e0e\",\"dweb:/ipfs/QmW3KoqMe7fyGJabsrbZzFi7yiFtffiepqq997biioCJM1\"]},\"TFGv3/Contracts/SCStorage.sol\":{\"keccak256\":\"0x3e5e839c87cabdda4791c4604b9bf774dbf17939b36d5c608c67ad5a1e644baa\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7d91c6545a3a6324a820e603712d21dd319a8a1fa23baa405147710bde9d5075\",\"dweb:/ipfs/QmdtKvdVNpuWd9iM1ohfvWwHZCUT17BRbsig6ArXw6WqxW\"]},\"TFGv3/Contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xaa9d8894cfc7826e4d1abacb026b022ef4ff07569037b8796474d43257fb1f19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d4defb32c4331c11a78f235cc5a844c67036221eb9b7fdd5ef81ea024b1c05b\",\"dweb:/ipfs/QmRX1y6Wsg8eyAvTcDynRBvH65cFt7B2DH2Ux92C12m588\"]},\"TFGv3/Contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0xcacc4667cb467669c33dbbdf898aacfd7e9930e8a5d0d9e0bbd08834014f3c13\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da89bdd8b6f4affa09bba21577f2a0ac91503af49d0483363948925466a24c79\",\"dweb:/ipfs/QmPL4D9sFMemJRbp7n6vAYtQ2J5rUzAaaJLF4inhBgsrQj\"]},\"TFGv3/Contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x4e462c54ef76ba13b63b3a5be7b2547278c34fe744c2b3688a629ba3fde5437c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6587b7f7caa7e970fa2917c6b978e3665d33b41ebcfccd8193c28eba81540631\",\"dweb:/ipfs/QmebDyrzkzSYgAPi1ik1ZbB4GXy82UhYVU6z6vwyipvpHN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 830,
								"contract": "TFGv3/Contracts/SCStorage.sol:SCStorage",
								"label": "NAV",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 832,
								"contract": "TFGv3/Contracts/SCStorage.sol:SCStorage",
								"label": "initDone",
								"offset": 0,
								"slot": "1",
								"type": "t_uint8"
							},
							{
								"astId": 834,
								"contract": "TFGv3/Contracts/SCStorage.sol:SCStorage",
								"label": "nStable",
								"offset": 1,
								"slot": "1",
								"type": "t_uint8"
							},
							{
								"astId": 836,
								"contract": "TFGv3/Contracts/SCStorage.sol:SCStorage",
								"label": "proxy",
								"offset": 2,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 839,
								"contract": "TFGv3/Contracts/SCStorage.sol:SCStorage",
								"label": "coinArray",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 843,
								"contract": "TFGv3/Contracts/SCStorage.sol:SCStorage",
								"label": "coins",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 847,
								"contract": "TFGv3/Contracts/SCStorage.sol:SCStorage",
								"label": "coinOracleAddr",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 851,
								"contract": "TFGv3/Contracts/SCStorage.sol:SCStorage",
								"label": "quoteIn",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TFGv3/Contracts/libraries/FullMath.sol": {
				"FullMath": {
					"abi": [],
					"devdoc": {
						"details": "Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits",
						"kind": "dev",
						"methods": {},
						"title": "Contains 512-bit math functions",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TFGv3/Contracts/libraries/FullMath.sol\":355:5142  library FullMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":355:5142  library FullMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c6fa841d86a299607a188b9f1a49cf660f9c850a8fa7f1bbb7183712e19c35d864736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c6fa841d86a299607a188b9f1a49cf660f9c850a8fa7f1bbb7183712e19c35d864736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 STATICCALL DUP5 SAR DUP7 LOG2 SWAP10 PUSH1 0x7A XOR DUP12 SWAP16 BYTE 0x49 0xCF PUSH7 0xF9C850A8FA7F1 0xBB 0xB7 XOR CALLDATACOPY SLT 0xE1 SWAP13 CALLDATALOAD 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "355:4787:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c6fa841d86a299607a188b9f1a49cf660f9c850a8fa7f1bbb7183712e19c35d864736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 STATICCALL DUP5 SAR DUP7 LOG2 SWAP10 PUSH1 0x7A XOR DUP12 SWAP16 BYTE 0x49 0xCF PUSH7 0xF9C850A8FA7F1 0xBB 0xB7 XOR CALLDATACOPY SLT 0xE1 SWAP13 CALLDATALOAD 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "355:4787:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDivRoundingUp(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c6fa841d86a299607a188b9f1a49cf660f9c850a8fa7f1bbb7183712e19c35d864736f6c634300080e0033",
									".code": [
										{
											"begin": 355,
											"end": 5142,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 355,
											"end": 5142,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 355,
											"end": 5142,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 355,
											"end": 5142,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 355,
											"end": 5142,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 355,
											"end": 5142,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 355,
											"end": 5142,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 5142,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 355,
											"end": 5142,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"TFGv3/Contracts/Interfaces/IERC20.sol",
								"TFGv3/Contracts/Interfaces/IProxy.sol",
								"TFGv3/Contracts/Interfaces/ISCCommission.sol",
								"TFGv3/Contracts/Interfaces/ISCExchange.sol",
								"TFGv3/Contracts/Interfaces/ISCOps.sol",
								"TFGv3/Contracts/Interfaces/ISCStorage.sol",
								"TFGv3/Contracts/SCStorage.sol",
								"TFGv3/Contracts/libraries/FullMath.sol",
								"TFGv3/Contracts/libraries/OracleLibrary.sol",
								"TFGv3/Contracts/libraries/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Handles \\\"phantom overflow\\\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Contains 512-bit math functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"TFGv3/Contracts/libraries/FullMath.sol\":\"FullMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"TFGv3/Contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xaa9d8894cfc7826e4d1abacb026b022ef4ff07569037b8796474d43257fb1f19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d4defb32c4331c11a78f235cc5a844c67036221eb9b7fdd5ef81ea024b1c05b\",\"dweb:/ipfs/QmRX1y6Wsg8eyAvTcDynRBvH65cFt7B2DH2Ux92C12m588\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision",
						"version": 1
					}
				}
			},
			"TFGv3/Contracts/libraries/OracleLibrary.sol": {
				"OracleLibrary": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Oracle library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":279:9291  library OracleLibrary {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":279:9291  library OracleLibrary {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122033c25922f566237fa82b1376ecd6c92e4c9e19a07c60a62e11cb53e4ddf0bd8364736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122033c25922f566237fa82b1376ecd6c92e4c9e19a07c60a62e11cb53e4ddf0bd8364736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER 0xC2 MSIZE 0x22 CREATE2 PUSH7 0x237FA82B1376EC 0xD6 0xC9 0x2E 0x4C SWAP15 NOT LOG0 PUSH29 0x60A62E11CB53E4DDF0BD8364736F6C634300080E003300000000000000 ",
							"sourceMap": "279:9012:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122033c25922f566237fa82b1376ecd6c92e4c9e19a07c60a62e11cb53e4ddf0bd8364736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER 0xC2 MSIZE 0x22 CREATE2 PUSH7 0x237FA82B1376EC 0xD6 0xC9 0x2E 0x4C SWAP15 NOT LOG0 PUSH29 0x60A62E11CB53E4DDF0BD8364736F6C634300080E003300000000000000 ",
							"sourceMap": "279:9012:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"consult(address,uint32)": "infinite",
								"getBlockStartingTickAndLiquidity(address)": "infinite",
								"getChainedPrice(address[] memory,int24[] memory)": "infinite",
								"getOldestObservationSecondsAgo(address)": "infinite",
								"getQuoteAtTick(int24,uint128,address,address)": "infinite",
								"getWeightedArithmeticMeanTick(struct OracleLibrary.WeightedTickData memory[] memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122033c25922f566237fa82b1376ecd6c92e4c9e19a07c60a62e11cb53e4ddf0bd8364736f6c634300080e0033",
									".code": [
										{
											"begin": 279,
											"end": 9291,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 279,
											"end": 9291,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 279,
											"end": 9291,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 279,
											"end": 9291,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 279,
											"end": 9291,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 279,
											"end": 9291,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 279,
											"end": 9291,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 9291,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 279,
											"end": 9291,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"TFGv3/Contracts/Interfaces/IERC20.sol",
								"TFGv3/Contracts/Interfaces/IProxy.sol",
								"TFGv3/Contracts/Interfaces/ISCCommission.sol",
								"TFGv3/Contracts/Interfaces/ISCExchange.sol",
								"TFGv3/Contracts/Interfaces/ISCOps.sol",
								"TFGv3/Contracts/Interfaces/ISCStorage.sol",
								"TFGv3/Contracts/SCStorage.sol",
								"TFGv3/Contracts/libraries/FullMath.sol",
								"TFGv3/Contracts/libraries/OracleLibrary.sol",
								"TFGv3/Contracts/libraries/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Oracle library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides functions to integrate with V3 pool oracle\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"TFGv3/Contracts/libraries/OracleLibrary.sol\":\"OracleLibrary\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"TFGv3/Contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xaa9d8894cfc7826e4d1abacb026b022ef4ff07569037b8796474d43257fb1f19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d4defb32c4331c11a78f235cc5a844c67036221eb9b7fdd5ef81ea024b1c05b\",\"dweb:/ipfs/QmRX1y6Wsg8eyAvTcDynRBvH65cFt7B2DH2Ux92C12m588\"]},\"TFGv3/Contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0xcacc4667cb467669c33dbbdf898aacfd7e9930e8a5d0d9e0bbd08834014f3c13\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da89bdd8b6f4affa09bba21577f2a0ac91503af49d0483363948925466a24c79\",\"dweb:/ipfs/QmPL4D9sFMemJRbp7n6vAYtQ2J5rUzAaaJLF4inhBgsrQj\"]},\"TFGv3/Contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x4e462c54ef76ba13b63b3a5be7b2547278c34fe744c2b3688a629ba3fde5437c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6587b7f7caa7e970fa2917c6b978e3665d33b41ebcfccd8193c28eba81540631\",\"dweb:/ipfs/QmebDyrzkzSYgAPi1ik1ZbB4GXy82UhYVU6z6vwyipvpHN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Provides functions to integrate with V3 pool oracle",
						"version": 1
					}
				}
			},
			"TFGv3/Contracts/libraries/TickMath.sol": {
				"TickMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"MAX_SQRT_RATIO": {
								"details": "The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
							},
							"MAX_TICK": {
								"details": "The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
							},
							"MIN_SQRT_RATIO": {
								"details": "The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
							},
							"MIN_TICK": {
								"details": "The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
							}
						},
						"title": "Math library for computing sqrt prices from ticks and vice versa",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TFGv3/Contracts/libraries/TickMath.sol\":306:8645  library TickMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":306:8645  library TickMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f2ddeb6b7689350388505064ef207f2d85c7a5e688a1daeb06523318e16a724c64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f2ddeb6b7689350388505064ef207f2d85c7a5e688a1daeb06523318e16a724c64736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xDD 0xEB PUSH12 0x7689350388505064EF207F2D DUP6 0xC7 0xA5 0xE6 DUP9 LOG1 0xDA 0xEB MOD MSTORE CALLER XOR 0xE1 PUSH11 0x724C64736F6C634300080E STOP CALLER ",
							"sourceMap": "306:8339:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f2ddeb6b7689350388505064ef207f2d85c7a5e688a1daeb06523318e16a724c64736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xDD 0xEB PUSH12 0x7689350388505064EF207F2D DUP6 0xC7 0xA5 0xE6 DUP9 LOG1 0xDA 0xEB MOD MSTORE CALLER XOR 0xE1 PUSH11 0x724C64736F6C634300080E STOP CALLER ",
							"sourceMap": "306:8339:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getSqrtRatioAtTick(int24)": "infinite",
								"getTickAtSqrtRatio(uint160)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f2ddeb6b7689350388505064ef207f2d85c7a5e688a1daeb06523318e16a724c64736f6c634300080e0033",
									".code": [
										{
											"begin": 306,
											"end": 8645,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"TFGv3/Contracts/Interfaces/IERC20.sol",
								"TFGv3/Contracts/Interfaces/IProxy.sol",
								"TFGv3/Contracts/Interfaces/ISCCommission.sol",
								"TFGv3/Contracts/Interfaces/ISCExchange.sol",
								"TFGv3/Contracts/Interfaces/ISCOps.sol",
								"TFGv3/Contracts/Interfaces/ISCStorage.sol",
								"TFGv3/Contracts/SCStorage.sol",
								"TFGv3/Contracts/libraries/FullMath.sol",
								"TFGv3/Contracts/libraries/OracleLibrary.sol",
								"TFGv3/Contracts/libraries/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"TFGv3/Contracts/libraries/TickMath.sol\":\"TickMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"TFGv3/Contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x4e462c54ef76ba13b63b3a5be7b2547278c34fe744c2b3688a629ba3fde5437c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6587b7f7caa7e970fa2917c6b978e3665d33b41ebcfccd8193c28eba81540631\",\"dweb:/ipfs/QmebDyrzkzSYgAPi1ik1ZbB4GXy82UhYVU6z6vwyipvpHN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "Warning: Return value of low-level calls not used.\n   --> TFGv3/Contracts/SCStorage.sol:142:9:\n    |\n142 |         newAddr.delegatecall(abi.encodeWithSignature(\"initContract(address)\", proxyAddr));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4588,
					"file": "TFGv3/Contracts/SCStorage.sol",
					"start": 4507
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							21
						],
						"IUniswapV3PoolActions": [
							117
						],
						"IUniswapV3PoolDerivedState": [
							148
						],
						"IUniswapV3PoolEvents": [
							267
						],
						"IUniswapV3PoolImmutables": [
							307
						],
						"IUniswapV3PoolOwnerActions": [
							333
						],
						"IUniswapV3PoolState": [
							441
						]
					},
					"id": 22,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:0"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 22,
							"sourceUnit": 308,
							"src": "71:45:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 22,
							"sourceUnit": 442,
							"src": "117:40:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 22,
							"sourceUnit": 149,
							"src": "158:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 22,
							"sourceUnit": 118,
							"src": "206:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 22,
							"sourceUnit": 334,
							"src": "249:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 22,
							"sourceUnit": 268,
							"src": "297:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "IUniswapV3PoolImmutables",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 307,
										"src": "637:24:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "637:24:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IUniswapV3PoolState",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 441,
										"src": "667:19:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "667:19:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IUniswapV3PoolDerivedState",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 148,
										"src": "692:26:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "692:26:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "IUniswapV3PoolActions",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 117,
										"src": "724:21:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "724:21:0"
								},
								{
									"baseName": {
										"id": 17,
										"name": "IUniswapV3PoolOwnerActions",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 333,
										"src": "751:26:0"
									},
									"id": 18,
									"nodeType": "InheritanceSpecifier",
									"src": "751:26:0"
								},
								{
									"baseName": {
										"id": 19,
										"name": "IUniswapV3PoolEvents",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 267,
										"src": "783:20:0"
									},
									"id": 20,
									"nodeType": "InheritanceSpecifier",
									"src": "783:20:0"
								}
							],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "340:265:0",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 21,
							"linearizedBaseContracts": [
								21,
								267,
								333,
								117,
								148,
								441,
								307
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "615:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 22,
							"src": "605:203:0",
							"usedErrors": []
						}
					],
					"src": "45:764:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							117
						]
					},
					"id": 118,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 23,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 24,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:1",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 117,
							"linearizedBaseContracts": [
								117
							],
							"name": "IUniswapV3PoolActions",
							"nameLocation": "183:21:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "211:206:1",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "431:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "450:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "442:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 26,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:22:1"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:1"
									},
									"scope": 117,
									"src": "422:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "479:1029:1",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1522:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1544:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1536:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1569:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1563:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 34,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1594:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1588:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 36,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1621:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1613:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 38,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1652:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1637:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 40,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1637:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:136:1"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1689:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1681:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1706:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1698:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:34:1"
									},
									"scope": 117,
									"src": "1513:202:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1721:1053:1",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "2788:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2813:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2805:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2838:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2832:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 52,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2863:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2857:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 54,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "2890:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2882:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 56,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "2924:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2916:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 58,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:151:1"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2973:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2965:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 61,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 63,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:34:1"
									},
									"scope": 117,
									"src": "2779:220:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3005:631:1",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3650:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3670:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3664:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 68,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3695:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3689:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 70,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3689:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3722:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3714:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 72,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:80:1"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3761:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3753:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3778:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3770:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:34:1"
									},
									"scope": 117,
									"src": "3641:146:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3793:1015:1",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "4822:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4844:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4836:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "4868:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4863:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 84,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "4895:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4888:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 86,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4888:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "4928:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4920:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 88,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4970:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4955:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 90,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4955:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:154:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5006:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4999:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 93,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5022:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "5015:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 95,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4998:32:1"
									},
									"scope": 117,
									"src": "4813:218:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "5037:657:1",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 110,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nameLocation": "5708:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5731:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "5723:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5758:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "5750:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5783:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "5775:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5815:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "5800:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 106,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:112:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:0:1"
									},
									"scope": 117,
									"src": "5699:136:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "5841:367:1",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nameLocation": "6222:34:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "6264:26:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "6257:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 112,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6256:35:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:1"
									},
									"scope": 117,
									"src": "6213:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 118,
							"src": "173:6130:1",
							"usedErrors": []
						}
					],
					"src": "45:6259:1"
				},
				"id": 1
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							148
						]
					},
					"id": 149,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 119,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolDerivedState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 120,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:2",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 148,
							"linearizedBaseContracts": [
								148
							],
							"name": "IUniswapV3PoolDerivedState",
							"nameLocation": "303:26:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "336:1045:2",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nameLocation": "1395:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nameLocation": "1421:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "1403:29:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 122,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1403:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 123,
													"nodeType": "ArrayTypeName",
													"src": "1403:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:31:2"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nameLocation": "1496:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "1481:30:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 126,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1481:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 127,
													"nodeType": "ArrayTypeName",
													"src": "1481:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nameLocation": "1530:34:2",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "1513:51:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 129,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1513:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 130,
													"nodeType": "ArrayTypeName",
													"src": "1513:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:85:2"
									},
									"scope": 148,
									"src": "1386:180:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "1572:771:2",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nameLocation": "2357:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2389:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "2383:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 135,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2406:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "2400:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 137,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2400:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:34:2"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nameLocation": "2483:20:2",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "2477:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 140,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2477:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nameLocation": "2525:29:2",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "2517:37:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 142,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "secondsInside",
												"nameLocation": "2575:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "2568:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 144,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:135:2"
									},
									"scope": 148,
									"src": "2348:251:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 149,
							"src": "293:2308:2",
							"usedErrors": []
						}
					],
					"src": "45:2557:2"
				},
				"id": 2
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							267
						]
					},
					"id": 268,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 150,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 151,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:3",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 267,
							"linearizedBaseContracts": [
								267
							],
							"name": "IUniswapV3PoolEvents",
							"nameLocation": "169:20:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "196:344:3",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"eventSelector": "98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95",
									"id": 158,
									"name": "Initialize",
									"nameLocation": "551:10:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "570:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "562:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 153,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "590:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "584:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 155,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:34:3"
									},
									"src": "545:51:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "602:551:3",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"eventSelector": "7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde",
									"id": 175,
									"name": "Mint",
									"nameLocation": "1164:4:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1186:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1178:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1218:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1202:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1247:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1233:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 164,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1280:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1266:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 166,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1307:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1299:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 168,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1331:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1323:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1356:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1348:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:201:3"
									},
									"src": "1158:212:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "1376:493:3",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"eventSelector": "70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0",
									"id": 190,
									"name": "Collect",
									"nameLocation": "1880:7:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1913:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1897:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1936:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1928:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1969:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1955:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 181,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1955:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2002:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1988:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 183,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1988:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2029:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2021:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 185,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2054:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2046:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 187,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:180:3"
									},
									"src": "1874:194:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2074:523:3",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"eventSelector": "0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c",
									"id": 205,
									"name": "Burn",
									"nameLocation": "2608:4:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2638:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "2622:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2667:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "2653:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 194,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2653:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2700:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "2686:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 196,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2686:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "2719:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 198,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2751:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "2743:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2776:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "2768:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:177:3"
									},
									"src": "2602:188:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "2796:600:3",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"eventSelector": "c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67",
									"id": 222,
									"name": "Swap",
									"nameLocation": "3407:4:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3437:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "3421:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3469:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "3453:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3495:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "3488:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 211,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3519:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "3512:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 213,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3544:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "3536:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 215,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3574:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "3566:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 217,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3599:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "3593:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 219,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3593:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:198:3"
									},
									"src": "3401:209:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "3616:562:3",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"eventSelector": "bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633",
									"id": 237,
									"name": "Flash",
									"nameLocation": "4189:5:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4220:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "4204:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4252:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "4236:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4279:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "4271:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4304:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "4296:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nameLocation": "4329:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "4321:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nameLocation": "4352:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "4344:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4194:169:3"
									},
									"src": "4183:181:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "4370:451:3",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"eventSelector": "ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a",
									"id": 244,
									"name": "IncreaseObservationCardinalityNext",
									"nameLocation": "4832:34:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nameLocation": "4883:29:3",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "4876:36:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 239,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4876:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nameLocation": "4929:29:3",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "4922:36:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 241,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4922:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:98:3"
									},
									"src": "4826:139:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "4971:370:3",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"eventSelector": "973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133",
									"id": 255,
									"name": "SetFeeProtocol",
									"nameLocation": "5352:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nameLocation": "5373:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "5367:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 246,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nameLocation": "5396:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "5390:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 248,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5390:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nameLocation": "5419:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "5413:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 250,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5413:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nameLocation": "5442:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "5436:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 252,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5366:92:3"
									},
									"src": "5346:113:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:3",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"eventSelector": "596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151",
									"id": 266,
									"name": "CollectProtocol",
									"nameLocation": "5860:15:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5892:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5876:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5916:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5900:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5935:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5927:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 261,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5952:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5944:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 263,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:85:3"
									},
									"src": "5854:107:3"
								}
							],
							"scope": 268,
							"src": "159:5804:3",
							"usedErrors": []
						}
					],
					"src": "45:5919:3"
				},
				"id": 3
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							307
						]
					},
					"id": 308,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 269,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolImmutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "71:153:4",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 307,
							"linearizedBaseContracts": [
								307
							],
							"name": "IUniswapV3PoolImmutables",
							"nameLocation": "234:24:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "265:138:4",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 276,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "417:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:4"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "450:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:9:4"
									},
									"scope": 307,
									"src": "408:51:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "465:113:4",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "592:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "624:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:9:4"
									},
									"scope": 307,
									"src": "583:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "639:114:4",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "767:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:4"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "799:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:9:4"
									},
									"scope": 307,
									"src": "758:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "814:84:4",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "912:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:4"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "941:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 291,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:8:4"
									},
									"scope": 307,
									"src": "903:46:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "955:358:4",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 300,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nameLocation": "1327:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:4"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "1364:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 297,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:7:4"
									},
									"scope": 307,
									"src": "1318:53:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "1377:363:4",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nameLocation": "1754:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:4"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1799:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 303,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:9:4"
									},
									"scope": 307,
									"src": "1745:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 308,
							"src": "224:1586:4",
							"usedErrors": []
						}
					],
					"src": "45:1766:4"
				},
				"id": 4
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							333
						]
					},
					"id": 334,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 309,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolOwnerActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 310,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:5",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 333,
							"linearizedBaseContracts": [
								333
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nameLocation": "197:26:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "230:205:5",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nameLocation": "449:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nameLocation": "470:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "464:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 312,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nameLocation": "490:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "484:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 314,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "484:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:40:5"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:5"
									},
									"scope": 333,
									"src": "440:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "519:483:5",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 332,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nameLocation": "1016:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1049:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "1041:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "1076:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "1068:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 322,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "1110:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "1102:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 324,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:101:5"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1159:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "1151:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 327,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1176:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "1168:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 329,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:34:5"
									},
									"scope": 333,
									"src": "1007:178:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 334,
							"src": "187:1000:5",
							"usedErrors": []
						}
					],
					"src": "45:1143:5"
				},
				"id": 5
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							441
						]
					},
					"id": 442,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 335,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 336,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:6",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 441,
							"linearizedBaseContracts": [
								441
							],
							"name": "IUniswapV3PoolState",
							"nameLocation": "250:19:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "276:1140:6",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "1430:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:2:6"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1506:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1498:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 339,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1538:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1532:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 341,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1532:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "1563:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1556:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 343,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1556:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "1600:22:6",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1593:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 345,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "1643:26:6",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1636:33:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 347,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1636:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "1689:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1683:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 349,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1683:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "1719:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1714:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 351,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:253:6"
									},
									"scope": 441,
									"src": "1421:317:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "1744:168:6",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 360,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nameLocation": "1926:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:2:6"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1972:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:9:6"
									},
									"scope": 441,
									"src": "1917:64:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "1987:168:6",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 366,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nameLocation": "2169:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2189:2:6"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "2215:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:9:6"
									},
									"scope": 441,
									"src": "2160:64:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "2230:147:6",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 374,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nameLocation": "2391:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:2:6"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "2437:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "2429:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 369,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "2453:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "2445:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 371,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:32:6"
									},
									"scope": 441,
									"src": "2382:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "2467:150:6",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 380,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nameLocation": "2631:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:6"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "2666:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 377,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:9:6"
									},
									"scope": 441,
									"src": "2622:53:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "2681:1244:6",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nameLocation": "3939:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3951:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "3945:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 382,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3945:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:12:6"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nameLocation": "4025:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4017:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 385,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nameLocation": "4060:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4053:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 387,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4053:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nameLocation": "4094:21:6",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4086:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nameLocation": "4137:21:6",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4129:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nameLocation": "4178:21:6",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4172:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 393,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4172:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nameLocation": "4221:30:6",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4213:38:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 395,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nameLocation": "4272:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4265:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 397,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4265:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "4305:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4300:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 399,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4300:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:323:6"
									},
									"scope": 441,
									"src": "3930:397:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "4333:99:6",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 410,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nameLocation": "4446:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "wordPosition",
												"nameLocation": "4463:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4457:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 404,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4457:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:20:6"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4500:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:9:6"
									},
									"scope": 441,
									"src": "4437:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "4515:700:6",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "5229:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5247:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "5239:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 412,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5238:13:6"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "5320:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "5312:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 415,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "5352:24:6",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "5344:32:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "5398:24:6",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "5390:32:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "5444:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "5436:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 421,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "5477:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "5469:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 423,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5469:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:200:6"
									},
									"scope": 441,
									"src": "5220:279:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "5505:749:6",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 440,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nameLocation": "6268:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6289:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "6281:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6281:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6280:15:6"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "6363:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "6356:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 431,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6356:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nameLocation": "6397:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "6391:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 433,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6391:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nameLocation": "6433:33:6",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "6425:41:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 435,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "6485:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "6480:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 437,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6480:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6342:164:6"
									},
									"scope": 441,
									"src": "6259:248:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 442,
							"src": "240:6269:6",
							"usedErrors": []
						}
					],
					"src": "45:6465:6"
				},
				"id": 6
			},
			"TFGv3/Contracts/Interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "TFGv3/Contracts/Interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							556
						]
					},
					"id": 557,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 443,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:25:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 556,
							"linearizedBaseContracts": [
								556
							],
							"name": "IERC20",
							"nameLocation": "82:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "06fdde03",
									"id": 448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "104:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "108:2:7"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "134:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 445,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "134:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "133:15:7"
									},
									"scope": 556,
									"src": "95:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "164:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "170:2:7"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "196:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 450,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "196:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "195:15:7"
									},
									"scope": 556,
									"src": "155:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 458,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "226:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "234:2:7"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "260:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 455,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "260:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "259:7:7"
									},
									"scope": 556,
									"src": "217:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "286:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "297:2:7"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "323:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "322:9:7"
									},
									"scope": 556,
									"src": "277:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "347:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "357:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:17:7"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "397:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "397:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "396:9:7"
									},
									"scope": 556,
									"src": "338:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "421:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "438:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "430:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "450:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "442:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:28:7"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "476:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 476,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "476:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "475:6:7"
									},
									"scope": 556,
									"src": "412:70:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 490,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "501:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "522:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "514:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "514:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "536:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "528:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "528:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "548:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "540:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "513:42:7"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "574:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 487,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "574:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "573:6:7"
									},
									"scope": 556,
									"src": "492:88:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "595:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "605:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "628:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "620:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "604:32:7"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "660:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:9:7"
									},
									"scope": 556,
									"src": "586:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "684:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "700:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "692:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "717:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "709:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "691:33:7"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "743:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 505,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "743:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:6:7"
									},
									"scope": 556,
									"src": "675:74:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "768:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "781:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "773:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "795:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "790:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "790:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:30:7"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "821:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 514,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "821:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:6:7"
									},
									"scope": 556,
									"src": "759:68:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "846:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "859:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "851:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "851:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "850:16:7"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "885:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "885:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:6:7"
									},
									"scope": 556,
									"src": "837:54:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "79cc6790",
									"id": 533,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "910:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "927:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "919:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "919:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "941:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "933:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "933:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "918:30:7"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "967:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 530,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "967:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:6:7"
									},
									"scope": 556,
									"src": "901:72:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 541,
									"name": "Transfer",
									"nameLocation": "985:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1010:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "994:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1032:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "1016:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1044:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "1036:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1036:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:57:7"
									},
									"src": "979:72:7"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 549,
									"name": "Approval",
									"nameLocation": "1063:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1088:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1072:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1072:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1111:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1095:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1095:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1128:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1120:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1071:63:7"
									},
									"src": "1057:78:7"
								},
								{
									"anonymous": false,
									"eventSelector": "0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885",
									"id": 555,
									"name": "Mint",
									"nameLocation": "1147:4:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1168:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "1152:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1152:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1180:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "1172:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1151:35:7"
									},
									"src": "1141:46:7"
								}
							],
							"scope": 557,
							"src": "72:1117:7",
							"usedErrors": []
						}
					],
					"src": "45:1144:7"
				},
				"id": 7
			},
			"TFGv3/Contracts/Interfaces/IProxy.sol": {
				"ast": {
					"absolutePath": "TFGv3/Contracts/Interfaces/IProxy.sol",
					"exportedSymbols": {
						"IERC20": [
							556
						],
						"IProxy": [
							644
						],
						"ISCCommission": [
							702
						],
						"ISCExchange": [
							748
						],
						"ISCOps": [
							774
						],
						"ISCStorage": [
							820
						]
					},
					"id": 645,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 558,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:25:8"
						},
						{
							"absolutePath": "TFGv3/Contracts/Interfaces/ISCStorage.sol",
							"file": "./ISCStorage.sol",
							"id": 559,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 821,
							"src": "73:26:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "TFGv3/Contracts/Interfaces/ISCCommission.sol",
							"file": "./ISCCommission.sol",
							"id": 560,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 703,
							"src": "100:29:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "TFGv3/Contracts/Interfaces/ISCOps.sol",
							"file": "./ISCOps.sol",
							"id": 561,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 775,
							"src": "130:22:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "TFGv3/Contracts/Interfaces/ISCExchange.sol",
							"file": "./ISCExchange.sol",
							"id": 562,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 749,
							"src": "153:27:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "TFGv3/Contracts/Interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 563,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 557,
							"src": "181:22:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IProxy",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 644,
							"linearizedBaseContracts": [
								644
							],
							"name": "IProxy",
							"nameLocation": "215:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "1b46a447",
									"id": 576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initAddrs",
									"nameLocation": "234:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "exchangeAddr",
												"nameLocation": "252:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "244:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "244:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "storageAddr",
												"nameLocation": "274:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "266:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "266:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "commissionAddr",
												"nameLocation": "295:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "287:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "287:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "opsAddr",
												"nameLocation": "319:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "311:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "tokenAddr",
												"nameLocation": "336:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "328:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "328:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "243:103:8"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "355:0:8"
									},
									"scope": 644,
									"src": "225:131:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "600e1b2b",
									"id": 588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "multicall",
									"nameLocation": "369:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "396:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "379:21:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 577,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "379:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 578,
													"nodeType": "ArrayTypeName",
													"src": "379:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "contractAddr",
												"nameLocation": "421:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "402:31:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 580,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "402:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 581,
													"nodeType": "ArrayTypeName",
													"src": "402:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:56:8"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "results",
												"nameLocation": "468:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "453:22:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 584,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "453:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 585,
													"nodeType": "ArrayTypeName",
													"src": "453:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:24:8"
									},
									"scope": 644,
									"src": "360:117:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3f0a0797",
									"id": 593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exchangeContract",
									"nameLocation": "489:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "505:2:8"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "531:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:9:8"
									},
									"scope": 644,
									"src": "480:60:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8ae91695",
									"id": 598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setExchangeAddr",
									"nameLocation": "551:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "exchangeAddr",
												"nameLocation": "575:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "567:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "566:22:8"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "597:0:8"
									},
									"scope": 644,
									"src": "542:56:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "11ce0267",
									"id": 603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "storageContract",
									"nameLocation": "610:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "625:2:8"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "651:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:9:8"
									},
									"scope": 644,
									"src": "601:59:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a6fa0b7b",
									"id": 608,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setStorageAddr",
									"nameLocation": "671:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "storageAddr",
												"nameLocation": "694:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "686:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:21:8"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "715:0:8"
									},
									"scope": 644,
									"src": "662:54:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "da8909e5",
									"id": 613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "commissionContract",
									"nameLocation": "728:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "746:2:8"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "772:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "771:9:8"
									},
									"scope": 644,
									"src": "719:62:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "101dfd19",
									"id": 618,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setCommissionAddr",
									"nameLocation": "792:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "commissionAddr",
												"nameLocation": "818:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "810:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "809:24:8"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:0:8"
									},
									"scope": 644,
									"src": "783:60:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dc96d689",
									"id": 623,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "opsContract",
									"nameLocation": "855:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "866:2:8"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "892:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:8"
									},
									"scope": 644,
									"src": "846:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cf368a39",
									"id": 628,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOpsAddr",
									"nameLocation": "912:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "opsAddr",
												"nameLocation": "931:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "923:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "922:17:8"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "948:0:8"
									},
									"scope": 644,
									"src": "903:46:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fc0c546a",
									"id": 633,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "961:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "966:2:8"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "992:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "992:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "991:9:8"
									},
									"scope": 644,
									"src": "952:49:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2ebd1e28",
									"id": 638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTokenAddr",
									"nameLocation": "1012:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "tokenAddr",
												"nameLocation": "1033:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "1025:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1024:19:8"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1052:0:8"
									},
									"scope": 644,
									"src": "1003:50:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2637a477",
									"id": 643,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deleteContract",
									"nameLocation": "1065:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "newAddr",
												"nameLocation": "1088:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "1080:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1080:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1079:17:8"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1105:0:8"
									},
									"scope": 644,
									"src": "1056:50:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 645,
							"src": "205:903:8",
							"usedErrors": []
						}
					],
					"src": "46:1062:8"
				},
				"id": 8
			},
			"TFGv3/Contracts/Interfaces/ISCCommission.sol": {
				"ast": {
					"absolutePath": "TFGv3/Contracts/Interfaces/ISCCommission.sol",
					"exportedSymbols": {
						"ISCCommission": [
							702
						]
					},
					"id": 703,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 646,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "48:25:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISCCommission",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 702,
							"linearizedBaseContracts": [
								702
							],
							"name": "ISCCommission",
							"nameLocation": "87:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0b06f5d",
									"id": 651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lastUpdated",
									"nameLocation": "118:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "129:2:9"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "154:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "154:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "153:6:9"
									},
									"scope": 702,
									"src": "109:51:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7f8483a4",
									"id": 656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "accumCommission",
									"nameLocation": "177:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "192:2:9"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "217:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "217:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "216:6:9"
									},
									"scope": 702,
									"src": "168:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "37799661",
									"id": 669,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initContract",
									"nameLocation": "240:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "proxyAddr",
												"nameLocation": "261:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "253:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "253:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "lastUpdated_",
												"nameLocation": "277:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "272:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "272:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "accumCommission_",
												"nameLocation": "296:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "291:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "291:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "feeYear_",
												"nameLocation": "319:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "314:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "314:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "r_",
												"nameLocation": "334:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "329:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "329:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "252:85:9"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "346:0:9"
									},
									"scope": 702,
									"src": "231:116:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bdedd45e",
									"id": 676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "payComissions",
									"nameLocation": "364:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "buyOrSell",
												"nameLocation": "383:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "378:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:16:9"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "payedComissions",
												"nameLocation": "417:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "412:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "412:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "411:22:9"
									},
									"scope": 702,
									"src": "355:79:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fc693786",
									"id": 685,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectCommission",
									"nameLocation": "451:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "tokensToTransfer",
												"nameLocation": "488:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "469:35:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 677,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "469:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 678,
													"nodeType": "ArrayTypeName",
													"src": "469:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "qty",
												"nameLocation": "522:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "506:19:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 680,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "506:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 681,
													"nodeType": "ArrayTypeName",
													"src": "506:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "468:58:9"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "535:0:9"
									},
									"scope": 702,
									"src": "442:94:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9e955149",
									"id": 690,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateProxy",
									"nameLocation": "553:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "newAddr",
												"nameLocation": "573:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "565:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:17:9"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "590:0:9"
									},
									"scope": 702,
									"src": "544:47:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1d69b196",
									"id": 701,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deleteContract",
									"nameLocation": "608:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "newAddr",
												"nameLocation": "631:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "623:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "tokensToTransfer",
												"nameLocation": "659:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "640:35:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 693,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "640:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 694,
													"nodeType": "ArrayTypeName",
													"src": "640:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "qty",
												"nameLocation": "693:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "677:19:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 696,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "677:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 697,
													"nodeType": "ArrayTypeName",
													"src": "677:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "622:75:9"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:0:9"
									},
									"scope": 702,
									"src": "599:108:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 703,
							"src": "77:633:9",
							"usedErrors": []
						}
					],
					"src": "48:662:9"
				},
				"id": 9
			},
			"TFGv3/Contracts/Interfaces/ISCExchange.sol": {
				"ast": {
					"absolutePath": "TFGv3/Contracts/Interfaces/ISCExchange.sol",
					"exportedSymbols": {
						"ISCExchange": [
							748
						]
					},
					"id": 749,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 704,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "48:25:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISCExchange",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 748,
							"linearizedBaseContracts": [
								748
							],
							"name": "ISCExchange",
							"nameLocation": "87:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "365afe2f",
									"id": 711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "buyTokensOutput",
									"nameLocation": "116:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "stableAddr",
												"nameLocation": "140:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "132:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "tokensOut",
												"nameLocation": "157:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "152:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "152:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "131:36:10"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "176:0:10"
									},
									"scope": 748,
									"src": "107:70:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9be56034",
									"id": 718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "buyTokensInput",
									"nameLocation": "194:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "stableAddr",
												"nameLocation": "217:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "209:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "209:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "qtyIn",
												"nameLocation": "234:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "229:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "229:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "208:32:10"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "249:0:10"
									},
									"scope": 748,
									"src": "185:65:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6c11bcd3",
									"id": 723,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sellTokens",
									"nameLocation": "267:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "qty",
												"nameLocation": "283:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "278:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "278:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "277:10:10"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "296:0:10"
									},
									"scope": 748,
									"src": "258:39:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2637a477",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deleteContract",
									"nameLocation": "314:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "newAddr",
												"nameLocation": "337:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "329:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "328:17:10"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "354:0:10"
									},
									"scope": 748,
									"src": "305:50:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "44337ea1",
									"id": 735,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addToBlacklist",
									"nameLocation": "372:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "395:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "387:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "386:12:10"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "417:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "417:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:6:10"
									},
									"scope": 748,
									"src": "363:60:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "537df3b6",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeFromBlacklist",
									"nameLocation": "440:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "468:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "460:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:12:10"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "490:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 739,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "490:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:6:10"
									},
									"scope": 748,
									"src": "431:65:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9e955149",
									"id": 747,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateProxy",
									"nameLocation": "513:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "newAddr",
												"nameLocation": "533:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "525:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:17:10"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "550:0:10"
									},
									"scope": 748,
									"src": "504:47:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 749,
							"src": "77:477:10",
							"usedErrors": []
						}
					],
					"src": "48:506:10"
				},
				"id": 10
			},
			"TFGv3/Contracts/Interfaces/ISCOps.sol": {
				"ast": {
					"absolutePath": "TFGv3/Contracts/Interfaces/ISCOps.sol",
					"exportedSymbols": {
						"ISCOps": [
							774
						]
					},
					"id": 775,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 750,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "48:25:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISCOps",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 774,
							"linearizedBaseContracts": [
								774
							],
							"name": "ISCOps",
							"nameLocation": "87:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "cf9d4afa",
									"id": 755,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initContract",
									"nameLocation": "111:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "proxyAddr",
												"nameLocation": "132:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "124:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "124:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "123:19:11"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "151:0:11"
									},
									"scope": 774,
									"src": "102:50:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1fa4e970",
									"id": 763,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniSwap",
									"nameLocation": "169:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "196:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "177:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 756,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "177:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 757,
													"nodeType": "ArrayTypeName",
													"src": "177:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "207:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "202:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "202:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "176:38:11"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "223:0:11"
									},
									"scope": 774,
									"src": "160:64:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9e955149",
									"id": 768,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateProxy",
									"nameLocation": "241:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "newAddr",
												"nameLocation": "261:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "253:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "253:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "252:17:11"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "278:0:11"
									},
									"scope": 774,
									"src": "232:47:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2637a477",
									"id": 773,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deleteContract",
									"nameLocation": "296:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "newContract",
												"nameLocation": "319:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "311:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "310:21:11"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "340:0:11"
									},
									"scope": 774,
									"src": "287:54:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 775,
							"src": "77:267:11",
							"usedErrors": []
						}
					],
					"src": "48:296:11"
				},
				"id": 11
			},
			"TFGv3/Contracts/Interfaces/ISCStorage.sol": {
				"ast": {
					"absolutePath": "TFGv3/Contracts/Interfaces/ISCStorage.sol",
					"exportedSymbols": {
						"ISCStorage": [
							820
						]
					},
					"id": 821,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 776,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "48:25:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISCStorage",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 820,
							"linearizedBaseContracts": [
								820
							],
							"name": "ISCStorage",
							"nameLocation": "87:10:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "0cb1982b",
									"id": 783,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateNAV",
									"nameLocation": "115:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "comission",
												"nameLocation": "130:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "125:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "125:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "124:16:12"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "newNAV",
												"nameLocation": "164:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "159:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "159:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "158:13:12"
									},
									"scope": 820,
									"src": "106:66:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "52fd856b",
									"id": 788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "NAV",
									"nameLocation": "189:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "192:2:12"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "218:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "218:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "217:6:12"
									},
									"scope": 820,
									"src": "180:44:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "990dc9db",
									"id": 797,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFunds",
									"nameLocation": "241:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "263:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "255:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "255:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "totalToTransfer",
												"nameLocation": "272:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "267:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "267:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "254:34:12"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "307:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 794,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "307:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:6:12"
									},
									"scope": 820,
									"src": "232:81:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b4014879",
									"id": 804,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addCoin",
									"nameLocation": "330:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "coinAddr",
												"nameLocation": "346:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "338:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "stable",
												"nameLocation": "361:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "356:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "356:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "337:31:12"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "377:0:12"
									},
									"scope": 820,
									"src": "321:57:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4051b9aa",
									"id": 809,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delCoin",
									"nameLocation": "395:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "coinAddr",
												"nameLocation": "411:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "403:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:18:12"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "429:0:12"
									},
									"scope": 820,
									"src": "386:44:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9e955149",
									"id": 814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateProxy",
									"nameLocation": "447:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "newAddr",
												"nameLocation": "467:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "459:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "458:17:12"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "484:0:12"
									},
									"scope": 820,
									"src": "438:47:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2637a477",
									"id": 819,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deleteContract",
									"nameLocation": "502:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "newAddr",
												"nameLocation": "525:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "517:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:17:12"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "542:0:12"
									},
									"scope": 820,
									"src": "493:50:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 821,
							"src": "77:469:12",
							"usedErrors": []
						}
					],
					"src": "48:498:12"
				},
				"id": 12
			},
			"TFGv3/Contracts/SCStorage.sol": {
				"ast": {
					"absolutePath": "TFGv3/Contracts/SCStorage.sol",
					"exportedSymbols": {
						"FullMath": [
							1583
						],
						"IERC20": [
							556
						],
						"IProxy": [
							644
						],
						"ISCCommission": [
							702
						],
						"ISCExchange": [
							748
						],
						"ISCOps": [
							774
						],
						"ISCStorage": [
							820
						],
						"IUniswapV3Pool": [
							21
						],
						"IUniswapV3PoolActions": [
							117
						],
						"IUniswapV3PoolDerivedState": [
							148
						],
						"IUniswapV3PoolEvents": [
							267
						],
						"IUniswapV3PoolImmutables": [
							307
						],
						"IUniswapV3PoolOwnerActions": [
							333
						],
						"IUniswapV3PoolState": [
							441
						],
						"OracleLibrary": [
							2185
						],
						"SCStorage": [
							1402
						],
						"TickMath": [
							2723
						]
					},
					"id": 1403,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 822,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:25:13"
						},
						{
							"absolutePath": "TFGv3/Contracts/Interfaces/IProxy.sol",
							"file": "./Interfaces/IProxy.sol",
							"id": 823,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1403,
							"sourceUnit": 645,
							"src": "73:33:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "TFGv3/Contracts/libraries/OracleLibrary.sol",
							"file": "./libraries/OracleLibrary.sol",
							"id": 824,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1403,
							"sourceUnit": 2186,
							"src": "107:39:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 825,
										"name": "ISCStorage",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 820,
										"src": "170:10:13"
									},
									"id": 826,
									"nodeType": "InheritanceSpecifier",
									"src": "170:10:13"
								}
							],
							"canonicalName": "SCStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1402,
							"linearizedBaseContracts": [
								1402,
								820
							],
							"name": "SCStorage",
							"nameLocation": "157:9:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 828,
									"mutability": "immutable",
									"name": "deployer",
									"nameLocation": "202:8:13",
									"nodeType": "VariableDeclaration",
									"scope": 1402,
									"src": "184:26:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 827,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "184:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										788
									],
									"constant": false,
									"functionSelector": "52fd856b",
									"id": 830,
									"mutability": "mutable",
									"name": "NAV",
									"nameLocation": "227:3:13",
									"nodeType": "VariableDeclaration",
									"scope": 1402,
									"src": "215:15:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 829,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "215:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fed0a20e",
									"id": 832,
									"mutability": "mutable",
									"name": "initDone",
									"nameLocation": "249:8:13",
									"nodeType": "VariableDeclaration",
									"scope": 1402,
									"src": "236:21:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 831,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "236:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 834,
									"mutability": "mutable",
									"name": "nStable",
									"nameLocation": "269:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 1402,
									"src": "263:13:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 833,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "263:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "ec556889",
									"id": 836,
									"mutability": "mutable",
									"name": "proxy",
									"nameLocation": "299:5:13",
									"nodeType": "VariableDeclaration",
									"scope": 1402,
									"src": "284:20:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 835,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "284:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "63b48ee6",
									"id": 839,
									"mutability": "mutable",
									"name": "coinArray",
									"nameLocation": "325:9:13",
									"nodeType": "VariableDeclaration",
									"scope": 1402,
									"src": "308:26:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 837,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "308:7:13",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 838,
										"nodeType": "ArrayTypeName",
										"src": "308:9:13",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7d0f7a88",
									"id": 843,
									"mutability": "mutable",
									"name": "coins",
									"nameLocation": "370:5:13",
									"nodeType": "VariableDeclaration",
									"scope": 1402,
									"src": "337:38:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 842,
										"keyType": {
											"id": 840,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "346:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "337:25:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 841,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "357:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0fbbfa3e",
									"id": 847,
									"mutability": "mutable",
									"name": "coinOracleAddr",
									"nameLocation": "441:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 1402,
									"src": "405:50:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 846,
										"keyType": {
											"id": 844,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "414:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "405:28:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 845,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "425:7:13",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d825bfff",
									"id": 851,
									"mutability": "mutable",
									"name": "quoteIn",
									"nameLocation": "520:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 1402,
									"src": "484:43:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 850,
										"keyType": {
											"id": 848,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "493:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "484:28:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 849,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "504:7:13",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "626:38:13",
										"statements": [
											{
												"expression": {
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 854,
														"name": "deployer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "636:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 855,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "647:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "647:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "636:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "636:21:13"
											}
										]
									},
									"id": 860,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "619:2:13"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "626:0:13"
									},
									"scope": 1402,
									"src": "608:56:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "699:59:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 863,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "717:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "717:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 865,
																"name": "deployer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "731:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "717:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 862,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "709:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "709:31:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "709:31:13"
											},
											{
												"id": 869,
												"nodeType": "PlaceholderStatement",
												"src": "750:1:13"
											}
										]
									},
									"id": 871,
									"name": "OnlyDeployer",
									"nameLocation": "680:12:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "692:2:13"
									},
									"src": "671:87:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "787:50:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 874,
																"name": "initDone",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 832,
																"src": "805:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "817:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "805:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 873,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "797:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "797:22:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "797:22:13"
											},
											{
												"id": 879,
												"nodeType": "PlaceholderStatement",
												"src": "829:1:13"
											}
										]
									},
									"id": 881,
									"name": "NonInit",
									"nameLocation": "773:7:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "780:2:13"
									},
									"src": "764:73:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "918:56:13",
										"statements": [
											{
												"expression": {
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 890,
														"name": "proxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "928:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 891,
														"name": "proxyAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "936:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "928:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "928:17:13"
											},
											{
												"expression": {
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 894,
														"name": "initDone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "955:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "966:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "955:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "955:12:13"
											}
										]
									},
									"functionSelector": "cf9d4afa",
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 886,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 885,
												"name": "OnlyDeployer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 871,
												"src": "893:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "893:12:13"
										},
										{
											"id": 888,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 887,
												"name": "NonInit",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 881,
												"src": "906:7:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "906:7:13"
										}
									],
									"name": "initContract",
									"nameLocation": "852:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "proxyAddr",
												"nameLocation": "873:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "865:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "864:19:13"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "918:0:13"
									},
									"scope": 1402,
									"src": "843:131:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										783
									],
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "1067:139:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 908,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1085:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1085:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 911,
																				"name": "proxy",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 836,
																				"src": "1106:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 910,
																			"name": "IProxy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "1099:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IProxy_$644_$",
																				"typeString": "type(contract IProxy)"
																			}
																		},
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1099:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IProxy_$644",
																			"typeString": "contract IProxy"
																		}
																	},
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "exchangeContract",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 593,
																	"src": "1099:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1099:32:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1085:46:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 907,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1077:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1077:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "1077:55:13"
											},
											{
												"expression": {
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 918,
														"name": "newNAV",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "1142:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 919,
																"name": "calculateNAV",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "1151:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1151:14:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 921,
															"name": "comission",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "1168:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1151:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1142:35:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "1142:35:13"
											},
											{
												"expression": {
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 925,
														"name": "NAV",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "1187:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 926,
														"name": "newNAV",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "1193:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1187:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "1187:12:13"
											}
										]
									},
									"functionSelector": "0cb1982b",
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateNAV",
									"nameLocation": "989:9:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 903,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1032:8:13"
									},
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "comission",
												"nameLocation": "1004:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "999:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "999:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "998:16:13"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "newNAV",
												"nameLocation": "1055:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "1050:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1050:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1049:13:13"
									},
									"scope": 1402,
									"src": "980:226:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										797
									],
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "1318:670:13",
										"statements": [
											{
												"assignments": [
													941
												],
												"declarations": [
													{
														"constant": false,
														"id": 941,
														"mutability": "mutable",
														"name": "proxyAddr",
														"nameLocation": "1336:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 1042,
														"src": "1328:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 940,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1328:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 943,
												"initialValue": {
													"id": 942,
													"name": "proxy",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 836,
													"src": "1348:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1328:25:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 945,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1371:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1371:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 948,
																					"name": "proxyAddr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 941,
																					"src": "1392:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 947,
																				"name": "IProxy",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 644,
																				"src": "1385:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IProxy_$644_$",
																					"typeString": "type(contract IProxy)"
																				}
																			},
																			"id": 949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:17:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IProxy_$644",
																				"typeString": "contract IProxy"
																			}
																		},
																		"id": 950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "exchangeContract",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 593,
																		"src": "1385:34:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1385:36:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1371:50:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 953,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1425:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1425:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 956,
																					"name": "proxyAddr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 941,
																					"src": "1446:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 955,
																				"name": "IProxy",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 644,
																				"src": "1439:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IProxy_$644_$",
																					"typeString": "type(contract IProxy)"
																				}
																			},
																			"id": 957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1439:17:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IProxy_$644",
																				"typeString": "contract IProxy"
																			}
																		},
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "commissionContract",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 613,
																		"src": "1439:36:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1439:38:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1425:52:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1371:106:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 944,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1363:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1363:115:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "1363:115:13"
											},
											{
												"assignments": [
													965
												],
												"declarations": [
													{
														"constant": false,
														"id": 965,
														"mutability": "mutable",
														"name": "n",
														"nameLocation": "1493:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 1042,
														"src": "1488:6:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 964,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1488:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 968,
												"initialValue": {
													"expression": {
														"id": 966,
														"name": "coinArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "1497:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1497:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1488:25:13"
											},
											{
												"body": {
													"id": 1038,
													"nodeType": "Block",
													"src": "1568:393:13",
													"statements": [
														{
															"assignments": [
																980
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 980,
																	"mutability": "mutable",
																	"name": "coinAddr",
																	"nameLocation": "1590:8:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1038,
																	"src": "1582:16:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 979,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1582:7:13",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 984,
															"initialValue": {
																"baseExpression": {
																	"id": 981,
																	"name": "coinArray",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "1601:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 983,
																"indexExpression": {
																	"id": 982,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "1611:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1601:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1582:31:13"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 985,
																		"name": "coins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "1630:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 987,
																	"indexExpression": {
																		"id": 986,
																		"name": "coinAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 980,
																		"src": "1636:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1630:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1649:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1630:20:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1037,
															"nodeType": "IfStatement",
															"src": "1627:324:13",
															"trueBody": {
																"id": 1036,
																"nodeType": "Block",
																"src": "1664:287:13",
																"statements": [
																	{
																		"assignments": [
																			991
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 991,
																				"mutability": "mutable",
																				"name": "decimals",
																				"nameLocation": "1688:8:13",
																				"nodeType": "VariableDeclaration",
																				"scope": 1036,
																				"src": "1682:14:13",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"typeName": {
																					"id": 990,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "1682:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 997,
																		"initialValue": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"arguments": [
																						{
																							"id": 993,
																							"name": "coinAddr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 980,
																							"src": "1706:8:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 992,
																						"name": "IERC20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 556,
																						"src": "1699:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20_$556_$",
																							"typeString": "type(contract IERC20)"
																						}
																					},
																					"id": 994,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1699:16:13",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$556",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 995,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "decimals",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 458,
																				"src": "1699:25:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																					"typeString": "function () view external returns (uint8)"
																				}
																			},
																			"id": 996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1699:27:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1682:44:13"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 998,
																				"name": "decimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 991,
																				"src": "1747:8:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "3138",
																				"id": 999,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1758:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18_by_1",
																					"typeString": "int_const 18"
																				},
																				"value": "18"
																			},
																			"src": "1747:13:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 1023,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1021,
																					"name": "decimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 991,
																					"src": "1866:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "3138",
																					"id": 1022,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1878:2:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_18_by_1",
																						"typeString": "int_const 18"
																					},
																					"value": "18"
																				},
																				"src": "1866:14:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 1034,
																			"nodeType": "IfStatement",
																			"src": "1863:73:13",
																			"trueBody": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1028,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 932,
																							"src": "1908:2:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1031,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1029,
																								"name": "totalToTransfer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 934,
																								"src": "1912:15:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"id": 1030,
																								"name": "nStable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 834,
																								"src": "1928:7:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"src": "1912:23:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"arguments": [
																								{
																									"id": 1025,
																									"name": "coinAddr",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 980,
																									"src": "1889:8:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 1024,
																								"name": "IERC20",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 556,
																								"src": "1882:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC20_$556_$",
																									"typeString": "type(contract IERC20)"
																								}
																							},
																							"id": 1026,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "1882:16:13",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IERC20_$556",
																								"typeString": "contract IERC20"
																							}
																						},
																						"id": 1027,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "transfer",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 479,
																						"src": "1882:25:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																							"typeString": "function (address,uint256) external returns (bool)"
																						}
																					},
																					"id": 1032,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1882:54:13",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1033,
																				"nodeType": "ExpressionStatement",
																				"src": "1882:54:13"
																			}
																		},
																		"id": 1035,
																		"nodeType": "IfStatement",
																		"src": "1744:192:13",
																		"trueBody": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1005,
																						"name": "to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 932,
																						"src": "1788:2:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1018,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1008,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1006,
																								"name": "totalToTransfer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 934,
																								"src": "1792:15:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"id": 1007,
																								"name": "nStable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 834,
																								"src": "1808:7:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"src": "1792:23:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1017,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "3130",
																								"id": 1009,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "1816:2:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "**",
																							"rightExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 1015,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"arguments": [
																												{
																													"id": 1012,
																													"name": "decimals",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 991,
																													"src": "1826:8:13",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												],
																												"id": 1011,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"nodeType": "ElementaryTypeNameExpression",
																												"src": "1821:4:13",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_uint256_$",
																													"typeString": "type(uint256)"
																												},
																												"typeName": {
																													"id": 1010,
																													"name": "uint",
																													"nodeType": "ElementaryTypeName",
																													"src": "1821:4:13",
																													"typeDescriptions": {}
																												}
																											},
																											"id": 1013,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "typeConversion",
																											"lValueRequested": false,
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "1821:14:13",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"hexValue": "3138",
																											"id": 1014,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "1836:2:13",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_18_by_1",
																												"typeString": "int_const 18"
																											},
																											"value": "18"
																										},
																										"src": "1821:17:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 1016,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "1820:19:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1816:23:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1792:47:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"id": 1002,
																								"name": "coinAddr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 980,
																								"src": "1769:8:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 1001,
																							"name": "IERC20",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 556,
																							"src": "1762:6:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_IERC20_$556_$",
																								"typeString": "type(contract IERC20)"
																							}
																						},
																						"id": 1003,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1762:16:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$556",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 1004,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "transfer",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 479,
																					"src": "1762:25:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 1019,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1762:78:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 1020,
																			"nodeType": "ExpressionStatement",
																			"src": "1762:78:13"
																		}
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 973,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "1548:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 974,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "1552:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1548:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1039,
												"initializationExpression": {
													"assignments": [
														970
													],
													"declarations": [
														{
															"constant": false,
															"id": 970,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1541:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 1039,
															"src": "1536:6:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 969,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1536:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 972,
													"initialValue": {
														"hexValue": "30",
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1545:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1536:10:13"
												},
												"loopExpression": {
													"expression": {
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1555:3:13",
														"subExpression": {
															"id": 976,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "1555:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 978,
													"nodeType": "ExpressionStatement",
													"src": "1555:3:13"
												},
												"nodeType": "ForStatement",
												"src": "1532:429:13"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1977:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 939,
												"id": 1041,
												"nodeType": "Return",
												"src": "1970:11:13"
											}
										]
									},
									"functionSelector": "990dc9db",
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFunds",
									"nameLocation": "1225:13:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 936,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1290:8:13"
									},
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1247:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "1239:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "totalToTransfer",
												"nameLocation": "1256:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "1251:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1251:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1238:34:13"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "1308:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 937,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1308:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1307:6:13"
									},
									"scope": 1402,
									"src": "1216:772:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "2058:470:13",
										"statements": [
											{
												"assignments": [
													1051
												],
												"declarations": [
													{
														"constant": false,
														"id": 1051,
														"mutability": "mutable",
														"name": "lastUpdated",
														"nameLocation": "2302:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 1081,
														"src": "2297:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1050,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2297:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1061,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1054,
																					"name": "proxy",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 836,
																					"src": "2337:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1053,
																				"name": "IProxy",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 644,
																				"src": "2330:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IProxy_$644_$",
																					"typeString": "type(contract IProxy)"
																				}
																			},
																			"id": 1055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2330:13:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IProxy_$644",
																				"typeString": "contract IProxy"
																			}
																		},
																		"id": 1056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "commissionContract",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 613,
																		"src": "2330:32:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 1057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2330:34:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1052,
																"name": "ISCCommission",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 702,
																"src": "2316:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISCCommission_$702_$",
																	"typeString": "type(contract ISCCommission)"
																}
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2316:49:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISCCommission_$702",
																"typeString": "contract ISCCommission"
															}
														},
														"id": 1059,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastUpdated",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 651,
														"src": "2316:61:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2316:63:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2297:82:13"
											},
											{
												"assignments": [
													1063
												],
												"declarations": [
													{
														"constant": false,
														"id": 1063,
														"mutability": "mutable",
														"name": "acum",
														"nameLocation": "2394:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 1081,
														"src": "2389:9:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1062,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2389:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1073,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1066,
																					"name": "proxy",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 836,
																					"src": "2422:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1065,
																				"name": "IProxy",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 644,
																				"src": "2415:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IProxy_$644_$",
																					"typeString": "type(contract IProxy)"
																				}
																			},
																			"id": 1067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2415:13:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IProxy_$644",
																				"typeString": "contract IProxy"
																			}
																		},
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "commissionContract",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 613,
																		"src": "2415:32:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2415:34:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1064,
																"name": "ISCCommission",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 702,
																"src": "2401:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISCCommission_$702_$",
																	"typeString": "type(contract ISCCommission)"
																}
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2401:49:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISCCommission_$702",
																"typeString": "contract ISCCommission"
															}
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "accumCommission",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 656,
														"src": "2401:65:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2401:67:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2389:79:13"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1074,
																	"name": "calculateNAV",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1177,
																	"src": "2486:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2486:14:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1076,
																"name": "acum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "2503:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2486:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1078,
															"name": "lastUpdated",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "2509:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1079,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2485:36:13",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1049,
												"id": 1080,
												"nodeType": "Return",
												"src": "2478:43:13"
											}
										]
									},
									"functionSelector": "def1a5e8",
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "oracleNAV",
									"nameLocation": "2007:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2016:2:13"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2042:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2048:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2048:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:12:13"
									},
									"scope": 1402,
									"src": "1998:530:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "2602:826:13",
										"statements": [
											{
												"assignments": [
													1088
												],
												"declarations": [
													{
														"constant": false,
														"id": 1088,
														"mutability": "mutable",
														"name": "n",
														"nameLocation": "2747:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 1176,
														"src": "2742:6:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1087,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2742:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1091,
												"initialValue": {
													"expression": {
														"id": 1089,
														"name": "coinArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "2751:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2751:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2742:25:13"
											},
											{
												"body": {
													"id": 1174,
													"nodeType": "Block",
													"src": "2813:609:13",
													"statements": [
														{
															"assignments": [
																1103
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1103,
																	"mutability": "mutable",
																	"name": "coin",
																	"nameLocation": "2835:4:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1174,
																	"src": "2827:12:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1102,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2827:7:13",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1107,
															"initialValue": {
																"baseExpression": {
																	"id": 1104,
																	"name": "coinArray",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "2842:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1106,
																"indexExpression": {
																	"id": 1105,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "2852:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2842:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2827:27:13"
														},
														{
															"assignments": [
																1109
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1109,
																	"mutability": "mutable",
																	"name": "balance",
																	"nameLocation": "2873:7:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1174,
																	"src": "2868:12:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1108,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "2868:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1119,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1116,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2914:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SCStorage_$1402",
																					"typeString": "contract SCStorage"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SCStorage_$1402",
																					"typeString": "contract SCStorage"
																				}
																			],
																			"id": 1115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2906:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1114,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2906:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2906:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1111,
																				"name": "coin",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1103,
																				"src": "2890:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1110,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 556,
																			"src": "2883:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$556_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2883:12:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$556",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 470,
																	"src": "2883:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2883:37:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2868:52:13"
														},
														{
															"assignments": [
																1121
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1121,
																	"mutability": "mutable",
																	"name": "stable",
																	"nameLocation": "2939:6:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1174,
																	"src": "2934:11:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1120,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "2934:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1125,
															"initialValue": {
																"baseExpression": {
																	"id": 1122,
																	"name": "coins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 843,
																	"src": "2948:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1124,
																"indexExpression": {
																	"id": 1123,
																	"name": "coin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "2954:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2948:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2934:25:13"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1126,
																	"name": "stable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1121,
																	"src": "2989:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2999:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2989:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1165,
																		"name": "stable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "3381:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3391:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "3381:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1172,
																"nodeType": "IfStatement",
																"src": "3378:33:13",
																"trueBody": {
																	"expression": {
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1168,
																			"name": "newNAV",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1085,
																			"src": "3394:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1169,
																			"name": "balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1109,
																			"src": "3404:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3394:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1171,
																	"nodeType": "ExpressionStatement",
																	"src": "3394:17:13"
																}
															},
															"id": 1173,
															"nodeType": "IfStatement",
															"src": "2986:425:13",
															"trueBody": {
																"id": 1164,
																"nodeType": "Block",
																"src": "3014:346:13",
																"statements": [
																	{
																		"assignments": [
																			1130
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1130,
																				"mutability": "mutable",
																				"name": "quote",
																				"nameLocation": "3037:5:13",
																				"nodeType": "VariableDeclaration",
																				"scope": 1164,
																				"src": "3032:10:13",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1129,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "3032:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1131,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3032:10:13"
																	},
																	{
																		"id": 1157,
																		"nodeType": "UncheckedBlock",
																		"src": "3060:243:13",
																		"statements": [
																			{
																				"assignments": [
																					1133,
																					null
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1133,
																						"mutability": "mutable",
																						"name": "arithmeticMeanTick",
																						"nameLocation": "3098:18:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1157,
																						"src": "3092:24:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						},
																						"typeName": {
																							"id": 1132,
																							"name": "int24",
																							"nodeType": "ElementaryTypeName",
																							"src": "3092:5:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						},
																						"visibility": "internal"
																					},
																					null
																				],
																				"id": 1141,
																				"initialValue": {
																					"arguments": [
																						{
																							"baseExpression": {
																								"id": 1136,
																								"name": "coinOracleAddr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 847,
																								"src": "3143:14:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																									"typeString": "mapping(address => address)"
																								}
																							},
																							"id": 1138,
																							"indexExpression": {
																								"id": 1137,
																								"name": "coin",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1103,
																								"src": "3158:4:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "3143:20:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"hexValue": "30",
																							"id": 1139,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3165:1:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"expression": {
																							"id": 1134,
																							"name": "OracleLibrary",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2185,
																							"src": "3121:13:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_OracleLibrary_$2185_$",
																								"typeString": "type(library OracleLibrary)"
																							}
																						},
																						"id": 1135,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "consult",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1724,
																						"src": "3121:21:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint32_$returns$_t_int24_$_t_uint128_$",
																							"typeString": "function (address,uint32) view returns (int24,uint128)"
																						}
																					},
																					"id": 1140,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3121:46:13",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$_t_int24_$_t_uint128_$",
																						"typeString": "tuple(int24,uint128)"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "3091:76:13"
																			},
																			{
																				"expression": {
																					"id": 1155,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1142,
																						"name": "quote",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1130,
																						"src": "3189:5:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 1145,
																								"name": "arithmeticMeanTick",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1133,
																								"src": "3226:18:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int24",
																									"typeString": "int24"
																								}
																							},
																							{
																								"arguments": [
																									{
																										"id": 1148,
																										"name": "balance",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1109,
																										"src": "3254:7:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 1147,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "3246:7:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint128_$",
																										"typeString": "type(uint128)"
																									},
																									"typeName": {
																										"id": 1146,
																										"name": "uint128",
																										"nodeType": "ElementaryTypeName",
																										"src": "3246:7:13",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1149,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3246:16:13",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint128",
																									"typeString": "uint128"
																								}
																							},
																							{
																								"id": 1150,
																								"name": "coin",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1103,
																								"src": "3264:4:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"baseExpression": {
																									"id": 1151,
																									"name": "quoteIn",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 851,
																									"src": "3270:7:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																										"typeString": "mapping(address => address)"
																									}
																								},
																								"id": 1153,
																								"indexExpression": {
																									"id": 1152,
																									"name": "coin",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1103,
																									"src": "3278:4:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "3270:13:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_int24",
																									"typeString": "int24"
																								},
																								{
																									"typeIdentifier": "t_uint128",
																									"typeString": "uint128"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 1143,
																								"name": "OracleLibrary",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2185,
																								"src": "3197:13:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_OracleLibrary_$2185_$",
																									"typeString": "type(library OracleLibrary)"
																								}
																							},
																							"id": 1144,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "getQuoteAtTick",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1822,
																							"src": "3197:28:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_int24_$_t_uint128_$_t_address_$_t_address_$returns$_t_uint256_$",
																								"typeString": "function (int24,uint128,address,address) pure returns (uint256)"
																							}
																						},
																						"id": 1154,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3197:87:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3189:95:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1156,
																				"nodeType": "ExpressionStatement",
																				"src": "3189:95:13"
																			}
																		]
																	},
																	{
																		"expression": {
																			"id": 1162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1158,
																				"name": "newNAV",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1085,
																				"src": "3320:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1159,
																					"name": "balance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1109,
																					"src": "3330:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1160,
																					"name": "quote",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1130,
																					"src": "3340:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3330:15:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3320:25:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1163,
																		"nodeType": "ExpressionStatement",
																		"src": "3320:25:13"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1096,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "2793:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1097,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "2797:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2793:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1175,
												"initializationExpression": {
													"assignments": [
														1093
													],
													"declarations": [
														{
															"constant": false,
															"id": 1093,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2786:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 1175,
															"src": "2781:6:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1092,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2781:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1095,
													"initialValue": {
														"hexValue": "30",
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2790:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2781:10:13"
												},
												"loopExpression": {
													"expression": {
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2800:3:13",
														"subExpression": {
															"id": 1099,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "2800:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1101,
													"nodeType": "ExpressionStatement",
													"src": "2800:3:13"
												},
												"nodeType": "ForStatement",
												"src": "2777:645:13"
											}
										]
									},
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateNAV",
									"nameLocation": "2547:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2559:2:13"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "newNAV",
												"nameLocation": "2590:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "2585:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2585:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2584:13:13"
									},
									"scope": 1402,
									"src": "2538:890:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										804
									],
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "3513:191:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1186,
														"name": "stable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "3526:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1187,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3536:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3526:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1195,
															"name": "stable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "3576:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3586:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3576:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1208,
													"nodeType": "IfStatement",
													"src": "3573:91:13",
													"trueBody": {
														"id": 1207,
														"nodeType": "Block",
														"src": "3597:67:13",
														"statements": [
															{
																"expression": {
																	"id": 1202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 1198,
																			"name": "coins",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 843,
																			"src": "3611:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1200,
																		"indexExpression": {
																			"id": 1199,
																			"name": "coinAddr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1179,
																			"src": "3617:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "3611:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "32",
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3629:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "3611:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1203,
																"nodeType": "ExpressionStatement",
																"src": "3611:19:13"
															},
															{
																"expression": {
																	"id": 1205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "3644:9:13",
																	"subExpression": {
																		"id": 1204,
																		"name": "nStable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 834,
																		"src": "3644:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 1206,
																"nodeType": "ExpressionStatement",
																"src": "3644:9:13"
															}
														]
													}
												},
												"id": 1209,
												"nodeType": "IfStatement",
												"src": "3523:141:13",
												"trueBody": {
													"expression": {
														"id": 1193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"baseExpression": {
																"id": 1189,
																"name": "coins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 843,
																"src": "3539:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1191,
															"indexExpression": {
																"id": 1190,
																"name": "coinAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "3545:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "IndexAccess",
															"src": "3539:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3557:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3539:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1194,
													"nodeType": "ExpressionStatement",
													"src": "3539:19:13"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1213,
															"name": "coinAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "3688:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1210,
															"name": "coinArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "3673:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3673:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:24:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "3673:24:13"
											}
										]
									},
									"functionSelector": "b4014879",
									"id": 1217,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1184,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1183,
												"name": "OnlyDeployer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 871,
												"src": "3496:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3496:12:13"
										}
									],
									"name": "addCoin",
									"nameLocation": "3447:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "coinAddr",
												"nameLocation": "3463:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "3455:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "stable",
												"nameLocation": "3478:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "3473:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3473:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:31:13"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3513:0:13"
									},
									"scope": 1402,
									"src": "3438:266:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										809
									],
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "3762:411:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1223,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3780:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3780:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1225,
																	"name": "deployer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "3794:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3780:22:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1227,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3806:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3806:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1230,
																					"name": "proxy",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 836,
																					"src": "3827:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1229,
																				"name": "IProxy",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 644,
																				"src": "3820:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IProxy_$644_$",
																					"typeString": "type(contract IProxy)"
																				}
																			},
																			"id": 1231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3820:13:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IProxy_$644",
																				"typeString": "contract IProxy"
																			}
																		},
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "exchangeContract",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 593,
																		"src": "3820:30:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3820:32:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3806:46:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3780:72:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3772:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3772:81:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "3772:81:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1238,
															"name": "coins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "3866:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1240,
														"indexExpression": {
															"id": 1239,
															"name": "coinAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "3872:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3866:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "32",
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3885:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "3866:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1246,
												"nodeType": "IfStatement",
												"src": "3863:34:13",
												"trueBody": {
													"expression": {
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "3888:9:13",
														"subExpression": {
															"id": 1243,
															"name": "nStable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "3888:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1245,
													"nodeType": "ExpressionStatement",
													"src": "3888:9:13"
												}
											},
											{
												"expression": {
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1247,
															"name": "coins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "3907:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1249,
														"indexExpression": {
															"id": 1248,
															"name": "coinAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "3913:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3907:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1250,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3925:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3907:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "3907:19:13"
											},
											{
												"assignments": [
													1254
												],
												"declarations": [
													{
														"constant": false,
														"id": 1254,
														"mutability": "mutable",
														"name": "n",
														"nameLocation": "3941:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 1292,
														"src": "3936:6:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1253,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3936:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1257,
												"initialValue": {
													"expression": {
														"id": 1255,
														"name": "coinArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "3945:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3945:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3936:25:13"
											},
											{
												"body": {
													"id": 1290,
													"nodeType": "Block",
													"src": "4007:160:13",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1268,
																		"name": "coinArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "4024:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1270,
																	"indexExpression": {
																		"id": 1269,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1259,
																		"src": "4034:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4024:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1271,
																	"name": "coinAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1219,
																	"src": "4040:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4024:24:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1289,
															"nodeType": "IfStatement",
															"src": "4021:136:13",
															"trueBody": {
																"id": 1288,
																"nodeType": "Block",
																"src": "4062:95:13",
																"statements": [
																	{
																		"expression": {
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1273,
																					"name": "coinArray",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 839,
																					"src": "4080:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1275,
																				"indexExpression": {
																					"id": 1274,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1259,
																					"src": "4090:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4080:12:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1276,
																					"name": "coinArray",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 839,
																					"src": "4095:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1280,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1279,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1277,
																						"name": "n",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1254,
																						"src": "4105:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1278,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4107:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "4105:3:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4095:14:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "4080:29:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1282,
																		"nodeType": "ExpressionStatement",
																		"src": "4080:29:13"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1283,
																					"name": "coinArray",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 839,
																					"src": "4127:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "4127:13:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 1286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4127:15:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1287,
																		"nodeType": "ExpressionStatement",
																		"src": "4127:15:13"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1262,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "3987:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1263,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "3991:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3987:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1291,
												"initializationExpression": {
													"assignments": [
														1259
													],
													"declarations": [
														{
															"constant": false,
															"id": 1259,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3980:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 1291,
															"src": "3975:6:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1258,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3975:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1261,
													"initialValue": {
														"hexValue": "30",
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3984:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3975:10:13"
												},
												"loopExpression": {
													"expression": {
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3994:3:13",
														"subExpression": {
															"id": 1265,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "3994:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1267,
													"nodeType": "ExpressionStatement",
													"src": "3994:3:13"
												},
												"nodeType": "ForStatement",
												"src": "3971:196:13"
											}
										]
									},
									"functionSelector": "4051b9aa",
									"id": 1293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delCoin",
									"nameLocation": "3723:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "coinAddr",
												"nameLocation": "3739:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3731:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3730:18:13"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3762:0:13"
									},
									"scope": 1402,
									"src": "3714:459:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										814
									],
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "4247:70:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1300,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4265:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4265:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1302,
																"name": "proxy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 836,
																"src": "4279:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4265:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4257:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4257:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "4257:28:13"
											},
											{
												"expression": {
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1306,
														"name": "proxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "4295:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1307,
														"name": "newAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "4303:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4295:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "4295:15:13"
											}
										]
									},
									"functionSelector": "9e955149",
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateProxy",
									"nameLocation": "4188:11:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1297,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4234:8:13"
									},
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "newAddr",
												"nameLocation": "4208:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "4200:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4200:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4199:17:13"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4247:0:13"
									},
									"scope": 1402,
									"src": "4179:138:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										819
									],
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "4411:473:13",
										"statements": [
											{
												"assignments": [
													1320
												],
												"declarations": [
													{
														"constant": false,
														"id": 1320,
														"mutability": "mutable",
														"name": "proxyAddr",
														"nameLocation": "4429:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 1386,
														"src": "4421:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1319,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4421:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1322,
												"initialValue": {
													"id": 1321,
													"name": "proxy",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 836,
													"src": "4441:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4421:25:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1327,
															"name": "newAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "4489:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1324,
																	"name": "proxyAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "4463:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1323,
																"name": "IProxy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "4456:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IProxy_$644_$",
																	"typeString": "type(contract IProxy)"
																}
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4456:17:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IProxy_$644",
																"typeString": "contract IProxy"
															}
														},
														"id": 1326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "setStorageAddr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 608,
														"src": "4456:32:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4456:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "4456:41:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "696e6974436f6e7472616374286164647265737329",
																	"id": 1335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4552:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_cf9d4afa5954e14c65b6abfb613fbb48ee661f50cfb1c9e0b24b914d132dd504",
																		"typeString": "literal_string \"initContract(address)\""
																	},
																	"value": "initContract(address)"
																},
																{
																	"id": 1336,
																	"name": "proxyAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "4577:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_cf9d4afa5954e14c65b6abfb613fbb48ee661f50cfb1c9e0b24b914d132dd504",
																		"typeString": "literal_string \"initContract(address)\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1333,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4528:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "4528:23:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4528:59:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1330,
															"name": "newAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "4507:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4507:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4507:81:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 1339,
												"nodeType": "ExpressionStatement",
												"src": "4507:81:13"
											},
											{
												"assignments": [
													1341
												],
												"declarations": [
													{
														"constant": false,
														"id": 1341,
														"mutability": "mutable",
														"name": "n",
														"nameLocation": "4603:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 1386,
														"src": "4598:6:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1340,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4598:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1344,
												"initialValue": {
													"expression": {
														"id": 1342,
														"name": "coinArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "4607:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4607:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4598:25:13"
											},
											{
												"body": {
													"id": 1377,
													"nodeType": "Block",
													"src": "4669:168:13",
													"statements": [
														{
															"assignments": [
																1356
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1356,
																	"mutability": "mutable",
																	"name": "tokenToTransfer",
																	"nameLocation": "4691:15:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1377,
																	"src": "4683:23:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1355,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4683:7:13",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1360,
															"initialValue": {
																"baseExpression": {
																	"id": 1357,
																	"name": "coinArray",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "4709:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1359,
																"indexExpression": {
																	"id": 1358,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1346,
																	"src": "4719:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4709:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4683:38:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1365,
																		"name": "newAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1313,
																		"src": "4768:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1372,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "4819:4:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_SCStorage_$1402",
																							"typeString": "contract SCStorage"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_SCStorage_$1402",
																							"typeString": "contract SCStorage"
																						}
																					],
																					"id": 1371,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "4811:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1370,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "4811:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1373,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4811:13:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1367,
																						"name": "tokenToTransfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1356,
																						"src": "4784:15:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1366,
																					"name": "IERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 556,
																					"src": "4777:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC20_$556_$",
																						"typeString": "type(contract IERC20)"
																					}
																				},
																				"id": 1368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4777:23:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$556",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 1369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "balanceOf",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 470,
																			"src": "4777:33:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address) view external returns (uint256)"
																			}
																		},
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4777:48:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1362,
																				"name": "tokenToTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1356,
																				"src": "4742:15:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1361,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 556,
																			"src": "4735:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$556_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4735:23:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$556",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 479,
																	"src": "4735:32:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4735:91:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1376,
															"nodeType": "ExpressionStatement",
															"src": "4735:91:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1349,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "4649:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1350,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "4653:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4649:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1378,
												"initializationExpression": {
													"assignments": [
														1346
													],
													"declarations": [
														{
															"constant": false,
															"id": 1346,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4642:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 1378,
															"src": "4637:6:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1345,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4637:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1348,
													"initialValue": {
														"hexValue": "30",
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4646:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4637:10:13"
												},
												"loopExpression": {
													"expression": {
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4656:3:13",
														"subExpression": {
															"id": 1352,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "4656:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1354,
													"nodeType": "ExpressionStatement",
													"src": "4656:3:13"
												},
												"nodeType": "ForStatement",
												"src": "4633:204:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1382,
																	"name": "deployer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "4867:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4859:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1380,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4859:8:13",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4859:17:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1379,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "4846:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4846:31:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1385,
												"nodeType": "ExpressionStatement",
												"src": "4846:31:13"
											}
										]
									},
									"functionSelector": "2637a477",
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1317,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1316,
												"name": "OnlyDeployer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 871,
												"src": "4394:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4394:12:13"
										}
									],
									"name": "deleteContract",
									"nameLocation": "4336:14:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1315,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4385:8:13"
									},
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "newAddr",
												"nameLocation": "4359:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "4351:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4351:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4350:17:13"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4411:0:13"
									},
									"scope": 1402,
									"src": "4327:557:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "4925:25:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1390,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "4935:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4935:8:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1392,
												"nodeType": "ExpressionStatement",
												"src": "4935:8:13"
											}
										]
									},
									"id": 1394,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4901:2:13"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4925:0:13"
									},
									"scope": 1402,
									"src": "4894:56:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "4992:25:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1397,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "5002:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5002:8:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "5002:8:13"
											}
										]
									},
									"id": 1401,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4968:2:13"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4992:0:13"
									},
									"scope": 1402,
									"src": "4960:57:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1403,
							"src": "148:4871:13",
							"usedErrors": []
						}
					],
					"src": "46:4973:13"
				},
				"id": 13
			},
			"TFGv3/Contracts/libraries/FullMath.sol": {
				"ast": {
					"absolutePath": "TFGv3/Contracts/libraries/FullMath.sol",
					"exportedSymbols": {
						"FullMath": [
							1583
						]
					},
					"id": 1584,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1404,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FullMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1405,
								"nodeType": "StructuredDocumentation",
								"src": "58:297:14",
								"text": "@title Contains 512-bit math functions\n @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits"
							},
							"fullyImplemented": true,
							"id": 1583,
							"linearizedBaseContracts": [
								1583
							],
							"name": "FullMath",
							"nameLocation": "363:8:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "870:3673:14",
										"statements": [
											{
												"assignments": [
													1418
												],
												"declarations": [
													{
														"constant": false,
														"id": 1418,
														"mutability": "mutable",
														"name": "prod0",
														"nameLocation": "1191:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 1538,
														"src": "1183:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1417,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1183:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1419,
												"nodeType": "VariableDeclarationStatement",
												"src": "1183:13:14"
											},
											{
												"assignments": [
													1421
												],
												"declarations": [
													{
														"constant": false,
														"id": 1421,
														"mutability": "mutable",
														"name": "prod1",
														"nameLocation": "1259:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 1538,
														"src": "1251:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1420,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1251:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1422,
												"nodeType": "VariableDeclarationStatement",
												"src": "1251:13:14"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1327:141:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1341:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "1358:1:14"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "1361:1:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1368:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1364:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1364:6:14"
																	}
																],
																"functionName": {
																	"name": "mulmod",
																	"nodeType": "YulIdentifier",
																	"src": "1351:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1351:20:14"
															},
															"variables": [
																{
																	"name": "mm",
																	"nodeType": "YulTypedName",
																	"src": "1345:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1384:18:14",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "1397:1:14"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "1400:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1393:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:9:14"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nodeType": "YulIdentifier",
																	"src": "1384:5:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1415:43:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nodeType": "YulIdentifier",
																				"src": "1432:2:14"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "1436:5:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1428:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1428:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nodeType": "YulIdentifier",
																				"src": "1447:2:14"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "1451:5:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1444:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1444:13:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1424:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1424:34:14"
															},
															"variableNames": [
																{
																	"name": "prod1",
																	"nodeType": "YulIdentifier",
																	"src": "1415:5:14"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1408,
														"isOffset": false,
														"isSlot": false,
														"src": "1358:1:14",
														"valueSize": 1
													},
													{
														"declaration": 1408,
														"isOffset": false,
														"isSlot": false,
														"src": "1397:1:14",
														"valueSize": 1
													},
													{
														"declaration": 1410,
														"isOffset": false,
														"isSlot": false,
														"src": "1361:1:14",
														"valueSize": 1
													},
													{
														"declaration": 1410,
														"isOffset": false,
														"isSlot": false,
														"src": "1400:1:14",
														"valueSize": 1
													},
													{
														"declaration": 1418,
														"isOffset": false,
														"isSlot": false,
														"src": "1384:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1418,
														"isOffset": false,
														"isSlot": false,
														"src": "1436:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1418,
														"isOffset": false,
														"isSlot": false,
														"src": "1451:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1421,
														"isOffset": false,
														"isSlot": false,
														"src": "1415:5:14",
														"valueSize": 1
													}
												],
												"id": 1423,
												"nodeType": "InlineAssembly",
												"src": "1318:150:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1424,
														"name": "prod1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "1540:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1549:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1540:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1437,
												"nodeType": "IfStatement",
												"src": "1536:179:14",
												"trueBody": {
													"id": 1436,
													"nodeType": "Block",
													"src": "1552:163:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1428,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1412,
																			"src": "1574:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1588:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1574:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1427,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1566:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1566:24:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1432,
															"nodeType": "ExpressionStatement",
															"src": "1566:24:14"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "1613:65:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1631:33:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "prod0",
																					"nodeType": "YulIdentifier",
																					"src": "1645:5:14"
																				},
																				{
																					"name": "denominator",
																					"nodeType": "YulIdentifier",
																					"src": "1652:11:14"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "1641:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1641:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "result",
																				"nodeType": "YulIdentifier",
																				"src": "1631:6:14"
																			}
																		]
																	}
																]
															},
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1412,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1652:11:14",
																	"valueSize": 1
																},
																{
																	"declaration": 1418,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1645:5:14",
																	"valueSize": 1
																},
																{
																	"declaration": 1415,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1631:6:14",
																	"valueSize": 1
																}
															],
															"id": 1433,
															"nodeType": "InlineAssembly",
															"src": "1604:74:14"
														},
														{
															"expression": {
																"id": 1434,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1415,
																"src": "1698:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1416,
															"id": 1435,
															"nodeType": "Return",
															"src": "1691:13:14"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1439,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "1828:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1440,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1421,
																"src": "1842:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1828:19:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1438,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1820:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1820:28:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1443,
												"nodeType": "ExpressionStatement",
												"src": "1820:28:14"
											},
											{
												"assignments": [
													1445
												],
												"declarations": [
													{
														"constant": false,
														"id": 1445,
														"mutability": "mutable",
														"name": "remainder",
														"nameLocation": "2133:9:14",
														"nodeType": "VariableDeclaration",
														"scope": 1538,
														"src": "2125:17:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1444,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2125:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1446,
												"nodeType": "VariableDeclarationStatement",
												"src": "2125:17:14"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2161:62:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2175:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "2195:1:14"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "2198:1:14"
																	},
																	{
																		"name": "denominator",
																		"nodeType": "YulIdentifier",
																		"src": "2201:11:14"
																	}
																],
																"functionName": {
																	"name": "mulmod",
																	"nodeType": "YulIdentifier",
																	"src": "2188:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2188:25:14"
															},
															"variableNames": [
																{
																	"name": "remainder",
																	"nodeType": "YulIdentifier",
																	"src": "2175:9:14"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1408,
														"isOffset": false,
														"isSlot": false,
														"src": "2195:1:14",
														"valueSize": 1
													},
													{
														"declaration": 1410,
														"isOffset": false,
														"isSlot": false,
														"src": "2198:1:14",
														"valueSize": 1
													},
													{
														"declaration": 1412,
														"isOffset": false,
														"isSlot": false,
														"src": "2201:11:14",
														"valueSize": 1
													},
													{
														"declaration": 1445,
														"isOffset": false,
														"isSlot": false,
														"src": "2175:9:14",
														"valueSize": 1
													}
												],
												"id": 1447,
												"nodeType": "InlineAssembly",
												"src": "2152:71:14"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2296:108:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2310:41:14",
															"value": {
																"arguments": [
																	{
																		"name": "prod1",
																		"nodeType": "YulIdentifier",
																		"src": "2323:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "2333:9:14"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "2344:5:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2330:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2330:20:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2319:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2319:32:14"
															},
															"variableNames": [
																{
																	"name": "prod1",
																	"nodeType": "YulIdentifier",
																	"src": "2310:5:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2364:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "prod0",
																		"nodeType": "YulIdentifier",
																		"src": "2377:5:14"
																	},
																	{
																		"name": "remainder",
																		"nodeType": "YulIdentifier",
																		"src": "2384:9:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2373:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2373:21:14"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nodeType": "YulIdentifier",
																	"src": "2364:5:14"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1418,
														"isOffset": false,
														"isSlot": false,
														"src": "2344:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1418,
														"isOffset": false,
														"isSlot": false,
														"src": "2364:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1418,
														"isOffset": false,
														"isSlot": false,
														"src": "2377:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1421,
														"isOffset": false,
														"isSlot": false,
														"src": "2310:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1421,
														"isOffset": false,
														"isSlot": false,
														"src": "2323:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1445,
														"isOffset": false,
														"isSlot": false,
														"src": "2333:9:14",
														"valueSize": 1
													},
													{
														"declaration": 1445,
														"isOffset": false,
														"isSlot": false,
														"src": "2384:9:14",
														"valueSize": 1
													}
												],
												"id": 1448,
												"nodeType": "InlineAssembly",
												"src": "2287:117:14"
											},
											{
												"assignments": [
													1450
												],
												"declarations": [
													{
														"constant": false,
														"id": 1450,
														"mutability": "mutable",
														"name": "twos",
														"nameLocation": "2561:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 1538,
														"src": "2553:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1449,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2553:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1463,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"arguments": [
																				{
																					"id": 1453,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2574:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1452,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "2574:7:14",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					}
																				],
																				"id": 1451,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "2569:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2569:13:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint256",
																				"typeString": "type(uint256)"
																			}
																		},
																		"id": 1455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "2569:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1456,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1412,
																		"src": "2589:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2569:31:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2603:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2569:35:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1460,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2568:37:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 1461,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1412,
														"src": "2608:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2568:51:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2553:66:14"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2684:61:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2698:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "denominator",
																		"nodeType": "YulIdentifier",
																		"src": "2717:11:14"
																	},
																	{
																		"name": "twos",
																		"nodeType": "YulIdentifier",
																		"src": "2730:4:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2713:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2713:22:14"
															},
															"variableNames": [
																{
																	"name": "denominator",
																	"nodeType": "YulIdentifier",
																	"src": "2698:11:14"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1412,
														"isOffset": false,
														"isSlot": false,
														"src": "2698:11:14",
														"valueSize": 1
													},
													{
														"declaration": 1412,
														"isOffset": false,
														"isSlot": false,
														"src": "2717:11:14",
														"valueSize": 1
													},
													{
														"declaration": 1450,
														"isOffset": false,
														"isSlot": false,
														"src": "2730:4:14",
														"valueSize": 1
													}
												],
												"id": 1464,
												"nodeType": "InlineAssembly",
												"src": "2675:70:14"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2818:49:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2832:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "prod0",
																		"nodeType": "YulIdentifier",
																		"src": "2845:5:14"
																	},
																	{
																		"name": "twos",
																		"nodeType": "YulIdentifier",
																		"src": "2852:4:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2841:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2841:16:14"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nodeType": "YulIdentifier",
																	"src": "2832:5:14"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1418,
														"isOffset": false,
														"isSlot": false,
														"src": "2832:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1418,
														"isOffset": false,
														"isSlot": false,
														"src": "2845:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1450,
														"isOffset": false,
														"isSlot": false,
														"src": "2852:4:14",
														"valueSize": 1
													}
												],
												"id": 1465,
												"nodeType": "InlineAssembly",
												"src": "2809:58:14"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3055:63:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3069:39:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3089:1:14",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "3092:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3085:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3085:12:14"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3099:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3081:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3081:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3106:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3077:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3077:31:14"
															},
															"variableNames": [
																{
																	"name": "twos",
																	"nodeType": "YulIdentifier",
																	"src": "3069:4:14"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1450,
														"isOffset": false,
														"isSlot": false,
														"src": "3069:4:14",
														"valueSize": 1
													},
													{
														"declaration": 1450,
														"isOffset": false,
														"isSlot": false,
														"src": "3092:4:14",
														"valueSize": 1
													},
													{
														"declaration": 1450,
														"isOffset": false,
														"isSlot": false,
														"src": "3099:4:14",
														"valueSize": 1
													}
												],
												"id": 1466,
												"nodeType": "InlineAssembly",
												"src": "3046:72:14"
											},
											{
												"expression": {
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1467,
														"name": "prod0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "3127:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1468,
															"name": "prod1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "3136:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1469,
															"name": "twos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "3144:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3136:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3127:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "3127:21:14"
											},
											{
												"assignments": [
													1474
												],
												"declarations": [
													{
														"constant": false,
														"id": 1474,
														"mutability": "mutable",
														"name": "inv",
														"nameLocation": "3490:3:14",
														"nodeType": "VariableDeclaration",
														"scope": 1538,
														"src": "3482:11:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1473,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3482:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1481,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "33",
																	"id": 1475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3497:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1476,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1412,
																	"src": "3501:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3497:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1478,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3496:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "^",
													"rightExpression": {
														"hexValue": "32",
														"id": 1479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3516:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "3496:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3482:35:14"
											},
											{
												"expression": {
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1482,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "3732:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3739:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1484,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "3743:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1485,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "3757:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3743:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3739:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3732:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "3732:28:14"
											},
											{
												"expression": {
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1490,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "3790:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3797:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1492,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "3801:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1493,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "3815:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3801:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3797:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3790:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1497,
												"nodeType": "ExpressionStatement",
												"src": "3790:28:14"
											},
											{
												"expression": {
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1498,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "3849:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3856:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1500,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "3860:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1501,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "3874:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3860:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3856:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3849:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "3849:28:14"
											},
											{
												"expression": {
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1506,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "3908:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3915:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1508,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "3919:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1509,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "3933:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3919:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3915:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3908:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1513,
												"nodeType": "ExpressionStatement",
												"src": "3908:28:14"
											},
											{
												"expression": {
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1514,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "3967:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3974:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1516,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "3978:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1517,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "3992:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3978:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3974:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3967:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "3967:28:14"
											},
											{
												"expression": {
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1522,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "4027:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4034:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1524,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "4038:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1525,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "4052:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4038:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4034:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4027:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1529,
												"nodeType": "ExpressionStatement",
												"src": "4027:28:14"
											},
											{
												"expression": {
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1530,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "4493:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1531,
															"name": "prod0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "4502:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1532,
															"name": "inv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "4510:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4502:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4493:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1535,
												"nodeType": "ExpressionStatement",
												"src": "4493:20:14"
											},
											{
												"expression": {
													"id": 1536,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1415,
													"src": "4530:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1416,
												"id": 1537,
												"nodeType": "Return",
												"src": "4523:13:14"
											}
										]
									},
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "378:359:14",
										"text": "@notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv"
									},
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "751:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "775:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "767:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "794:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "786:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "786:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "813:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "805:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "757:73:14"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "862:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "854:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "853:16:14"
									},
									"scope": 1583,
									"src": "742:3801:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1581,
										"nodeType": "Block",
										"src": "4963:177:14",
										"statements": [
											{
												"expression": {
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1551,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "4973:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1553,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1542,
																"src": "4989:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1554,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1544,
																"src": "4992:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1555,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1546,
																"src": "4995:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1552,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1539,
															"src": "4982:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4982:25:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4973:34:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1558,
												"nodeType": "ExpressionStatement",
												"src": "4973:34:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1560,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1542,
																"src": "5028:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1561,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1544,
																"src": "5031:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1562,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1546,
																"src": "5034:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1559,
															"name": "mulmod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967280,
															"src": "5021:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5021:25:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5049:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5021:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1580,
												"nodeType": "IfStatement",
												"src": "5017:117:14",
												"trueBody": {
													"id": 1579,
													"nodeType": "Block",
													"src": "5052:82:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1567,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1549,
																			"src": "5074:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1570,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5088:7:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1569,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "5088:7:14",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						}
																					],
																					"id": 1568,
																					"name": "type",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967269,
																					"src": "5083:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 1571,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5083:13:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_meta_type_t_uint256",
																					"typeString": "type(uint256)"
																				}
																			},
																			"id": 1572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "max",
																			"nodeType": "MemberAccess",
																			"src": "5083:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5074:26:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1566,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5066:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5066:35:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1575,
															"nodeType": "ExpressionStatement",
															"src": "5066:35:14"
														},
														{
															"expression": {
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "5115:8:14",
																"subExpression": {
																	"id": 1576,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1549,
																	"src": "5115:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1578,
															"nodeType": "ExpressionStatement",
															"src": "5115:8:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "4549:271:14",
										"text": "@notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result"
									},
									"id": 1582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDivRoundingUp",
									"nameLocation": "4834:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4868:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "4860:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4887:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "4879:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "4906:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "4898:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4850:73:14"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4955:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "4947:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4947:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4946:16:14"
									},
									"scope": 1583,
									"src": "4825:315:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1584,
							"src": "355:4787:14",
							"usedErrors": []
						}
					],
					"src": "32:5111:14"
				},
				"id": 14
			},
			"TFGv3/Contracts/libraries/OracleLibrary.sol": {
				"ast": {
					"absolutePath": "TFGv3/Contracts/libraries/OracleLibrary.sol",
					"exportedSymbols": {
						"FullMath": [
							1583
						],
						"IUniswapV3Pool": [
							21
						],
						"IUniswapV3PoolActions": [
							117
						],
						"IUniswapV3PoolDerivedState": [
							148
						],
						"IUniswapV3PoolEvents": [
							267
						],
						"IUniswapV3PoolImmutables": [
							307
						],
						"IUniswapV3PoolOwnerActions": [
							333
						],
						"IUniswapV3PoolState": [
							441
						],
						"OracleLibrary": [
							2185
						],
						"TickMath": [
							2723
						]
					},
					"id": 2186,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1585,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:15"
						},
						{
							"absolutePath": "TFGv3/Contracts/libraries/FullMath.sol",
							"file": "./FullMath.sol",
							"id": 1586,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2186,
							"sourceUnit": 1584,
							"src": "71:24:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "TFGv3/Contracts/libraries/TickMath.sol",
							"file": "./TickMath.sol",
							"id": 1587,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2186,
							"sourceUnit": 2724,
							"src": "96:24:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 1588,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2186,
							"sourceUnit": 22,
							"src": "121:66:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "OracleLibrary",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1589,
								"nodeType": "StructuredDocumentation",
								"src": "189:90:15",
								"text": "@title Oracle library\n @notice Provides functions to integrate with V3 pool oracle"
							},
							"fullyImplemented": true,
							"id": 2185,
							"linearizedBaseContracts": [
								2185
							],
							"name": "OracleLibrary",
							"nameLocation": "287:13:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "966:1083:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1602,
																"name": "secondsAgo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "984:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "998:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "984:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4250",
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1001:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb",
																"typeString": "literal_string \"BP\""
															},
															"value": "BP"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb",
																"typeString": "literal_string \"BP\""
															}
														],
														"id": 1601,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "976:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "976:30:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1607,
												"nodeType": "ExpressionStatement",
												"src": "976:30:15"
											},
											{
												"assignments": [
													1612
												],
												"declarations": [
													{
														"constant": false,
														"id": 1612,
														"mutability": "mutable",
														"name": "secondsAgos",
														"nameLocation": "1033:11:15",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "1017:27:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
															"typeString": "uint32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1610,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "1017:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1611,
															"nodeType": "ArrayTypeName",
															"src": "1017:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
																"typeString": "uint32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1618,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1060:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1047:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint32_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint32[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1613,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "1051:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1614,
															"nodeType": "ArrayTypeName",
															"src": "1051:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
																"typeString": "uint32[]"
															}
														}
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1047:15:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
														"typeString": "uint32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1017:45:15"
											},
											{
												"expression": {
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1619,
															"name": "secondsAgos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "1072:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																"typeString": "uint32[] memory"
															}
														},
														"id": 1621,
														"indexExpression": {
															"hexValue": "30",
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1084:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1072:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1622,
														"name": "secondsAgo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "1089:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1072:27:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1624,
												"nodeType": "ExpressionStatement",
												"src": "1072:27:15"
											},
											{
												"expression": {
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1625,
															"name": "secondsAgos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "1109:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																"typeString": "uint32[] memory"
															}
														},
														"id": 1627,
														"indexExpression": {
															"hexValue": "31",
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1121:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1109:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1126:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1109:18:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "1109:18:15"
											},
											{
												"assignments": [
													1635,
													1638
												],
												"declarations": [
													{
														"constant": false,
														"id": 1635,
														"mutability": "mutable",
														"name": "tickCumulatives",
														"nameLocation": "1154:15:15",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "1139:30:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
															"typeString": "int56[]"
														},
														"typeName": {
															"baseType": {
																"id": 1633,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "1139:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																}
															},
															"id": 1634,
															"nodeType": "ArrayTypeName",
															"src": "1139:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
																"typeString": "int56[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1638,
														"mutability": "mutable",
														"name": "secondsPerLiquidityCumulativeX128s",
														"nameLocation": "1188:34:15",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "1171:51:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
															"typeString": "uint160[]"
														},
														"typeName": {
															"baseType": {
																"id": 1636,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "1171:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 1637,
															"nodeType": "ArrayTypeName",
															"src": "1171:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
																"typeString": "uint160[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1645,
												"initialValue": {
													"arguments": [
														{
															"id": 1643,
															"name": "secondsAgos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "1267:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																"typeString": "uint32[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																"typeString": "uint32[] memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1640,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "1253:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1639,
																"name": "IUniswapV3Pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "1238:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$21_$",
																	"typeString": "type(contract IUniswapV3Pool)"
																}
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1238:20:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$21",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "observe",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 133,
														"src": "1238:28:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_array$_t_uint32_$dyn_memory_ptr_$returns$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
															"typeString": "function (uint32[] memory) view external returns (int56[] memory,uint160[] memory)"
														}
													},
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1238:41:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
														"typeString": "tuple(int56[] memory,uint160[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1138:141:15"
											},
											{
												"assignments": [
													1647
												],
												"declarations": [
													{
														"constant": false,
														"id": 1647,
														"mutability": "mutable",
														"name": "tickCumulativesDelta",
														"nameLocation": "1296:20:15",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "1290:26:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														},
														"typeName": {
															"id": 1646,
															"name": "int56",
															"nodeType": "ElementaryTypeName",
															"src": "1290:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1655,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1648,
															"name": "tickCumulatives",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1635,
															"src": "1319:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
																"typeString": "int56[] memory"
															}
														},
														"id": 1650,
														"indexExpression": {
															"hexValue": "31",
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1335:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1319:18:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 1651,
															"name": "tickCumulatives",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1635,
															"src": "1340:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
																"typeString": "int56[] memory"
															}
														},
														"id": 1653,
														"indexExpression": {
															"hexValue": "30",
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1356:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1340:18:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "1319:39:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1290:68:15"
											},
											{
												"assignments": [
													1657
												],
												"declarations": [
													{
														"constant": false,
														"id": 1657,
														"mutability": "mutable",
														"name": "secondsPerLiquidityCumulativesDelta",
														"nameLocation": "1376:35:15",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "1368:43:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 1656,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "1368:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1665,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1658,
															"name": "secondsPerLiquidityCumulativeX128s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "1426:34:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
																"typeString": "uint160[] memory"
															}
														},
														"id": 1660,
														"indexExpression": {
															"hexValue": "31",
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1461:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1426:37:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 1661,
															"name": "secondsPerLiquidityCumulativeX128s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "1466:34:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
																"typeString": "uint160[] memory"
															}
														},
														"id": 1663,
														"indexExpression": {
															"hexValue": "30",
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1501:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1466:37:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "1426:77:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1368:135:15"
											},
											{
												"expression": {
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1666,
														"name": "arithmeticMeanTick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "1514:18:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																},
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1669,
																	"name": "tickCumulativesDelta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1647,
																	"src": "1541:20:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int56",
																		"typeString": "int56"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1672,
																			"name": "secondsAgo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1594,
																			"src": "1570:10:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		],
																		"id": 1671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1564:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int32_$",
																			"typeString": "type(int32)"
																		},
																		"typeName": {
																			"id": 1670,
																			"name": "int32",
																			"nodeType": "ElementaryTypeName",
																			"src": "1564:5:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1564:17:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int32",
																		"typeString": "int32"
																	}
																},
																"src": "1541:40:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																}
															],
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1535:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 1667,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "1535:5:15",
																"typeDescriptions": {}
															}
														},
														"id": 1675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1535:47:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "1514:68:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 1677,
												"nodeType": "ExpressionStatement",
												"src": "1514:68:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														},
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1678,
															"name": "tickCumulativesDelta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "1641:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1664:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1641:24:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																},
																"id": 1688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_int56",
																		"typeString": "int56"
																	},
																	"id": 1686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1681,
																		"name": "tickCumulativesDelta",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1647,
																		"src": "1670:20:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int56",
																			"typeString": "int56"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1684,
																				"name": "secondsAgo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1594,
																				"src": "1699:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			],
																			"id": 1683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1693:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int32_$",
																				"typeString": "type(int32)"
																			},
																			"typeName": {
																				"id": 1682,
																				"name": "int32",
																				"nodeType": "ElementaryTypeName",
																				"src": "1693:5:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1693:17:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int32",
																			"typeString": "int32"
																		}
																	},
																	"src": "1670:40:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int56",
																		"typeString": "int56"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1714:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1670:45:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1689,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1669:47:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1641:75:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1694,
												"nodeType": "IfStatement",
												"src": "1637:101:15",
												"trueBody": {
													"expression": {
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "1718:20:15",
														"subExpression": {
															"id": 1691,
															"name": "arithmeticMeanTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "1718:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"id": 1693,
													"nodeType": "ExpressionStatement",
													"src": "1718:20:15"
												}
											},
											{
												"assignments": [
													1696
												],
												"declarations": [
													{
														"constant": false,
														"id": 1696,
														"mutability": "mutable",
														"name": "secondsAgoX160",
														"nameLocation": "1874:14:15",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "1866:22:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														},
														"typeName": {
															"id": 1695,
															"name": "uint192",
															"nodeType": "ElementaryTypeName",
															"src": "1866:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint192",
																"typeString": "uint192"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1707,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1699,
																"name": "secondsAgo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "1899:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															],
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1891:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint192_$",
																"typeString": "type(uint192)"
															},
															"typeName": {
																"id": 1697,
																"name": "uint192",
																"nodeType": "ElementaryTypeName",
																"src": "1891:7:15",
																"typeDescriptions": {}
															}
														},
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1891:19:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1918:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1702,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "1918:7:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 1701,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1913:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1913:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1913:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "1891:39:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1866:64:15"
											},
											{
												"expression": {
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1708,
														"name": "harmonicMeanLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "1940:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint192",
																	"typeString": "uint192"
																},
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1711,
																	"name": "secondsAgoX160",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1696,
																	"src": "1972:14:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint192",
																		"typeString": "uint192"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint192",
																				"typeString": "uint192"
																			},
																			"id": 1717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1714,
																						"name": "secondsPerLiquidityCumulativesDelta",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1657,
																						"src": "1998:35:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					],
																					"id": 1713,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1990:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint192_$",
																						"typeString": "type(uint192)"
																					},
																					"typeName": {
																						"id": 1712,
																						"name": "uint192",
																						"nodeType": "ElementaryTypeName",
																						"src": "1990:7:15",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1715,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1990:44:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint192",
																					"typeString": "uint192"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1716,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2038:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "1990:50:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint192",
																				"typeString": "uint192"
																			}
																		}
																	],
																	"id": 1718,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1989:52:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint192",
																		"typeString": "uint192"
																	}
																},
																"src": "1972:69:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint192",
																	"typeString": "uint192"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint192",
																	"typeString": "uint192"
																}
															],
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1964:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint128_$",
																"typeString": "type(uint128)"
															},
															"typeName": {
																"id": 1709,
																"name": "uint128",
																"nodeType": "ElementaryTypeName",
																"src": "1964:7:15",
																"typeDescriptions": {}
															}
														},
														"id": 1720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1964:78:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "1940:102:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 1722,
												"nodeType": "ExpressionStatement",
												"src": "1940:102:15"
											}
										]
									},
									"documentation": {
										"id": 1590,
										"nodeType": "StructuredDocumentation",
										"src": "307:496:15",
										"text": "@notice Calculates time-weighted means of tick and liquidity for a given Uniswap V3 pool\n @param pool Address of the pool that we want to observe\n @param secondsAgo Number of seconds in the past from which to calculate the time-weighted means\n @return arithmeticMeanTick The arithmetic mean tick from (block.timestamp - secondsAgo) to block.timestamp\n @return harmonicMeanLiquidity The harmonic mean liquidity from (block.timestamp - secondsAgo) to block.timestamp"
									},
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "consult",
									"nameLocation": "817:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "833:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "825:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "secondsAgo",
												"nameLocation": "846:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "839:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1593,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "839:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "824:33:15"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "arithmeticMeanTick",
												"nameLocation": "911:18:15",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "905:24:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1596,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "905:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "harmonicMeanLiquidity",
												"nameLocation": "939:21:15",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "931:29:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1598,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "904:57:15"
									},
									"scope": 2185,
									"src": "808:1241:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1821,
										"nodeType": "Block",
										"src": "2730:778:15",
										"statements": [
											{
												"assignments": [
													1739
												],
												"declarations": [
													{
														"constant": false,
														"id": 1739,
														"mutability": "mutable",
														"name": "sqrtRatioX96",
														"nameLocation": "2748:12:15",
														"nodeType": "VariableDeclaration",
														"scope": 1821,
														"src": "2740:20:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 1738,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "2740:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1744,
												"initialValue": {
													"arguments": [
														{
															"id": 1742,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "2791:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"expression": {
															"id": 1740,
															"name": "TickMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2723,
															"src": "2763:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TickMath_$2723_$",
																"typeString": "type(library TickMath)"
															}
														},
														"id": 1741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getSqrtRatioAtTick",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2583,
														"src": "2763:27:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
															"typeString": "function (int24) pure returns (uint160)"
														}
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2763:33:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2740:56:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1745,
														"name": "sqrtRatioX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "2915:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2936:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 1747,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "2936:7:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 1746,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2931:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2931:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 1750,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2931:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "2915:33:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1819,
													"nodeType": "Block",
													"src": "3221:281:15",
													"statements": [
														{
															"assignments": [
																1786
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1786,
																	"mutability": "mutable",
																	"name": "ratioX128",
																	"nameLocation": "3243:9:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 1819,
																	"src": "3235:17:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1785,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3235:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1795,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1789,
																		"name": "sqrtRatioX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1739,
																		"src": "3271:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"id": 1790,
																		"name": "sqrtRatioX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1739,
																		"src": "3285:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		},
																		"id": 1793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3299:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3634",
																			"id": 1792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3304:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "3299:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	],
																	"expression": {
																		"id": 1787,
																		"name": "FullMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1583,
																		"src": "3255:8:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_FullMath_$1583_$",
																			"typeString": "type(library FullMath)"
																		}
																	},
																	"id": 1788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mulDiv",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1539,
																	"src": "3255:15:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3255:52:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3235:72:15"
														},
														{
															"expression": {
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1796,
																	"name": "quoteAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1736,
																	"src": "3321:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1797,
																			"name": "baseToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1731,
																			"src": "3335:9:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1798,
																			"name": "quoteToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1733,
																			"src": "3347:10:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "3335:22:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				},
																				"id": 1812,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1810,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3459:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "313238",
																					"id": 1811,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3464:3:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_128_by_1",
																						"typeString": "int_const 128"
																					},
																					"value": "128"
																				},
																				"src": "3459:8:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				}
																			},
																			{
																				"id": 1813,
																				"name": "baseAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1729,
																				"src": "3469:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			{
																				"id": 1814,
																				"name": "ratioX128",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1786,
																				"src": "3481:9:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1808,
																				"name": "FullMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1583,
																				"src": "3443:8:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FullMath_$1583_$",
																					"typeString": "type(library FullMath)"
																				}
																			},
																			"id": 1809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mulDiv",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1539,
																			"src": "3443:15:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3443:48:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3335:156:15",
																	"trueExpression": {
																		"arguments": [
																			{
																				"id": 1802,
																				"name": "ratioX128",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1786,
																				"src": "3392:9:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1803,
																				"name": "baseAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1729,
																				"src": "3403:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				},
																				"id": 1806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1804,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3415:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "313238",
																					"id": 1805,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3420:3:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_128_by_1",
																						"typeString": "int_const 128"
																					},
																					"value": "128"
																				},
																				"src": "3415:8:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				},
																				{
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				}
																			],
																			"expression": {
																				"id": 1800,
																				"name": "FullMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1583,
																				"src": "3376:8:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FullMath_$1583_$",
																					"typeString": "type(library FullMath)"
																				}
																			},
																			"id": 1801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mulDiv",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1539,
																			"src": "3376:15:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3376:48:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3321:170:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1818,
															"nodeType": "ExpressionStatement",
															"src": "3321:170:15"
														}
													]
												},
												"id": 1820,
												"nodeType": "IfStatement",
												"src": "2911:591:15",
												"trueBody": {
													"id": 1784,
													"nodeType": "Block",
													"src": "2950:265:15",
													"statements": [
														{
															"assignments": [
																1753
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1753,
																	"mutability": "mutable",
																	"name": "ratioX192",
																	"nameLocation": "2972:9:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 1784,
																	"src": "2964:17:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1752,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2964:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1760,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1756,
																			"name": "sqrtRatioX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1739,
																			"src": "2992:12:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2984:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1754,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2984:7:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2984:21:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1758,
																	"name": "sqrtRatioX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1739,
																	"src": "3008:12:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "2984:36:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2964:56:15"
														},
														{
															"expression": {
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1761,
																	"name": "quoteAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1736,
																	"src": "3034:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1762,
																			"name": "baseToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1731,
																			"src": "3048:9:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1763,
																			"name": "quoteToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1733,
																			"src": "3060:10:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "3048:22:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				},
																				"id": 1777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1775,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3172:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "313932",
																					"id": 1776,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3177:3:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_192_by_1",
																						"typeString": "int_const 192"
																					},
																					"value": "192"
																				},
																				"src": "3172:8:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				}
																			},
																			{
																				"id": 1778,
																				"name": "baseAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1729,
																				"src": "3182:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			{
																				"id": 1779,
																				"name": "ratioX192",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1753,
																				"src": "3194:9:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1773,
																				"name": "FullMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1583,
																				"src": "3156:8:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FullMath_$1583_$",
																					"typeString": "type(library FullMath)"
																				}
																			},
																			"id": 1774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mulDiv",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1539,
																			"src": "3156:15:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3156:48:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3048:156:15",
																	"trueExpression": {
																		"arguments": [
																			{
																				"id": 1767,
																				"name": "ratioX192",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1753,
																				"src": "3105:9:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1768,
																				"name": "baseAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1729,
																				"src": "3116:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				},
																				"id": 1771,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1769,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3128:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "313932",
																					"id": 1770,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3133:3:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_192_by_1",
																						"typeString": "int_const 192"
																					},
																					"value": "192"
																				},
																				"src": "3128:8:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				},
																				{
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				}
																			],
																			"expression": {
																				"id": 1765,
																				"name": "FullMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1583,
																				"src": "3089:8:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FullMath_$1583_$",
																					"typeString": "type(library FullMath)"
																				}
																			},
																			"id": 1766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mulDiv",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1539,
																			"src": "3089:15:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3089:48:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3034:170:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1783,
															"nodeType": "ExpressionStatement",
															"src": "3034:170:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "2055:493:15",
										"text": "@notice Given a tick and a token amount, calculates the amount of token received in exchange\n @param tick Tick value used to calculate the quote\n @param baseAmount Amount of token to be converted\n @param baseToken Address of an ERC20 token contract used as the baseAmount denomination\n @param quoteToken Address of an ERC20 token contract used as the quoteAmount denomination\n @return quoteAmount Amount of quoteToken received for baseAmount of baseToken"
									},
									"id": 1822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getQuoteAtTick",
									"nameLocation": "2562:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "2592:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "2586:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1726,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2586:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "baseAmount",
												"nameLocation": "2614:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "2606:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1728,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2606:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "baseToken",
												"nameLocation": "2642:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "2634:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2634:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "quoteToken",
												"nameLocation": "2669:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "2661:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2576:109:15"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "quoteAmount",
												"nameLocation": "2717:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "2709:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2709:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2708:21:15"
									},
									"scope": 2185,
									"src": "2553:955:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1887,
										"nodeType": "Block",
										"src": "3880:684:15",
										"statements": [
											{
												"assignments": [
													null,
													null,
													1831,
													1833,
													null,
													null,
													null
												],
												"declarations": [
													null,
													null,
													{
														"constant": false,
														"id": 1831,
														"mutability": "mutable",
														"name": "observationIndex",
														"nameLocation": "3902:16:15",
														"nodeType": "VariableDeclaration",
														"scope": 1887,
														"src": "3895:23:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 1830,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "3895:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1833,
														"mutability": "mutable",
														"name": "observationCardinality",
														"nameLocation": "3927:22:15",
														"nodeType": "VariableDeclaration",
														"scope": 1887,
														"src": "3920:29:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 1832,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "3920:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1839,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1835,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1825,
																	"src": "3974:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1834,
																"name": "IUniswapV3Pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "3959:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$21_$",
																	"typeString": "type(contract IUniswapV3Pool)"
																}
															},
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3959:20:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$21",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "slot0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 354,
														"src": "3959:26:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
															"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
														}
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3959:28:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
														"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3890:97:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1841,
																"name": "observationCardinality",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1833,
																"src": "4005:22:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4030:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4005:26:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e49",
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4033:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e817963341ac54b6c6630a42fcd594b50ae6e47bc5952aa5478cb70078a54ca0",
																"typeString": "literal_string \"NI\""
															},
															"value": "NI"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e817963341ac54b6c6630a42fcd594b50ae6e47bc5952aa5478cb70078a54ca0",
																"typeString": "literal_string \"NI\""
															}
														],
														"id": 1840,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3997:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3997:41:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1846,
												"nodeType": "ExpressionStatement",
												"src": "3997:41:15"
											},
											{
												"assignments": [
													1848,
													null,
													null,
													1850
												],
												"declarations": [
													{
														"constant": false,
														"id": 1848,
														"mutability": "mutable",
														"name": "observationTimestamp",
														"nameLocation": "4057:20:15",
														"nodeType": "VariableDeclaration",
														"scope": 1887,
														"src": "4050:27:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1847,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "4050:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													{
														"constant": false,
														"id": 1850,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4088:11:15",
														"nodeType": "VariableDeclaration",
														"scope": 1887,
														"src": "4083:16:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1849,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4083:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1862,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		},
																		"id": 1857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1855,
																			"name": "observationIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1831,
																			"src": "4150:16:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4169:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4150:20:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	}
																],
																"id": 1858,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4149:22:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1859,
																"name": "observationCardinality",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1833,
																"src": "4174:22:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "4149:47:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1852,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1825,
																	"src": "4130:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1851,
																"name": "IUniswapV3Pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "4115:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$21_$",
																	"typeString": "type(contract IUniswapV3Pool)"
																}
															},
															"id": 1853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4115:20:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$21",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1854,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "observations",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 440,
														"src": "4115:33:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint32_$_t_int56_$_t_uint160_$_t_bool_$",
															"typeString": "function (uint256) view external returns (uint32,int56,uint160,bool)"
														}
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4115:82:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint32_$_t_int56_$_t_uint160_$_t_bool_$",
														"typeString": "tuple(uint32,int56,uint160,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4049:148:15"
											},
											{
												"condition": {
													"id": 1864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4382:12:15",
													"subExpression": {
														"id": 1863,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1850,
														"src": "4383:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1876,
												"nodeType": "IfStatement",
												"src": "4378:110:15",
												"trueBody": {
													"id": 1875,
													"nodeType": "Block",
													"src": "4396:92:15",
													"statements": [
														{
															"expression": {
																"id": 1873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 1865,
																			"name": "observationTimestamp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1848,
																			"src": "4411:20:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		null,
																		null,
																		null
																	],
																	"id": 1866,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "4410:28:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint32_$__$__$__$",
																		"typeString": "tuple(uint32,,,)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4475:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1868,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1825,
																					"src": "4456:4:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1867,
																				"name": "IUniswapV3Pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 21,
																				"src": "4441:14:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$21_$",
																					"typeString": "type(contract IUniswapV3Pool)"
																				}
																			},
																			"id": 1869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4441:20:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IUniswapV3Pool_$21",
																				"typeString": "contract IUniswapV3Pool"
																			}
																		},
																		"id": 1870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "observations",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 440,
																		"src": "4441:33:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint32_$_t_int56_$_t_uint160_$_t_bool_$",
																			"typeString": "function (uint256) view external returns (uint32,int56,uint160,bool)"
																		}
																	},
																	"id": 1872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4441:36:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint32_$_t_int56_$_t_uint160_$_t_bool_$",
																		"typeString": "tuple(uint32,int56,uint160,bool)"
																	}
																},
																"src": "4410:67:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1874,
															"nodeType": "ExpressionStatement",
															"src": "4410:67:15"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1877,
														"name": "secondsAgo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1828,
														"src": "4498:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1880,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4518:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4518:15:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4511:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint32_$",
																	"typeString": "type(uint32)"
																},
																"typeName": {
																	"id": 1878,
																	"name": "uint32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4511:6:15",
																	"typeDescriptions": {}
																}
															},
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4511:23:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1883,
															"name": "observationTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "4537:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "4511:46:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "4498:59:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1886,
												"nodeType": "ExpressionStatement",
												"src": "4498:59:15"
											}
										]
									},
									"documentation": {
										"id": 1823,
										"nodeType": "StructuredDocumentation",
										"src": "3514:265:15",
										"text": "@notice Given a pool, it returns the number of seconds ago of the oldest stored observation\n @param pool Address of Uniswap V3 pool that we want to observe\n @return secondsAgo The number of seconds ago of the oldest observation stored for the pool"
									},
									"id": 1888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOldestObservationSecondsAgo",
									"nameLocation": "3793:30:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3832:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "3824:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3824:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3823:14:15"
									},
									"returnParameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "secondsAgo",
												"nameLocation": "3868:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "3861:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1827,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3861:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3860:19:15"
									},
									"scope": 2185,
									"src": "3784:780:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2033,
										"nodeType": "Block",
										"src": "4885:1683:15",
										"statements": [
											{
												"assignments": [
													null,
													1899,
													1901,
													1903,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1899,
														"mutability": "mutable",
														"name": "tick",
														"nameLocation": "4904:4:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "4898:10:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 1898,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "4898:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1901,
														"mutability": "mutable",
														"name": "observationIndex",
														"nameLocation": "4917:16:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "4910:23:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 1900,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "4910:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1903,
														"mutability": "mutable",
														"name": "observationCardinality",
														"nameLocation": "4942:22:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "4935:29:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 1902,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "4935:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1909,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1905,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1891,
																	"src": "4989:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1904,
																"name": "IUniswapV3Pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "4974:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$21_$",
																	"typeString": "type(contract IUniswapV3Pool)"
																}
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4974:20:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$21",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "slot0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 354,
														"src": "4974:26:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
															"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
														}
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4974:28:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
														"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4895:107:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 1913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1911,
																"name": "observationCardinality",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1903,
																"src": "5104:22:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "31",
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5129:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "5104:26:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e454f",
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5132:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6dc5790d7c4bfaaa2e4f8e2cd517bacd4a3831f85c0964e56f2743cbb847bc46",
																"typeString": "literal_string \"NEO\""
															},
															"value": "NEO"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6dc5790d7c4bfaaa2e4f8e2cd517bacd4a3831f85c0964e56f2743cbb847bc46",
																"typeString": "literal_string \"NEO\""
															}
														],
														"id": 1910,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5096:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5096:42:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1916,
												"nodeType": "ExpressionStatement",
												"src": "5096:42:15"
											},
											{
												"assignments": [
													1918,
													1920,
													1922,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1918,
														"mutability": "mutable",
														"name": "observationTimestamp",
														"nameLocation": "5463:20:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "5456:27:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1917,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "5456:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1920,
														"mutability": "mutable",
														"name": "tickCumulative",
														"nameLocation": "5491:14:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "5485:20:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														},
														"typeName": {
															"id": 1919,
															"name": "int56",
															"nodeType": "ElementaryTypeName",
															"src": "5485:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1922,
														"mutability": "mutable",
														"name": "secondsPerLiquidityCumulativeX128",
														"nameLocation": "5515:33:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "5507:41:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 1921,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "5507:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1929,
												"initialValue": {
													"arguments": [
														{
															"id": 1927,
															"name": "observationIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1901,
															"src": "5600:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1924,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1891,
																	"src": "5581:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1923,
																"name": "IUniswapV3Pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "5566:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$21_$",
																	"typeString": "type(contract IUniswapV3Pool)"
																}
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5566:20:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$21",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "observations",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 440,
														"src": "5566:33:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint32_$_t_int56_$_t_uint160_$_t_bool_$",
															"typeString": "function (uint256) view external returns (uint32,int56,uint160,bool)"
														}
													},
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:51:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint32_$_t_int56_$_t_uint160_$_t_bool_$",
														"typeString": "tuple(uint32,int56,uint160,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5455:162:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1930,
														"name": "observationTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1918,
														"src": "5631:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1933,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5662:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5662:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5655:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint32_$",
																"typeString": "type(uint32)"
															},
															"typeName": {
																"id": 1931,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "5655:6:15",
																"typeDescriptions": {}
															}
														},
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5655:23:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "5631:47:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1946,
												"nodeType": "IfStatement",
												"src": "5627:125:15",
												"trueBody": {
													"id": 1945,
													"nodeType": "Block",
													"src": "5680:72:15",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"id": 1937,
																		"name": "tick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1899,
																		"src": "5702:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1939,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1891,
																						"src": "5723:4:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1938,
																					"name": "IUniswapV3Pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 21,
																					"src": "5708:14:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$21_$",
																						"typeString": "type(contract IUniswapV3Pool)"
																					}
																				},
																				"id": 1940,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5708:20:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV3Pool_$21",
																					"typeString": "contract IUniswapV3Pool"
																				}
																			},
																			"id": 1941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "liquidity",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 380,
																			"src": "5708:30:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$",
																				"typeString": "function () view external returns (uint128)"
																			}
																		},
																		"id": 1942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5708:32:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	}
																],
																"id": 1943,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5701:40:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int24_$_t_uint128_$",
																	"typeString": "tuple(int24,uint128)"
																}
															},
															"functionReturnParameters": 1897,
															"id": 1944,
															"nodeType": "Return",
															"src": "5694:47:15"
														}
													]
												}
											},
											{
												"assignments": [
													1948
												],
												"declarations": [
													{
														"constant": false,
														"id": 1948,
														"mutability": "mutable",
														"name": "prevIndex",
														"nameLocation": "5770:9:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "5762:17:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1947,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5762:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1960,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1951,
																				"name": "observationIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1901,
																				"src": "5791:16:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			],
																			"id": 1950,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5783:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1949,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "5783:7:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5783:25:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1953,
																		"name": "observationCardinality",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1903,
																		"src": "5811:22:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "5783:50:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5836:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5783:54:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1957,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5782:56:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1958,
														"name": "observationCardinality",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1903,
														"src": "5841:22:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "5782:81:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5762:101:15"
											},
											{
												"assignments": [
													1962,
													1964,
													1966,
													1968
												],
												"declarations": [
													{
														"constant": false,
														"id": 1962,
														"mutability": "mutable",
														"name": "prevObservationTimestamp",
														"nameLocation": "5894:24:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "5887:31:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1961,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "5887:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1964,
														"mutability": "mutable",
														"name": "prevTickCumulative",
														"nameLocation": "5938:18:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "5932:24:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														},
														"typeName": {
															"id": 1963,
															"name": "int56",
															"nodeType": "ElementaryTypeName",
															"src": "5932:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1966,
														"mutability": "mutable",
														"name": "prevSecondsPerLiquidityCumulativeX128",
														"nameLocation": "5978:37:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "5970:45:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 1965,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "5970:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1968,
														"mutability": "mutable",
														"name": "prevInitialized",
														"nameLocation": "6034:15:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "6029:20:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1967,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6029:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1975,
												"initialValue": {
													"arguments": [
														{
															"id": 1973,
															"name": "prevIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1948,
															"src": "6096:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1970,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1891,
																	"src": "6077:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1969,
																"name": "IUniswapV3Pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "6062:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$21_$",
																	"typeString": "type(contract IUniswapV3Pool)"
																}
															},
															"id": 1971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6062:20:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$21",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "observations",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 440,
														"src": "6062:33:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint32_$_t_int56_$_t_uint160_$_t_bool_$",
															"typeString": "function (uint256) view external returns (uint32,int56,uint160,bool)"
														}
													},
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6062:44:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint32_$_t_int56_$_t_uint160_$_t_bool_$",
														"typeString": "tuple(uint32,int56,uint160,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5873:233:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1977,
															"name": "prevInitialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "6125:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f4e49",
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6142:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4375a34c158c497e1dec923d39179cd2bff1d358f7876b16ed4f850d3b707895",
																"typeString": "literal_string \"ONI\""
															},
															"value": "ONI"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4375a34c158c497e1dec923d39179cd2bff1d358f7876b16ed4f850d3b707895",
																"typeString": "literal_string \"ONI\""
															}
														],
														"id": 1976,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6117:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6117:31:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1980,
												"nodeType": "ExpressionStatement",
												"src": "6117:31:15"
											},
											{
												"assignments": [
													1982
												],
												"declarations": [
													{
														"constant": false,
														"id": 1982,
														"mutability": "mutable",
														"name": "delta",
														"nameLocation": "6166:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "6159:12:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1981,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "6159:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1986,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1983,
														"name": "observationTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1918,
														"src": "6174:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1984,
														"name": "prevObservationTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1962,
														"src": "6197:24:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "6174:47:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6159:62:15"
											},
											{
												"expression": {
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1987,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1899,
														"src": "6231:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																},
																"id": 1998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int56",
																				"typeString": "int56"
																			},
																			"id": 1992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1990,
																				"name": "tickCumulative",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1920,
																				"src": "6245:14:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int56",
																					"typeString": "int56"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1991,
																				"name": "prevTickCumulative",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1964,
																				"src": "6262:18:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int56",
																					"typeString": "int56"
																				}
																			},
																			"src": "6245:35:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int56",
																				"typeString": "int56"
																			}
																		}
																	],
																	"id": 1993,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6244:37:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int56",
																		"typeString": "int56"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1996,
																			"name": "delta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1982,
																			"src": "6290:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		],
																		"id": 1995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6284:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int32_$",
																			"typeString": "type(int32)"
																		},
																		"typeName": {
																			"id": 1994,
																			"name": "int32",
																			"nodeType": "ElementaryTypeName",
																			"src": "6284:5:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6284:12:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int32",
																		"typeString": "int32"
																	}
																},
																"src": "6244:52:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																}
															],
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6238:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 1988,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "6238:5:15",
																"typeDescriptions": {}
															}
														},
														"id": 1999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6238:59:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "6231:66:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 2001,
												"nodeType": "ExpressionStatement",
												"src": "6231:66:15"
											},
											{
												"assignments": [
													2003
												],
												"declarations": [
													{
														"constant": false,
														"id": 2003,
														"mutability": "mutable",
														"name": "liquidity",
														"nameLocation": "6315:9:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "6307:17:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 2002,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "6307:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2028,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint192",
																"typeString": "uint192"
															},
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint192",
																			"typeString": "uint192"
																		},
																		"id": 2015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2008,
																					"name": "delta",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1982,
																					"src": "6373:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				],
																				"id": 2007,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6365:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint192_$",
																					"typeString": "type(uint192)"
																				},
																				"typeName": {
																					"id": 2006,
																					"name": "uint192",
																					"nodeType": "ElementaryTypeName",
																					"src": "6365:7:15",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6365:14:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint192",
																				"typeString": "uint192"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 2012,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6387:7:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint160_$",
																							"typeString": "type(uint160)"
																						},
																						"typeName": {
																							"id": 2011,
																							"name": "uint160",
																							"nodeType": "ElementaryTypeName",
																							"src": "6387:7:15",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_type$_t_uint160_$",
																							"typeString": "type(uint160)"
																						}
																					],
																					"id": 2010,
																					"name": "type",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967269,
																					"src": "6382:4:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 2013,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6382:13:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_meta_type_t_uint160",
																					"typeString": "type(uint160)"
																				}
																			},
																			"id": 2014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "max",
																			"nodeType": "MemberAccess",
																			"src": "6382:17:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "6365:34:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint192",
																			"typeString": "uint192"
																		}
																	}
																],
																"id": 2016,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6364:36:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint192",
																	"typeString": "uint192"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint192",
																			"typeString": "uint192"
																		},
																		"id": 2024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 2021,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2019,
																						"name": "secondsPerLiquidityCumulativeX128",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1922,
																						"src": "6432:33:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 2020,
																						"name": "prevSecondsPerLiquidityCumulativeX128",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1966,
																						"src": "6468:37:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"src": "6432:73:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				],
																				"id": 2018,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6424:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint192_$",
																					"typeString": "type(uint192)"
																				},
																				"typeName": {
																					"id": 2017,
																					"name": "uint192",
																					"nodeType": "ElementaryTypeName",
																					"src": "6424:7:15",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6424:82:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint192",
																				"typeString": "uint192"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3332",
																			"id": 2023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6510:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "6424:88:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint192",
																			"typeString": "uint192"
																		}
																	}
																],
																"id": 2025,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6423:90:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint192",
																	"typeString": "uint192"
																}
															},
															"src": "6364:149:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint192",
																"typeString": "uint192"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint192",
																"typeString": "uint192"
															}
														],
														"id": 2005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6339:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 2004,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "6339:7:15",
															"typeDescriptions": {}
														}
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6339:188:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6307:220:15"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2029,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1899,
															"src": "6545:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 2030,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2003,
															"src": "6551:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"id": 2031,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6544:17:15",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int24_$_t_uint128_$",
														"typeString": "tuple(int24,uint128)"
													}
												},
												"functionReturnParameters": 1897,
												"id": 2032,
												"nodeType": "Return",
												"src": "6537:24:15"
											}
										]
									},
									"documentation": {
										"id": 1889,
										"nodeType": "StructuredDocumentation",
										"src": "4570:215:15",
										"text": "@notice Given a pool, it returns the tick value as of the start of the current block\n @param pool Address of Uniswap V3 pool\n @return The tick that the pool was in at the start of the current block"
									},
									"id": 2034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBlockStartingTickAndLiquidity",
									"nameLocation": "4799:32:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "4840:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "4832:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4832:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4831:14:15"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "4869:5:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1893,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4869:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "4876:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1895,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4868:16:15"
									},
									"scope": 2185,
									"src": "4790:1778:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "OracleLibrary.WeightedTickData",
									"id": 2039,
									"members": [
										{
											"constant": false,
											"id": 2036,
											"mutability": "mutable",
											"name": "tick",
											"nameLocation": "6690:4:15",
											"nodeType": "VariableDeclaration",
											"scope": 2039,
											"src": "6684:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 2035,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "6684:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2038,
											"mutability": "mutable",
											"name": "weight",
											"nameLocation": "6712:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2039,
											"src": "6704:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2037,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "6704:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "WeightedTickData",
									"nameLocation": "6657:16:15",
									"nodeType": "StructDefinition",
									"scope": 2185,
									"src": "6650:75:15",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2121,
										"nodeType": "Block",
										"src": "7482:733:15",
										"statements": [
											{
												"assignments": [
													2050
												],
												"declarations": [
													{
														"constant": false,
														"id": 2050,
														"mutability": "mutable",
														"name": "numerator",
														"nameLocation": "7575:9:15",
														"nodeType": "VariableDeclaration",
														"scope": 2121,
														"src": "7568:16:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2049,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7568:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2051,
												"nodeType": "VariableDeclarationStatement",
												"src": "7568:16:15"
											},
											{
												"assignments": [
													2053
												],
												"declarations": [
													{
														"constant": false,
														"id": 2053,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "7649:11:15",
														"nodeType": "VariableDeclaration",
														"scope": 2121,
														"src": "7641:19:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2052,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7641:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2054,
												"nodeType": "VariableDeclarationStatement",
												"src": "7641:19:15"
											},
											{
												"body": {
													"id": 2090,
													"nodeType": "Block",
													"src": "7825:162:15",
													"statements": [
														{
															"expression": {
																"id": 2081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2065,
																	"name": "numerator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2050,
																	"src": "7839:9:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2066,
																				"name": "weightedTickData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2044,
																				"src": "7852:16:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_WeightedTickData_$2039_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct OracleLibrary.WeightedTickData memory[] memory"
																				}
																			},
																			"id": 2068,
																			"indexExpression": {
																				"id": 2067,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2056,
																				"src": "7869:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7852:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_WeightedTickData_$2039_memory_ptr",
																				"typeString": "struct OracleLibrary.WeightedTickData memory"
																			}
																		},
																		"id": 2069,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tick",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2036,
																		"src": "7852:24:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 2074,
																								"name": "weightedTickData",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2044,
																								"src": "7893:16:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_WeightedTickData_$2039_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct OracleLibrary.WeightedTickData memory[] memory"
																								}
																							},
																							"id": 2076,
																							"indexExpression": {
																								"id": 2075,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2056,
																								"src": "7910:1:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "7893:19:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_WeightedTickData_$2039_memory_ptr",
																								"typeString": "struct OracleLibrary.WeightedTickData memory"
																							}
																						},
																						"id": 2077,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "weight",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2038,
																						"src": "7893:26:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					],
																					"id": 2073,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7886:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_int128_$",
																						"typeString": "type(int128)"
																					},
																					"typeName": {
																						"id": 2072,
																						"name": "int128",
																						"nodeType": "ElementaryTypeName",
																						"src": "7886:6:15",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2078,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7886:34:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			],
																			"id": 2071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7879:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 2070,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "7879:6:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7879:42:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "7852:69:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "7839:82:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 2082,
															"nodeType": "ExpressionStatement",
															"src": "7839:82:15"
														},
														{
															"expression": {
																"id": 2088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2083,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2053,
																	"src": "7935:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 2084,
																			"name": "weightedTickData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2044,
																			"src": "7950:16:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_WeightedTickData_$2039_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct OracleLibrary.WeightedTickData memory[] memory"
																			}
																		},
																		"id": 2086,
																		"indexExpression": {
																			"id": 2085,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2056,
																			"src": "7967:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7950:19:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WeightedTickData_$2039_memory_ptr",
																			"typeString": "struct OracleLibrary.WeightedTickData memory"
																		}
																	},
																	"id": 2087,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "weight",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2038,
																	"src": "7950:26:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "7935:41:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2089,
															"nodeType": "ExpressionStatement",
															"src": "7935:41:15"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2058,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2056,
														"src": "7791:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2059,
															"name": "weightedTickData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2044,
															"src": "7795:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_WeightedTickData_$2039_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct OracleLibrary.WeightedTickData memory[] memory"
															}
														},
														"id": 2060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7795:23:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7791:27:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2091,
												"initializationExpression": {
													"assignments": [
														2056
													],
													"declarations": [
														{
															"constant": false,
															"id": 2056,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7788:1:15",
															"nodeType": "VariableDeclaration",
															"scope": 2091,
															"src": "7780:9:15",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2055,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7780:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2057,
													"nodeType": "VariableDeclarationStatement",
													"src": "7780:9:15"
												},
												"loopExpression": {
													"expression": {
														"id": 2063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7820:3:15",
														"subExpression": {
															"id": 2062,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2056,
															"src": "7820:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2064,
													"nodeType": "ExpressionStatement",
													"src": "7820:3:15"
												},
												"nodeType": "ForStatement",
												"src": "7775:212:15"
											},
											{
												"expression": {
													"id": 2102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2092,
														"name": "weightedArithmeticMeanTick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2047,
														"src": "7997:26:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2095,
																	"name": "numerator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2050,
																	"src": "8032:9:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 2098,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2053,
																			"src": "8051:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8044:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2096,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8044:6:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8044:19:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "8032:31:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8026:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 2093,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "8026:5:15",
																"typeDescriptions": {}
															}
														},
														"id": 2101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8026:38:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "7997:67:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 2103,
												"nodeType": "ExpressionStatement",
												"src": "7997:67:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2104,
															"name": "numerator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2050,
															"src": "8123:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8135:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8123:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2107,
																		"name": "numerator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2050,
																		"src": "8141:9:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 2110,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2053,
																				"src": "8160:11:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8153:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 2108,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "8153:6:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8153:19:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "8141:31:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8176:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8141:36:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2115,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8140:38:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8123:55:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2120,
												"nodeType": "IfStatement",
												"src": "8119:89:15",
												"trueBody": {
													"expression": {
														"id": 2118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "8180:28:15",
														"subExpression": {
															"id": 2117,
															"name": "weightedArithmeticMeanTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2047,
															"src": "8180:26:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"id": 2119,
													"nodeType": "ExpressionStatement",
													"src": "8180:28:15"
												}
											}
										]
									},
									"documentation": {
										"id": 2040,
										"nodeType": "StructuredDocumentation",
										"src": "6731:578:15",
										"text": "@notice Given an array of ticks and weights, calculates the weighted arithmetic mean tick\n @param weightedTickData An array of ticks and weights\n @return weightedArithmeticMeanTick The weighted arithmetic mean tick\n @dev Each entry of `weightedTickData` should represents ticks from pools with the same underlying pool tokens. If they do not,\n extreme care must be taken to ensure that ticks are comparable (including decimal differences).\n @dev Note that the weighted arithmetic mean tick corresponds to the weighted geometric mean price."
									},
									"id": 2122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getWeightedArithmeticMeanTick",
									"nameLocation": "7323:29:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "weightedTickData",
												"nameLocation": "7379:16:15",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "7353:42:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_WeightedTickData_$2039_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct OracleLibrary.WeightedTickData[]"
												},
												"typeName": {
													"baseType": {
														"id": 2042,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2041,
															"name": "WeightedTickData",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2039,
															"src": "7353:16:15"
														},
														"referencedDeclaration": 2039,
														"src": "7353:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WeightedTickData_$2039_storage_ptr",
															"typeString": "struct OracleLibrary.WeightedTickData"
														}
													},
													"id": 2043,
													"nodeType": "ArrayTypeName",
													"src": "7353:18:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_WeightedTickData_$2039_storage_$dyn_storage_ptr",
														"typeString": "struct OracleLibrary.WeightedTickData[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7352:44:15"
									},
									"returnParameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "weightedArithmeticMeanTick",
												"nameLocation": "7450:26:15",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "7444:32:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2046,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "7444:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7443:34:15"
									},
									"scope": 2185,
									"src": "7314:901:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2183,
										"nodeType": "Block",
										"src": "8880:409:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2135,
																		"name": "tokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2126,
																		"src": "8898:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 2136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8898:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8914:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8898:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2139,
																	"name": "ticks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2129,
																	"src": "8919:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_int24_$dyn_memory_ptr",
																		"typeString": "int24[] memory"
																	}
																},
																"id": 2140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8919:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8898:33:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "444c",
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8933:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f6c9155cb7d5666d109a64d0e580ecac0cec91dae3b0325b400a4ad4d41fbcb9",
																"typeString": "literal_string \"DL\""
															},
															"value": "DL"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f6c9155cb7d5666d109a64d0e580ecac0cec91dae3b0325b400a4ad4d41fbcb9",
																"typeString": "literal_string \"DL\""
															}
														],
														"id": 2134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8890:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8890:48:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2144,
												"nodeType": "ExpressionStatement",
												"src": "8890:48:15"
											},
											{
												"body": {
													"id": 2181,
													"nodeType": "Block",
													"src": "8992:291:15",
													"statements": [
														{
															"expression": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2156,
																			"name": "tokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2126,
																			"src": "9183:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2160,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2157,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2146,
																				"src": "9190:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2158,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9194:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "9190:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9183:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"baseExpression": {
																			"id": 2161,
																			"name": "tokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2126,
																			"src": "9199:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2163,
																		"indexExpression": {
																			"id": 2162,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2146,
																			"src": "9206:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9199:9:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "9183:25:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"id": 2178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2172,
																		"name": "syntheticTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2132,
																		"src": "9243:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "-=",
																	"rightHandSide": {
																		"baseExpression": {
																			"id": 2173,
																			"name": "ticks",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2129,
																			"src": "9260:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_int24_$dyn_memory_ptr",
																				"typeString": "int24[] memory"
																			}
																		},
																		"id": 2177,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2174,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2146,
																				"src": "9266:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2175,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9270:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "9266:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9260:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"src": "9243:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9183:89:15",
																"trueExpression": {
																	"id": 2171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2165,
																		"name": "syntheticTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2132,
																		"src": "9211:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"baseExpression": {
																			"id": 2166,
																			"name": "ticks",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2129,
																			"src": "9228:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_int24_$dyn_memory_ptr",
																				"typeString": "int24[] memory"
																			}
																		},
																		"id": 2170,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2167,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2146,
																				"src": "9234:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2168,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9238:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "9234:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9228:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"src": "9211:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 2180,
															"nodeType": "ExpressionStatement",
															"src": "9183:89:15"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2149,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2146,
														"src": "8968:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 2150,
															"name": "ticks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2129,
															"src": "8973:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int24_$dyn_memory_ptr",
																"typeString": "int24[] memory"
															}
														},
														"id": 2151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8973:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8968:17:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2182,
												"initializationExpression": {
													"assignments": [
														2146
													],
													"declarations": [
														{
															"constant": false,
															"id": 2146,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8961:1:15",
															"nodeType": "VariableDeclaration",
															"scope": 2182,
															"src": "8953:9:15",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2145,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8953:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2148,
													"initialValue": {
														"hexValue": "31",
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8965:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8953:13:15"
												},
												"loopExpression": {
													"expression": {
														"id": 2154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8987:3:15",
														"subExpression": {
															"id": 2153,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2146,
															"src": "8987:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2155,
													"nodeType": "ExpressionStatement",
													"src": "8987:3:15"
												},
												"nodeType": "ForStatement",
												"src": "8948:335:15"
											}
										]
									},
									"documentation": {
										"id": 2123,
										"nodeType": "StructuredDocumentation",
										"src": "8221:509:15",
										"text": "@notice Returns the \"synthetic\" tick which represents the price of the first entry in `tokens` in terms of the last\n @dev Useful for calculating relative prices along routes.\n @dev There must be one tick for each pairwise set of tokens.\n @param tokens The token contract addresses\n @param ticks The ticks, representing the price of each token pair in `tokens`\n @return syntheticTick The synthetic tick, representing the relative price of the outermost tokens in `tokens`"
									},
									"id": 2184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChainedPrice",
									"nameLocation": "8744:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "8777:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "8760:23:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2124,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8760:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2125,
													"nodeType": "ArrayTypeName",
													"src": "8760:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "ticks",
												"nameLocation": "8800:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "8785:20:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int24_$dyn_memory_ptr",
													"typeString": "int24[]"
												},
												"typeName": {
													"baseType": {
														"id": 2127,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "8785:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"id": 2128,
													"nodeType": "ArrayTypeName",
													"src": "8785:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int24_$dyn_storage_ptr",
														"typeString": "int24[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8759:47:15"
									},
									"returnParameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "syntheticTick",
												"nameLocation": "8861:13:15",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "8854:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2131,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8854:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8853:22:15"
									},
									"scope": 2185,
									"src": "8735:554:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2186,
							"src": "279:9012:15",
							"usedErrors": []
						}
					],
					"src": "45:9247:15"
				},
				"id": 15
			},
			"TFGv3/Contracts/libraries/TickMath.sol": {
				"ast": {
					"absolutePath": "TFGv3/Contracts/libraries/TickMath.sol",
					"exportedSymbols": {
						"TickMath": [
							2723
						]
					},
					"id": 2724,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2187,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TickMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2188,
								"nodeType": "StructuredDocumentation",
								"src": "71:235:16",
								"text": "@title Math library for computing sqrt prices from ticks and vice versa\n @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n prices between 2**-128 and 2**128"
							},
							"fullyImplemented": true,
							"id": 2723,
							"linearizedBaseContracts": [
								2723
							],
							"name": "TickMath",
							"nameLocation": "314:8:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 2189,
										"nodeType": "StructuredDocumentation",
										"src": "329:108:16",
										"text": "@dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
									},
									"id": 2193,
									"mutability": "constant",
									"name": "MIN_TICK",
									"nameLocation": "466:8:16",
									"nodeType": "VariableDeclaration",
									"scope": 2723,
									"src": "442:42:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 2190,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "442:5:16",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 2192,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "477:7:16",
										"subExpression": {
											"hexValue": "383837323732",
											"id": 2191,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "478:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_887272_by_1",
												"typeString": "int_const 887272"
											},
											"value": "887272"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_887272_by_1",
											"typeString": "int_const -887272"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2194,
										"nodeType": "StructuredDocumentation",
										"src": "490:107:16",
										"text": "@dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
									},
									"id": 2198,
									"mutability": "constant",
									"name": "MAX_TICK",
									"nameLocation": "626:8:16",
									"nodeType": "VariableDeclaration",
									"scope": 2723,
									"src": "602:44:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 2195,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "602:5:16",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 2197,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "637:9:16",
										"subExpression": {
											"id": 2196,
											"name": "MIN_TICK",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2193,
											"src": "638:8:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2199,
										"nodeType": "StructuredDocumentation",
										"src": "653:116:16",
										"text": "@dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
									},
									"id": 2202,
									"mutability": "constant",
									"name": "MIN_SQRT_RATIO",
									"nameLocation": "800:14:16",
									"nodeType": "VariableDeclaration",
									"scope": 2723,
									"src": "774:53:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 2200,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "774:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "34323935313238373339",
										"id": 2201,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "817:10:16",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4295128739_by_1",
											"typeString": "int_const 4295128739"
										},
										"value": "4295128739"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2203,
										"nodeType": "StructuredDocumentation",
										"src": "833:116:16",
										"text": "@dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
									},
									"id": 2206,
									"mutability": "constant",
									"name": "MAX_SQRT_RATIO",
									"nameLocation": "980:14:16",
									"nodeType": "VariableDeclaration",
									"scope": 2723,
									"src": "954:92:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 2204,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "954:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "31343631343436373033343835323130313033323837323733303532323033393838383232333738373233393730333432",
										"id": 2205,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "997:49:16",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461446703485210103287273052203988822378723970342_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...0342"
										},
										"value": "1461446703485210103287273052203988822378723970342"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2582,
										"nodeType": "Block",
										"src": "1440:2503:16",
										"statements": [
											{
												"assignments": [
													2215
												],
												"declarations": [
													{
														"constant": false,
														"id": 2215,
														"mutability": "mutable",
														"name": "absTick",
														"nameLocation": "1458:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 2582,
														"src": "1450:15:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2214,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1450:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2235,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 2218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2216,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "1468:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 2217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1475:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1468:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2231,
																		"name": "tick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2209,
																		"src": "1519:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 2230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1512:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 2229,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1512:6:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 2232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1512:12:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1504:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2227,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1504:7:16",
																"typeDescriptions": {}
															}
														},
														"id": 2233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1504:21:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1468:57:16",
													"trueExpression": {
														"arguments": [
															{
																"id": 2225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "1487:13:16",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 2223,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "1495:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 2222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1488:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2221,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1488:6:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1488:12:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1479:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2219,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1479:7:16",
																"typeDescriptions": {}
															}
														},
														"id": 2226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1479:22:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1450:75:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2237,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2215,
																"src": "1543:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2242,
																				"name": "MAX_TICK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2198,
																				"src": "1569:8:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			],
																			"id": 2241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1562:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint24_$",
																				"typeString": "type(uint24)"
																			},
																			"typeName": {
																				"id": 2240,
																				"name": "uint24",
																				"nodeType": "ElementaryTypeName",
																				"src": "1562:6:16",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1562:16:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 2239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1554:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2238,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1554:7:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 2244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1554:25:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1543:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54",
															"id": 2246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1581:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															},
															"value": "T"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															}
														],
														"id": 2236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1535:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1535:50:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2248,
												"nodeType": "ExpressionStatement",
												"src": "1535:50:16"
											},
											{
												"assignments": [
													2250
												],
												"declarations": [
													{
														"constant": false,
														"id": 2250,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "1604:5:16",
														"nodeType": "VariableDeclaration",
														"scope": 2582,
														"src": "1596:13:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1596:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2259,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2251,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2215,
																"src": "1612:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"hexValue": "307831",
																"id": 2252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1622:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "0x1"
															},
															"src": "1612:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1629:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1612:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 2257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1670:35:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1612:93:16",
													"trueExpression": {
														"hexValue": "30786666666362393333626436666164333761613264313632643161353934303031",
														"id": 2256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1633:34:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340265354078544963557816517032075149313_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...9313"
														},
														"value": "0xfffcb933bd6fad37aa2d162d1a594001"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1596:109:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2260,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "1719:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832",
															"id": 2261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1729:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "0x2"
														},
														"src": "1719:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1736:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1719:18:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2274,
												"nodeType": "IfStatement",
												"src": "1715:83:16",
												"trueBody": {
													"expression": {
														"id": 2272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2265,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "1739:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2266,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "1748:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663937323732333733643431333235396134363939303538306532313361",
																			"id": 2267,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1756:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340248342086729790484326174814286782778_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2778"
																			},
																			"value": "0xfff97272373d413259a46990580e213a"
																		},
																		"src": "1748:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2269,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1747:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1795:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1747:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1739:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2273,
													"nodeType": "ExpressionStatement",
													"src": "1739:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2275,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "1812:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834",
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1822:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "0x4"
														},
														"src": "1812:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1829:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1812:18:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2289,
												"nodeType": "IfStatement",
												"src": "1808:83:16",
												"trueBody": {
													"expression": {
														"id": 2287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2280,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "1832:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2281,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "1841:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663265353066356636353639333265663132333537636633633766646363",
																			"id": 2282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1849:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340214320654664324051920982716015181260_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1260"
																			},
																			"value": "0xfff2e50f5f656932ef12357cf3c7fdcc"
																		},
																		"src": "1841:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2284,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1840:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1888:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1840:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1832:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2288,
													"nodeType": "ExpressionStatement",
													"src": "1832:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2290,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "1905:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838",
															"id": 2291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1915:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "0x8"
														},
														"src": "1905:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1922:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1905:18:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2304,
												"nodeType": "IfStatement",
												"src": "1901:83:16",
												"trueBody": {
													"expression": {
														"id": 2302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2295,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "1925:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2296,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "1934:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666653563616361376531306534653631633336323465616130393431636430",
																			"id": 2297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1942:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340146287995602323631171512101879684304_by_1",
																				"typeString": "int_const 3401...(31 digits omitted)...4304"
																			},
																			"value": "0xffe5caca7e10e4e61c3624eaa0941cd0"
																		},
																		"src": "1934:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2299,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1933:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1981:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1933:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1925:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2303,
													"nodeType": "ExpressionStatement",
													"src": "1925:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2305,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "1998:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130",
															"id": 2306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2008:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "0x10"
														},
														"src": "1998:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2308,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2016:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1998:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2319,
												"nodeType": "IfStatement",
												"src": "1994:84:16",
												"trueBody": {
													"expression": {
														"id": 2317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2310,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "2019:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2311,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "2028:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666636239383433643630663631353963396462353838333563393236363434",
																			"id": 2312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2036:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340010263488231146823593991679159461444_by_1",
																				"typeString": "int_const 3400...(31 digits omitted)...1444"
																			},
																			"value": "0xffcb9843d60f6159c9db58835c926644"
																		},
																		"src": "2028:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2314,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2027:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2075:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2027:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2019:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2318,
													"nodeType": "ExpressionStatement",
													"src": "2019:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2320,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "2092:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230",
															"id": 2321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2102:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "0x20"
														},
														"src": "2092:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2110:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2092:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2334,
												"nodeType": "IfStatement",
												"src": "2088:84:16",
												"trueBody": {
													"expression": {
														"id": 2332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2325,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "2113:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2326,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "2122:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666393733623431666139386330383134373265363839366466623235346330",
																			"id": 2327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2130:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339738377640345403697157401104375502016_by_1",
																				"typeString": "int_const 3397...(31 digits omitted)...2016"
																			},
																			"value": "0xff973b41fa98c081472e6896dfb254c0"
																		},
																		"src": "2122:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2329,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2121:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2169:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2121:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2113:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2333,
													"nodeType": "ExpressionStatement",
													"src": "2113:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2335,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "2186:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430",
															"id": 2336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2196:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "0x40"
														},
														"src": "2186:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2204:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2186:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2349,
												"nodeType": "IfStatement",
												"src": "2182:84:16",
												"trueBody": {
													"expression": {
														"id": 2347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2340,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "2207:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2341,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "2216:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666326561313634363663393661333834336563373862333236623532383631",
																			"id": 2342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2224:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339195258003219555707034227454543997025_by_1",
																				"typeString": "int_const 3391...(31 digits omitted)...7025"
																			},
																			"value": "0xff2ea16466c96a3843ec78b326b52861"
																		},
																		"src": "2216:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2344,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2215:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2263:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2215:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2207:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2348,
													"nodeType": "ExpressionStatement",
													"src": "2207:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2350,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "2280:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830",
															"id": 2351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2290:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "0x80"
														},
														"src": "2280:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2298:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2280:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2364,
												"nodeType": "IfStatement",
												"src": "2276:84:16",
												"trueBody": {
													"expression": {
														"id": 2362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2355,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "2301:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2356,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "2310:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786665356465653034366139396132613831316334363166313936396333303533",
																			"id": 2357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2318:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_338111622100601834656805679988414885971_by_1",
																				"typeString": "int_const 3381...(31 digits omitted)...5971"
																			},
																			"value": "0xfe5dee046a99a2a811c461f1969c3053"
																		},
																		"src": "2310:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2359,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2309:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2357:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2309:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2301:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2363,
													"nodeType": "ExpressionStatement",
													"src": "2301:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2365,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "2374:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078313030",
															"id": 2366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2384:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "0x100"
														},
														"src": "2374:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2368,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2393:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2374:20:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2379,
												"nodeType": "IfStatement",
												"src": "2370:85:16",
												"trueBody": {
													"expression": {
														"id": 2377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2370,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "2396:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2371,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "2405:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786663626538366337393030613838616564636666633833623437396161336134",
																			"id": 2372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2413:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_335954724994790223023589805789778977700_by_1",
																				"typeString": "int_const 3359...(31 digits omitted)...7700"
																			},
																			"value": "0xfcbe86c7900a88aedcffc83b479aa3a4"
																		},
																		"src": "2405:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2374,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2404:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2452:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2404:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2396:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2378,
													"nodeType": "ExpressionStatement",
													"src": "2396:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2380,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "2469:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078323030",
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2479:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_512_by_1",
																"typeString": "int_const 512"
															},
															"value": "0x200"
														},
														"src": "2469:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2488:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2469:20:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2394,
												"nodeType": "IfStatement",
												"src": "2465:85:16",
												"trueBody": {
													"expression": {
														"id": 2392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2385,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "2491:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2386,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "2500:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786639383761373235336163343133313736663262303734636637383135653534",
																			"id": 2387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2508:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_331682121138379247127172139078559817300_by_1",
																				"typeString": "int_const 3316...(31 digits omitted)...7300"
																			},
																			"value": "0xf987a7253ac413176f2b074cf7815e54"
																		},
																		"src": "2500:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2389,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2499:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2390,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2547:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2499:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2491:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2393,
													"nodeType": "ExpressionStatement",
													"src": "2491:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2395,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "2564:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078343030",
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2574:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1024_by_1",
																"typeString": "int_const 1024"
															},
															"value": "0x400"
														},
														"src": "2564:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2398,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2583:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2564:20:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2409,
												"nodeType": "IfStatement",
												"src": "2560:85:16",
												"trueBody": {
													"expression": {
														"id": 2407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2400,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "2586:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2401,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "2595:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786633333932623038323262373030303539343063376133393865346237306633",
																			"id": 2402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2603:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_323299236684853023288211250268160618739_by_1",
																				"typeString": "int_const 3232...(31 digits omitted)...8739"
																			},
																			"value": "0xf3392b0822b70005940c7a398e4b70f3"
																		},
																		"src": "2595:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2404,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2594:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2642:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2594:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2586:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2408,
													"nodeType": "ExpressionStatement",
													"src": "2586:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2410,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "2659:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078383030",
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2669:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2048_by_1",
																"typeString": "int_const 2048"
															},
															"value": "0x800"
														},
														"src": "2659:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2678:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2659:20:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2424,
												"nodeType": "IfStatement",
												"src": "2655:85:16",
												"trueBody": {
													"expression": {
														"id": 2422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2415,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "2681:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2416,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "2690:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786537313539343735613263323962373434336232396337666136653838396439",
																			"id": 2417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2698:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_307163716377032989948697243942600083929_by_1",
																				"typeString": "int_const 3071...(31 digits omitted)...3929"
																			},
																			"value": "0xe7159475a2c29b7443b29c7fa6e889d9"
																		},
																		"src": "2690:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2419,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2689:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2737:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2689:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2681:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2423,
													"nodeType": "ExpressionStatement",
													"src": "2681:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2425,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "2754:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831303030",
															"id": 2426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2764:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4096_by_1",
																"typeString": "int_const 4096"
															},
															"value": "0x1000"
														},
														"src": "2754:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2428,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2774:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2754:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2439,
												"nodeType": "IfStatement",
												"src": "2750:86:16",
												"trueBody": {
													"expression": {
														"id": 2437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2430,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "2777:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2431,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "2786:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786430393766336264666432303232623838343561643866373932616135383235",
																			"id": 2432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2794:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_277268403626896220162999269216087595045_by_1",
																				"typeString": "int_const 2772...(31 digits omitted)...5045"
																			},
																			"value": "0xd097f3bdfd2022b8845ad8f792aa5825"
																		},
																		"src": "2786:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2434,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2785:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2833:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2785:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2777:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2438,
													"nodeType": "ExpressionStatement",
													"src": "2777:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2440,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "2850:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832303030",
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2860:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8192_by_1",
																"typeString": "int_const 8192"
															},
															"value": "0x2000"
														},
														"src": "2850:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2870:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2850:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2454,
												"nodeType": "IfStatement",
												"src": "2846:86:16",
												"trueBody": {
													"expression": {
														"id": 2452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2445,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "2873:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2446,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "2882:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786139663734363436326438373066646638613635646331663930653036316535",
																			"id": 2447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2890:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_225923453940442621947126027127485391333_by_1",
																				"typeString": "int_const 2259...(31 digits omitted)...1333"
																			},
																			"value": "0xa9f746462d870fdf8a65dc1f90e061e5"
																		},
																		"src": "2882:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2449,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2881:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2929:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2881:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2873:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2453,
													"nodeType": "ExpressionStatement",
													"src": "2873:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2455,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "2946:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834303030",
															"id": 2456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2956:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16384_by_1",
																"typeString": "int_const 16384"
															},
															"value": "0x4000"
														},
														"src": "2946:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2458,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2966:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2946:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2469,
												"nodeType": "IfStatement",
												"src": "2942:86:16",
												"trueBody": {
													"expression": {
														"id": 2467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2460,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "2969:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2461,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "2978:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783730643836396131353664326131623839306262336466363262616633326637",
																			"id": 2462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2986:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_149997214084966997727330242082538205943_by_1",
																				"typeString": "int_const 1499...(31 digits omitted)...5943"
																			},
																			"value": "0x70d869a156d2a1b890bb3df62baf32f7"
																		},
																		"src": "2978:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2464,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2977:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3025:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2977:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2969:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2468,
													"nodeType": "ExpressionStatement",
													"src": "2969:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2470,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "3042:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838303030",
															"id": 2471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3052:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32768_by_1",
																"typeString": "int_const 32768"
															},
															"value": "0x8000"
														},
														"src": "3042:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3062:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3042:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2484,
												"nodeType": "IfStatement",
												"src": "3038:86:16",
												"trueBody": {
													"expression": {
														"id": 2482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2475,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "3065:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2476,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "3074:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783331626531333566393764303866643938313233313530353534326663666136",
																			"id": 2477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3082:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_66119101136024775622716233608466517926_by_1",
																				"typeString": "int_const 6611...(30 digits omitted)...7926"
																			},
																			"value": "0x31be135f97d08fd981231505542fcfa6"
																		},
																		"src": "3074:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2479,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3073:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3121:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3073:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3065:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2483,
													"nodeType": "ExpressionStatement",
													"src": "3065:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2485,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "3138:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130303030",
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3148:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_65536_by_1",
																"typeString": "int_const 65536"
															},
															"value": "0x10000"
														},
														"src": "3138:17:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3159:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3138:22:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2499,
												"nodeType": "IfStatement",
												"src": "3134:86:16",
												"trueBody": {
													"expression": {
														"id": 2497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2490,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "3162:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2491,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "3171:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307839616135303862356237613834653163363737646535346633653939626339",
																			"id": 2492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3179:33:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_12847376061809297530290974190478138313_by_1",
																				"typeString": "int_const 1284...(30 digits omitted)...8313"
																			},
																			"value": "0x9aa508b5b7a84e1c677de54f3e99bc9"
																		},
																		"src": "3171:41:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2494,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3170:43:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3217:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3170:50:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3162:58:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2498,
													"nodeType": "ExpressionStatement",
													"src": "3162:58:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2500,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "3234:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230303030",
															"id": 2501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3244:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_131072_by_1",
																"typeString": "int_const 131072"
															},
															"value": "0x20000"
														},
														"src": "3234:17:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3255:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3234:22:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2514,
												"nodeType": "IfStatement",
												"src": "3230:85:16",
												"trueBody": {
													"expression": {
														"id": 2512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2505,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "3258:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2506,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "3267:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078356436616638646564623831313936363939633332393232356565363034",
																			"id": 2507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3275:32:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_485053260817066172746253684029974020_by_1",
																				"typeString": "int_const 4850...(28 digits omitted)...4020"
																			},
																			"value": "0x5d6af8dedb81196699c329225ee604"
																		},
																		"src": "3267:40:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2509,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3266:42:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3312:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3266:49:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3258:57:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2513,
													"nodeType": "ExpressionStatement",
													"src": "3258:57:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2515,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "3329:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430303030",
															"id": 2516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3339:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_262144_by_1",
																"typeString": "int_const 262144"
															},
															"value": "0x40000"
														},
														"src": "3329:17:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2518,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3350:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3329:22:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2529,
												"nodeType": "IfStatement",
												"src": "3325:83:16",
												"trueBody": {
													"expression": {
														"id": 2527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2520,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "3353:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2521,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "3362:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307832323136653538346635666131656139323630343162656466653938",
																			"id": 2522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3370:30:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_691415978906521570653435304214168_by_1",
																				"typeString": "int_const 6914...(25 digits omitted)...4168"
																			},
																			"value": "0x2216e584f5fa1ea926041bedfe98"
																		},
																		"src": "3362:38:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2524,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3361:40:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3405:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3361:47:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3353:55:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2528,
													"nodeType": "ExpressionStatement",
													"src": "3353:55:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2530,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "3422:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830303030",
															"id": 2531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3432:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_524288_by_1",
																"typeString": "int_const 524288"
															},
															"value": "0x80000"
														},
														"src": "3422:17:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2533,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3443:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3422:22:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2544,
												"nodeType": "IfStatement",
												"src": "3418:78:16",
												"trueBody": {
													"expression": {
														"id": 2542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2535,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "3446:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2536,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "3455:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783438613137303339316637646334323434346538666132",
																			"id": 2537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3463:25:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1404880482679654955896180642_by_1",
																				"typeString": "int_const 1404880482679654955896180642"
																			},
																			"value": "0x48a170391f7dc42444e8fa2"
																		},
																		"src": "3455:33:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2539,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3454:35:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3493:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3454:42:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3446:50:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2543,
													"nodeType": "ExpressionStatement",
													"src": "3446:50:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 2547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2545,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2209,
														"src": "3511:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2546,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3518:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3511:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2558,
												"nodeType": "IfStatement",
												"src": "3507:47:16",
												"trueBody": {
													"expression": {
														"id": 2556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2548,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "3521:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3534:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2550,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3534:7:16",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 2549,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3529:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3529:13:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 2553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3529:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2554,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2250,
																"src": "3549:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3529:25:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3521:33:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2557,
													"nodeType": "ExpressionStatement",
													"src": "3521:33:16"
												}
											},
											{
												"expression": {
													"id": 2580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2559,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2212,
														"src": "3864:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2562,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2250,
																				"src": "3888:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3897:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "3888:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2565,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3887:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2573,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2571,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2566,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2250,
																						"src": "3904:5:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "%",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								},
																								"id": 2569,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "31",
																									"id": 2567,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3913:1:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "3332",
																									"id": 2568,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3918:2:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_32_by_1",
																										"typeString": "int_const 32"
																									},
																									"value": "32"
																								},
																								"src": "3913:7:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								}
																							}
																						],
																						"id": 2570,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3912:9:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					},
																					"src": "3904:17:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 2572,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3925:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "3904:22:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "31",
																				"id": 2575,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3933:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"id": 2576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "3904:30:16",
																			"trueExpression": {
																				"hexValue": "30",
																				"id": 2574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3929:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 2577,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3903:32:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "3887:48:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3879:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 2560,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "3879:7:16",
																"typeDescriptions": {}
															}
														},
														"id": 2579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3879:57:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3864:72:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 2581,
												"nodeType": "ExpressionStatement",
												"src": "3864:72:16"
											}
										]
									},
									"documentation": {
										"id": 2207,
										"nodeType": "StructuredDocumentation",
										"src": "1053:297:16",
										"text": "@notice Calculates sqrt(1.0001^tick) * 2^96\n @dev Throws if |tick| > max tick\n @param tick The input tick for the above formula\n @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n at the given tick"
									},
									"id": 2583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSqrtRatioAtTick",
									"nameLocation": "1364:18:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1389:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "1383:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2208,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1383:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1382:12:16"
									},
									"returnParameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1426:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "1418:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2211,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1417:22:16"
									},
									"scope": 2723,
									"src": "1355:2588:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2721,
										"nodeType": "Block",
										"src": "4447:4196:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 2594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2592,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2586,
																	"src": "4564:12:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 2593,
																	"name": "MIN_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2202,
																	"src": "4580:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4564:30:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 2597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2595,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2586,
																	"src": "4598:12:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2596,
																	"name": "MAX_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2206,
																	"src": "4613:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4598:29:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4564:63:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52",
															"id": 2599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4629:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															},
															"value": "R"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															}
														],
														"id": 2591,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4556:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4556:77:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2601,
												"nodeType": "ExpressionStatement",
												"src": "4556:77:16"
											},
											{
												"assignments": [
													2603
												],
												"declarations": [
													{
														"constant": false,
														"id": 2603,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "4651:5:16",
														"nodeType": "VariableDeclaration",
														"scope": 2721,
														"src": "4643:13:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2602,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4643:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2610,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2606,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2586,
																"src": "4667:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 2605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4659:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2604,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4659:7:16",
																"typeDescriptions": {}
															}
														},
														"id": 2607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4659:21:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 2608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4684:2:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "4659:27:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4643:43:16"
											},
											{
												"assignments": [
													2612
												],
												"declarations": [
													{
														"constant": false,
														"id": 2612,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "4705:1:16",
														"nodeType": "VariableDeclaration",
														"scope": 2721,
														"src": "4697:9:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2611,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4697:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2614,
												"initialValue": {
													"id": 2613,
													"name": "ratio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2603,
													"src": "4709:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4697:17:16"
											},
											{
												"assignments": [
													2616
												],
												"declarations": [
													{
														"constant": false,
														"id": 2616,
														"mutability": "mutable",
														"name": "msb",
														"nameLocation": "4732:3:16",
														"nodeType": "VariableDeclaration",
														"scope": 2721,
														"src": "4724:11:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2615,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4724:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2618,
												"initialValue": {
													"hexValue": "30",
													"id": 2617,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4738:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4724:15:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4759:139:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4773:58:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4786:1:16",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "4792:1:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4795:34:16",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4789:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4789:41:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4782:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4782:49:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4777:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4844:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "4854:3:16"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4859:1:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4851:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4851:10:16"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "4844:3:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4874:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4883:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "4886:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4879:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4879:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4874:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "4844:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "4854:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "4792:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "4874:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "4886:1:16",
														"valueSize": 1
													}
												],
												"id": 2619,
												"nodeType": "InlineAssembly",
												"src": "4750:148:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4916:123:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4930:42:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4943:1:16",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "4949:1:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4952:18:16",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4946:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4946:25:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4939:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4939:33:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4934:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4985:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "4995:3:16"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5000:1:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4992:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4992:10:16"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "4985:3:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5015:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5024:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5027:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5020:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5020:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5015:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "4985:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "4995:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "4949:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5015:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5027:1:16",
														"valueSize": 1
													}
												],
												"id": 2620,
												"nodeType": "InlineAssembly",
												"src": "4907:132:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5057:115:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5071:34:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5084:1:16",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5090:1:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5093:10:16",
																				"type": "",
																				"value": "0xFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5087:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5087:17:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5080:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5080:25:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5075:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5118:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5128:3:16"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5133:1:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5125:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5125:10:16"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5118:3:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5148:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5157:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5160:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5153:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5153:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5148:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5118:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5128:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5090:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5148:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5160:1:16",
														"valueSize": 1
													}
												],
												"id": 2621,
												"nodeType": "InlineAssembly",
												"src": "5048:124:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5190:111:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5204:30:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5217:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5223:1:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5226:6:16",
																				"type": "",
																				"value": "0xFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5220:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5220:13:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5213:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5213:21:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5208:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5247:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5257:3:16"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5262:1:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5254:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5254:10:16"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5247:3:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5277:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5286:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5289:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5282:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5277:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5247:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5257:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5223:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5277:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5289:1:16",
														"valueSize": 1
													}
												],
												"id": 2622,
												"nodeType": "InlineAssembly",
												"src": "5181:120:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5319:109:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5333:28:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5346:1:16",
																		"type": "",
																		"value": "3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5352:1:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5355:4:16",
																				"type": "",
																				"value": "0xFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5349:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5349:11:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5342:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5342:19:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5337:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5374:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5384:3:16"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5389:1:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5381:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5381:10:16"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5374:3:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5404:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5413:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5416:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5409:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5409:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5404:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5374:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5384:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5352:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5404:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5416:1:16",
														"valueSize": 1
													}
												],
												"id": 2623,
												"nodeType": "InlineAssembly",
												"src": "5310:118:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5446:108:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5460:27:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5473:1:16",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5479:1:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5482:3:16",
																				"type": "",
																				"value": "0xF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5476:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5476:10:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5469:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5469:18:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5464:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5500:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5510:3:16"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5515:1:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5507:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5507:10:16"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5500:3:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5530:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5539:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5542:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5535:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5535:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5530:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5500:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5510:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5479:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5530:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5542:1:16",
														"valueSize": 1
													}
												],
												"id": 2624,
												"nodeType": "InlineAssembly",
												"src": "5437:117:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5572:108:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5586:27:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5599:1:16",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5605:1:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5608:3:16",
																				"type": "",
																				"value": "0x3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5602:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5602:10:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5595:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5595:18:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5590:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5626:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5636:3:16"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5641:1:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5633:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5633:10:16"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5626:3:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5656:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5665:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5668:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5661:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5661:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5656:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5626:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5636:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5605:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5656:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5668:1:16",
														"valueSize": 1
													}
												],
												"id": 2625,
												"nodeType": "InlineAssembly",
												"src": "5563:117:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5698:73:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5712:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5724:1:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5727:3:16",
																		"type": "",
																		"value": "0x1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5721:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5721:10:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5716:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5744:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5754:3:16"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5759:1:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5751:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5751:10:16"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5744:3:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5744:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5754:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5724:1:16",
														"valueSize": 1
													}
												],
												"id": 2626,
												"nodeType": "InlineAssembly",
												"src": "5689:82:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2627,
														"name": "msb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2616,
														"src": "5785:3:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "313238",
														"id": 2628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5792:3:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "128"
													},
													"src": "5785:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"id": 2646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2639,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2612,
															"src": "5836:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2640,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2603,
																"src": "5840:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "313237",
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5850:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2642,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2616,
																			"src": "5856:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5850:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2644,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5849:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5840:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5836:24:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2647,
													"nodeType": "ExpressionStatement",
													"src": "5836:24:16"
												},
												"id": 2648,
												"nodeType": "IfStatement",
												"src": "5781:79:16",
												"trueBody": {
													"expression": {
														"id": 2637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2630,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2612,
															"src": "5797:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2631,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2603,
																"src": "5801:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2632,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2616,
																			"src": "5811:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "313237",
																			"id": 2633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5817:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"src": "5811:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2635,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5810:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5801:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5797:24:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2638,
													"nodeType": "ExpressionStatement",
													"src": "5797:24:16"
												}
											},
											{
												"assignments": [
													2650
												],
												"declarations": [
													{
														"constant": false,
														"id": 2650,
														"mutability": "mutable",
														"name": "log_2",
														"nameLocation": "5878:5:16",
														"nodeType": "VariableDeclaration",
														"scope": 2721,
														"src": "5871:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2649,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5871:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2660,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2653,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2616,
																			"src": "5894:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5887:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2651,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5887:6:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5887:11:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5901:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "5887:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2657,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5886:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 2658,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5909:2:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "5886:25:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5871:40:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5931:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5945:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5954:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5963:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5966:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5959:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5959:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5950:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5950:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5945:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5982:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5995:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6000:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5991:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5991:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5986:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6015:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6027:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6038:2:16",
																				"type": "",
																				"value": "63"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6042:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6034:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6034:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6024:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6024:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6015:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6058:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6067:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6070:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6063:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6063:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6058:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6015:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6027:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5945:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5963:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5966:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6000:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6058:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6070:1:16",
														"valueSize": 1
													}
												],
												"id": 2661,
												"nodeType": "InlineAssembly",
												"src": "5922:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6100:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6114:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6123:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6132:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6135:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6128:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6128:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6119:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6119:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6114:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6151:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6164:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6169:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6160:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6160:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6155:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6184:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6196:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6207:2:16",
																				"type": "",
																				"value": "62"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6211:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6203:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6203:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6193:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6193:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6184:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6227:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6236:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6239:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6232:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6232:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6227:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6184:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6196:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6114:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6132:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6135:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6169:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6227:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6239:1:16",
														"valueSize": 1
													}
												],
												"id": 2662,
												"nodeType": "InlineAssembly",
												"src": "6091:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6269:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6283:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6292:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6301:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6304:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6297:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6297:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6288:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6288:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6283:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6320:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6333:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6338:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6329:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6329:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6324:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6353:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6365:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6376:2:16",
																				"type": "",
																				"value": "61"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6380:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6372:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6372:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6362:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6362:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6353:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6396:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6405:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6408:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6401:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6401:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6396:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6353:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6365:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6283:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6301:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6304:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6338:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6396:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6408:1:16",
														"valueSize": 1
													}
												],
												"id": 2663,
												"nodeType": "InlineAssembly",
												"src": "6260:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6438:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6452:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6461:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6470:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6473:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6466:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6466:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6457:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6457:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6452:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6489:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6502:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6507:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6498:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6498:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6493:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6522:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6534:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6545:2:16",
																				"type": "",
																				"value": "60"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6549:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6541:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6541:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6531:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6531:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6522:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6565:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6574:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6577:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6570:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6570:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6565:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6522:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6534:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6452:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6470:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6473:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6507:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6565:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6577:1:16",
														"valueSize": 1
													}
												],
												"id": 2664,
												"nodeType": "InlineAssembly",
												"src": "6429:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6607:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6621:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6630:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6639:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6642:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6635:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6635:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6626:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6626:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6621:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6658:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6671:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6676:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6667:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6667:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6662:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6691:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6703:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6714:2:16",
																				"type": "",
																				"value": "59"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6718:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6710:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6710:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6700:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6700:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6691:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6734:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6743:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6746:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6739:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6739:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6734:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6691:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6703:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6621:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6639:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6642:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6676:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6734:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6746:1:16",
														"valueSize": 1
													}
												],
												"id": 2665,
												"nodeType": "InlineAssembly",
												"src": "6598:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6776:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6790:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6799:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6808:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6811:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6804:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6804:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6795:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6795:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6790:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6827:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6840:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6845:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6836:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6836:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6831:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6860:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6872:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6883:2:16",
																				"type": "",
																				"value": "58"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6887:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6879:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6879:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6869:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6869:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6860:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6903:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6912:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6915:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6908:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6908:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6903:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6860:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6872:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6790:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6808:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6811:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6845:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6903:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6915:1:16",
														"valueSize": 1
													}
												],
												"id": 2666,
												"nodeType": "InlineAssembly",
												"src": "6767:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6945:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6959:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6968:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6977:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6980:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6973:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6973:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6964:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6964:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6959:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6996:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7009:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7014:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7005:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7005:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7000:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7029:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7041:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7052:2:16",
																				"type": "",
																				"value": "57"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7056:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7048:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7048:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7038:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7038:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7029:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7072:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7081:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7084:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7077:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7077:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7072:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7029:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7041:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6959:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6977:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6980:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7014:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7072:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7084:1:16",
														"valueSize": 1
													}
												],
												"id": 2667,
												"nodeType": "InlineAssembly",
												"src": "6936:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7114:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7128:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7137:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7146:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7149:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7142:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7142:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7133:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7133:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7128:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7165:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7178:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7183:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7174:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7174:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7169:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7198:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7210:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7221:2:16",
																				"type": "",
																				"value": "56"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7225:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7217:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7217:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7207:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7207:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7198:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7241:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7250:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7253:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7246:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7246:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7241:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7198:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7210:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7128:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7146:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7149:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7183:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7241:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7253:1:16",
														"valueSize": 1
													}
												],
												"id": 2668,
												"nodeType": "InlineAssembly",
												"src": "7105:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7283:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7297:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7306:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7315:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7318:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7311:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7311:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7302:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7302:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7297:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7334:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7347:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7352:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7343:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7343:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7338:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7367:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7379:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7390:2:16",
																				"type": "",
																				"value": "55"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7394:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7386:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7386:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7376:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7376:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7367:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7410:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7419:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7422:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7415:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7415:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7410:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7367:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7379:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7297:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7315:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7318:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7352:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7410:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7422:1:16",
														"valueSize": 1
													}
												],
												"id": 2669,
												"nodeType": "InlineAssembly",
												"src": "7274:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7452:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7466:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7475:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7484:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7487:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7480:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7480:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7471:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7471:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7466:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7503:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7516:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7521:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7512:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7512:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7507:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7536:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7548:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7559:2:16",
																				"type": "",
																				"value": "54"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7563:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7555:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7555:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7545:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7545:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7536:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7579:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7588:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7591:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7584:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7584:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7579:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7536:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7548:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7466:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7484:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7487:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7521:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7579:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7591:1:16",
														"valueSize": 1
													}
												],
												"id": 2670,
												"nodeType": "InlineAssembly",
												"src": "7443:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7621:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7635:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7644:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7653:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7656:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7649:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7649:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7640:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7640:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7635:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7672:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7685:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7690:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7681:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7681:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7676:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7705:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7717:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7728:2:16",
																				"type": "",
																				"value": "53"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7732:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7724:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7724:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7714:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7714:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7705:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7748:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7757:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7760:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7753:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7753:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7748:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7705:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7717:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7635:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7653:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7656:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7690:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7748:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7760:1:16",
														"valueSize": 1
													}
												],
												"id": 2671,
												"nodeType": "InlineAssembly",
												"src": "7612:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7790:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7804:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7813:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7822:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7825:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7818:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7818:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7809:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7809:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7804:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7841:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7854:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7859:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7850:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7850:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7845:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7874:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7886:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7897:2:16",
																				"type": "",
																				"value": "52"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7901:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7893:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7893:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7883:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7883:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7874:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7917:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7926:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7929:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7922:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7922:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7917:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7874:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7886:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7804:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7822:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7825:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7859:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7917:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7929:1:16",
														"valueSize": 1
													}
												],
												"id": 2672,
												"nodeType": "InlineAssembly",
												"src": "7781:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7959:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7973:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7982:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7991:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7994:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7987:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7987:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7978:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7978:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7973:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8010:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8023:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8028:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8019:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8019:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "8014:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8043:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "8055:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8066:2:16",
																				"type": "",
																				"value": "51"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8070:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8062:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8062:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8052:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8052:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "8043:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8086:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "8095:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8098:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8091:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8091:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8086:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "8043:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "8055:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7973:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7991:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7994:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "8028:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "8086:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "8098:1:16",
														"valueSize": 1
													}
												],
												"id": 2673,
												"nodeType": "InlineAssembly",
												"src": "7950:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8128:124:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8142:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8151:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8160:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8163:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "8156:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8156:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8147:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8147:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8142:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8179:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8192:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8197:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8188:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8188:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "8183:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8212:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "8224:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8235:2:16",
																				"type": "",
																				"value": "50"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8239:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8231:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8231:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8221:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8221:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "8212:5:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "8212:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "8224:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "8142:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "8160:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "8163:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "8197:1:16",
														"valueSize": 1
													}
												],
												"id": 2674,
												"nodeType": "InlineAssembly",
												"src": "8119:133:16"
											},
											{
												"assignments": [
													2676
												],
												"declarations": [
													{
														"constant": false,
														"id": 2676,
														"mutability": "mutable",
														"name": "log_sqrt10001",
														"nameLocation": "8269:13:16",
														"nodeType": "VariableDeclaration",
														"scope": 2721,
														"src": "8262:20:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2675,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8262:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2680,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2677,
														"name": "log_2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2650,
														"src": "8285:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "323535373338393538393939363033383236333437313431",
														"id": 2678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8293:24:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255738958999603826347141_by_1",
															"typeString": "int_const 255738958999603826347141"
														},
														"value": "255738958999603826347141"
													},
													"src": "8285:32:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8262:55:16"
											},
											{
												"assignments": [
													2682
												],
												"declarations": [
													{
														"constant": false,
														"id": 2682,
														"mutability": "mutable",
														"name": "tickLow",
														"nameLocation": "8352:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 2721,
														"src": "8346:13:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 2681,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8346:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2692,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2685,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2676,
																			"src": "8369:13:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "33343032393932393536383039313332343138353936313430313030363630323437323130",
																			"id": 2686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8385:37:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3402992956809132418596140100660247210_by_1",
																				"typeString": "int_const 3402...(29 digits omitted)...7210"
																			},
																			"value": "3402992956809132418596140100660247210"
																		},
																		"src": "8369:53:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 2688,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8368:55:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8427:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8368:62:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 2684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8362:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 2683,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8362:5:16",
															"typeDescriptions": {}
														}
													},
													"id": 2691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8362:69:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8346:85:16"
											},
											{
												"assignments": [
													2694
												],
												"declarations": [
													{
														"constant": false,
														"id": 2694,
														"mutability": "mutable",
														"name": "tickHi",
														"nameLocation": "8447:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2721,
														"src": "8441:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 2693,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8441:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2704,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2697,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2676,
																			"src": "8463:13:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "323931333339343634373731393839363232393037303237363231313533333938303838343935",
																			"id": 2698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8479:39:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_291339464771989622907027621153398088495_by_1",
																				"typeString": "int_const 2913...(31 digits omitted)...8495"
																			},
																			"value": "291339464771989622907027621153398088495"
																		},
																		"src": "8463:55:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 2700,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8462:57:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8523:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8462:64:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 2696,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8456:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 2695,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8456:5:16",
															"typeDescriptions": {}
														}
													},
													"id": 2703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8456:71:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8441:86:16"
											},
											{
												"expression": {
													"id": 2719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2705,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2589,
														"src": "8538:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 2708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2706,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2682,
																"src": "8545:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2707,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2694,
																"src": "8556:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "8545:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 2714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2711,
																			"name": "tickHi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2694,
																			"src": "8594:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 2710,
																		"name": "getSqrtRatioAtTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2583,
																		"src": "8575:18:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																			"typeString": "function (int24) pure returns (uint160)"
																		}
																	},
																	"id": 2712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8575:26:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 2713,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2586,
																	"src": "8605:12:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8575:42:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 2716,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2682,
																"src": "8629:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 2717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "8575:61:16",
															"trueExpression": {
																"id": 2715,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2694,
																"src": "8620:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"id": 2718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "8545:91:16",
														"trueExpression": {
															"id": 2709,
															"name": "tickLow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2682,
															"src": "8565:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "8538:98:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 2720,
												"nodeType": "ExpressionStatement",
												"src": "8538:98:16"
											}
										]
									},
									"documentation": {
										"id": 2584,
										"nodeType": "StructuredDocumentation",
										"src": "3949:408:16",
										"text": "@notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n ever return.\n @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n @return tick The greatest tick for which the ratio is less than or equal to the input ratio"
									},
									"id": 2722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTickAtSqrtRatio",
									"nameLocation": "4371:18:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "4398:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "4390:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2585,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4390:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4389:22:16"
									},
									"returnParameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "4441:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "4435:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2588,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4435:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4434:12:16"
									},
									"scope": 2723,
									"src": "4362:4281:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2724,
							"src": "306:8339:16",
							"usedErrors": []
						}
					],
					"src": "45:8601:16"
				},
				"id": 16
			}
		}
	}
}