{
	"id": "1ca70b545517e6573738a67cc67fe661",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"TFGv3/Contracts/SCStorage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity >= 0.8.0;\n\nimport \"./Interfaces/IProxy.sol\";\nimport \"./libraries/OracleLibrary.sol\";\n\ncontract SCStorage is ISCStorage\n{\n\taddress immutable deployer;\n\t\n\tuint public NAV;\n    uint8 public initDone;\n    uint8 nStable;\n\t\n    address public proxy;\n\n\taddress[] public coinArray;\n\tmapping (address => uint) public coins; //Coin = 1, StableCoin = 2\n\tmapping (address => address) public coinOracleAddr; //UniswapV3PoolAddress\n    mapping (address => address) public quoteIn; //Address token en el que medimos el precio de la moneda no estable\n\t\n    \n    constructor()\n    {\n        deployer = msg.sender;\n    }\n    \n\tmodifier OnlyDeployer()\n    {\n        require(msg.sender == deployer);\n        _;\n    }\n\n    modifier NonInit()\n    {\n        require(initDone == 0);\n        _;\n    }\n\n    function initContract(address proxyAddr) external OnlyDeployer NonInit\n    {\n        proxy = proxyAddr;\n        initDone = 1;\n    }\n\n    function updateNAV(uint comission) external virtual override returns (uint newNAV)\n    {\n        require(msg.sender == IProxy(proxy).exchangeContract());\n        newNAV = calculateNAV() - comission;\n        NAV = newNAV;\n    }\n    \n    function transferFunds(address to, uint totalToTransfer) external virtual override returns (bool)\n    {\n        address proxyAddr = proxy;\n        require(msg.sender == IProxy(proxyAddr).exchangeContract() || msg.sender == IProxy(proxyAddr).commissionContract());\n        uint n = coinArray.length;\n        \n        for(uint i = 0; i < n; i++)\n        {\n            address coinAddr = coinArray[i];\n            if(coins[coinAddr] == 2)\n            {\n                uint8 decimals = IERC20(coinAddr).decimals();\n                if(decimals < 18) IERC20(coinAddr).transfer(to, totalToTransfer/nStable/10**(uint(decimals)-18));\n                else if(decimals == 18) IERC20(coinAddr).transfer(to, totalToTransfer/nStable);\n            }\n        }\n        return true;\n    }\n    \n    function oracleNAV() external view returns (uint, uint)\n    {\n        //Sin optimizaciones de gas. Pensada para leer desde fuera solamente\n        //Sin comision calculada, solo acumulado. La comision debe calcularse off-chain con la formula y el timestamp de la ultima vez que se actualizo\n        uint lastUpdated = ISCCommission(IProxy(proxy).commissionContract()).lastUpdated();\n        uint acum = ISCCommission(IProxy(proxy).commissionContract()).accumCommission();\n        return (calculateNAV() - acum, lastUpdated);\n    }\n    \n    function calculateNAV() internal view returns (uint newNAV)\n    {\n        //Calcula el NAV en USD. No tiene en cuenta la comision que falte por cobrar relativa al tiempo ni la comision acumulada.\n        uint n = coinArray.length;\n        for(uint i = 0; i < n; i++)\n        {\n            address coin = coinArray[i];\n            uint balance = IERC20(coin).balanceOf(address(this));\n            uint stable = coins[coin];\n            \n            if(stable == 1)\n            {\n                uint quote;\n                unchecked{\n                    (int24 arithmeticMeanTick,) = OracleLibrary.consult(coinOracleAddr[coin], 0);\n                    quote = OracleLibrary.getQuoteAtTick(arithmeticMeanTick, uint128(balance), coin, quoteIn[coin]);\n                }\n                newNAV += balance * quote;\n            }\n            else if(stable == 2) newNAV += balance;\n        }\n    }\n    \n    function addCoin(address coinAddr, uint stable) external  OnlyDeployer\n    {\n        if(stable == 0) coins[coinAddr] = 1;\n        else if(stable == 1)\n        {\n            coins[coinAddr] = 2;\n            nStable++;\n        }\n        coinArray.push(coinAddr);\n    }\n    \n    function delCoin(address coinAddr) external\n    {\n        require(msg.sender == deployer || msg.sender == IProxy(proxy).exchangeContract());\n        if(coins[coinAddr] == 2) nStable--;\n        coins[coinAddr] = 0;\n        uint n = coinArray.length;\n        for(uint i = 0; i < n; i++)\n        {\n            if(coinArray[i] == coinAddr)\n            {\n                coinArray[i] = coinArray[n-1];\n                coinArray.pop();\n            }\n        }\n    }\n\n    function updateProxy(address newAddr) external virtual override\n    {\n        require(msg.sender == proxy);\n        proxy = newAddr;\n    }\n    \n    function deleteContract(address newAddr) external virtual override OnlyDeployer\n    {\n        address proxyAddr = proxy;\n        IProxy(proxyAddr).setStorageAddr(newAddr);\n        newAddr.delegatecall(abi.encodeWithSignature(\"initContract(address)\", proxyAddr));\n        uint n = coinArray.length;\n        for(uint i = 0; i < n; i++)\n        {\n            address tokenToTransfer = coinArray[i];\n            IERC20(tokenToTransfer).transfer(newAddr, IERC20(tokenToTransfer).balanceOf(address(this)));\n        }\n        selfdestruct(payable(deployer));\n    }\n    \n    receive() external payable\n    {\n        revert();\n    }\n    \n    fallback() external payable\n    {\n        revert();\n    }\n}"
			},
			"TFGv3/Contracts/libraries/OracleLibrary.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './FullMath.sol';\nimport './TickMath.sol';\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';\n\n/// @title Oracle library\n/// @notice Provides functions to integrate with V3 pool oracle\nlibrary OracleLibrary {\n    /// @notice Calculates time-weighted means of tick and liquidity for a given Uniswap V3 pool\n    /// @param pool Address of the pool that we want to observe\n    /// @param secondsAgo Number of seconds in the past from which to calculate the time-weighted means\n    /// @return arithmeticMeanTick The arithmetic mean tick from (block.timestamp - secondsAgo) to block.timestamp\n    /// @return harmonicMeanLiquidity The harmonic mean liquidity from (block.timestamp - secondsAgo) to block.timestamp\n    function consult(address pool, uint32 secondsAgo)\n        internal\n        view\n        returns (int24 arithmeticMeanTick, uint128 harmonicMeanLiquidity)\n    {\n        require(secondsAgo != 0, 'BP');\n\n        uint32[] memory secondsAgos = new uint32[](2);\n        secondsAgos[0] = secondsAgo;\n        secondsAgos[1] = 0;\n\n        (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s) =\n            IUniswapV3Pool(pool).observe(secondsAgos);\n\n        int56 tickCumulativesDelta = tickCumulatives[1] - tickCumulatives[0];\n        uint160 secondsPerLiquidityCumulativesDelta =\n            secondsPerLiquidityCumulativeX128s[1] - secondsPerLiquidityCumulativeX128s[0];\n\n        arithmeticMeanTick = int24(tickCumulativesDelta / int32(secondsAgo));\n        // Always round to negative infinity\n        if (tickCumulativesDelta < 0 && (tickCumulativesDelta % int32(secondsAgo) != 0)) arithmeticMeanTick--;\n\n        // We are multiplying here instead of shifting to ensure that harmonicMeanLiquidity doesn't overflow uint128\n        uint192 secondsAgoX160 = uint192(secondsAgo) * type(uint160).max;\n        harmonicMeanLiquidity = uint128(secondsAgoX160 / (uint192(secondsPerLiquidityCumulativesDelta) << 32));\n    }\n\n    /// @notice Given a tick and a token amount, calculates the amount of token received in exchange\n    /// @param tick Tick value used to calculate the quote\n    /// @param baseAmount Amount of token to be converted\n    /// @param baseToken Address of an ERC20 token contract used as the baseAmount denomination\n    /// @param quoteToken Address of an ERC20 token contract used as the quoteAmount denomination\n    /// @return quoteAmount Amount of quoteToken received for baseAmount of baseToken\n    function getQuoteAtTick(\n        int24 tick,\n        uint128 baseAmount,\n        address baseToken,\n        address quoteToken\n    ) internal pure returns (uint256 quoteAmount) {\n        uint160 sqrtRatioX96 = TickMath.getSqrtRatioAtTick(tick);\n\n        // Calculate quoteAmount with better precision if it doesn't overflow when multiplied by itself\n        if (sqrtRatioX96 <= type(uint128).max) {\n            uint256 ratioX192 = uint256(sqrtRatioX96) * sqrtRatioX96;\n            quoteAmount = baseToken < quoteToken\n                ? FullMath.mulDiv(ratioX192, baseAmount, 1 << 192)\n                : FullMath.mulDiv(1 << 192, baseAmount, ratioX192);\n        } else {\n            uint256 ratioX128 = FullMath.mulDiv(sqrtRatioX96, sqrtRatioX96, 1 << 64);\n            quoteAmount = baseToken < quoteToken\n                ? FullMath.mulDiv(ratioX128, baseAmount, 1 << 128)\n                : FullMath.mulDiv(1 << 128, baseAmount, ratioX128);\n        }\n    }\n\n    /// @notice Given a pool, it returns the number of seconds ago of the oldest stored observation\n    /// @param pool Address of Uniswap V3 pool that we want to observe\n    /// @return secondsAgo The number of seconds ago of the oldest observation stored for the pool\n    function getOldestObservationSecondsAgo(address pool) internal view returns (uint32 secondsAgo) {\n        (, , uint16 observationIndex, uint16 observationCardinality, , , ) = IUniswapV3Pool(pool).slot0();\n        require(observationCardinality > 0, 'NI');\n\n        (uint32 observationTimestamp, , , bool initialized) =\n            IUniswapV3Pool(pool).observations((observationIndex + 1) % observationCardinality);\n\n        // The next index might not be initialized if the cardinality is in the process of increasing\n        // In this case the oldest observation is always in index 0\n        if (!initialized) {\n            (observationTimestamp, , , ) = IUniswapV3Pool(pool).observations(0);\n        }\n\n        secondsAgo = uint32(block.timestamp) - observationTimestamp;\n    }\n\n    /// @notice Given a pool, it returns the tick value as of the start of the current block\n    /// @param pool Address of Uniswap V3 pool\n    /// @return The tick that the pool was in at the start of the current block\n    function getBlockStartingTickAndLiquidity(address pool) internal view returns (int24, uint128) {\n        (, int24 tick, uint16 observationIndex, uint16 observationCardinality, , , ) = IUniswapV3Pool(pool).slot0();\n\n        // 2 observations are needed to reliably calculate the block starting tick\n        require(observationCardinality > 1, 'NEO');\n\n        // If the latest observation occurred in the past, then no tick-changing trades have happened in this block\n        // therefore the tick in `slot0` is the same as at the beginning of the current block.\n        // We don't need to check if this observation is initialized - it is guaranteed to be.\n        (uint32 observationTimestamp, int56 tickCumulative, uint160 secondsPerLiquidityCumulativeX128, ) =\n            IUniswapV3Pool(pool).observations(observationIndex);\n        if (observationTimestamp != uint32(block.timestamp)) {\n            return (tick, IUniswapV3Pool(pool).liquidity());\n        }\n\n        uint256 prevIndex = (uint256(observationIndex) + observationCardinality - 1) % observationCardinality;\n        (\n            uint32 prevObservationTimestamp,\n            int56 prevTickCumulative,\n            uint160 prevSecondsPerLiquidityCumulativeX128,\n            bool prevInitialized\n        ) = IUniswapV3Pool(pool).observations(prevIndex);\n\n        require(prevInitialized, 'ONI');\n\n        uint32 delta = observationTimestamp - prevObservationTimestamp;\n        tick = int24((tickCumulative - prevTickCumulative) / int32(delta));\n        uint128 liquidity =\n            uint128(\n                (uint192(delta) * type(uint160).max) /\n                    (uint192(secondsPerLiquidityCumulativeX128 - prevSecondsPerLiquidityCumulativeX128) << 32)\n            );\n        return (tick, liquidity);\n    }\n\n    /// @notice Information for calculating a weighted arithmetic mean tick\n    struct WeightedTickData {\n        int24 tick;\n        uint128 weight;\n    }\n\n    /// @notice Given an array of ticks and weights, calculates the weighted arithmetic mean tick\n    /// @param weightedTickData An array of ticks and weights\n    /// @return weightedArithmeticMeanTick The weighted arithmetic mean tick\n    /// @dev Each entry of `weightedTickData` should represents ticks from pools with the same underlying pool tokens. If they do not,\n    /// extreme care must be taken to ensure that ticks are comparable (including decimal differences).\n    /// @dev Note that the weighted arithmetic mean tick corresponds to the weighted geometric mean price.\n    function getWeightedArithmeticMeanTick(WeightedTickData[] memory weightedTickData)\n        internal\n        pure\n        returns (int24 weightedArithmeticMeanTick)\n    {\n        // Accumulates the sum of products between each tick and its weight\n        int256 numerator;\n\n        // Accumulates the sum of the weights\n        uint256 denominator;\n\n        // Products fit in 152 bits, so it would take an array of length ~2**104 to overflow this logic\n        for (uint256 i; i < weightedTickData.length; i++) {\n            numerator += weightedTickData[i].tick * int256(int128(weightedTickData[i].weight));\n            denominator += weightedTickData[i].weight;\n        }\n\n        weightedArithmeticMeanTick = int24(numerator / int256(denominator));\n        // Always round to negative infinity\n        if (numerator < 0 && (numerator % int256(denominator) != 0)) weightedArithmeticMeanTick--;\n    }\n\n    /// @notice Returns the \"synthetic\" tick which represents the price of the first entry in `tokens` in terms of the last\n    /// @dev Useful for calculating relative prices along routes.\n    /// @dev There must be one tick for each pairwise set of tokens.\n    /// @param tokens The token contract addresses\n    /// @param ticks The ticks, representing the price of each token pair in `tokens`\n    /// @return syntheticTick The synthetic tick, representing the relative price of the outermost tokens in `tokens`\n    function getChainedPrice(address[] memory tokens, int24[] memory ticks)\n        internal\n        pure\n        returns (int256 syntheticTick)\n    {\n        require(tokens.length - 1 == ticks.length, 'DL');\n        for (uint256 i = 1; i <= ticks.length; i++) {\n            // check the tokens for address sort order, then accumulate the\n            // ticks into the running synthetic tick, ensuring that intermediate tokens \"cancel out\"\n            tokens[i - 1] < tokens[i] ? syntheticTick += ticks[i - 1] : syntheticTick -= ticks[i - 1];\n        }\n    }\n}\n"
			},
			"TFGv3/Contracts/Interfaces/IProxy.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity >= 0.8.0;\n\nimport \"./ISCStorage.sol\";\nimport \"./ISCCommission.sol\";\nimport \"./ISCOps.sol\";\nimport \"./ISCExchange.sol\";\nimport \"./IERC20.sol\";\n\ninterface IProxy\n{\n\tfunction initAddrs(address exchangeAddr, address storageAddr, address commissionAddr, address opsAddr, address tokenAddr) external;\n\t\n\tfunction multicall(bytes[] calldata data, address[] calldata contractAddr) external returns (bytes[] memory results);\n\n\tfunction exchangeContract() external view returns (address);\n\tfunction setExchangeAddr(address exchangeAddr) external;\n\n\tfunction storageContract() external view returns (address);\n\tfunction setStorageAddr(address storageAddr) external;\n\n\tfunction commissionContract() external view returns (address);\n\tfunction setCommissionAddr(address commissionAddr) external;\n\n\tfunction opsContract() external view returns (address);\n\tfunction setOpsAddr(address opsAddr) external;\n\n\tfunction token() external view returns (address);\n\tfunction setTokenAddr(address tokenAddr) external;\n\n\tfunction deleteContract(address newAddr) external;\n}"
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"
			},
			"TFGv3/Contracts/libraries/TickMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Math library for computing sqrt prices from ticks and vice versa\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n/// prices between 2**-128 and 2**128\nlibrary TickMath {\n    /// @dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\n    int24 internal constant MIN_TICK = -887272;\n    /// @dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\n    int24 internal constant MAX_TICK = -MIN_TICK;\n\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\n\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\n    /// @dev Throws if |tick| > max tick\n    /// @param tick The input tick for the above formula\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n    /// at the given tick\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\n        uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick));\n        require(absTick <= uint256(uint24(MAX_TICK)), 'T');\n\n        uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000;\n        if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\n        if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\n        if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\n        if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\n        if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\n        if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\n        if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\n        if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\n        if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\n        if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\n        if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\n        if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\n        if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\n        if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\n        if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\n        if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\n        if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\n        if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\n        if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\n\n        if (tick > 0) ratio = type(uint256).max / ratio;\n\n        // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\n        // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\n        // we round up in the division so getTickAtSqrtRatio of the output price is always consistent\n        sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1));\n    }\n\n    /// @notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n    /// ever return.\n    /// @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n    /// @return tick The greatest tick for which the ratio is less than or equal to the input ratio\n    function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\n        // second inequality must be < because the price can never reach the price at the max tick\n        require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, 'R');\n        uint256 ratio = uint256(sqrtPriceX96) << 32;\n\n        uint256 r = ratio;\n        uint256 msb = 0;\n\n        assembly {\n            let f := shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(6, gt(r, 0xFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(5, gt(r, 0xFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(4, gt(r, 0xFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(3, gt(r, 0xFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(2, gt(r, 0xF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(1, gt(r, 0x3))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := gt(r, 0x1)\n            msb := or(msb, f)\n        }\n\n        if (msb >= 128) r = ratio >> (msb - 127);\n        else r = ratio << (127 - msb);\n\n        int256 log_2 = (int256(msb) - 128) << 64;\n\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(63, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(62, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(61, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(60, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(59, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(58, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(57, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(56, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(55, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(54, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(53, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(52, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(51, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(50, f))\n        }\n\n        int256 log_sqrt10001 = log_2 * 255738958999603826347141; // 128.128 number\n\n        int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\n        int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\n\n        tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\n    }\n}\n"
			},
			"TFGv3/Contracts/libraries/FullMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.0;\n\n/// @title Contains 512-bit math functions\n/// @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n/// @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\nlibrary FullMath {\n    /// @notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n    /// @param a The multiplicand\n    /// @param b The multiplier\n    /// @param denominator The divisor\n    /// @return result The 256-bit result\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n    function mulDiv(\n        uint256 a,\n        uint256 b,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        // 512-bit multiply [prod1 prod0] = a * b\n        // Compute the product mod 2**256 and mod 2**256 - 1\n        // then use the Chinese Remainder Theorem to reconstruct\n        // the 512 bit result. The result is stored in two 256\n        // variables such that product = prod1 * 2**256 + prod0\n        uint256 prod0; // Least significant 256 bits of the product\n        uint256 prod1; // Most significant 256 bits of the product\n        assembly {\n            let mm := mulmod(a, b, not(0))\n            prod0 := mul(a, b)\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n        }\n\n        // Handle non-overflow cases, 256 by 256 division\n        if (prod1 == 0) {\n            require(denominator > 0);\n            assembly {\n                result := div(prod0, denominator)\n            }\n            return result;\n        }\n\n        // Make sure the result is less than 2**256.\n        // Also prevents denominator == 0\n        require(denominator > prod1);\n\n        ///////////////////////////////////////////////\n        // 512 by 256 division.\n        ///////////////////////////////////////////////\n\n        // Make division exact by subtracting the remainder from [prod1 prod0]\n        // Compute remainder using mulmod\n        uint256 remainder;\n        assembly {\n            remainder := mulmod(a, b, denominator)\n        }\n        // Subtract 256 bit number from 512 bit number\n        assembly {\n            prod1 := sub(prod1, gt(remainder, prod0))\n            prod0 := sub(prod0, remainder)\n        }\n\n        // Factor powers of two out of denominator\n        // Compute largest power of two divisor of denominator.\n        // Always >= 1.\n        uint256 twos = (type(uint256).max - denominator + 1) & denominator;\n        // Divide denominator by power of two\n        assembly {\n            denominator := div(denominator, twos)\n        }\n\n        // Divide [prod1 prod0] by the factors of two\n        assembly {\n            prod0 := div(prod0, twos)\n        }\n        // Shift in bits from prod1 into prod0. For this we need\n        // to flip `twos` such that it is 2**256 / twos.\n        // If twos is zero, then it becomes one\n        assembly {\n            twos := add(div(sub(0, twos), twos), 1)\n        }\n        prod0 |= prod1 * twos;\n\n        // Invert denominator mod 2**256\n        // Now that denominator is an odd number, it has an inverse\n        // modulo 2**256 such that denominator * inv = 1 mod 2**256.\n        // Compute the inverse by starting with a seed that is correct\n        // correct for four bits. That is, denominator * inv = 1 mod 2**4\n        uint256 inv = (3 * denominator) ^ 2;\n        // Now use Newton-Raphson iteration to improve the precision.\n        // Thanks to Hensel's lifting lemma, this also works in modular\n        // arithmetic, doubling the correct bits in each step.\n        inv *= 2 - denominator * inv; // inverse mod 2**8\n        inv *= 2 - denominator * inv; // inverse mod 2**16\n        inv *= 2 - denominator * inv; // inverse mod 2**32\n        inv *= 2 - denominator * inv; // inverse mod 2**64\n        inv *= 2 - denominator * inv; // inverse mod 2**128\n        inv *= 2 - denominator * inv; // inverse mod 2**256\n\n        // Because the division is now exact we can divide by multiplying\n        // with the modular inverse of denominator. This will give us the\n        // correct result modulo 2**256. Since the precoditions guarantee\n        // that the outcome is less than 2**256, this is the final result.\n        // We don't need to compute the high bits of the result and prod1\n        // is no longer required.\n        result = prod0 * inv;\n        return result;\n    }\n\n    /// @notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n    /// @param a The multiplicand\n    /// @param b The multiplier\n    /// @param denominator The divisor\n    /// @return result The 256-bit result\n    function mulDivRoundingUp(\n        uint256 a,\n        uint256 b,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        result = mulDiv(a, b, denominator);\n        if (mulmod(a, b, denominator) > 0) {\n            require(result < type(uint256).max);\n            result++;\n        }\n    }\n}\n"
			},
			"TFGv3/Contracts/Interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity >= 0.8.0;\n\ninterface IERC20\n{\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n    \n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address to, uint256 amount) external returns (bool);\n    \n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n    \n    function mint(address account, uint amount) external returns (bool);\n    \n    function burn(uint256 amount) external returns (bool);\n    \n    function burnFrom(address from, uint256 amount) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    event Mint(address indexed to, uint256 value);\n}"
			},
			"TFGv3/Contracts/Interfaces/ISCExchange.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\n\r\npragma solidity >= 0.8.0;\r\n\r\ninterface ISCExchange\r\n{\r\n    function buyTokensOutput(address stableAddr, uint tokensOut) external;\r\n\r\n    function buyTokensInput(address stableAddr, uint qtyIn) external;\r\n\r\n    function sellTokens(uint qty) external;\r\n\r\n    function deleteContract(address newAddr) external;\r\n\r\n    function addToBlacklist(address to) external returns (bool);\r\n\r\n    function removeFromBlacklist(address to) external returns (bool);\r\n\r\n    function updateProxy(address newAddr) external;\r\n}"
			},
			"TFGv3/Contracts/Interfaces/ISCOps.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\n\r\npragma solidity >= 0.8.0;\r\n\r\ninterface ISCOps\r\n{\r\n    function initContract(address proxyAddr) external;\r\n\r\n    function uniSwap(address[] calldata path, uint amount) external;\r\n\r\n    function updateProxy(address newAddr) external;\r\n\r\n    function deleteContract(address newContract) external;\r\n}"
			},
			"TFGv3/Contracts/Interfaces/ISCCommission.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\n\r\npragma solidity >= 0.8.0;\r\n\r\ninterface ISCCommission\r\n{\r\n    function lastUpdated() external view returns(uint);\r\n\r\n    function accumCommission() external view returns(uint);\r\n\r\n    function initContract(address proxyAddr, uint lastUpdated_, uint accumCommission_, uint feeYear_, uint r_) external;\r\n\r\n    function payComissions(uint buyOrSell) external returns (uint payedComissions);\r\n\r\n    function collectCommission(address[] calldata tokensToTransfer, uint[] calldata qty) external;\r\n\r\n    function updateProxy(address newAddr) external;\r\n\r\n    function deleteContract(address newAddr, address[] calldata tokensToTransfer, uint[] calldata qty) external;\r\n}"
			},
			"TFGv3/Contracts/Interfaces/ISCStorage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\n\r\npragma solidity >= 0.8.0;\r\n\r\ninterface ISCStorage\r\n{\r\n    function updateNAV(uint comission) external returns (uint newNAV);\r\n\r\n    function NAV() external view returns (uint);\r\n\r\n    function transferFunds(address to, uint totalToTransfer) external returns (bool);\r\n\r\n    function addCoin(address coinAddr, uint stable) external;\r\n\r\n    function delCoin(address coinAddr) external;\r\n\r\n    function updateProxy(address newAddr) external;\r\n\r\n    function deleteContract(address newAddr) external;\r\n}"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 5000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			},
			"TFGv3/Contracts/Interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TFGv3/Contracts/Interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"TFGv3/Contracts/Interfaces/IERC20.sol\":{\"keccak256\":\"0x59a03f41c93e1e60f5d0cd67af555cb474afb987990fb47dc128c74ea5a960f2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7de853bafd2ce286ab83b7acba0d271df56d08efafeaf050f94a7972668a8b8d\",\"dweb:/ipfs/QmXTDrwjPT3VWQTrRE94LrbDb1yFcKEHWDbRurXBgWaXBu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TFGv3/Contracts/Interfaces/IProxy.sol": {
				"IProxy": {
					"abi": [
						{
							"inputs": [],
							"name": "commissionContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddr",
									"type": "address"
								}
							],
							"name": "deleteContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exchangeContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "exchangeAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "storageAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "commissionAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "opsAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenAddr",
									"type": "address"
								}
							],
							"name": "initAddrs",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "data",
									"type": "bytes[]"
								},
								{
									"internalType": "address[]",
									"name": "contractAddr",
									"type": "address[]"
								}
							],
							"name": "multicall",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "results",
									"type": "bytes[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "opsContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "commissionAddr",
									"type": "address"
								}
							],
							"name": "setCommissionAddr",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "exchangeAddr",
									"type": "address"
								}
							],
							"name": "setExchangeAddr",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "opsAddr",
									"type": "address"
								}
							],
							"name": "setOpsAddr",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "storageAddr",
									"type": "address"
								}
							],
							"name": "setStorageAddr",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddr",
									"type": "address"
								}
							],
							"name": "setTokenAddr",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "storageContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"commissionContract()": "da8909e5",
							"deleteContract(address)": "2637a477",
							"exchangeContract()": "3f0a0797",
							"initAddrs(address,address,address,address,address)": "1b46a447",
							"multicall(bytes[],address[])": "600e1b2b",
							"opsContract()": "dc96d689",
							"setCommissionAddr(address)": "101dfd19",
							"setExchangeAddr(address)": "8ae91695",
							"setOpsAddr(address)": "cf368a39",
							"setStorageAddr(address)": "a6fa0b7b",
							"setTokenAddr(address)": "2ebd1e28",
							"storageContract()": "11ce0267",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"commissionContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"deleteContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exchangeAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"storageAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"commissionAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"opsAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"}],\"name\":\"initAddrs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"},{\"internalType\":\"address[]\",\"name\":\"contractAddr\",\"type\":\"address[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"opsContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"commissionAddr\",\"type\":\"address\"}],\"name\":\"setCommissionAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exchangeAddr\",\"type\":\"address\"}],\"name\":\"setExchangeAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"opsAddr\",\"type\":\"address\"}],\"name\":\"setOpsAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"storageAddr\",\"type\":\"address\"}],\"name\":\"setStorageAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"}],\"name\":\"setTokenAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storageContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TFGv3/Contracts/Interfaces/IProxy.sol\":\"IProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"TFGv3/Contracts/Interfaces/IERC20.sol\":{\"keccak256\":\"0x59a03f41c93e1e60f5d0cd67af555cb474afb987990fb47dc128c74ea5a960f2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7de853bafd2ce286ab83b7acba0d271df56d08efafeaf050f94a7972668a8b8d\",\"dweb:/ipfs/QmXTDrwjPT3VWQTrRE94LrbDb1yFcKEHWDbRurXBgWaXBu\"]},\"TFGv3/Contracts/Interfaces/IProxy.sol\":{\"keccak256\":\"0x457ec80cafbaf6e5f70cf6364557fdc497e802c3617a15966fc6c79fa995d044\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://23e2a5b5168b3235a983595e31036adf66060d62ae9e5f6d097df1b1e6559f34\",\"dweb:/ipfs/QmajmGCZ4LhmUJL3eFh8kKRLRuR31SMUnqNbcFjeKCoQD5\"]},\"TFGv3/Contracts/Interfaces/ISCCommission.sol\":{\"keccak256\":\"0x9f9b9e99159eabe43404d867a64018b9b659c8eb1634603dd5ac3959536f943a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://199b2f59b06b0a015d00136b9b6198b051183f26baf374c78462286aae037f5e\",\"dweb:/ipfs/QmYA9CWEVqwN84CGoEwAUWi9w2R9t3xp7xfnEc9bxHwjMi\"]},\"TFGv3/Contracts/Interfaces/ISCExchange.sol\":{\"keccak256\":\"0x31ea8830f6820ac5dbe085226419a2ec19d0a3d12aec8148ab69cd31da5c856b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fbf0a05b5b50f2b9beecc7ef90eb7af924a40f2e1a248cce747d9f44284c1379\",\"dweb:/ipfs/QmbKkQSU64e7Z31pKveJnC7jdVLnW7uaYALtbcnYiXjf7y\"]},\"TFGv3/Contracts/Interfaces/ISCOps.sol\":{\"keccak256\":\"0x3e4655a10df0f0cf6c011a9bb55cd9592061d2b7a6540ffbc04c8267d4513940\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9945f611e8120c4e6a9108006e8938e2e062858de2d31c4c3cba9a3167afc971\",\"dweb:/ipfs/Qmb7KDX9ai8RHcnFiY9cwqiFAtmvXsUMQaUr4XhZkzTm6q\"]},\"TFGv3/Contracts/Interfaces/ISCStorage.sol\":{\"keccak256\":\"0x44fa27b592c9491dd280b6b8c0363b817cb957a52abdb27579776d4e5e083d31\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://28e367601b9c8293cbb61bb7eaf04515fa2a5eb5af002b70198ffc36e9944e0e\",\"dweb:/ipfs/QmW3KoqMe7fyGJabsrbZzFi7yiFtffiepqq997biioCJM1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TFGv3/Contracts/Interfaces/ISCCommission.sol": {
				"ISCCommission": {
					"abi": [
						{
							"inputs": [],
							"name": "accumCommission",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "tokensToTransfer",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "qty",
									"type": "uint256[]"
								}
							],
							"name": "collectCommission",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddr",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "tokensToTransfer",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "qty",
									"type": "uint256[]"
								}
							],
							"name": "deleteContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "lastUpdated_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accumCommission_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeYear_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "r_",
									"type": "uint256"
								}
							],
							"name": "initContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdated",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "buyOrSell",
									"type": "uint256"
								}
							],
							"name": "payComissions",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "payedComissions",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddr",
									"type": "address"
								}
							],
							"name": "updateProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"accumCommission()": "7f8483a4",
							"collectCommission(address[],uint256[])": "fc693786",
							"deleteContract(address,address[],uint256[])": "1d69b196",
							"initContract(address,uint256,uint256,uint256,uint256)": "37799661",
							"lastUpdated()": "d0b06f5d",
							"payComissions(uint256)": "bdedd45e",
							"updateProxy(address)": "9e955149"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"accumCommission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokensToTransfer\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"qty\",\"type\":\"uint256[]\"}],\"name\":\"collectCommission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokensToTransfer\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"qty\",\"type\":\"uint256[]\"}],\"name\":\"deleteContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accumCommission_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeYear_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r_\",\"type\":\"uint256\"}],\"name\":\"initContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buyOrSell\",\"type\":\"uint256\"}],\"name\":\"payComissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"payedComissions\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"updateProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TFGv3/Contracts/Interfaces/ISCCommission.sol\":\"ISCCommission\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"TFGv3/Contracts/Interfaces/ISCCommission.sol\":{\"keccak256\":\"0x9f9b9e99159eabe43404d867a64018b9b659c8eb1634603dd5ac3959536f943a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://199b2f59b06b0a015d00136b9b6198b051183f26baf374c78462286aae037f5e\",\"dweb:/ipfs/QmYA9CWEVqwN84CGoEwAUWi9w2R9t3xp7xfnEc9bxHwjMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TFGv3/Contracts/Interfaces/ISCExchange.sol": {
				"ISCExchange": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "addToBlacklist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stableAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "qtyIn",
									"type": "uint256"
								}
							],
							"name": "buyTokensInput",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stableAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokensOut",
									"type": "uint256"
								}
							],
							"name": "buyTokensOutput",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddr",
									"type": "address"
								}
							],
							"name": "deleteContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "removeFromBlacklist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "qty",
									"type": "uint256"
								}
							],
							"name": "sellTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddr",
									"type": "address"
								}
							],
							"name": "updateProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addToBlacklist(address)": "44337ea1",
							"buyTokensInput(address,uint256)": "9be56034",
							"buyTokensOutput(address,uint256)": "365afe2f",
							"deleteContract(address)": "2637a477",
							"removeFromBlacklist(address)": "537df3b6",
							"sellTokens(uint256)": "6c11bcd3",
							"updateProxy(address)": "9e955149"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"addToBlacklist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stableAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"qtyIn\",\"type\":\"uint256\"}],\"name\":\"buyTokensInput\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stableAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokensOut\",\"type\":\"uint256\"}],\"name\":\"buyTokensOutput\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"deleteContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"removeFromBlacklist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"}],\"name\":\"sellTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"updateProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TFGv3/Contracts/Interfaces/ISCExchange.sol\":\"ISCExchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"TFGv3/Contracts/Interfaces/ISCExchange.sol\":{\"keccak256\":\"0x31ea8830f6820ac5dbe085226419a2ec19d0a3d12aec8148ab69cd31da5c856b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fbf0a05b5b50f2b9beecc7ef90eb7af924a40f2e1a248cce747d9f44284c1379\",\"dweb:/ipfs/QmbKkQSU64e7Z31pKveJnC7jdVLnW7uaYALtbcnYiXjf7y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TFGv3/Contracts/Interfaces/ISCOps.sol": {
				"ISCOps": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newContract",
									"type": "address"
								}
							],
							"name": "deleteContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"name": "initContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "uniSwap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddr",
									"type": "address"
								}
							],
							"name": "updateProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deleteContract(address)": "2637a477",
							"initContract(address)": "cf9d4afa",
							"uniSwap(address[],uint256)": "1fa4e970",
							"updateProxy(address)": "9e955149"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"deleteContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"name\":\"initContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"uniSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"updateProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TFGv3/Contracts/Interfaces/ISCOps.sol\":\"ISCOps\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"TFGv3/Contracts/Interfaces/ISCOps.sol\":{\"keccak256\":\"0x3e4655a10df0f0cf6c011a9bb55cd9592061d2b7a6540ffbc04c8267d4513940\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9945f611e8120c4e6a9108006e8938e2e062858de2d31c4c3cba9a3167afc971\",\"dweb:/ipfs/Qmb7KDX9ai8RHcnFiY9cwqiFAtmvXsUMQaUr4XhZkzTm6q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TFGv3/Contracts/Interfaces/ISCStorage.sol": {
				"ISCStorage": {
					"abi": [
						{
							"inputs": [],
							"name": "NAV",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "coinAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "stable",
									"type": "uint256"
								}
							],
							"name": "addCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "coinAddr",
									"type": "address"
								}
							],
							"name": "delCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddr",
									"type": "address"
								}
							],
							"name": "deleteContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "totalToTransfer",
									"type": "uint256"
								}
							],
							"name": "transferFunds",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "comission",
									"type": "uint256"
								}
							],
							"name": "updateNAV",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "newNAV",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddr",
									"type": "address"
								}
							],
							"name": "updateProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"NAV()": "52fd856b",
							"addCoin(address,uint256)": "b4014879",
							"delCoin(address)": "4051b9aa",
							"deleteContract(address)": "2637a477",
							"transferFunds(address,uint256)": "990dc9db",
							"updateNAV(uint256)": "0cb1982b",
							"updateProxy(address)": "9e955149"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NAV\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"coinAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stable\",\"type\":\"uint256\"}],\"name\":\"addCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"coinAddr\",\"type\":\"address\"}],\"name\":\"delCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"deleteContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalToTransfer\",\"type\":\"uint256\"}],\"name\":\"transferFunds\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"comission\",\"type\":\"uint256\"}],\"name\":\"updateNAV\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newNAV\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"updateProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TFGv3/Contracts/Interfaces/ISCStorage.sol\":\"ISCStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"TFGv3/Contracts/Interfaces/ISCStorage.sol\":{\"keccak256\":\"0x44fa27b592c9491dd280b6b8c0363b817cb957a52abdb27579776d4e5e083d31\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://28e367601b9c8293cbb61bb7eaf04515fa2a5eb5af002b70198ffc36e9944e0e\",\"dweb:/ipfs/QmW3KoqMe7fyGJabsrbZzFi7yiFtffiepqq997biioCJM1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TFGv3/Contracts/SCStorage.sol": {
				"SCStorage": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "NAV",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "coinAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "stable",
									"type": "uint256"
								}
							],
							"name": "addCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "coinArray",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "coinOracleAddr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "coins",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "coinAddr",
									"type": "address"
								}
							],
							"name": "delCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddr",
									"type": "address"
								}
							],
							"name": "deleteContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"name": "initContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initDone",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "oracleNAV",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "quoteIn",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "totalToTransfer",
									"type": "uint256"
								}
							],
							"name": "transferFunds",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "comission",
									"type": "uint256"
								}
							],
							"name": "updateNAV",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "newNAV",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddr",
									"type": "address"
								}
							],
							"name": "updateProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TFGv3/Contracts/SCStorage.sol\":148:5019  contract SCStorage is ISCStorage... */\n  mstore(0x40, 0xa0)\n    /* \"TFGv3/Contracts/SCStorage.sol\":608:664  constructor()... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"TFGv3/Contracts/SCStorage.sol\":647:657  msg.sender */\n  caller\n    /* \"TFGv3/Contracts/SCStorage.sol\":636:657  deployer = msg.sender */\n  0x80\n  mstore\n    /* \"TFGv3/Contracts/SCStorage.sol\":148:5019  contract SCStorage is ISCStorage... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xcdf1dd2e8742ccca482be714f2ab38acb16e66300c9790cd19a8abbcdf150d1c\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"TFGv3/Contracts/SCStorage.sol\":148:5019  contract SCStorage is ISCStorage... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x990dc9db\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xd825bfff\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xd825bfff\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdef1a5e8\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xec556889\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xfed0a20e\n      eq\n      tag_17\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":5002:5010  revert() */\n      0x00\n      dup1\n      revert\n        /* \"TFGv3/Contracts/SCStorage.sol\":148:5019  contract SCStorage is ISCStorage... */\n    tag_19:\n      dup1\n      0x990dc9db\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9e955149\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb4014879\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xcf9d4afa\n      eq\n      tag_13\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":5002:5010  revert() */\n      0x00\n      dup1\n      revert\n        /* \"TFGv3/Contracts/SCStorage.sol\":148:5019  contract SCStorage is ISCStorage... */\n    tag_18:\n      dup1\n      0x4051b9aa\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x4051b9aa\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x52fd856b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x63b48ee6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x7d0f7a88\n      eq\n      tag_9\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":5002:5010  revert() */\n      0x00\n      dup1\n      revert\n        /* \"TFGv3/Contracts/SCStorage.sol\":148:5019  contract SCStorage is ISCStorage... */\n    tag_20:\n      dup1\n      0x0cb1982b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0fbbfa3e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2637a477\n      eq\n      tag_5\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":5002:5010  revert() */\n      0x00\n      dup1\n      revert\n        /* \"TFGv3/Contracts/SCStorage.sol\":148:5019  contract SCStorage is ISCStorage... */\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"TFGv3/Contracts/SCStorage.sol\":4935:4943  revert() */\n      0x00\n      dup1\n      revert\n        /* \"TFGv3/Contracts/SCStorage.sol\":148:5019  contract SCStorage is ISCStorage... */\n    tag_2:\n        /* \"TFGv3/Contracts/SCStorage.sol\":5002:5010  revert() */\n      0x00\n      dup1\n      revert\n        /* \"TFGv3/Contracts/SCStorage.sol\":980:1206  function updateNAV(uint comission) external virtual override returns (uint newNAV)... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"TFGv3/Contracts/SCStorage.sol\":980:1206  function updateNAV(uint comission) external virtual override returns (uint newNAV)... */\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TFGv3/Contracts/SCStorage.sol\":405:455  mapping (address => address) public coinOracleAddr */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_33:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":956:1011   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":938:1012   */\n      dup2\n      mstore\n        /* \"#utility.yul\":926:928   */\n      0x20\n        /* \"#utility.yul\":911:929   */\n      add\n        /* \"TFGv3/Contracts/SCStorage.sol\":405:455  mapping (address => address) public coinOracleAddr */\n      tag_30\n        /* \"#utility.yul\":792:1018   */\n      jump\n        /* \"TFGv3/Contracts/SCStorage.sol\":4327:4884  function deleteContract(address newAddr) external virtual override OnlyDeployer... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3714:4173  function delCoin(address coinAddr) external... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_40\n      tag_45\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n        /* \"TFGv3/Contracts/SCStorage.sol\":215:230  uint public NAV */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_26\n      sload(0x00)\n      dup2\n      jump\n        /* \"TFGv3/Contracts/SCStorage.sol\":308:334  address[] public coinArray */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_33\n      tag_53\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"TFGv3/Contracts/SCStorage.sol\":337:375  mapping (address => uint) public coins */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_26\n      tag_58\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_58:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"TFGv3/Contracts/SCStorage.sol\":1216:1988  function transferFunds(address to, uint totalToTransfer) external virtual override returns (bool)... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n        /* \"#utility.yul\":1508:1522   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1501:1523   */\n      iszero\n        /* \"#utility.yul\":1483:1524   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1471:1473   */\n      0x20\n        /* \"#utility.yul\":1456:1474   */\n      add\n        /* \"TFGv3/Contracts/SCStorage.sol\":1216:1988  function transferFunds(address to, uint totalToTransfer) external virtual override returns (bool)... */\n      tag_30\n        /* \"#utility.yul\":1343:1530   */\n      jump\n        /* \"TFGv3/Contracts/SCStorage.sol\":4179:4317  function updateProxy(address newAddr) external virtual override... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_40\n      tag_70\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n        /* \"TFGv3/Contracts/SCStorage.sol\":3438:3704  function addCoin(address coinAddr, uint stable) external  OnlyDeployer... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_40\n      tag_74\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n        /* \"TFGv3/Contracts/SCStorage.sol\":843:974  function initContract(address proxyAddr) external OnlyDeployer NonInit... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_40\n      tag_78\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n        /* \"TFGv3/Contracts/SCStorage.sol\":484:527  mapping (address => address) public quoteIn */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_33\n      tag_82\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_82:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"TFGv3/Contracts/SCStorage.sol\":1998:2528  function oracleNAV() external view returns (uint, uint)... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1709:1734   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":1765:1767   */\n      0x20\n        /* \"#utility.yul\":1750:1768   */\n      dup4\n      add\n        /* \"#utility.yul\":1743:1777   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1682:1700   */\n      add\n        /* \"TFGv3/Contracts/SCStorage.sol\":1998:2528  function oracleNAV() external view returns (uint, uint)... */\n      tag_30\n        /* \"#utility.yul\":1535:1783   */\n      jump\n        /* \"TFGv3/Contracts/SCStorage.sol\":284:304  address public proxy */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      sload(0x01)\n      tag_33\n      swap1\n      0x010000\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"TFGv3/Contracts/SCStorage.sol\":236:257  uint8 public initDone */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      sload(0x01)\n      tag_95\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_95:\n      mload(0x40)\n        /* \"#utility.yul\":1960:1964   */\n      0xff\n        /* \"#utility.yul\":1948:1965   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1930:1966   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1918:1920   */\n      0x20\n        /* \"#utility.yul\":1903:1921   */\n      add\n        /* \"TFGv3/Contracts/SCStorage.sol\":236:257  uint8 public initDone */\n      tag_30\n        /* \"#utility.yul\":1788:1972   */\n      jump\n        /* \"TFGv3/Contracts/SCStorage.sol\":980:1206  function updateNAV(uint comission) external virtual override returns (uint newNAV)... */\n    tag_29:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1050:1061  uint newNAV */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":1106:1111  proxy */\n      0x01\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":1099:1129  IProxy(proxy).exchangeContract */\n      and\n      0x3f0a0797\n        /* \"TFGv3/Contracts/SCStorage.sol\":1099:1131  IProxy(proxy).exchangeContract() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":1085:1131  msg.sender == IProxy(proxy).exchangeContract() */\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":1085:1095  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":1085:1131  msg.sender == IProxy(proxy).exchangeContract() */\n      and\n      eq\n        /* \"TFGv3/Contracts/SCStorage.sol\":1077:1132  require(msg.sender == IProxy(proxy).exchangeContract()) */\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1168:1177  comission */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":1151:1165  calculateNAV() */\n      tag_105\n        /* \"TFGv3/Contracts/SCStorage.sol\":1151:1163  calculateNAV */\n      tag_106\n        /* \"TFGv3/Contracts/SCStorage.sol\":1151:1165  calculateNAV() */\n      jump\t// in\n    tag_105:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1151:1177  calculateNAV() - comission */\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1187:1190  NAV */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":1187:1199  NAV = newNAV */\n      dup2\n      swap1\n      sstore\n        /* \"TFGv3/Contracts/SCStorage.sol\":1142:1177  newNAV = calculateNAV() - comission */\n      swap3\n        /* \"TFGv3/Contracts/SCStorage.sol\":980:1206  function updateNAV(uint comission) external virtual override returns (uint newNAV)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"TFGv3/Contracts/SCStorage.sol\":4327:4884  function deleteContract(address newAddr) external virtual override OnlyDeployer... */\n    tag_42:\n        /* \"TFGv3/Contracts/SCStorage.sol\":717:727  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":731:739  deployer */\n      immutable(\"0xcdf1dd2e8742ccca482be714f2ab38acb16e66300c9790cd19a8abbcdf150d1c\")\n        /* \"TFGv3/Contracts/SCStorage.sol\":717:739  msg.sender == deployer */\n      and\n      eq\n        /* \"TFGv3/Contracts/SCStorage.sol\":709:740  require(msg.sender == deployer) */\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n        /* \"TFGv3/Contracts/SCStorage.sol\":4441:4446  proxy */\n      sload(0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":4456:4497  IProxy(proxyAddr).setStorageAddr(newAddr) */\n      mload(0x40)\n      0xa6fa0b7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":956:1011   */\n      dup4\n      dup2\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":4456:4497  IProxy(proxyAddr).setStorageAddr(newAddr) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":938:1012   */\n      mstore\n        /* \"TFGv3/Contracts/SCStorage.sol\":4441:4446  proxy */\n      0x010000\n      swap1\n      swap3\n      div\n      swap1\n      swap2\n      and\n      swap1\n      dup2\n      swap1\n        /* \"TFGv3/Contracts/SCStorage.sol\":4456:4488  IProxy(proxyAddr).setStorageAddr */\n      0xa6fa0b7b\n      swap1\n        /* \"#utility.yul\":911:929   */\n      0x24\n      add\n        /* \"TFGv3/Contracts/SCStorage.sol\":4456:4497  IProxy(proxyAddr).setStorageAddr(newAddr) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_115:\n      pop\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":4528:4587  abi.encodeWithSignature(\"initContract(address)\", proxyAddr) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":956:1011   */\n      dup5\n      dup2\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":4528:4587  abi.encodeWithSignature(\"initContract(address)\", proxyAddr) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":938:1012   */\n      mstore\n        /* \"TFGv3/Contracts/SCStorage.sol\":4507:4527  newAddr.delegatecall */\n      dup6\n      and\n      swap3\n      pop\n        /* \"#utility.yul\":911:929   */\n      0x44\n      add\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":4528:4587  abi.encodeWithSignature(\"initContract(address)\", proxyAddr) */\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcf9d4afa00000000000000000000000000000000000000000000000000000000\n      or\n      swap1\n      mstore\n        /* \"TFGv3/Contracts/SCStorage.sol\":4507:4588  newAddr.delegatecall(abi.encodeWithSignature(\"initContract(address)\", proxyAddr)) */\n      mload\n      tag_117\n      swap2\n        /* \"TFGv3/Contracts/SCStorage.sol\":4528:4587  abi.encodeWithSignature(\"initContract(address)\", proxyAddr) */\n      swap1\n        /* \"TFGv3/Contracts/SCStorage.sol\":4507:4588  newAddr.delegatecall(abi.encodeWithSignature(\"initContract(address)\", proxyAddr)) */\n      tag_118\n      jump\t// in\n    tag_117:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_121\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_120)\n    tag_121:\n      0x60\n      swap2\n      pop\n    tag_120:\n      pop\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":4607:4616  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":4607:4623  coinArray.length */\n      sload\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":4598:4604  uint n */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":4633:4837  for(uint i = 0; i < n; i++)... */\n    tag_122:\n        /* \"TFGv3/Contracts/SCStorage.sol\":4653:4654  n */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":4649:4650  i */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":4649:4654  i < n */\n      lt\n        /* \"TFGv3/Contracts/SCStorage.sol\":4633:4837  for(uint i = 0; i < n; i++)... */\n      iszero\n      tag_123\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":4683:4706  address tokenToTransfer */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":4709:4718  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":4719:4720  i */\n      dup3\n        /* \"TFGv3/Contracts/SCStorage.sol\":4709:4721  coinArray[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_126\n      jumpi\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"TFGv3/Contracts/SCStorage.sol\":4777:4825  IERC20(tokenToTransfer).balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"TFGv3/Contracts/SCStorage.sol\":4819:4823  this */\n      address\n        /* \"TFGv3/Contracts/SCStorage.sol\":4777:4825  IERC20(tokenToTransfer).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":938:1012   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":4709:4721  coinArray[i] */\n      swap1\n      swap2\n      and\n      swap2\n      pop\n      dup2\n      swap1\n        /* \"TFGv3/Contracts/SCStorage.sol\":4735:4767  IERC20(tokenToTransfer).transfer */\n      0xa9059cbb\n      swap1\n        /* \"TFGv3/Contracts/SCStorage.sol\":4768:4775  newAddr */\n      dup8\n      swap1\n        /* \"TFGv3/Contracts/SCStorage.sol\":4709:4721  coinArray[i] */\n      dup4\n      swap1\n        /* \"TFGv3/Contracts/SCStorage.sol\":4777:4810  IERC20(tokenToTransfer).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":911:929   */\n      0x24\n      add\n        /* \"TFGv3/Contracts/SCStorage.sol\":4777:4825  IERC20(tokenToTransfer).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"TFGv3/Contracts/SCStorage.sol\":4735:4826  IERC20(tokenToTransfer).transfer(newAddr, IERC20(tokenToTransfer).balanceOf(address(this))) */\n      mload(0x40)\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3553:3608   */\n      swap1\n      swap3\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":4735:4826  IERC20(tokenToTransfer).transfer(newAddr, IERC20(tokenToTransfer).balanceOf(address(this))) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":3535:3609   */\n      mstore\n        /* \"#utility.yul\":3625:3643   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3618:3652   */\n      mstore\n        /* \"#utility.yul\":3508:3526   */\n      0x44\n      add\n        /* \"TFGv3/Contracts/SCStorage.sol\":4735:4826  IERC20(tokenToTransfer).transfer(newAddr, IERC20(tokenToTransfer).balanceOf(address(this))) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_137\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":4669:4837  {... */\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":4656:4659  i++ */\n      dup1\n      dup1\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      swap2\n      pop\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":4633:4837  for(uint i = 0; i < n; i++)... */\n      jump(tag_122)\n    tag_123:\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":4867:4875  deployer */\n      immutable(\"0xcdf1dd2e8742ccca482be714f2ab38acb16e66300c9790cd19a8abbcdf150d1c\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":4846:4877  selfdestruct(payable(deployer)) */\n      and\n      selfdestruct\n        /* \"TFGv3/Contracts/SCStorage.sol\":3714:4173  function delCoin(address coinAddr) external... */\n    tag_46:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3780:3790  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":3794:3802  deployer */\n      immutable(\"0xcdf1dd2e8742ccca482be714f2ab38acb16e66300c9790cd19a8abbcdf150d1c\")\n        /* \"TFGv3/Contracts/SCStorage.sol\":3780:3802  msg.sender == deployer */\n      and\n      eq\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":3780:3852  msg.sender == deployer || msg.sender == IProxy(proxy).exchangeContract() */\n      tag_143\n      jumpi\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3827:3832  proxy */\n      0x01\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":3820:3850  IProxy(proxy).exchangeContract */\n      and\n      0x3f0a0797\n        /* \"TFGv3/Contracts/SCStorage.sol\":3820:3852  IProxy(proxy).exchangeContract() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":3806:3852  msg.sender == IProxy(proxy).exchangeContract() */\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":3806:3816  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":3806:3852  msg.sender == IProxy(proxy).exchangeContract() */\n      and\n      eq\n        /* \"TFGv3/Contracts/SCStorage.sol\":3780:3852  msg.sender == deployer || msg.sender == IProxy(proxy).exchangeContract() */\n    tag_143:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3772:3853  require(msg.sender == deployer || msg.sender == IProxy(proxy).exchangeContract()) */\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":3866:3881  coins[coinAddr] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"TFGv3/Contracts/SCStorage.sol\":3866:3871  coins */\n      0x03\n        /* \"TFGv3/Contracts/SCStorage.sol\":3866:3881  coins[coinAddr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"TFGv3/Contracts/SCStorage.sol\":3885:3886  2 */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":3866:3886  coins[coinAddr] == 2 */\n      sub\n        /* \"TFGv3/Contracts/SCStorage.sol\":3863:3897  if(coins[coinAddr] == 2) nStable-- */\n      tag_148\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":3888:3895  nStable */\n      0x01\n        /* \"TFGv3/Contracts/SCStorage.sol\":3888:3897  nStable-- */\n      dup1\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      swap1\n        /* \"TFGv3/Contracts/SCStorage.sol\":3888:3895  nStable */\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":3888:3897  nStable-- */\n      tag_149\n      dup4\n      tag_150\n      jump\t// in\n    tag_149:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3863:3897  if(coins[coinAddr] == 2) nStable-- */\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":3907:3922  coins[coinAddr] */\n      dup2\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":3925:3926  0 */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":3907:3922  coins[coinAddr] */\n      swap1\n      dup2\n      mstore\n        /* \"TFGv3/Contracts/SCStorage.sol\":3907:3912  coins */\n      0x03\n        /* \"TFGv3/Contracts/SCStorage.sol\":3907:3922  coins[coinAddr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"TFGv3/Contracts/SCStorage.sol\":3907:3926  coins[coinAddr] = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"TFGv3/Contracts/SCStorage.sol\":3945:3954  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":3945:3961  coinArray.length */\n      sload\n      swap1\n        /* \"TFGv3/Contracts/SCStorage.sol\":3971:4167  for(uint i = 0; i < n; i++)... */\n    tag_151:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3991:3992  n */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":3987:3988  i */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":3987:3992  i < n */\n      lt\n        /* \"TFGv3/Contracts/SCStorage.sol\":3971:4167  for(uint i = 0; i < n; i++)... */\n      iszero\n      tag_152\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":4040:4048  coinAddr */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":4024:4048  coinArray[i] == coinAddr */\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":4024:4033  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":4034:4035  i */\n      dup3\n        /* \"TFGv3/Contracts/SCStorage.sol\":4024:4036  coinArray[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_155\n      jumpi\n      tag_155\n      tag_127\n      jump\t// in\n    tag_155:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":4024:4048  coinArray[i] == coinAddr */\n      sub\n        /* \"TFGv3/Contracts/SCStorage.sol\":4021:4157  if(coinArray[i] == coinAddr)... */\n      tag_157\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":4095:4104  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":4105:4108  n-1 */\n      tag_158\n        /* \"TFGv3/Contracts/SCStorage.sol\":4107:4108  1 */\n      0x01\n        /* \"TFGv3/Contracts/SCStorage.sol\":4105:4106  n */\n      dup5\n        /* \"TFGv3/Contracts/SCStorage.sol\":4105:4108  n-1 */\n      tag_108\n      jump\t// in\n    tag_158:\n        /* \"TFGv3/Contracts/SCStorage.sol\":4095:4109  coinArray[n-1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_160\n      jumpi\n      tag_160\n      tag_127\n      jump\t// in\n    tag_160:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"TFGv3/Contracts/SCStorage.sol\":4080:4089  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":4080:4092  coinArray[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":4095:4109  coinArray[n-1] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"TFGv3/Contracts/SCStorage.sol\":4090:4091  i */\n      dup4\n      swap1\n        /* \"TFGv3/Contracts/SCStorage.sol\":4080:4092  coinArray[i] */\n      dup2\n      lt\n      tag_163\n      jumpi\n      tag_163\n      tag_127\n      jump\t// in\n    tag_163:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":4080:4109  coinArray[i] = coinArray[n-1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":4127:4136  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":4127:4142  coinArray.pop() */\n      dup1\n      sload\n      dup1\n      tag_166\n      jumpi\n      tag_166\n      tag_167\n      jump\t// in\n    tag_166:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n        /* \"TFGv3/Contracts/SCStorage.sol\":4021:4157  if(coinArray[i] == coinAddr)... */\n    tag_157:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3994:3997  i++ */\n      dup1\n      tag_169\n      dup2\n      tag_141\n      jump\t// in\n    tag_169:\n      swap2\n      pop\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3971:4167  for(uint i = 0; i < n; i++)... */\n      jump(tag_151)\n    tag_152:\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3762:4173  {... */\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3714:4173  function delCoin(address coinAddr) external... */\n      pop\n      jump\t// out\n        /* \"TFGv3/Contracts/SCStorage.sol\":308:334  address[] public coinArray */\n    tag_54:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"TFGv3/Contracts/SCStorage.sol\":1216:1988  function transferFunds(address to, uint totalToTransfer) external virtual override returns (bool)... */\n    tag_65:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1308:1312  bool */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":1328:1345  address proxyAddr */\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":1348:1353  proxy */\n      0x01\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":1328:1353  address proxyAddr = proxy */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1392:1401  proxyAddr */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":1385:1419  IProxy(proxyAddr).exchangeContract */\n      and\n      0x3f0a0797\n        /* \"TFGv3/Contracts/SCStorage.sol\":1385:1421  IProxy(proxyAddr).exchangeContract() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_174\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_174:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_175\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":1371:1421  msg.sender == IProxy(proxyAddr).exchangeContract() */\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":1371:1381  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":1371:1421  msg.sender == IProxy(proxyAddr).exchangeContract() */\n      and\n      eq\n        /* \"TFGv3/Contracts/SCStorage.sol\":1371:1477  msg.sender == IProxy(proxyAddr).exchangeContract() || msg.sender == IProxy(proxyAddr).commissionContract() */\n      dup1\n      tag_176\n      jumpi\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1446:1455  proxyAddr */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":1439:1475  IProxy(proxyAddr).commissionContract */\n      and\n      0xda8909e5\n        /* \"TFGv3/Contracts/SCStorage.sol\":1439:1477  IProxy(proxyAddr).commissionContract() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_178\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_179\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":1425:1477  msg.sender == IProxy(proxyAddr).commissionContract() */\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":1425:1435  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":1425:1477  msg.sender == IProxy(proxyAddr).commissionContract() */\n      and\n      eq\n        /* \"TFGv3/Contracts/SCStorage.sol\":1371:1477  msg.sender == IProxy(proxyAddr).exchangeContract() || msg.sender == IProxy(proxyAddr).commissionContract() */\n    tag_176:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1363:1478  require(msg.sender == IProxy(proxyAddr).exchangeContract() || msg.sender == IProxy(proxyAddr).commissionContract()) */\n      tag_180\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_180:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1497:1506  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":1497:1513  coinArray.length */\n      sload\n        /* \"TFGv3/Contracts/SCStorage.sol\":1488:1494  uint n */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":1532:1961  for(uint i = 0; i < n; i++)... */\n    tag_181:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1552:1553  n */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":1548:1549  i */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":1548:1553  i < n */\n      lt\n        /* \"TFGv3/Contracts/SCStorage.sol\":1532:1961  for(uint i = 0; i < n; i++)... */\n      iszero\n      tag_182\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":1582:1598  address coinAddr */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":1601:1610  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":1611:1612  i */\n      dup3\n        /* \"TFGv3/Contracts/SCStorage.sol\":1601:1613  coinArray[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_185\n      jumpi\n      tag_185\n      tag_127\n      jump\t// in\n    tag_185:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":1630:1645  coins[coinAddr] */\n      dup1\n      dup4\n      mstore\n        /* \"TFGv3/Contracts/SCStorage.sol\":1630:1635  coins */\n      0x03\n        /* \"TFGv3/Contracts/SCStorage.sol\":1630:1645  coins[coinAddr] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"TFGv3/Contracts/SCStorage.sol\":1601:1613  coinArray[i] */\n      swap1\n      swap2\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1649:1650  2 */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":1630:1650  coins[coinAddr] == 2 */\n      sub\n        /* \"TFGv3/Contracts/SCStorage.sol\":1627:1951  if(coins[coinAddr] == 2)... */\n      tag_187\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":1682:1696  uint8 decimals */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":1706:1714  coinAddr */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":1699:1724  IERC20(coinAddr).decimals */\n      and\n      0x313ce567\n        /* \"TFGv3/Contracts/SCStorage.sol\":1699:1726  IERC20(coinAddr).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1682:1726  uint8 decimals = IERC20(coinAddr).decimals() */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1758:1760  18 */\n      0x12\n        /* \"TFGv3/Contracts/SCStorage.sol\":1747:1755  decimals */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":1747:1760  decimals < 18 */\n      0xff\n      and\n      lt\n        /* \"TFGv3/Contracts/SCStorage.sol\":1744:1936  if(decimals < 18) IERC20(coinAddr).transfer(to, totalToTransfer/nStable/10**(uint(decimals)-18));... */\n      iszero\n      tag_192\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":1762:1787  IERC20(coinAddr).transfer */\n      dup3\n      and\n      0xa9059cbb\n        /* \"TFGv3/Contracts/SCStorage.sol\":1788:1790  to */\n      dup10\n        /* \"TFGv3/Contracts/SCStorage.sol\":1821:1838  uint(decimals)-18 */\n      tag_193\n        /* \"TFGv3/Contracts/SCStorage.sol\":1836:1838  18 */\n      0x12\n        /* \"TFGv3/Contracts/SCStorage.sol\":1821:1835  uint(decimals) */\n      0xff\n      dup7\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":1821:1838  uint(decimals)-18 */\n      tag_108\n      jump\t// in\n    tag_193:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1816:1839  10**(uint(decimals)-18) */\n      tag_194\n      swap1\n        /* \"TFGv3/Contracts/SCStorage.sol\":1816:1818  10 */\n      0x0a\n        /* \"TFGv3/Contracts/SCStorage.sol\":1816:1839  10**(uint(decimals)-18) */\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1808:1815  nStable */\n      sload(0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":1792:1815  totalToTransfer/nStable */\n      tag_196\n      swap1\n        /* \"TFGv3/Contracts/SCStorage.sol\":1808:1815  nStable */\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":1792:1807  totalToTransfer */\n      dup13\n        /* \"TFGv3/Contracts/SCStorage.sol\":1792:1815  totalToTransfer/nStable */\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1792:1839  totalToTransfer/nStable/10**(uint(decimals)-18) */\n      tag_198\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_198:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1762:1840  IERC20(coinAddr).transfer(to, totalToTransfer/nStable/10**(uint(decimals)-18)) */\n      mload(0x40)\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3553:3608   */\n      swap1\n      swap3\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":1762:1840  IERC20(coinAddr).transfer(to, totalToTransfer/nStable/10**(uint(decimals)-18)) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":3535:3609   */\n      mstore\n        /* \"#utility.yul\":3625:3643   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3618:3652   */\n      mstore\n        /* \"#utility.yul\":3508:3526   */\n      0x44\n      add\n        /* \"TFGv3/Contracts/SCStorage.sol\":1762:1840  IERC20(coinAddr).transfer(to, totalToTransfer/nStable/10**(uint(decimals)-18)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_201:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_202\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_202:\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1744:1936  if(decimals < 18) IERC20(coinAddr).transfer(to, totalToTransfer/nStable/10**(uint(decimals)-18));... */\n      jump(tag_204)\n    tag_192:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1866:1874  decimals */\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":1866:1880  decimals == 18 */\n      0xff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":1878:1880  18 */\n      0x12\n        /* \"TFGv3/Contracts/SCStorage.sol\":1866:1880  decimals == 18 */\n      sub\n        /* \"TFGv3/Contracts/SCStorage.sol\":1863:1936  if(decimals == 18) IERC20(coinAddr).transfer(to, totalToTransfer/nStable) */\n      tag_204\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":1928:1935  nStable */\n      sload(0x01)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":1882:1907  IERC20(coinAddr).transfer */\n      dup4\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"TFGv3/Contracts/SCStorage.sol\":1908:1910  to */\n      dup11\n      swap1\n        /* \"TFGv3/Contracts/SCStorage.sol\":1912:1935  totalToTransfer/nStable */\n      tag_205\n      swap1\n        /* \"TFGv3/Contracts/SCStorage.sol\":1928:1935  nStable */\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":1912:1927  totalToTransfer */\n      dup12\n        /* \"TFGv3/Contracts/SCStorage.sol\":1912:1935  totalToTransfer/nStable */\n      tag_197\n      jump\t// in\n    tag_205:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1882:1936  IERC20(coinAddr).transfer(to, totalToTransfer/nStable) */\n      mload(0x40)\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3553:3608   */\n      swap1\n      swap3\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":1882:1936  IERC20(coinAddr).transfer(to, totalToTransfer/nStable) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":3535:3609   */\n      mstore\n        /* \"#utility.yul\":3625:3643   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3618:3652   */\n      mstore\n        /* \"#utility.yul\":3508:3526   */\n      0x44\n      add\n        /* \"TFGv3/Contracts/SCStorage.sol\":1882:1936  IERC20(coinAddr).transfer(to, totalToTransfer/nStable) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_208\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_208:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_209\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_209:\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1863:1936  if(decimals == 18) IERC20(coinAddr).transfer(to, totalToTransfer/nStable) */\n    tag_204:\n        /* \"TFGv3/Contracts/SCStorage.sol\":1664:1951  {... */\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1627:1951  if(coins[coinAddr] == 2)... */\n    tag_187:\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1555:1558  i++ */\n      dup1\n      tag_210\n      dup2\n      tag_141\n      jump\t// in\n    tag_210:\n      swap2\n      pop\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1532:1961  for(uint i = 0; i < n; i++)... */\n      jump(tag_181)\n    tag_182:\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1977:1981  true */\n      0x01\n        /* \"TFGv3/Contracts/SCStorage.sol\":1970:1981  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1216:1988  function transferFunds(address to, uint totalToTransfer) external virtual override returns (bool)... */\n    tag_172:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"TFGv3/Contracts/SCStorage.sol\":4179:4317  function updateProxy(address newAddr) external virtual override... */\n    tag_71:\n        /* \"TFGv3/Contracts/SCStorage.sol\":4279:4284  proxy */\n      sload(0x01)\n      0x010000\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":4265:4275  msg.sender */\n      caller\n        /* \"TFGv3/Contracts/SCStorage.sol\":4265:4284  msg.sender == proxy */\n      eq\n        /* \"TFGv3/Contracts/SCStorage.sol\":4257:4285  require(msg.sender == proxy) */\n      tag_212\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_212:\n        /* \"TFGv3/Contracts/SCStorage.sol\":4295:4300  proxy */\n      0x01\n        /* \"TFGv3/Contracts/SCStorage.sol\":4295:4310  proxy = newAddr */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      0x010000\n      mul\n      0xffffffffffffffffffff0000000000000000000000000000000000000000ffff\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"TFGv3/Contracts/SCStorage.sol\":4179:4317  function updateProxy(address newAddr) external virtual override... */\n      jump\t// out\n        /* \"TFGv3/Contracts/SCStorage.sol\":3438:3704  function addCoin(address coinAddr, uint stable) external  OnlyDeployer... */\n    tag_75:\n        /* \"TFGv3/Contracts/SCStorage.sol\":717:727  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":731:739  deployer */\n      immutable(\"0xcdf1dd2e8742ccca482be714f2ab38acb16e66300c9790cd19a8abbcdf150d1c\")\n        /* \"TFGv3/Contracts/SCStorage.sol\":717:739  msg.sender == deployer */\n      and\n      eq\n        /* \"TFGv3/Contracts/SCStorage.sol\":709:740  require(msg.sender == deployer) */\n      tag_214\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_214:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3526:3532  stable */\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":3536:3537  0 */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":3526:3537  stable == 0 */\n      sub\n        /* \"TFGv3/Contracts/SCStorage.sol\":3523:3664  if(stable == 0) coins[coinAddr] = 1;... */\n      tag_216\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":3539:3554  coins[coinAddr] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"TFGv3/Contracts/SCStorage.sol\":3539:3544  coins */\n      0x03\n        /* \"TFGv3/Contracts/SCStorage.sol\":3539:3554  coins[coinAddr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"TFGv3/Contracts/SCStorage.sol\":3557:3558  1 */\n      0x01\n        /* \"TFGv3/Contracts/SCStorage.sol\":3539:3558  coins[coinAddr] = 1 */\n      swap1\n      sstore\n        /* \"TFGv3/Contracts/SCStorage.sol\":3523:3664  if(stable == 0) coins[coinAddr] = 1;... */\n      jump(tag_218)\n    tag_216:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3576:3582  stable */\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":3586:3587  1 */\n      0x01\n        /* \"TFGv3/Contracts/SCStorage.sol\":3576:3587  stable == 1 */\n      sub\n        /* \"TFGv3/Contracts/SCStorage.sol\":3573:3664  if(stable == 1)... */\n      tag_218\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":3611:3626  coins[coinAddr] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"TFGv3/Contracts/SCStorage.sol\":3611:3616  coins */\n      0x03\n        /* \"TFGv3/Contracts/SCStorage.sol\":3611:3626  coins[coinAddr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"TFGv3/Contracts/SCStorage.sol\":3629:3630  2 */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":3611:3630  coins[coinAddr] = 2 */\n      swap1\n      sstore\n        /* \"TFGv3/Contracts/SCStorage.sol\":3644:3651  nStable */\n      0x01\n        /* \"TFGv3/Contracts/SCStorage.sol\":3644:3653  nStable++ */\n      dup1\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      swap1\n        /* \"TFGv3/Contracts/SCStorage.sol\":3644:3651  nStable */\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":3644:3653  nStable++ */\n      tag_219\n      dup4\n      tag_220\n      jump\t// in\n    tag_219:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3573:3664  if(stable == 1)... */\n    tag_218:\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3673:3682  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":3673:3697  coinArray.push(coinAddr) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      swap1\n      swap2\n      mstore\n      0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace\n      add\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"TFGv3/Contracts/SCStorage.sol\":3438:3704  function addCoin(address coinAddr, uint stable) external  OnlyDeployer... */\n      jump\t// out\n        /* \"TFGv3/Contracts/SCStorage.sol\":843:974  function initContract(address proxyAddr) external OnlyDeployer NonInit... */\n    tag_79:\n        /* \"TFGv3/Contracts/SCStorage.sol\":717:727  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":731:739  deployer */\n      immutable(\"0xcdf1dd2e8742ccca482be714f2ab38acb16e66300c9790cd19a8abbcdf150d1c\")\n        /* \"TFGv3/Contracts/SCStorage.sol\":717:739  msg.sender == deployer */\n      and\n      eq\n        /* \"TFGv3/Contracts/SCStorage.sol\":709:740  require(msg.sender == deployer) */\n      tag_223\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_223:\n        /* \"TFGv3/Contracts/SCStorage.sol\":805:813  initDone */\n      and(0xff, sload(0x01))\n        /* \"TFGv3/Contracts/SCStorage.sol\":805:818  initDone == 0 */\n      iszero\n        /* \"TFGv3/Contracts/SCStorage.sol\":797:819  require(initDone == 0) */\n      tag_225\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_225:\n        /* \"TFGv3/Contracts/SCStorage.sol\":928:933  proxy */\n      0x01\n        /* \"TFGv3/Contracts/SCStorage.sol\":928:945  proxy = proxyAddr */\n      dup1\n      sload\n        /* \"TFGv3/Contracts/SCStorage.sol\":955:967  initDone = 1 */\n      0xffffffffffffffffffff0000000000000000000000000000000000000000ff00\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":928:945  proxy = proxyAddr */\n      0x010000\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      mul\n        /* \"TFGv3/Contracts/SCStorage.sol\":955:967  initDone = 1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      swap2\n      swap1\n      swap2\n      or\n      dup2\n      or\n      swap1\n      sstore\n        /* \"TFGv3/Contracts/SCStorage.sol\":843:974  function initContract(address proxyAddr) external OnlyDeployer NonInit... */\n      jump\t// out\n        /* \"TFGv3/Contracts/SCStorage.sol\":1998:2528  function oracleNAV() external view returns (uint, uint)... */\n    tag_87:\n        /* \"TFGv3/Contracts/SCStorage.sol\":2042:2046  uint */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":2048:2052  uint */\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":2297:2313  uint lastUpdated */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":2337:2342  proxy */\n      0x01\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":2330:2362  IProxy(proxy).commissionContract */\n      and\n      0xda8909e5\n        /* \"TFGv3/Contracts/SCStorage.sol\":2330:2364  IProxy(proxy).commissionContract() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_229\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_229:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_230\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_230:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":2316:2377  ISCCommission(IProxy(proxy).commissionContract()).lastUpdated */\n      and\n      0xd0b06f5d\n        /* \"TFGv3/Contracts/SCStorage.sol\":2316:2379  ISCCommission(IProxy(proxy).commissionContract()).lastUpdated() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_232\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_232:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_233\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_233:\n        /* \"TFGv3/Contracts/SCStorage.sol\":2297:2379  uint lastUpdated = ISCCommission(IProxy(proxy).commissionContract()).lastUpdated() */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":2389:2398  uint acum */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":2422:2427  proxy */\n      0x01\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":2415:2447  IProxy(proxy).commissionContract */\n      and\n      0xda8909e5\n        /* \"TFGv3/Contracts/SCStorage.sol\":2415:2449  IProxy(proxy).commissionContract() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_235\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_235:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_236\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_236:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":2401:2466  ISCCommission(IProxy(proxy).commissionContract()).accumCommission */\n      and\n      0x7f8483a4\n        /* \"TFGv3/Contracts/SCStorage.sol\":2401:2468  ISCCommission(IProxy(proxy).commissionContract()).accumCommission() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_238\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_238:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_239\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_239:\n        /* \"TFGv3/Contracts/SCStorage.sol\":2389:2468  uint acum = ISCCommission(IProxy(proxy).commissionContract()).accumCommission() */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":2503:2507  acum */\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":2486:2500  calculateNAV() */\n      tag_240\n        /* \"TFGv3/Contracts/SCStorage.sol\":2486:2498  calculateNAV */\n      tag_106\n        /* \"TFGv3/Contracts/SCStorage.sol\":2486:2500  calculateNAV() */\n      jump\t// in\n    tag_240:\n        /* \"TFGv3/Contracts/SCStorage.sol\":2486:2507  calculateNAV() - acum */\n      tag_241\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_241:\n        /* \"TFGv3/Contracts/SCStorage.sol\":2478:2521  return (calculateNAV() - acum, lastUpdated) */\n      swap5\n        /* \"TFGv3/Contracts/SCStorage.sol\":2509:2520  lastUpdated */\n      swap2\n      swap4\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":1998:2528  function oracleNAV() external view returns (uint, uint)... */\n      swap1\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"TFGv3/Contracts/SCStorage.sol\":2538:3428  function calculateNAV() internal view returns (uint newNAV)... */\n    tag_106:\n        /* \"TFGv3/Contracts/SCStorage.sol\":2751:2760  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":2751:2767  coinArray.length */\n      sload\n        /* \"TFGv3/Contracts/SCStorage.sol\":2585:2596  uint newNAV */\n      0x00\n      swap1\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":2777:3422  for(uint i = 0; i < n; i++)... */\n    tag_243:\n        /* \"TFGv3/Contracts/SCStorage.sol\":2797:2798  n */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":2793:2794  i */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":2793:2798  i < n */\n      lt\n        /* \"TFGv3/Contracts/SCStorage.sol\":2777:3422  for(uint i = 0; i < n; i++)... */\n      iszero\n      tag_244\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":2827:2839  address coin */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":2842:2851  coinArray */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":2852:2853  i */\n      dup3\n        /* \"TFGv3/Contracts/SCStorage.sol\":2842:2854  coinArray[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_247\n      jumpi\n      tag_247\n      tag_127\n      jump\t// in\n    tag_247:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      add\n      sload\n        /* \"TFGv3/Contracts/SCStorage.sol\":2883:2920  IERC20(coin).balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"TFGv3/Contracts/SCStorage.sol\":2914:2918  this */\n      address\n        /* \"TFGv3/Contracts/SCStorage.sol\":2883:2920  IERC20(coin).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":938:1012   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":2842:2854  coinArray[i] */\n      swap1\n      swap2\n      and\n      swap3\n      pop\n      dup3\n      swap1\n        /* \"TFGv3/Contracts/SCStorage.sol\":2883:2905  IERC20(coin).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":911:929   */\n      0x24\n      add\n        /* \"TFGv3/Contracts/SCStorage.sol\":2883:2920  IERC20(coin).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_251\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_251:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_252\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_252:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":2948:2959  coins[coin] */\n      dup4\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":2934:2945  uint stable */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":2948:2959  coins[coin] */\n      swap1\n      dup2\n      mstore\n        /* \"TFGv3/Contracts/SCStorage.sol\":2948:2953  coins */\n      0x03\n        /* \"TFGv3/Contracts/SCStorage.sol\":2948:2959  coins[coin] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"TFGv3/Contracts/SCStorage.sol\":2868:2920  uint balance = IERC20(coin).balanceOf(address(this)) */\n      swap1\n      swap2\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":2999:3000  1 */\n      0x01\n        /* \"TFGv3/Contracts/SCStorage.sol\":2989:3000  stable == 1 */\n      dup2\n      swap1\n      sub\n        /* \"TFGv3/Contracts/SCStorage.sol\":2986:3411  if(stable == 1)... */\n      tag_253\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":3143:3163  coinOracleAddr[coin] */\n      dup1\n      dup5\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":3032:3042  uint quote */\n      0x00\n        /* \"TFGv3/Contracts/SCStorage.sol\":3143:3163  coinOracleAddr[coin] */\n      swap1\n      dup2\n      mstore\n        /* \"TFGv3/Contracts/SCStorage.sol\":3143:3157  coinOracleAddr */\n      0x04\n        /* \"TFGv3/Contracts/SCStorage.sol\":3143:3163  coinOracleAddr[coin] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"TFGv3/Contracts/SCStorage.sol\":3032:3042  uint quote */\n      swap1\n      swap2\n      dup3\n      swap2\n        /* \"TFGv3/Contracts/SCStorage.sol\":3121:3167  OracleLibrary.consult(coinOracleAddr[coin], 0) */\n      tag_254\n      swap2\n        /* \"TFGv3/Contracts/SCStorage.sol\":3143:3163  coinOracleAddr[coin] */\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":3032:3042  uint quote */\n      dup3\n        /* \"TFGv3/Contracts/SCStorage.sol\":3121:3142  OracleLibrary.consult */\n      tag_255\n        /* \"TFGv3/Contracts/SCStorage.sol\":3121:3167  OracleLibrary.consult(coinOracleAddr[coin], 0) */\n      jump\t// in\n    tag_254:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/SCStorage.sol\":3270:3283  quoteIn[coin] */\n      dup1\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"TFGv3/Contracts/SCStorage.sol\":3270:3277  quoteIn */\n      0x05\n        /* \"TFGv3/Contracts/SCStorage.sol\":3270:3283  quoteIn[coin] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"TFGv3/Contracts/SCStorage.sol\":3091:3167  (int24 arithmeticMeanTick,) = OracleLibrary.consult(coinOracleAddr[coin], 0) */\n      swap2\n      swap3\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3197:3284  OracleLibrary.getQuoteAtTick(arithmeticMeanTick, uint128(balance), coin, quoteIn[coin]) */\n      tag_256\n      swap2\n        /* \"TFGv3/Contracts/SCStorage.sol\":3091:3167  (int24 arithmeticMeanTick,) = OracleLibrary.consult(coinOracleAddr[coin], 0) */\n      dup4\n      swap2\n        /* \"TFGv3/Contracts/SCStorage.sol\":3254:3261  balance */\n      dup8\n      swap2\n        /* \"TFGv3/Contracts/SCStorage.sol\":3264:3268  coin */\n      dup10\n      swap2\n        /* \"TFGv3/Contracts/SCStorage.sol\":3270:3283  quoteIn[coin] */\n      and\n        /* \"TFGv3/Contracts/SCStorage.sol\":3197:3225  OracleLibrary.getQuoteAtTick */\n      tag_257\n        /* \"TFGv3/Contracts/SCStorage.sol\":3197:3284  OracleLibrary.getQuoteAtTick(arithmeticMeanTick, uint128(balance), coin, quoteIn[coin]) */\n      jump\t// in\n    tag_256:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3189:3284  quote = OracleLibrary.getQuoteAtTick(arithmeticMeanTick, uint128(balance), coin, quoteIn[coin]) */\n      swap2\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3330:3345  balance * quote */\n      tag_258\n      swap1\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3189:3284  quote = OracleLibrary.getQuoteAtTick(arithmeticMeanTick, uint128(balance), coin, quoteIn[coin]) */\n      dup2\n        /* \"TFGv3/Contracts/SCStorage.sol\":3330:3337  balance */\n      dup5\n        /* \"TFGv3/Contracts/SCStorage.sol\":3330:3345  balance * quote */\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3320:3345  newNAV += balance * quote */\n      tag_260\n      swap1\n      dup9\n      tag_261\n      jump\t// in\n    tag_260:\n      swap7\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3014:3360  {... */\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":2986:3411  if(stable == 1)... */\n      jump(tag_263)\n    tag_253:\n        /* \"TFGv3/Contracts/SCStorage.sol\":3381:3387  stable */\n      dup1\n        /* \"TFGv3/Contracts/SCStorage.sol\":3391:3392  2 */\n      0x02\n        /* \"TFGv3/Contracts/SCStorage.sol\":3381:3392  stable == 2 */\n      sub\n        /* \"TFGv3/Contracts/SCStorage.sol\":3378:3411  if(stable == 2) newNAV += balance */\n      tag_263\n      jumpi\n        /* \"TFGv3/Contracts/SCStorage.sol\":3394:3411  newNAV += balance */\n      tag_264\n        /* \"TFGv3/Contracts/SCStorage.sol\":3404:3411  balance */\n      dup3\n        /* \"TFGv3/Contracts/SCStorage.sol\":3394:3411  newNAV += balance */\n      dup8\n      tag_261\n      jump\t// in\n    tag_264:\n      swap6\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":3378:3411  if(stable == 2) newNAV += balance */\n    tag_263:\n        /* \"TFGv3/Contracts/SCStorage.sol\":2813:3422  {... */\n      pop\n      pop\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":2800:2803  i++ */\n      dup1\n      dup1\n      tag_265\n      swap1\n      tag_141\n      jump\t// in\n    tag_265:\n      swap2\n      pop\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":2777:3422  for(uint i = 0; i < n; i++)... */\n      jump(tag_243)\n    tag_244:\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":2602:3428  {... */\n      pop\n        /* \"TFGv3/Contracts/SCStorage.sol\":2538:3428  function calculateNAV() internal view returns (uint newNAV)... */\n      swap1\n      jump\t// out\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":808:2049  function consult(address pool, uint32 secondsAgo)... */\n    tag_255:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":905:929  int24 arithmeticMeanTick */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":931:960  uint128 harmonicMeanLiquidity */\n      dup1\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":984:994  secondsAgo */\n      dup3\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":984:999  secondsAgo != 0 */\n      0xffffffff\n      and\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":998:999  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":984:999  secondsAgo != 0 */\n      sub\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":976:1006  require(secondsAgo != 0, 'BP') */\n      tag_267\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":7411:7413   */\n      0x20\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":976:1006  require(secondsAgo != 0, 'BP') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7393:7414   */\n      mstore\n        /* \"#utility.yul\":7450:7451   */\n      0x02\n        /* \"#utility.yul\":7430:7448   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7423:7452   */\n      mstore\n        /* \"#utility.yul\":7488:7492   */\n      0x4250000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7468:7486   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7461:7493   */\n      mstore\n        /* \"#utility.yul\":7510:7528   */\n      0x64\n      add\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":976:1006  require(secondsAgo != 0, 'BP') */\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_267:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1047:1062  new uint32[](2) */\n      0x40\n      dup1\n      mload\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1060:1061  2 */\n      0x02\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1047:1062  new uint32[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1017:1044  uint32[] memory secondsAgos */\n      0x00\n      swap3\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1047:1062  new uint32[](2) */\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1017:1062  uint32[] memory secondsAgos = new uint32[](2) */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1089:1099  secondsAgo */\n      dup4\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1072:1083  secondsAgos */\n      dup2\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1084:1085  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1072:1086  secondsAgos[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_275\n      jumpi\n      tag_275\n      tag_127\n      jump\t// in\n    tag_275:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1072:1099  secondsAgos[0] = secondsAgo */\n      swap1\n      0xffffffff\n      and\n      swap1\n      dup2\n      0xffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1126:1127  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1109:1120  secondsAgos */\n      dup2\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1121:1122  1 */\n      0x01\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1109:1123  secondsAgos[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_277\n      jumpi\n      tag_277\n      tag_127\n      jump\t// in\n    tag_277:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1109:1127  secondsAgos[1] = 0 */\n      swap1\n      0xffffffff\n      and\n      swap1\n      dup2\n      0xffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1139:1169  int56[] memory tickCumulatives */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1171:1222  uint160[] memory secondsPerLiquidityCumulativeX128s */\n      dup1\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1253:1257  pool */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1238:1266  IUniswapV3Pool(pool).observe */\n      and\n      0x883bdbfd\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1267:1278  secondsAgos */\n      dup5\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1238:1279  IUniswapV3Pool(pool).observe(secondsAgos) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_281\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_281:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_282\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_283\n      jump\t// in\n    tag_282:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1138:1279  (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1290:1316  int56 tickCumulativesDelta */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1340:1355  tickCumulatives */\n      dup3\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1356:1357  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1340:1358  tickCumulatives[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_285\n      jumpi\n      tag_285\n      tag_127\n      jump\t// in\n    tag_285:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1319:1334  tickCumulatives */\n      dup4\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1335:1336  1 */\n      0x01\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1319:1337  tickCumulatives[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_287\n      jumpi\n      tag_287\n      tag_127\n      jump\t// in\n    tag_287:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1319:1358  tickCumulatives[1] - tickCumulatives[0] */\n      tag_288\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_288:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1290:1358  int56 tickCumulativesDelta = tickCumulatives[1] - tickCumulatives[0] */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1368:1411  uint160 secondsPerLiquidityCumulativesDelta */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1466:1500  secondsPerLiquidityCumulativeX128s */\n      dup3\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1501:1502  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1466:1503  secondsPerLiquidityCumulativeX128s[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_291\n      jumpi\n      tag_291\n      tag_127\n      jump\t// in\n    tag_291:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1426:1460  secondsPerLiquidityCumulativeX128s */\n      dup4\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1461:1462  1 */\n      0x01\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1426:1463  secondsPerLiquidityCumulativeX128s[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_293\n      jumpi\n      tag_293\n      tag_127\n      jump\t// in\n    tag_293:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1426:1503  secondsPerLiquidityCumulativeX128s[1] - secondsPerLiquidityCumulativeX128s[0] */\n      tag_294\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1368:1503  uint160 secondsPerLiquidityCumulativesDelta =... */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1541:1581  tickCumulativesDelta / int32(secondsAgo) */\n      tag_296\n      0x03\n      dup10\n      swap1\n      signextend\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1541:1561  tickCumulativesDelta */\n      dup4\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1541:1581  tickCumulativesDelta / int32(secondsAgo) */\n      tag_297\n      jump\t// in\n    tag_296:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1514:1582  arithmeticMeanTick = int24(tickCumulativesDelta / int32(secondsAgo)) */\n      swap7\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1664:1665  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1641:1661  tickCumulativesDelta */\n      dup3\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1641:1665  tickCumulativesDelta < 0 */\n      0x06\n      signextend\n      slt\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1641:1716  tickCumulativesDelta < 0 && (tickCumulativesDelta % int32(secondsAgo) != 0) */\n      dup1\n      iszero\n      tag_298\n      jumpi\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1670:1710  tickCumulativesDelta % int32(secondsAgo) */\n      tag_299\n      0x03\n      dup10\n      swap1\n      signextend\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1670:1690  tickCumulativesDelta */\n      dup4\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1670:1710  tickCumulativesDelta % int32(secondsAgo) */\n      tag_300\n      jump\t// in\n    tag_299:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1670:1715  tickCumulativesDelta % int32(secondsAgo) != 0 */\n      0x06\n      signextend\n      iszero\n      iszero\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1641:1716  tickCumulativesDelta < 0 && (tickCumulativesDelta % int32(secondsAgo) != 0) */\n    tag_298:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1637:1738  if (tickCumulativesDelta < 0 && (tickCumulativesDelta % int32(secondsAgo) != 0)) arithmeticMeanTick-- */\n      iszero\n      tag_301\n      jumpi\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1718:1738  arithmeticMeanTick-- */\n      dup7\n      tag_302\n      dup2\n      tag_303\n      jump\t// in\n    tag_302:\n      swap8\n      pop\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1637:1738  if (tickCumulativesDelta < 0 && (tickCumulativesDelta % int32(secondsAgo) != 0)) arithmeticMeanTick-- */\n    tag_301:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1866:1888  uint192 secondsAgoX160 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1891:1930  uint192(secondsAgo) * type(uint160).max */\n      tag_304\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1891:1910  uint192(secondsAgo) */\n      0xffffffff\n      dup12\n      and\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1891:1930  uint192(secondsAgo) * type(uint160).max */\n      tag_305\n      jump\t// in\n    tag_304:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1866:1930  uint192 secondsAgoX160 = uint192(secondsAgo) * type(uint160).max */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1972:2041  secondsAgoX160 / (uint192(secondsPerLiquidityCumulativesDelta) << 32) */\n      tag_306\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1990:2040  uint192(secondsPerLiquidityCumulativesDelta) << 32 */\n      0xffffffffffffffffffffffffffffffffffffffff00000000\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2038:2040  32 */\n      0x20\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1990:2040  uint192(secondsPerLiquidityCumulativesDelta) << 32 */\n      dup5\n      swap1\n      shl\n      and\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1866:1930  uint192 secondsAgoX160 = uint192(secondsAgo) * type(uint160).max */\n      dup3\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1972:2041  secondsAgoX160 / (uint192(secondsPerLiquidityCumulativesDelta) << 32) */\n      tag_307\n      jump\t// in\n    tag_306:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":1940:2042  harmonicMeanLiquidity = uint128(secondsAgoX160 / (uint192(secondsPerLiquidityCumulativesDelta) << 32)) */\n      swap7\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":966:2049  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":808:2049  function consult(address pool, uint32 secondsAgo)... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2553:3508  function getQuoteAtTick(... */\n    tag_257:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2709:2728  uint256 quoteAmount */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2740:2760  uint160 sqrtRatioX96 */\n      dup1\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2763:2796  TickMath.getSqrtRatioAtTick(tick) */\n      tag_309\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2791:2795  tick */\n      dup7\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2763:2790  TickMath.getSqrtRatioAtTick */\n      tag_310\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2763:2796  TickMath.getSqrtRatioAtTick(tick) */\n      jump\t// in\n    tag_309:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2740:2796  uint160 sqrtRatioX96 = TickMath.getSqrtRatioAtTick(tick) */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2931:2948  type(uint128).max */\n      0xffffffffffffffffffffffffffffffff\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2915:2948  sqrtRatioX96 <= type(uint128).max */\n      dup3\n      and\n      gt\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2911:3502  if (sqrtRatioX96 <= type(uint128).max) {... */\n      tag_311\n      jumpi\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2964:2981  uint256 ratioX192 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2984:3020  uint256(sqrtRatioX96) * sqrtRatioX96 */\n      tag_312\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      dup1\n      tag_259\n      jump\t// in\n    tag_312:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2964:3020  uint256 ratioX192 = uint256(sqrtRatioX96) * sqrtRatioX96 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3060:3070  quoteToken */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3048:3070  baseToken < quoteToken */\n      and\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3048:3057  baseToken */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3048:3070  baseToken < quoteToken */\n      and\n      lt\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3048:3204  baseToken < quoteToken... */\n      tag_313\n      jumpi\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3156:3204  FullMath.mulDiv(1 << 192, baseAmount, ratioX192) */\n      tag_314\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3172:3180  1 << 192 */\n      0x01000000000000000000000000000000000000000000000000\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3182:3192  baseAmount */\n      dup8\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3156:3204  FullMath.mulDiv(1 << 192, baseAmount, ratioX192) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3194:3203  ratioX192 */\n      dup4\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3156:3171  FullMath.mulDiv */\n      tag_315\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3156:3204  FullMath.mulDiv(1 << 192, baseAmount, ratioX192) */\n      jump\t// in\n    tag_314:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3048:3204  baseToken < quoteToken... */\n      jump(tag_317)\n    tag_313:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3089:3137  FullMath.mulDiv(ratioX192, baseAmount, 1 << 192) */\n      tag_317\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3105:3114  ratioX192 */\n      dup2\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3116:3126  baseAmount */\n      dup8\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3089:3137  FullMath.mulDiv(ratioX192, baseAmount, 1 << 192) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3128:3136  1 << 192 */\n      0x01000000000000000000000000000000000000000000000000\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3089:3104  FullMath.mulDiv */\n      tag_315\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3089:3137  FullMath.mulDiv(ratioX192, baseAmount, 1 << 192) */\n      jump\t// in\n    tag_317:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3034:3204  quoteAmount = baseToken < quoteToken... */\n      swap3\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2950:3215  {... */\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2911:3502  if (sqrtRatioX96 <= type(uint128).max) {... */\n      jump(tag_318)\n    tag_311:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3235:3252  uint256 ratioX128 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3255:3307  FullMath.mulDiv(sqrtRatioX96, sqrtRatioX96, 1 << 64) */\n      tag_319\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      dup1\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3299:3306  1 << 64 */\n      0x010000000000000000\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3255:3270  FullMath.mulDiv */\n      tag_315\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3255:3307  FullMath.mulDiv(sqrtRatioX96, sqrtRatioX96, 1 << 64) */\n      jump\t// in\n    tag_319:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3235:3307  uint256 ratioX128 = FullMath.mulDiv(sqrtRatioX96, sqrtRatioX96, 1 << 64) */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3347:3357  quoteToken */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3335:3357  baseToken < quoteToken */\n      and\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3335:3344  baseToken */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3335:3357  baseToken < quoteToken */\n      and\n      lt\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3335:3491  baseToken < quoteToken... */\n      tag_320\n      jumpi\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3443:3491  FullMath.mulDiv(1 << 128, baseAmount, ratioX128) */\n      tag_321\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3459:3467  1 << 128 */\n      0x0100000000000000000000000000000000\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3469:3479  baseAmount */\n      dup8\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3443:3491  FullMath.mulDiv(1 << 128, baseAmount, ratioX128) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3481:3490  ratioX128 */\n      dup4\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3443:3458  FullMath.mulDiv */\n      tag_315\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3443:3491  FullMath.mulDiv(1 << 128, baseAmount, ratioX128) */\n      jump\t// in\n    tag_321:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3335:3491  baseToken < quoteToken... */\n      jump(tag_323)\n    tag_320:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3376:3424  FullMath.mulDiv(ratioX128, baseAmount, 1 << 128) */\n      tag_323\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3392:3401  ratioX128 */\n      dup2\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3403:3413  baseAmount */\n      dup8\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3376:3424  FullMath.mulDiv(ratioX128, baseAmount, 1 << 128) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3415:3423  1 << 128 */\n      0x0100000000000000000000000000000000\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3376:3391  FullMath.mulDiv */\n      tag_315\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3376:3424  FullMath.mulDiv(ratioX128, baseAmount, 1 << 128) */\n      jump\t// in\n    tag_323:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3321:3491  quoteAmount = baseToken < quoteToken... */\n      swap3\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":3221:3502  {... */\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2911:3502  if (sqrtRatioX96 <= type(uint128).max) {... */\n    tag_318:\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2730:3508  {... */\n      pop\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":2553:3508  function getQuoteAtTick(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1355:3943  function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {... */\n    tag_310:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1418:1438  uint160 sqrtPriceX96 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1450:1465  uint256 absTick */\n      dup1\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1475:1476  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1468:1472  tick */\n      dup4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1468:1476  tick < 0 */\n      0x02\n      signextend\n      slt\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1468:1525  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      tag_325\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1519:1523  tick */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1512:1524  int256(tick) */\n      0x02\n      signextend\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1468:1525  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      jump(tag_327)\n    tag_325:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1495:1499  tick */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1488:1500  int256(tick) */\n      0x02\n      signextend\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1487:1500  -int256(tick) */\n      tag_327\n      swap1\n      tag_328\n      jump\t// in\n    tag_327:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1450:1525  uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":637:646  -MIN_TICK */\n      tag_329\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":477:484  -887272 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":637:646  -MIN_TICK */\n      tag_330\n      jump\t// in\n    tag_329:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1554:1579  uint256(uint24(MAX_TICK)) */\n      0xffffff\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1543:1550  absTick */\n      dup2\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1543:1579  absTick <= uint256(uint24(MAX_TICK)) */\n      gt\n      iszero\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1535:1585  require(absTick <= uint256(uint24(MAX_TICK)), 'T') */\n      tag_331\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":13680:13682   */\n      0x20\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1535:1585  require(absTick <= uint256(uint24(MAX_TICK)), 'T') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13662:13683   */\n      mstore\n        /* \"#utility.yul\":13719:13720   */\n      0x01\n        /* \"#utility.yul\":13699:13717   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13692:13721   */\n      mstore\n        /* \"#utility.yul\":13757:13760   */\n      0x5400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13737:13755   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13730:13761   */\n      mstore\n        /* \"#utility.yul\":13778:13796   */\n      0x64\n      add\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1535:1585  require(absTick <= uint256(uint24(MAX_TICK)), 'T') */\n      tag_268\n        /* \"#utility.yul\":13478:13802   */\n      jump\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1535:1585  require(absTick <= uint256(uint24(MAX_TICK)), 'T') */\n    tag_331:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1596:1609  uint256 ratio */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1612:1619  absTick */\n      dup2\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1622:1625  0x1 */\n      0x01\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1612:1625  absTick & 0x1 */\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1629:1630  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1612:1630  absTick & 0x1 != 0 */\n      sub\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1612:1705  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      tag_334\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1670:1705  0x100000000000000000000000000000000 */\n      0x0100000000000000000000000000000000\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1612:1705  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      jump(tag_335)\n    tag_334:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1633:1667  0xfffcb933bd6fad37aa2d162d1a594001 */\n      0xfffcb933bd6fad37aa2d162d1a594001\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1612:1705  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n    tag_335:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1596:1705  uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      0xffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1729:1732  0x2 */\n      0x02\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1719:1732  absTick & 0x2 */\n      dup3\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1719:1737  absTick & 0x2 != 0 */\n      iszero\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1715:1798  if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      tag_336\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1795:1798  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1748:1790  ratio * 0xfff97272373d413259a46990580e213a */\n      tag_337\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1748:1753  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1756:1790  0xfff97272373d413259a46990580e213a */\n      0xfff97272373d413259a46990580e213a\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1748:1790  ratio * 0xfff97272373d413259a46990580e213a */\n      tag_259\n      jump\t// in\n    tag_337:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1747:1798  (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1739:1798  ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1715:1798  if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n    tag_336:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1822:1825  0x4 */\n      0x04\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1812:1825  absTick & 0x4 */\n      dup3\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1812:1830  absTick & 0x4 != 0 */\n      iszero\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1808:1891  if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      tag_338\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1888:1891  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1841:1883  ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc */\n      tag_339\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1841:1846  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1849:1883  0xfff2e50f5f656932ef12357cf3c7fdcc */\n      0xfff2e50f5f656932ef12357cf3c7fdcc\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1841:1883  ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc */\n      tag_259\n      jump\t// in\n    tag_339:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1840:1891  (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1832:1891  ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1808:1891  if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n    tag_338:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1915:1918  0x8 */\n      0x08\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1905:1918  absTick & 0x8 */\n      dup3\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1905:1923  absTick & 0x8 != 0 */\n      iszero\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1901:1984  if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      tag_340\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1981:1984  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1934:1976  ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      tag_341\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1934:1939  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1942:1976  0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      0xffe5caca7e10e4e61c3624eaa0941cd0\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1934:1976  ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      tag_259\n      jump\t// in\n    tag_341:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1933:1984  (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1925:1984  ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1901:1984  if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n    tag_340:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2008:2012  0x10 */\n      0x10\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1998:2012  absTick & 0x10 */\n      dup3\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1998:2017  absTick & 0x10 != 0 */\n      iszero\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1994:2078  if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      tag_342\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2075:2078  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2028:2070  ratio * 0xffcb9843d60f6159c9db58835c926644 */\n      tag_343\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2028:2033  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2036:2070  0xffcb9843d60f6159c9db58835c926644 */\n      0xffcb9843d60f6159c9db58835c926644\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2028:2070  ratio * 0xffcb9843d60f6159c9db58835c926644 */\n      tag_259\n      jump\t// in\n    tag_343:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2027:2078  (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2019:2078  ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1994:2078  if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n    tag_342:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2102:2106  0x20 */\n      0x20\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2092:2106  absTick & 0x20 */\n      dup3\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2092:2111  absTick & 0x20 != 0 */\n      iszero\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2088:2172  if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      tag_344\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2169:2172  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2122:2164  ratio * 0xff973b41fa98c081472e6896dfb254c0 */\n      tag_345\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2122:2127  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2130:2164  0xff973b41fa98c081472e6896dfb254c0 */\n      0xff973b41fa98c081472e6896dfb254c0\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2122:2164  ratio * 0xff973b41fa98c081472e6896dfb254c0 */\n      tag_259\n      jump\t// in\n    tag_345:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2121:2172  (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2113:2172  ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2088:2172  if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n    tag_344:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2196:2200  0x40 */\n      0x40\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2186:2200  absTick & 0x40 */\n      dup3\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2186:2205  absTick & 0x40 != 0 */\n      iszero\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2182:2266  if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      tag_346\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2263:2266  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2216:2258  ratio * 0xff2ea16466c96a3843ec78b326b52861 */\n      tag_347\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2216:2221  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2224:2258  0xff2ea16466c96a3843ec78b326b52861 */\n      0xff2ea16466c96a3843ec78b326b52861\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2216:2258  ratio * 0xff2ea16466c96a3843ec78b326b52861 */\n      tag_259\n      jump\t// in\n    tag_347:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2215:2266  (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2207:2266  ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2182:2266  if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n    tag_346:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2290:2294  0x80 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2280:2294  absTick & 0x80 */\n      dup3\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2280:2299  absTick & 0x80 != 0 */\n      iszero\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2276:2360  if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      tag_348\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2357:2360  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2310:2352  ratio * 0xfe5dee046a99a2a811c461f1969c3053 */\n      tag_349\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2310:2315  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2318:2352  0xfe5dee046a99a2a811c461f1969c3053 */\n      0xfe5dee046a99a2a811c461f1969c3053\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2310:2352  ratio * 0xfe5dee046a99a2a811c461f1969c3053 */\n      tag_259\n      jump\t// in\n    tag_349:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2309:2360  (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2301:2360  ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2276:2360  if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n    tag_348:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2384:2389  0x100 */\n      0x0100\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2374:2389  absTick & 0x100 */\n      dup3\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2374:2394  absTick & 0x100 != 0 */\n      iszero\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2370:2455  if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      tag_350\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2452:2455  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2405:2447  ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      tag_351\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2405:2410  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2413:2447  0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      0xfcbe86c7900a88aedcffc83b479aa3a4\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2405:2447  ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      tag_259\n      jump\t// in\n    tag_351:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2404:2455  (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2396:2455  ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2370:2455  if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n    tag_350:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2479:2484  0x200 */\n      0x0200\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2469:2484  absTick & 0x200 */\n      dup3\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2469:2489  absTick & 0x200 != 0 */\n      iszero\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2465:2550  if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      tag_352\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2547:2550  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2500:2542  ratio * 0xf987a7253ac413176f2b074cf7815e54 */\n      tag_353\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2500:2505  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2508:2542  0xf987a7253ac413176f2b074cf7815e54 */\n      0xf987a7253ac413176f2b074cf7815e54\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2500:2542  ratio * 0xf987a7253ac413176f2b074cf7815e54 */\n      tag_259\n      jump\t// in\n    tag_353:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2499:2550  (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2491:2550  ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2465:2550  if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n    tag_352:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2574:2579  0x400 */\n      0x0400\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2564:2579  absTick & 0x400 */\n      dup3\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2564:2584  absTick & 0x400 != 0 */\n      iszero\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2560:2645  if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      tag_354\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2642:2645  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2595:2637  ratio * 0xf3392b0822b70005940c7a398e4b70f3 */\n      tag_355\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2595:2600  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2603:2637  0xf3392b0822b70005940c7a398e4b70f3 */\n      0xf3392b0822b70005940c7a398e4b70f3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2595:2637  ratio * 0xf3392b0822b70005940c7a398e4b70f3 */\n      tag_259\n      jump\t// in\n    tag_355:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2594:2645  (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2586:2645  ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2560:2645  if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n    tag_354:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2669:2674  0x800 */\n      0x0800\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2659:2674  absTick & 0x800 */\n      dup3\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2659:2679  absTick & 0x800 != 0 */\n      iszero\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2655:2740  if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      tag_356\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2737:2740  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2690:2732  ratio * 0xe7159475a2c29b7443b29c7fa6e889d9 */\n      tag_357\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2690:2695  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2698:2732  0xe7159475a2c29b7443b29c7fa6e889d9 */\n      0xe7159475a2c29b7443b29c7fa6e889d9\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2690:2732  ratio * 0xe7159475a2c29b7443b29c7fa6e889d9 */\n      tag_259\n      jump\t// in\n    tag_357:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2689:2740  (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2681:2740  ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2655:2740  if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n    tag_356:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2764:2770  0x1000 */\n      0x1000\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2754:2770  absTick & 0x1000 */\n      dup3\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2754:2775  absTick & 0x1000 != 0 */\n      iszero\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2750:2836  if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      tag_358\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2833:2836  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2786:2828  ratio * 0xd097f3bdfd2022b8845ad8f792aa5825 */\n      tag_359\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2786:2791  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2794:2828  0xd097f3bdfd2022b8845ad8f792aa5825 */\n      0xd097f3bdfd2022b8845ad8f792aa5825\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2786:2828  ratio * 0xd097f3bdfd2022b8845ad8f792aa5825 */\n      tag_259\n      jump\t// in\n    tag_359:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2785:2836  (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2777:2836  ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2750:2836  if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n    tag_358:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2860:2866  0x2000 */\n      0x2000\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2850:2866  absTick & 0x2000 */\n      dup3\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2850:2871  absTick & 0x2000 != 0 */\n      iszero\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2846:2932  if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      tag_360\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2929:2932  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2882:2924  ratio * 0xa9f746462d870fdf8a65dc1f90e061e5 */\n      tag_361\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2882:2887  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2890:2924  0xa9f746462d870fdf8a65dc1f90e061e5 */\n      0xa9f746462d870fdf8a65dc1f90e061e5\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2882:2924  ratio * 0xa9f746462d870fdf8a65dc1f90e061e5 */\n      tag_259\n      jump\t// in\n    tag_361:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2881:2932  (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2873:2932  ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2846:2932  if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n    tag_360:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2956:2962  0x4000 */\n      0x4000\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2946:2962  absTick & 0x4000 */\n      dup3\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2946:2967  absTick & 0x4000 != 0 */\n      iszero\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2942:3028  if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      tag_362\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3025:3028  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2978:3020  ratio * 0x70d869a156d2a1b890bb3df62baf32f7 */\n      tag_363\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2978:2983  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2986:3020  0x70d869a156d2a1b890bb3df62baf32f7 */\n      0x70d869a156d2a1b890bb3df62baf32f7\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2978:3020  ratio * 0x70d869a156d2a1b890bb3df62baf32f7 */\n      tag_259\n      jump\t// in\n    tag_363:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2977:3028  (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2969:3028  ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":2942:3028  if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n    tag_362:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3052:3058  0x8000 */\n      0x8000\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3042:3058  absTick & 0x8000 */\n      dup3\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3042:3063  absTick & 0x8000 != 0 */\n      iszero\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3038:3124  if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      tag_364\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3121:3124  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3074:3116  ratio * 0x31be135f97d08fd981231505542fcfa6 */\n      tag_365\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3074:3079  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3082:3116  0x31be135f97d08fd981231505542fcfa6 */\n      0x31be135f97d08fd981231505542fcfa6\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3074:3116  ratio * 0x31be135f97d08fd981231505542fcfa6 */\n      tag_259\n      jump\t// in\n    tag_365:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3073:3124  (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3065:3124  ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3038:3124  if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n    tag_364:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3148:3155  0x10000 */\n      0x010000\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3138:3155  absTick & 0x10000 */\n      dup3\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3138:3160  absTick & 0x10000 != 0 */\n      iszero\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3134:3220  if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      tag_366\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3217:3220  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3171:3212  ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      tag_367\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3171:3176  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3179:3212  0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      0x09aa508b5b7a84e1c677de54f3e99bc9\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3171:3212  ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      tag_259\n      jump\t// in\n    tag_367:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3170:3220  (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3162:3220  ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3134:3220  if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n    tag_366:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3244:3251  0x20000 */\n      0x020000\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3234:3251  absTick & 0x20000 */\n      dup3\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3234:3256  absTick & 0x20000 != 0 */\n      iszero\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3230:3315  if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      tag_368\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3312:3315  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3267:3307  ratio * 0x5d6af8dedb81196699c329225ee604 */\n      tag_369\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3267:3272  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3275:3307  0x5d6af8dedb81196699c329225ee604 */\n      0x5d6af8dedb81196699c329225ee604\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3267:3307  ratio * 0x5d6af8dedb81196699c329225ee604 */\n      tag_259\n      jump\t// in\n    tag_369:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3266:3315  (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3258:3315  ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3230:3315  if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n    tag_368:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3339:3346  0x40000 */\n      0x040000\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3329:3346  absTick & 0x40000 */\n      dup3\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3329:3351  absTick & 0x40000 != 0 */\n      iszero\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3325:3408  if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      tag_370\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3405:3408  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3362:3400  ratio * 0x2216e584f5fa1ea926041bedfe98 */\n      tag_371\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3362:3367  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3370:3400  0x2216e584f5fa1ea926041bedfe98 */\n      0x2216e584f5fa1ea926041bedfe98\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3362:3400  ratio * 0x2216e584f5fa1ea926041bedfe98 */\n      tag_259\n      jump\t// in\n    tag_371:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3361:3408  (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3353:3408  ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3325:3408  if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n    tag_370:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3432:3439  0x80000 */\n      0x080000\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3422:3439  absTick & 0x80000 */\n      dup3\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3422:3444  absTick & 0x80000 != 0 */\n      iszero\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3418:3496  if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      tag_372\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3493:3496  128 */\n      0x80\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3455:3488  ratio * 0x48a170391f7dc42444e8fa2 */\n      tag_373\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3455:3460  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3463:3488  0x48a170391f7dc42444e8fa2 */\n      0x048a170391f7dc42444e8fa2\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3455:3488  ratio * 0x48a170391f7dc42444e8fa2 */\n      tag_259\n      jump\t// in\n    tag_373:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3454:3496  (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3446:3496  ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3418:3496  if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n    tag_372:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3518:3519  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3511:3515  tick */\n      dup5\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3511:3519  tick > 0 */\n      0x02\n      signextend\n      sgt\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3507:3554  if (tick > 0) ratio = type(uint256).max / ratio */\n      iszero\n      tag_374\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3529:3554  type(uint256).max / ratio */\n      tag_375\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3549:3554  ratio */\n      dup2\n      not(0x00)\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3529:3554  type(uint256).max / ratio */\n      tag_197\n      jump\t// in\n    tag_375:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3521:3554  ratio = type(uint256).max / ratio */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3507:3554  if (tick > 0) ratio = type(uint256).max / ratio */\n    tag_374:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3904:3921  ratio % (1 << 32) */\n      tag_376\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3913:3920  1 << 32 */\n      0x0100000000\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3904:3909  ratio */\n      dup3\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3904:3921  ratio % (1 << 32) */\n      tag_377\n      jump\t// in\n    tag_376:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3904:3926  ratio % (1 << 32) == 0 */\n      iszero\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3904:3934  ratio % (1 << 32) == 0 ? 0 : 1 */\n      tag_378\n      jumpi\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3933:3934  1 */\n      0x01\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3904:3934  ratio % (1 << 32) == 0 ? 0 : 1 */\n      jump(tag_379)\n    tag_378:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3929:3930  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3904:3934  ratio % (1 << 32) == 0 ? 0 : 1 */\n    tag_379:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3887:3935  (ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1) */\n      tag_380\n      swap1\n      0xff\n      and\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3897:3899  32 */\n      0x20\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3888:3899  ratio >> 32 */\n      dup4\n      swap1\n      shr\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3887:3935  (ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1) */\n      tag_261\n      jump\t// in\n    tag_380:\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":3864:3936  sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1)) */\n      swap5\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":1355:3943  function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":742:4543  function mulDiv(... */\n    tag_315:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":854:868  uint256 result */\n      0x00\n      dup1\n      dup1\n      not(0x00)\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1361:1362  b */\n      dup6\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1358:1359  a */\n      dup8\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1351:1371  mulmod(a, b, not(0)) */\n      mulmod\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1400:1401  b */\n      dup6\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1397:1398  a */\n      dup8\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1393:1402  mul(a, b) */\n      mul\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1384:1402  prod0 := mul(a, b) */\n      swap3\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1451:1456  prod0 */\n      dup3\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1447:1449  mm */\n      dup2\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1444:1457  lt(mm, prod0) */\n      lt\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1436:1441  prod0 */\n      dup4\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1432:1434  mm */\n      dup3\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1428:1442  sub(mm, prod0) */\n      sub\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1424:1458  sub(sub(mm, prod0), lt(mm, prod0)) */\n      sub\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1415:1458  prod1 := sub(sub(mm, prod0), lt(mm, prod0)) */\n      swap2\n      pop\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1540:1545  prod1 */\n      dup1\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1549:1550  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1540:1550  prod1 == 0 */\n      sub\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1536:1715  if (prod1 == 0) {... */\n      tag_382\n      jumpi\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1588:1589  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1574:1585  denominator */\n      dup5\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1574:1589  denominator > 0 */\n      gt\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1566:1590  require(denominator > 0) */\n      tag_383\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_383:\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1641:1664  div(prod0, denominator) */\n      dup3\n      swap1\n      div\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1691:1704  return result */\n      jump(tag_381)\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1536:1715  if (prod1 == 0) {... */\n    tag_382:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1842:1847  prod1 */\n      dup1\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1828:1839  denominator */\n      dup5\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1828:1847  denominator > prod1 */\n      gt\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":1820:1848  require(denominator > prod1) */\n      tag_384\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_384:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2125:2142  uint256 remainder */\n      0x00\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2201:2212  denominator */\n      dup5\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2198:2199  b */\n      dup7\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2195:2196  a */\n      dup9\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2188:2213  mulmod(a, b, denominator) */\n      mulmod\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2373:2394  sub(prod0, remainder) */\n      dup1\n      dup5\n      sub\n      swap4\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2330:2350  gt(remainder, prod0) */\n      dup2\n      gt\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2319:2351  sub(prod1, gt(remainder, prod0)) */\n      swap1\n      swap3\n      sub\n      swap2\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2175:2213  remainder := mulmod(a, b, denominator) */\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2553:2565  uint256 twos */\n      0x00\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2608:2619  denominator */\n      dup6\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2569:2600  type(uint256).max - denominator */\n      tag_385\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2608:2619  denominator */\n      dup2\n      not(0x00)\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2569:2600  type(uint256).max - denominator */\n      tag_108\n      jump\t// in\n    tag_385:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2569:2604  type(uint256).max - denominator + 1 */\n      tag_386\n      swap1\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2603:2604  1 */\n      0x01\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2569:2604  type(uint256).max - denominator + 1 */\n      tag_261\n      jump\t// in\n    tag_386:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2568:2619  (type(uint256).max - denominator + 1) & denominator */\n      and\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2713:2735  div(denominator, twos) */\n      swap6\n      dup7\n      swap1\n      div\n      swap6\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":2841:2857  div(prod0, twos) */\n      swap4\n      dup5\n      swap1\n      div\n      swap4\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3089:3090  0 */\n      0x00\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3085:3097  sub(0, twos) */\n      dup2\n      swap1\n      sub\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3081:3104  div(sub(0, twos), twos) */\n      div\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3106:3107  1 */\n      0x01\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3077:3108  add(div(sub(0, twos), twos), 1) */\n      add\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3136:3148  prod1 * twos */\n      tag_387\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3077:3108  add(div(sub(0, twos), twos), 1) */\n      dup2\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3136:3141  prod1 */\n      dup5\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3136:3148  prod1 * twos */\n      tag_259\n      jump\t// in\n    tag_387:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3127:3148  prod0 |= prod1 * twos */\n      swap1\n      swap4\n      or\n      swap3\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3482:3493  uint256 inv */\n      0x00\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3497:3512  3 * denominator */\n      tag_388\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3501:3512  denominator */\n      dup8\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3497:3498  3 */\n      0x03\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3497:3512  3 * denominator */\n      tag_259\n      jump\t// in\n    tag_388:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3516:3517  2 */\n      0x02\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3496:3517  (3 * denominator) ^ 2 */\n      xor\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3743:3760  denominator * inv */\n      tag_389\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3496:3517  (3 * denominator) ^ 2 */\n      dup2\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3743:3754  denominator */\n      dup9\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3743:3760  denominator * inv */\n      tag_259\n      jump\t// in\n    tag_389:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3739:3760  2 - denominator * inv */\n      tag_390\n      swap1\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3739:3740  2 */\n      0x02\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3739:3760  2 - denominator * inv */\n      tag_108\n      jump\t// in\n    tag_390:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3732:3760  inv *= 2 - denominator * inv */\n      tag_391\n      swap1\n      dup3\n      tag_259\n      jump\t// in\n    tag_391:\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3801:3818  denominator * inv */\n      tag_392\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3732:3760  inv *= 2 - denominator * inv */\n      dup2\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3801:3812  denominator */\n      dup9\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3801:3818  denominator * inv */\n      tag_259\n      jump\t// in\n    tag_392:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3797:3818  2 - denominator * inv */\n      tag_393\n      swap1\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3797:3798  2 */\n      0x02\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3797:3818  2 - denominator * inv */\n      tag_108\n      jump\t// in\n    tag_393:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3790:3818  inv *= 2 - denominator * inv */\n      tag_394\n      swap1\n      dup3\n      tag_259\n      jump\t// in\n    tag_394:\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3860:3877  denominator * inv */\n      tag_395\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3790:3818  inv *= 2 - denominator * inv */\n      dup2\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3860:3871  denominator */\n      dup9\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3860:3877  denominator * inv */\n      tag_259\n      jump\t// in\n    tag_395:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3856:3877  2 - denominator * inv */\n      tag_396\n      swap1\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3856:3857  2 */\n      0x02\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3856:3877  2 - denominator * inv */\n      tag_108\n      jump\t// in\n    tag_396:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3849:3877  inv *= 2 - denominator * inv */\n      tag_397\n      swap1\n      dup3\n      tag_259\n      jump\t// in\n    tag_397:\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3919:3936  denominator * inv */\n      tag_398\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3849:3877  inv *= 2 - denominator * inv */\n      dup2\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3919:3930  denominator */\n      dup9\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3919:3936  denominator * inv */\n      tag_259\n      jump\t// in\n    tag_398:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3915:3936  2 - denominator * inv */\n      tag_399\n      swap1\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3915:3916  2 */\n      0x02\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3915:3936  2 - denominator * inv */\n      tag_108\n      jump\t// in\n    tag_399:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3908:3936  inv *= 2 - denominator * inv */\n      tag_400\n      swap1\n      dup3\n      tag_259\n      jump\t// in\n    tag_400:\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3978:3995  denominator * inv */\n      tag_401\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3908:3936  inv *= 2 - denominator * inv */\n      dup2\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3978:3989  denominator */\n      dup9\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3978:3995  denominator * inv */\n      tag_259\n      jump\t// in\n    tag_401:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3974:3995  2 - denominator * inv */\n      tag_402\n      swap1\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3974:3975  2 */\n      0x02\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3974:3995  2 - denominator * inv */\n      tag_108\n      jump\t// in\n    tag_402:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3967:3995  inv *= 2 - denominator * inv */\n      tag_403\n      swap1\n      dup3\n      tag_259\n      jump\t// in\n    tag_403:\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4038:4055  denominator * inv */\n      tag_404\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":3967:3995  inv *= 2 - denominator * inv */\n      dup2\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4038:4049  denominator */\n      dup9\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4038:4055  denominator * inv */\n      tag_259\n      jump\t// in\n    tag_404:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4034:4055  2 - denominator * inv */\n      tag_405\n      swap1\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4034:4035  2 */\n      0x02\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4034:4055  2 - denominator * inv */\n      tag_108\n      jump\t// in\n    tag_405:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4027:4055  inv *= 2 - denominator * inv */\n      tag_406\n      swap1\n      dup3\n      tag_259\n      jump\t// in\n    tag_406:\n      swap1\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4502:4513  prod0 * inv */\n      tag_407\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4027:4055  inv *= 2 - denominator * inv */\n      dup2\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4502:4507  prod0 */\n      dup7\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4502:4513  prod0 * inv */\n      tag_259\n      jump\t// in\n    tag_407:\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4493:4513  result = prod0 * inv */\n      swap6\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":4523:4536  return result */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":742:4543  function mulDiv(... */\n    tag_381:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_28:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_418:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":381:535   */\n    tag_408:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":460:465   */\n      dup2\n        /* \"#utility.yul\":456:510   */\n      and\n        /* \"#utility.yul\":449:454   */\n      dup2\n        /* \"#utility.yul\":446:511   */\n      eq\n        /* \"#utility.yul\":436:529   */\n      tag_421\n      jumpi\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":522:523   */\n      dup1\n        /* \"#utility.yul\":515:527   */\n      revert\n        /* \"#utility.yul\":436:529   */\n    tag_421:\n        /* \"#utility.yul\":381:535   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:787   */\n    tag_35:\n        /* \"#utility.yul\":599:605   */\n      0x00\n        /* \"#utility.yul\":652:654   */\n      0x20\n        /* \"#utility.yul\":640:649   */\n      dup3\n        /* \"#utility.yul\":631:638   */\n      dup5\n        /* \"#utility.yul\":627:650   */\n      sub\n        /* \"#utility.yul\":623:655   */\n      slt\n        /* \"#utility.yul\":620:672   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":668:669   */\n      0x00\n        /* \"#utility.yul\":665:666   */\n      dup1\n        /* \"#utility.yul\":658:670   */\n      revert\n        /* \"#utility.yul\":620:672   */\n    tag_423:\n        /* \"#utility.yul\":707:716   */\n      dup2\n        /* \"#utility.yul\":694:717   */\n      calldataload\n        /* \"#utility.yul\":726:757   */\n      tag_381\n        /* \"#utility.yul\":751:756   */\n      dup2\n        /* \"#utility.yul\":726:757   */\n      tag_408\n      jump\t// in\n        /* \"#utility.yul\":1023:1338   */\n    tag_64:\n        /* \"#utility.yul\":1091:1097   */\n      0x00\n        /* \"#utility.yul\":1099:1105   */\n      dup1\n        /* \"#utility.yul\":1152:1154   */\n      0x40\n        /* \"#utility.yul\":1140:1149   */\n      dup4\n        /* \"#utility.yul\":1131:1138   */\n      dup6\n        /* \"#utility.yul\":1127:1150   */\n      sub\n        /* \"#utility.yul\":1123:1155   */\n      slt\n        /* \"#utility.yul\":1120:1172   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":1168:1169   */\n      0x00\n        /* \"#utility.yul\":1165:1166   */\n      dup1\n        /* \"#utility.yul\":1158:1170   */\n      revert\n        /* \"#utility.yul\":1120:1172   */\n    tag_427:\n        /* \"#utility.yul\":1207:1216   */\n      dup3\n        /* \"#utility.yul\":1194:1217   */\n      calldataload\n        /* \"#utility.yul\":1226:1257   */\n      tag_428\n        /* \"#utility.yul\":1251:1256   */\n      dup2\n        /* \"#utility.yul\":1226:1257   */\n      tag_408\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":1276:1281   */\n      swap5\n        /* \"#utility.yul\":1328:1330   */\n      0x20\n        /* \"#utility.yul\":1313:1331   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1300:1332   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1023:1338   */\n      jump\t// out\n        /* \"#utility.yul\":1977:2228   */\n    tag_103:\n        /* \"#utility.yul\":2047:2053   */\n      0x00\n        /* \"#utility.yul\":2100:2102   */\n      0x20\n        /* \"#utility.yul\":2088:2097   */\n      dup3\n        /* \"#utility.yul\":2079:2086   */\n      dup5\n        /* \"#utility.yul\":2075:2098   */\n      sub\n        /* \"#utility.yul\":2071:2103   */\n      slt\n        /* \"#utility.yul\":2068:2120   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":2116:2117   */\n      0x00\n        /* \"#utility.yul\":2113:2114   */\n      dup1\n        /* \"#utility.yul\":2106:2118   */\n      revert\n        /* \"#utility.yul\":2068:2120   */\n    tag_433:\n        /* \"#utility.yul\":2148:2157   */\n      dup2\n        /* \"#utility.yul\":2142:2158   */\n      mload\n        /* \"#utility.yul\":2167:2198   */\n      tag_381\n        /* \"#utility.yul\":2192:2197   */\n      dup2\n        /* \"#utility.yul\":2167:2198   */\n      tag_408\n      jump\t// in\n        /* \"#utility.yul\":2233:2417   */\n    tag_409:\n        /* \"#utility.yul\":2285:2362   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2282:2283   */\n      0x00\n        /* \"#utility.yul\":2275:2363   */\n      mstore\n        /* \"#utility.yul\":2382:2386   */\n      0x11\n        /* \"#utility.yul\":2379:2380   */\n      0x04\n        /* \"#utility.yul\":2372:2387   */\n      mstore\n        /* \"#utility.yul\":2406:2410   */\n      0x24\n        /* \"#utility.yul\":2403:2404   */\n      0x00\n        /* \"#utility.yul\":2396:2411   */\n      revert\n        /* \"#utility.yul\":2422:2547   */\n    tag_108:\n        /* \"#utility.yul\":2462:2466   */\n      0x00\n        /* \"#utility.yul\":2490:2491   */\n      dup3\n        /* \"#utility.yul\":2487:2488   */\n      dup3\n        /* \"#utility.yul\":2484:2492   */\n      lt\n        /* \"#utility.yul\":2481:2515   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":2495:2513   */\n      tag_438\n      tag_409\n      jump\t// in\n    tag_438:\n      pop\n        /* \"#utility.yul\":2532:2541   */\n      sub\n      swap1\n        /* \"#utility.yul\":2422:2547   */\n      jump\t// out\n        /* \"#utility.yul\":2552:2978   */\n    tag_118:\n        /* \"#utility.yul\":2681:2684   */\n      0x00\n        /* \"#utility.yul\":2719:2725   */\n      dup3\n        /* \"#utility.yul\":2713:2726   */\n      mload\n        /* \"#utility.yul\":2744:2745   */\n      0x00\n        /* \"#utility.yul\":2754:2883   */\n    tag_440:\n        /* \"#utility.yul\":2768:2774   */\n      dup2\n        /* \"#utility.yul\":2765:2766   */\n      dup2\n        /* \"#utility.yul\":2762:2775   */\n      lt\n        /* \"#utility.yul\":2754:2883   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":2866:2870   */\n      0x20\n        /* \"#utility.yul\":2850:2864   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":2846:2871   */\n      dup2\n      add\n        /* \"#utility.yul\":2840:2872   */\n      mload\n        /* \"#utility.yul\":2827:2838   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":2820:2873   */\n      mstore\n        /* \"#utility.yul\":2783:2795   */\n      add\n        /* \"#utility.yul\":2754:2883   */\n      jump(tag_440)\n    tag_442:\n        /* \"#utility.yul\":2901:2907   */\n      dup2\n        /* \"#utility.yul\":2898:2899   */\n      dup2\n        /* \"#utility.yul\":2895:2908   */\n      gt\n        /* \"#utility.yul\":2892:2940   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":2936:2937   */\n      0x00\n        /* \"#utility.yul\":2927:2933   */\n      dup3\n        /* \"#utility.yul\":2922:2925   */\n      dup6\n        /* \"#utility.yul\":2918:2934   */\n      add\n        /* \"#utility.yul\":2911:2938   */\n      mstore\n        /* \"#utility.yul\":2892:2940   */\n    tag_443:\n      pop\n        /* \"#utility.yul\":2956:2972   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":2552:2978   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2983:3167   */\n    tag_127:\n        /* \"#utility.yul\":3035:3112   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3032:3033   */\n      0x00\n        /* \"#utility.yul\":3025:3113   */\n      mstore\n        /* \"#utility.yul\":3132:3136   */\n      0x32\n        /* \"#utility.yul\":3129:3130   */\n      0x04\n        /* \"#utility.yul\":3122:3137   */\n      mstore\n        /* \"#utility.yul\":3156:3160   */\n      0x24\n        /* \"#utility.yul\":3153:3154   */\n      0x00\n        /* \"#utility.yul\":3146:3161   */\n      revert\n        /* \"#utility.yul\":3172:3356   */\n    tag_133:\n        /* \"#utility.yul\":3242:3248   */\n      0x00\n        /* \"#utility.yul\":3295:3297   */\n      0x20\n        /* \"#utility.yul\":3283:3292   */\n      dup3\n        /* \"#utility.yul\":3274:3281   */\n      dup5\n        /* \"#utility.yul\":3270:3293   */\n      sub\n        /* \"#utility.yul\":3266:3298   */\n      slt\n        /* \"#utility.yul\":3263:3315   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":3311:3312   */\n      0x00\n        /* \"#utility.yul\":3308:3309   */\n      dup1\n        /* \"#utility.yul\":3301:3313   */\n      revert\n        /* \"#utility.yul\":3263:3315   */\n    tag_446:\n      pop\n        /* \"#utility.yul\":3334:3350   */\n      mload\n      swap2\n        /* \"#utility.yul\":3172:3356   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3663:3940   */\n    tag_139:\n        /* \"#utility.yul\":3730:3736   */\n      0x00\n        /* \"#utility.yul\":3783:3785   */\n      0x20\n        /* \"#utility.yul\":3771:3780   */\n      dup3\n        /* \"#utility.yul\":3762:3769   */\n      dup5\n        /* \"#utility.yul\":3758:3781   */\n      sub\n        /* \"#utility.yul\":3754:3786   */\n      slt\n        /* \"#utility.yul\":3751:3803   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":3799:3800   */\n      0x00\n        /* \"#utility.yul\":3796:3797   */\n      dup1\n        /* \"#utility.yul\":3789:3801   */\n      revert\n        /* \"#utility.yul\":3751:3803   */\n    tag_449:\n        /* \"#utility.yul\":3831:3840   */\n      dup2\n        /* \"#utility.yul\":3825:3841   */\n      mload\n        /* \"#utility.yul\":3884:3889   */\n      dup1\n        /* \"#utility.yul\":3877:3890   */\n      iszero\n        /* \"#utility.yul\":3870:3891   */\n      iszero\n        /* \"#utility.yul\":3863:3868   */\n      dup2\n        /* \"#utility.yul\":3860:3892   */\n      eq\n        /* \"#utility.yul\":3850:3910   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":3906:3907   */\n      0x00\n        /* \"#utility.yul\":3903:3904   */\n      dup1\n        /* \"#utility.yul\":3896:3908   */\n      revert\n        /* \"#utility.yul\":3945:4140   */\n    tag_141:\n        /* \"#utility.yul\":3984:3987   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":4008:4013   */\n      dup3\n        /* \"#utility.yul\":4005:4082   */\n      sub\n        /* \"#utility.yul\":4002:4105   */\n      tag_453\n      jumpi\n        /* \"#utility.yul\":4085:4103   */\n      tag_453\n      tag_409\n      jump\t// in\n    tag_453:\n      pop\n        /* \"#utility.yul\":4132:4133   */\n      0x01\n        /* \"#utility.yul\":4121:4134   */\n      add\n      swap1\n        /* \"#utility.yul\":3945:4140   */\n      jump\t// out\n        /* \"#utility.yul\":4145:4383   */\n    tag_150:\n        /* \"#utility.yul\":4182:4185   */\n      0x00\n        /* \"#utility.yul\":4226:4230   */\n      0xff\n        /* \"#utility.yul\":4219:4224   */\n      dup3\n        /* \"#utility.yul\":4215:4231   */\n      and\n        /* \"#utility.yul\":4250:4257   */\n      dup1\n        /* \"#utility.yul\":4240:4281   */\n      tag_456\n      jumpi\n        /* \"#utility.yul\":4261:4279   */\n      tag_456\n      tag_409\n      jump\t// in\n    tag_456:\n      not(0x00)\n        /* \"#utility.yul\":4297:4377   */\n      add\n      swap3\n        /* \"#utility.yul\":4145:4383   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4388:4572   */\n    tag_167:\n        /* \"#utility.yul\":4440:4517   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4437:4438   */\n      0x00\n        /* \"#utility.yul\":4430:4518   */\n      mstore\n        /* \"#utility.yul\":4537:4541   */\n      0x31\n        /* \"#utility.yul\":4534:4535   */\n      0x04\n        /* \"#utility.yul\":4527:4542   */\n      mstore\n        /* \"#utility.yul\":4561:4565   */\n      0x24\n        /* \"#utility.yul\":4558:4559   */\n      0x00\n        /* \"#utility.yul\":4551:4566   */\n      revert\n        /* \"#utility.yul\":4577:4850   */\n    tag_191:\n        /* \"#utility.yul\":4645:4651   */\n      0x00\n        /* \"#utility.yul\":4698:4700   */\n      0x20\n        /* \"#utility.yul\":4686:4695   */\n      dup3\n        /* \"#utility.yul\":4677:4684   */\n      dup5\n        /* \"#utility.yul\":4673:4696   */\n      sub\n        /* \"#utility.yul\":4669:4701   */\n      slt\n        /* \"#utility.yul\":4666:4718   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":4714:4715   */\n      0x00\n        /* \"#utility.yul\":4711:4712   */\n      dup1\n        /* \"#utility.yul\":4704:4716   */\n      revert\n        /* \"#utility.yul\":4666:4718   */\n    tag_459:\n        /* \"#utility.yul\":4746:4755   */\n      dup2\n        /* \"#utility.yul\":4740:4756   */\n      mload\n        /* \"#utility.yul\":4796:4800   */\n      0xff\n        /* \"#utility.yul\":4789:4794   */\n      dup2\n        /* \"#utility.yul\":4785:4801   */\n      and\n        /* \"#utility.yul\":4778:4783   */\n      dup2\n        /* \"#utility.yul\":4775:4802   */\n      eq\n        /* \"#utility.yul\":4765:4820   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":4816:4817   */\n      0x00\n        /* \"#utility.yul\":4813:4814   */\n      dup1\n        /* \"#utility.yul\":4806:4818   */\n      revert\n        /* \"#utility.yul\":4855:5337   */\n    tag_410:\n        /* \"#utility.yul\":4944:4945   */\n      0x01\n        /* \"#utility.yul\":4987:4992   */\n      dup2\n        /* \"#utility.yul\":4944:4945   */\n      dup2\n        /* \"#utility.yul\":5001:5331   */\n    tag_462:\n        /* \"#utility.yul\":5022:5029   */\n      dup1\n        /* \"#utility.yul\":5012:5020   */\n      dup6\n        /* \"#utility.yul\":5009:5030   */\n      gt\n        /* \"#utility.yul\":5001:5331   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":5141:5145   */\n      dup2\n      not(0x00)\n        /* \"#utility.yul\":5069:5146   */\n      div\n        /* \"#utility.yul\":5063:5067   */\n      dup3\n        /* \"#utility.yul\":5060:5147   */\n      gt\n        /* \"#utility.yul\":5057:5170   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":5150:5168   */\n      tag_466\n      tag_409\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":5200:5207   */\n      dup1\n        /* \"#utility.yul\":5190:5198   */\n      dup6\n        /* \"#utility.yul\":5186:5208   */\n      and\n        /* \"#utility.yul\":5183:5238   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":5220:5236   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":5183:5238   */\n    tag_467:\n        /* \"#utility.yul\":5299:5321   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":5259:5274   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":5001:5331   */\n      jump(tag_462)\n    tag_464:\n        /* \"#utility.yul\":5005:5008   */\n      pop\n        /* \"#utility.yul\":4855:5337   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5342:6208   */\n    tag_411:\n        /* \"#utility.yul\":5391:5396   */\n      0x00\n        /* \"#utility.yul\":5421:5429   */\n      dup3\n        /* \"#utility.yul\":5411:5491   */\n      tag_469\n      jumpi\n      pop\n        /* \"#utility.yul\":5462:5463   */\n      0x01\n        /* \"#utility.yul\":5476:5481   */\n      jump(tag_172)\n        /* \"#utility.yul\":5411:5491   */\n    tag_469:\n        /* \"#utility.yul\":5510:5514   */\n      dup2\n        /* \"#utility.yul\":5500:5576   */\n      tag_470\n      jumpi\n      pop\n        /* \"#utility.yul\":5547:5548   */\n      0x00\n        /* \"#utility.yul\":5561:5566   */\n      jump(tag_172)\n        /* \"#utility.yul\":5500:5576   */\n    tag_470:\n        /* \"#utility.yul\":5592:5596   */\n      dup2\n        /* \"#utility.yul\":5610:5611   */\n      0x01\n        /* \"#utility.yul\":5605:5664   */\n      dup2\n      eq\n      tag_472\n      jumpi\n        /* \"#utility.yul\":5678:5679   */\n      0x02\n        /* \"#utility.yul\":5673:5803   */\n      dup2\n      eq\n      tag_473\n      jumpi\n        /* \"#utility.yul\":5585:5803   */\n      jump(tag_471)\n        /* \"#utility.yul\":5605:5664   */\n    tag_472:\n        /* \"#utility.yul\":5635:5636   */\n      0x01\n        /* \"#utility.yul\":5626:5636   */\n      swap2\n      pop\n        /* \"#utility.yul\":5649:5654   */\n      pop\n      jump(tag_172)\n        /* \"#utility.yul\":5673:5803   */\n    tag_473:\n        /* \"#utility.yul\":5710:5713   */\n      0xff\n        /* \"#utility.yul\":5700:5708   */\n      dup5\n        /* \"#utility.yul\":5697:5714   */\n      gt\n        /* \"#utility.yul\":5694:5737   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":5717:5735   */\n      tag_475\n      tag_409\n      jump\t// in\n    tag_475:\n      pop\n      pop\n        /* \"#utility.yul\":5773:5774   */\n      0x01\n        /* \"#utility.yul\":5759:5775   */\n      dup3\n      shl\n        /* \"#utility.yul\":5788:5793   */\n      jump(tag_172)\n        /* \"#utility.yul\":5585:5803   */\n    tag_471:\n      pop\n        /* \"#utility.yul\":5887:5889   */\n      0x20\n        /* \"#utility.yul\":5877:5885   */\n      dup4\n        /* \"#utility.yul\":5874:5890   */\n      lt\n        /* \"#utility.yul\":5868:5871   */\n      0x0133\n        /* \"#utility.yul\":5862:5866   */\n      dup4\n        /* \"#utility.yul\":5859:5872   */\n      lt\n        /* \"#utility.yul\":5855:5891   */\n      and\n        /* \"#utility.yul\":5849:5851   */\n      0x4e\n        /* \"#utility.yul\":5839:5847   */\n      dup5\n        /* \"#utility.yul\":5836:5852   */\n      lt\n        /* \"#utility.yul\":5831:5833   */\n      0x0b\n        /* \"#utility.yul\":5825:5829   */\n      dup5\n        /* \"#utility.yul\":5822:5834   */\n      lt\n        /* \"#utility.yul\":5818:5853   */\n      and\n        /* \"#utility.yul\":5815:5892   */\n      or\n        /* \"#utility.yul\":5812:5971   */\n      iszero\n      tag_476\n      jumpi\n      pop\n        /* \"#utility.yul\":5924:5943   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":5956:5961   */\n      jump(tag_172)\n        /* \"#utility.yul\":5812:5971   */\n    tag_476:\n        /* \"#utility.yul\":6003:6037   */\n      tag_477\n        /* \"#utility.yul\":6028:6036   */\n      dup4\n        /* \"#utility.yul\":6022:6026   */\n      dup4\n        /* \"#utility.yul\":6003:6037   */\n      tag_410\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":6133:6139   */\n      dup1\n      not(0x00)\n        /* \"#utility.yul\":6061:6140   */\n      div\n        /* \"#utility.yul\":6052:6059   */\n      dup3\n        /* \"#utility.yul\":6049:6141   */\n      gt\n        /* \"#utility.yul\":6046:6164   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":6144:6162   */\n      tag_479\n      tag_409\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":6182:6202   */\n      mul\n      swap4\n        /* \"#utility.yul\":5342:6208   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6213:6344   */\n    tag_195:\n        /* \"#utility.yul\":6273:6278   */\n      0x00\n        /* \"#utility.yul\":6302:6338   */\n      tag_381\n        /* \"#utility.yul\":6329:6337   */\n      dup4\n        /* \"#utility.yul\":6323:6327   */\n      dup4\n        /* \"#utility.yul\":6302:6338   */\n      tag_411\n      jump\t// in\n        /* \"#utility.yul\":6349:6533   */\n    tag_412:\n        /* \"#utility.yul\":6401:6478   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6398:6399   */\n      0x00\n        /* \"#utility.yul\":6391:6479   */\n      mstore\n        /* \"#utility.yul\":6498:6502   */\n      0x12\n        /* \"#utility.yul\":6495:6496   */\n      0x04\n        /* \"#utility.yul\":6488:6503   */\n      mstore\n        /* \"#utility.yul\":6522:6526   */\n      0x24\n        /* \"#utility.yul\":6519:6520   */\n      0x00\n        /* \"#utility.yul\":6512:6527   */\n      revert\n        /* \"#utility.yul\":6538:6658   */\n    tag_197:\n        /* \"#utility.yul\":6578:6579   */\n      0x00\n        /* \"#utility.yul\":6604:6605   */\n      dup3\n        /* \"#utility.yul\":6594:6629   */\n      tag_485\n      jumpi\n        /* \"#utility.yul\":6609:6627   */\n      tag_485\n      tag_412\n      jump\t// in\n    tag_485:\n      pop\n        /* \"#utility.yul\":6643:6652   */\n      div\n      swap1\n        /* \"#utility.yul\":6538:6658   */\n      jump\t// out\n        /* \"#utility.yul\":6663:6838   */\n    tag_220:\n        /* \"#utility.yul\":6700:6703   */\n      0x00\n        /* \"#utility.yul\":6744:6748   */\n      0xff\n        /* \"#utility.yul\":6737:6742   */\n      dup3\n        /* \"#utility.yul\":6733:6749   */\n      and\n        /* \"#utility.yul\":6773:6777   */\n      0xff\n        /* \"#utility.yul\":6764:6771   */\n      dup2\n        /* \"#utility.yul\":6761:6778   */\n      sub\n        /* \"#utility.yul\":6758:6801   */\n      tag_488\n      jumpi\n        /* \"#utility.yul\":6781:6799   */\n      tag_488\n      tag_409\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":6830:6831   */\n      0x01\n        /* \"#utility.yul\":6817:6832   */\n      add\n      swap3\n        /* \"#utility.yul\":6663:6838   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6843:7071   */\n    tag_259:\n        /* \"#utility.yul\":6883:6890   */\n      0x00\n        /* \"#utility.yul\":7009:7010   */\n      dup2\n      not(0x00)\n        /* \"#utility.yul\":6937:7011   */\n      div\n        /* \"#utility.yul\":6934:6935   */\n      dup4\n        /* \"#utility.yul\":6931:7012   */\n      gt\n        /* \"#utility.yul\":6926:6927   */\n      dup3\n        /* \"#utility.yul\":6919:6928   */\n      iszero\n        /* \"#utility.yul\":6912:6929   */\n      iszero\n        /* \"#utility.yul\":6908:7013   */\n      and\n        /* \"#utility.yul\":6905:7036   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":7016:7034   */\n      tag_491\n      tag_409\n      jump\t// in\n    tag_491:\n      pop\n        /* \"#utility.yul\":7056:7065   */\n      mul\n      swap1\n        /* \"#utility.yul\":6843:7071   */\n      jump\t// out\n        /* \"#utility.yul\":7076:7204   */\n    tag_261:\n        /* \"#utility.yul\":7116:7119   */\n      0x00\n        /* \"#utility.yul\":7147:7148   */\n      dup3\n        /* \"#utility.yul\":7143:7149   */\n      not\n        /* \"#utility.yul\":7140:7141   */\n      dup3\n        /* \"#utility.yul\":7137:7150   */\n      gt\n        /* \"#utility.yul\":7134:7173   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":7153:7171   */\n      tag_494\n      tag_409\n      jump\t// in\n    tag_494:\n      pop\n        /* \"#utility.yul\":7189:7198   */\n      add\n      swap1\n        /* \"#utility.yul\":7076:7204   */\n      jump\t// out\n        /* \"#utility.yul\":7539:7723   */\n    tag_272:\n        /* \"#utility.yul\":7591:7668   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7588:7589   */\n      0x00\n        /* \"#utility.yul\":7581:7669   */\n      mstore\n        /* \"#utility.yul\":7688:7692   */\n      0x41\n        /* \"#utility.yul\":7685:7686   */\n      0x04\n        /* \"#utility.yul\":7678:7693   */\n      mstore\n        /* \"#utility.yul\":7712:7716   */\n      0x24\n        /* \"#utility.yul\":7709:7710   */\n      0x00\n        /* \"#utility.yul\":7702:7717   */\n      revert\n        /* \"#utility.yul\":7728:8375   */\n    tag_279:\n        /* \"#utility.yul\":7897:7899   */\n      0x20\n        /* \"#utility.yul\":7949:7970   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8019:8032   */\n      dup3\n      mload\n        /* \"#utility.yul\":7922:7940   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":8041:8063   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7868:7872   */\n      0x00\n      swap2\n        /* \"#utility.yul\":7897:7899   */\n      swap1\n        /* \"#utility.yul\":8120:8135   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":8094:8096   */\n      0x40\n        /* \"#utility.yul\":8079:8097   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":7868:7872   */\n      dup5\n        /* \"#utility.yul\":8163:8349   */\n    tag_498:\n        /* \"#utility.yul\":8177:8183   */\n      dup2\n        /* \"#utility.yul\":8174:8175   */\n      dup2\n        /* \"#utility.yul\":8171:8184   */\n      lt\n        /* \"#utility.yul\":8163:8349   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":8242:8255   */\n      dup4\n      mload\n        /* \"#utility.yul\":8257:8267   */\n      0xffffffff\n        /* \"#utility.yul\":8238:8268   */\n      and\n        /* \"#utility.yul\":8226:8269   */\n      dup4\n      mstore\n        /* \"#utility.yul\":8324:8339   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":8289:8301   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":8199:8200   */\n      0x01\n        /* \"#utility.yul\":8192:8201   */\n      add\n        /* \"#utility.yul\":8163:8349   */\n      jump(tag_498)\n    tag_500:\n      pop\n        /* \"#utility.yul\":8366:8369   */\n      swap1\n      swap7\n        /* \"#utility.yul\":7728:8375   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8380:8714   */\n    tag_413:\n        /* \"#utility.yul\":8451:8453   */\n      0x40\n        /* \"#utility.yul\":8445:8454   */\n      mload\n        /* \"#utility.yul\":8507:8509   */\n      0x1f\n        /* \"#utility.yul\":8497:8510   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":8493:8579   */\n      and\n        /* \"#utility.yul\":8481:8580   */\n      dup2\n      add\n        /* \"#utility.yul\":8610:8628   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8595:8629   */\n      dup2\n      gt\n        /* \"#utility.yul\":8631:8653   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":8592:8654   */\n      or\n        /* \"#utility.yul\":8589:8677   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":8657:8675   */\n      tag_503\n      tag_272\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":8693:8695   */\n      0x40\n        /* \"#utility.yul\":8686:8708   */\n      mstore\n        /* \"#utility.yul\":8380:8714   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8719:8900   */\n    tag_414:\n        /* \"#utility.yul\":8777:8781   */\n      0x00\n        /* \"#utility.yul\":8810:8828   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8802:8808   */\n      dup3\n        /* \"#utility.yul\":8799:8829   */\n      gt\n        /* \"#utility.yul\":8796:8852   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":8832:8850   */\n      tag_506\n      tag_272\n      jump\t// in\n    tag_506:\n      pop\n        /* \"#utility.yul\":8877:8878   */\n      0x05\n        /* \"#utility.yul\":8873:8887   */\n      shl\n        /* \"#utility.yul\":8889:8893   */\n      0x20\n        /* \"#utility.yul\":8869:8894   */\n      add\n      swap1\n        /* \"#utility.yul\":8719:8900   */\n      jump\t// out\n        /* \"#utility.yul\":8905:9637   */\n    tag_415:\n        /* \"#utility.yul\":8970:8975   */\n      0x00\n        /* \"#utility.yul\":9023:9026   */\n      dup3\n        /* \"#utility.yul\":9016:9020   */\n      0x1f\n        /* \"#utility.yul\":9008:9014   */\n      dup4\n        /* \"#utility.yul\":9004:9021   */\n      add\n        /* \"#utility.yul\":9000:9027   */\n      slt\n        /* \"#utility.yul\":8990:9045   */\n      tag_508\n      jumpi\n        /* \"#utility.yul\":9041:9042   */\n      0x00\n        /* \"#utility.yul\":9038:9039   */\n      dup1\n        /* \"#utility.yul\":9031:9043   */\n      revert\n        /* \"#utility.yul\":8990:9045   */\n    tag_508:\n        /* \"#utility.yul\":9070:9076   */\n      dup2\n        /* \"#utility.yul\":9064:9077   */\n      mload\n        /* \"#utility.yul\":9096:9100   */\n      0x20\n        /* \"#utility.yul\":9120:9178   */\n      tag_509\n        /* \"#utility.yul\":9136:9177   */\n      tag_510\n        /* \"#utility.yul\":9174:9176   */\n      dup4\n        /* \"#utility.yul\":9136:9177   */\n      tag_414\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":9120:9178   */\n      tag_413\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":9212:9227   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":9298:9299   */\n      0x05\n        /* \"#utility.yul\":9294:9304   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":9282:9305   */\n      dup5\n      add\n        /* \"#utility.yul\":9278:9310   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":9243:9255   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":9322:9337   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":9319:9354   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":9350:9351   */\n      0x00\n        /* \"#utility.yul\":9347:9348   */\n      dup1\n        /* \"#utility.yul\":9340:9352   */\n      revert\n        /* \"#utility.yul\":9319:9354   */\n    tag_511:\n        /* \"#utility.yul\":9386:9388   */\n      dup3\n        /* \"#utility.yul\":9378:9384   */\n      dup7\n        /* \"#utility.yul\":9374:9389   */\n      add\n        /* \"#utility.yul\":9398:9608   */\n    tag_512:\n        /* \"#utility.yul\":9414:9420   */\n      dup5\n        /* \"#utility.yul\":9409:9412   */\n      dup2\n        /* \"#utility.yul\":9406:9421   */\n      lt\n        /* \"#utility.yul\":9398:9608   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":9487:9490   */\n      dup1\n        /* \"#utility.yul\":9481:9491   */\n      mload\n        /* \"#utility.yul\":9504:9535   */\n      tag_515\n        /* \"#utility.yul\":9529:9534   */\n      dup2\n        /* \"#utility.yul\":9504:9535   */\n      tag_408\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":9548:9566   */\n      dup4\n      mstore\n        /* \"#utility.yul\":9586:9598   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":9431:9443   */\n      dup4\n      add\n        /* \"#utility.yul\":9398:9608   */\n      jump(tag_512)\n    tag_514:\n      pop\n        /* \"#utility.yul\":9626:9631   */\n      swap7\n        /* \"#utility.yul\":8905:9637   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9642:10945   */\n    tag_283:\n        /* \"#utility.yul\":9769:9775   */\n      0x00\n        /* \"#utility.yul\":9777:9783   */\n      dup1\n        /* \"#utility.yul\":9830:9832   */\n      0x40\n        /* \"#utility.yul\":9818:9827   */\n      dup4\n        /* \"#utility.yul\":9809:9816   */\n      dup6\n        /* \"#utility.yul\":9805:9828   */\n      sub\n        /* \"#utility.yul\":9801:9833   */\n      slt\n        /* \"#utility.yul\":9798:9850   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":9846:9847   */\n      0x00\n        /* \"#utility.yul\":9843:9844   */\n      dup1\n        /* \"#utility.yul\":9836:9848   */\n      revert\n        /* \"#utility.yul\":9798:9850   */\n    tag_517:\n        /* \"#utility.yul\":9879:9888   */\n      dup3\n        /* \"#utility.yul\":9873:9889   */\n      mload\n        /* \"#utility.yul\":9908:9926   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9949:9951   */\n      dup1\n        /* \"#utility.yul\":9941:9947   */\n      dup3\n        /* \"#utility.yul\":9938:9952   */\n      gt\n        /* \"#utility.yul\":9935:9969   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":9965:9966   */\n      0x00\n        /* \"#utility.yul\":9962:9963   */\n      dup1\n        /* \"#utility.yul\":9955:9967   */\n      revert\n        /* \"#utility.yul\":9935:9969   */\n    tag_518:\n        /* \"#utility.yul\":10003:10009   */\n      dup2\n        /* \"#utility.yul\":9992:10001   */\n      dup6\n        /* \"#utility.yul\":9988:10010   */\n      add\n        /* \"#utility.yul\":9978:10010   */\n      swap2\n      pop\n        /* \"#utility.yul\":10048:10055   */\n      dup6\n        /* \"#utility.yul\":10041:10045   */\n      0x1f\n        /* \"#utility.yul\":10037:10039   */\n      dup4\n        /* \"#utility.yul\":10033:10046   */\n      add\n        /* \"#utility.yul\":10029:10056   */\n      slt\n        /* \"#utility.yul\":10019:10074   */\n      tag_519\n      jumpi\n        /* \"#utility.yul\":10070:10071   */\n      0x00\n        /* \"#utility.yul\":10067:10068   */\n      dup1\n        /* \"#utility.yul\":10060:10072   */\n      revert\n        /* \"#utility.yul\":10019:10074   */\n    tag_519:\n        /* \"#utility.yul\":10099:10101   */\n      dup2\n        /* \"#utility.yul\":10093:10102   */\n      mload\n        /* \"#utility.yul\":10121:10125   */\n      0x20\n        /* \"#utility.yul\":10145:10203   */\n      tag_520\n        /* \"#utility.yul\":10161:10202   */\n      tag_510\n        /* \"#utility.yul\":10199:10201   */\n      dup4\n        /* \"#utility.yul\":10161:10202   */\n      tag_414\n      jump\t// in\n        /* \"#utility.yul\":10145:10203   */\n    tag_520:\n        /* \"#utility.yul\":10237:10252   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":10319:10320   */\n      0x05\n        /* \"#utility.yul\":10315:10325   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":10307:10326   */\n      dup5\n      add\n        /* \"#utility.yul\":10303:10331   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":10268:10280   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":10343:10362   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":10340:10379   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":10375:10376   */\n      0x00\n        /* \"#utility.yul\":10372:10373   */\n      dup1\n        /* \"#utility.yul\":10365:10377   */\n      revert\n        /* \"#utility.yul\":10340:10379   */\n    tag_522:\n        /* \"#utility.yul\":10399:10410   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":10419:10727   */\n    tag_523:\n        /* \"#utility.yul\":10435:10441   */\n      dup4\n        /* \"#utility.yul\":10430:10433   */\n      dup7\n        /* \"#utility.yul\":10427:10442   */\n      lt\n        /* \"#utility.yul\":10419:10727   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":10508:10511   */\n      dup6\n        /* \"#utility.yul\":10502:10512   */\n      mload\n        /* \"#utility.yul\":10559:10564   */\n      dup1\n        /* \"#utility.yul\":10556:10557   */\n      0x06\n        /* \"#utility.yul\":10545:10565   */\n      signextend\n        /* \"#utility.yul\":10538:10543   */\n      dup2\n        /* \"#utility.yul\":10535:10566   */\n      eq\n        /* \"#utility.yul\":10525:10654   */\n      tag_526\n      jumpi\n        /* \"#utility.yul\":10608:10609   */\n      0x00\n        /* \"#utility.yul\":10637:10639   */\n      dup1\n        /* \"#utility.yul\":10633:10635   */\n      dup2\n        /* \"#utility.yul\":10626:10640   */\n      revert\n        /* \"#utility.yul\":10525:10654   */\n    tag_526:\n        /* \"#utility.yul\":10667:10685   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10452:10464   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":10705:10717   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":10419:10727   */\n      jump(tag_523)\n    tag_525:\n        /* \"#utility.yul\":10782:10800   */\n      swap2\n      dup9\n      add\n        /* \"#utility.yul\":10776:10801   */\n      mload\n        /* \"#utility.yul\":10746:10751   */\n      swap2\n      swap7\n      pop\n        /* \"#utility.yul\":10776:10801   */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10813:10829   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":10810:10846   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":10842:10843   */\n      0x00\n        /* \"#utility.yul\":10839:10840   */\n      dup1\n        /* \"#utility.yul\":10832:10844   */\n      revert\n        /* \"#utility.yul\":10810:10846   */\n    tag_527:\n      pop\n        /* \"#utility.yul\":10865:10939   */\n      tag_528\n        /* \"#utility.yul\":10931:10938   */\n      dup6\n        /* \"#utility.yul\":10920:10928   */\n      dup3\n        /* \"#utility.yul\":10909:10918   */\n      dup7\n        /* \"#utility.yul\":10905:10929   */\n      add\n        /* \"#utility.yul\":10865:10939   */\n      tag_415\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":10855:10939   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":9642:10945   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10950:11354   */\n    tag_289:\n        /* \"#utility.yul\":10988:10992   */\n      0x00\n        /* \"#utility.yul\":11032:11033   */\n      dup2\n        /* \"#utility.yul\":11029:11030   */\n      0x06\n        /* \"#utility.yul\":11018:11034   */\n      signextend\n        /* \"#utility.yul\":11068:11069   */\n      dup4\n        /* \"#utility.yul\":11065:11066   */\n      0x06\n        /* \"#utility.yul\":11054:11070   */\n      signextend\n        /* \"#utility.yul\":11098:11099   */\n      0x00\n        /* \"#utility.yul\":11093:11096   */\n      dup2\n        /* \"#utility.yul\":11089:11100   */\n      slt\n        /* \"#utility.yul\":11209:11212   */\n      dup2\n        /* \"#utility.yul\":11141:11207   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000\n        /* \"#utility.yul\":11137:11213   */\n      add\n        /* \"#utility.yul\":11132:11135   */\n      dup4\n        /* \"#utility.yul\":11128:11214   */\n      slt\n        /* \"#utility.yul\":11123:11125   */\n      dup2\n        /* \"#utility.yul\":11116:11126   */\n      iszero\n        /* \"#utility.yul\":11112:11215   */\n      and\n        /* \"#utility.yul\":11109:11238   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":11218:11236   */\n      tag_531\n      tag_409\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":11289:11292   */\n      dup2\n        /* \"#utility.yul\":11271:11287   */\n      0x7fffffffffffff\n        /* \"#utility.yul\":11267:11293   */\n      add\n        /* \"#utility.yul\":11262:11265   */\n      dup4\n        /* \"#utility.yul\":11258:11294   */\n      sgt\n        /* \"#utility.yul\":11254:11256   */\n      dup2\n        /* \"#utility.yul\":11250:11295   */\n      and\n        /* \"#utility.yul\":11247:11318   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":11298:11316   */\n      tag_533\n      tag_409\n      jump\t// in\n    tag_533:\n      pop\n        /* \"#utility.yul\":11335:11348   */\n      swap1\n      sub\n      swap4\n        /* \"#utility.yul\":10950:11354   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11359:11613   */\n    tag_295:\n        /* \"#utility.yul\":11399:11403   */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11520:11530   */\n      dup4\n      dup2\n      and\n      swap1\n        /* \"#utility.yul\":11490:11500   */\n      dup4\n      and\n        /* \"#utility.yul\":11542:11554   */\n      dup2\n      dup2\n      lt\n        /* \"#utility.yul\":11539:11577   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":11557:11575   */\n      tag_536\n      tag_409\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":11594:11607   */\n      sub\n      swap4\n        /* \"#utility.yul\":11359:11613   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11618:12007   */\n    tag_297:\n        /* \"#utility.yul\":11656:11657   */\n      0x00\n        /* \"#utility.yul\":11697:11698   */\n      dup2\n        /* \"#utility.yul\":11694:11695   */\n      0x06\n        /* \"#utility.yul\":11683:11699   */\n      signextend\n        /* \"#utility.yul\":11733:11734   */\n      dup4\n        /* \"#utility.yul\":11730:11731   */\n      0x06\n        /* \"#utility.yul\":11719:11735   */\n      signextend\n        /* \"#utility.yul\":11754:11757   */\n      dup1\n        /* \"#utility.yul\":11744:11781   */\n      tag_539\n      jumpi\n        /* \"#utility.yul\":11761:11779   */\n      tag_539\n      tag_412\n      jump\t// in\n    tag_539:\n      not(0x00)\n        /* \"#utility.yul\":11877:11880   */\n      dup2\n        /* \"#utility.yul\":11874:11949   */\n      eq\n        /* \"#utility.yul\":11805:11871   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000\n        /* \"#utility.yul\":11800:11803   */\n      dup4\n        /* \"#utility.yul\":11797:11872   */\n      eq\n        /* \"#utility.yul\":11793:11950   */\n      and\n        /* \"#utility.yul\":11790:11973   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":11953:11971   */\n      tag_541\n      tag_409\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":11987:12001   */\n      swap1\n      sdiv\n      swap4\n        /* \"#utility.yul\":11618:12007   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12012:12178   */\n    tag_300:\n        /* \"#utility.yul\":12042:12043   */\n      0x00\n        /* \"#utility.yul\":12083:12084   */\n      dup3\n        /* \"#utility.yul\":12080:12081   */\n      0x06\n        /* \"#utility.yul\":12069:12085   */\n      signextend\n        /* \"#utility.yul\":12104:12107   */\n      dup1\n        /* \"#utility.yul\":12094:12131   */\n      tag_544\n      jumpi\n        /* \"#utility.yul\":12111:12129   */\n      tag_544\n      tag_412\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":12168:12171   */\n      dup1\n        /* \"#utility.yul\":12164:12165   */\n      dup4\n        /* \"#utility.yul\":12161:12162   */\n      0x06\n        /* \"#utility.yul\":12150:12166   */\n      signextend\n        /* \"#utility.yul\":12145:12172   */\n      smod\n        /* \"#utility.yul\":12140:12172   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":12012:12178   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12183:12489   */\n    tag_303:\n        /* \"#utility.yul\":12220:12223   */\n      0x00\n        /* \"#utility.yul\":12267:12272   */\n      dup2\n        /* \"#utility.yul\":12264:12265   */\n      0x02\n        /* \"#utility.yul\":12253:12273   */\n      signextend\n        /* \"#utility.yul\":12297:12363   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000\n        /* \"#utility.yul\":12288:12295   */\n      dup2\n        /* \"#utility.yul\":12285:12364   */\n      sub\n        /* \"#utility.yul\":12282:12387   */\n      tag_456\n      jumpi\n        /* \"#utility.yul\":12367:12385   */\n      tag_456\n      tag_409\n      jump\t// in\n        /* \"#utility.yul\":12494:12797   */\n    tag_305:\n        /* \"#utility.yul\":12534:12541   */\n      0x00\n        /* \"#utility.yul\":12566:12616   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12643:12645   */\n      dup1\n        /* \"#utility.yul\":12640:12641   */\n      dup4\n        /* \"#utility.yul\":12636:12646   */\n      and\n        /* \"#utility.yul\":12673:12675   */\n      dup2\n        /* \"#utility.yul\":12670:12671   */\n      dup6\n        /* \"#utility.yul\":12666:12676   */\n      and\n        /* \"#utility.yul\":12729:12732   */\n      dup2\n        /* \"#utility.yul\":12725:12727   */\n      dup4\n        /* \"#utility.yul\":12721:12733   */\n      div\n        /* \"#utility.yul\":12716:12719   */\n      dup2\n        /* \"#utility.yul\":12713:12734   */\n      gt\n        /* \"#utility.yul\":12706:12709   */\n      dup3\n        /* \"#utility.yul\":12699:12710   */\n      iszero\n        /* \"#utility.yul\":12692:12711   */\n      iszero\n        /* \"#utility.yul\":12688:12735   */\n      and\n        /* \"#utility.yul\":12685:12758   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":12738:12756   */\n      tag_550\n      tag_409\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":12778:12791   */\n      mul\n      swap5\n        /* \"#utility.yul\":12494:12797   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12802:13034   */\n    tag_307:\n        /* \"#utility.yul\":12842:12843   */\n      0x00\n        /* \"#utility.yul\":12868:12918   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12945:12947   */\n      dup1\n        /* \"#utility.yul\":12942:12943   */\n      dup5\n        /* \"#utility.yul\":12938:12948   */\n      and\n        /* \"#utility.yul\":12967:12970   */\n      dup1\n        /* \"#utility.yul\":12957:12994   */\n      tag_553\n      jumpi\n        /* \"#utility.yul\":12974:12992   */\n      tag_553\n      tag_412\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":13012:13022   */\n      swap3\n      and\n        /* \"#utility.yul\":13008:13028   */\n      swap2\n      swap1\n      swap2\n      div\n      swap3\n        /* \"#utility.yul\":12802:13034   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13039:13230   */\n    tag_328:\n        /* \"#utility.yul\":13074:13077   */\n      0x00\n        /* \"#utility.yul\":13105:13171   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13098:13103   */\n      dup3\n        /* \"#utility.yul\":13095:13172   */\n      sub\n        /* \"#utility.yul\":13092:13195   */\n      tag_556\n      jumpi\n        /* \"#utility.yul\":13175:13193   */\n      tag_556\n      tag_409\n      jump\t// in\n    tag_556:\n      pop\n        /* \"#utility.yul\":13215:13216   */\n      0x00\n        /* \"#utility.yul\":13211:13224   */\n      sub\n      swap1\n        /* \"#utility.yul\":13039:13230   */\n      jump\t// out\n        /* \"#utility.yul\":13235:13473   */\n    tag_330:\n        /* \"#utility.yul\":13269:13272   */\n      0x00\n        /* \"#utility.yul\":13316:13321   */\n      dup2\n        /* \"#utility.yul\":13313:13314   */\n      0x02\n        /* \"#utility.yul\":13302:13322   */\n      signextend\n        /* \"#utility.yul\":13346:13412   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000\n        /* \"#utility.yul\":13337:13344   */\n      dup2\n        /* \"#utility.yul\":13334:13413   */\n      sub\n        /* \"#utility.yul\":13331:13436   */\n      tag_559\n      jumpi\n        /* \"#utility.yul\":13416:13434   */\n      tag_559\n      tag_409\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":13456:13457   */\n      0x00\n        /* \"#utility.yul\":13452:13467   */\n      sub\n      swap3\n        /* \"#utility.yul\":13235:13473   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13807:13919   */\n    tag_377:\n        /* \"#utility.yul\":13839:13840   */\n      0x00\n        /* \"#utility.yul\":13865:13866   */\n      dup3\n        /* \"#utility.yul\":13855:13890   */\n      tag_563\n      jumpi\n        /* \"#utility.yul\":13870:13888   */\n      tag_563\n      tag_412\n      jump\t// in\n    tag_563:\n      pop\n        /* \"#utility.yul\":13904:13913   */\n      mod\n      swap1\n        /* \"#utility.yul\":13807:13919   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ecec9a795266c982911a3ab5a99e3b530f7adc6c687bfca8d89c788007d5650a64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_860": {
									"entryPoint": null,
									"id": 860,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b50336080526080516124c761004c60003960008181610422015281816106eb0152818161072001528181610d870152610ea501526124c76000f3fe6080604052600436106100ec5760003560e01c8063990dc9db1161008a578063d825bfff11610059578063d825bfff146102b1578063def1a5e8146102e7578063ec55688914610311578063fed0a20e1461033757600080fd5b8063990dc9db146102215780639e95514914610251578063b401487914610271578063cf9d4afa1461029157600080fd5b80634051b9aa116100c65780634051b9aa1461019e57806352fd856b146101be57806363b48ee6146101d45780637d0f7a88146101f457600080fd5b80630cb1982b146100fb5780630fbbfa3e1461012e5780632637a4771461017c57600080fd5b366100f657600080fd5b600080fd5b34801561010757600080fd5b5061011b610116366004611cb1565b610363565b6040519081526020015b60405180910390f35b34801561013a57600080fd5b50610164610149366004611ce2565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610125565b34801561018857600080fd5b5061019c610197366004611ce2565b610417565b005b3480156101aa57600080fd5b5061019c6101b9366004611ce2565b610715565b3480156101ca57600080fd5b5061011b60005481565b3480156101e057600080fd5b506101646101ef366004611cb1565b610966565b34801561020057600080fd5b5061011b61020f366004611ce2565b60036020526000908152604090205481565b34801561022d57600080fd5b5061024161023c366004611cff565b610990565b6040519015158152602001610125565b34801561025d57600080fd5b5061019c61026c366004611ce2565b610d1f565b34801561027d57600080fd5b5061019c61028c366004611cff565b610d7c565b34801561029d57600080fd5b5061019c6102ac366004611ce2565b610e9a565b3480156102bd57600080fd5b506101646102cc366004611ce2565b6005602052600090815260409020546001600160a01b031681565b3480156102f357600080fd5b506102fc610f45565b60408051928352602083019190915201610125565b34801561031d57600080fd5b50600154610164906201000090046001600160a01b031681565b34801561034357600080fd5b506001546103519060ff1681565b60405160ff9091168152602001610125565b6000600160029054906101000a90046001600160a01b03166001600160a01b0316633f0a07976040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103dc9190611d2b565b6001600160a01b0316336001600160a01b0316146103f957600080fd5b8161040261111d565b61040c9190611d77565b600081905592915050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461044c57600080fd5b6001546040517fa6fa0b7b0000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301526201000090920490911690819063a6fa0b7b90602401600060405180830381600087803b1580156104b557600080fd5b505af11580156104c9573d6000803e3d6000fd5b50506040516001600160a01b03848116602483015285169250604401905060408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fcf9d4afa000000000000000000000000000000000000000000000000000000001790525161054a9190611d8e565b600060405180830381855af49150503d8060008114610585576040519150601f19603f3d011682016040523d82523d6000602084013e61058a565b606091505b5050600254905060005b818110156106e8576000600282815481106105b1576105b1611dc9565b6000918252602090912001546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b039091169150819063a9059cbb90879083906370a0823190602401602060405180830381865afa158015610628573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064c9190611df8565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156106af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d39190611e11565b505080806106e090611e33565b915050610594565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316ff5b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806107d35750600160029054906101000a90046001600160a01b03166001600160a01b0316633f0a07976040518163ffffffff1660e01b8152600401602060405180830381865afa15801561079a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107be9190611d2b565b6001600160a01b0316336001600160a01b0316145b6107dc57600080fd5b6001600160a01b03811660009081526003602052604090205460020361082d5760018054610100900460ff16908061081383611e4d565b91906101000a81548160ff021916908360ff160217905550505b6001600160a01b0381166000908152600360205260408120819055600254905b8181101561096157826001600160a01b03166002828154811061087257610872611dc9565b6000918252602090912001546001600160a01b03160361094f576002610899600184611d77565b815481106108a9576108a9611dc9565b600091825260209091200154600280546001600160a01b0390921691839081106108d5576108d5611dc9565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600280548061091457610914611e6a565b600082815260209020810160001990810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690550190555b8061095981611e33565b91505061084d565b505050565b6002818154811061097657600080fd5b6000918252602090912001546001600160a01b0316905081565b600080600160029054906101000a90046001600160a01b03169050806001600160a01b0316633f0a07976040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109e9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0d9190611d2b565b6001600160a01b0316336001600160a01b03161480610a9e5750806001600160a01b031663da8909e56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a899190611d2b565b6001600160a01b0316336001600160a01b0316145b610aa757600080fd5b60025460005b81811015610d1157600060028281548110610aca57610aca611dc9565b60009182526020808320909101546001600160a01b03168083526003909152604090912054909150600203610cfe576000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5d9190611e99565b905060128160ff161015610c40576001600160a01b03821663a9059cbb89610b89601260ff8616611d77565b610b9490600a611fa0565b600154610ba990610100900460ff168c611fdb565b610bb39190611fdb565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610c16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3a9190611e11565b50610cfc565b8060ff16601203610cfc576001546001600160a01b0383169063a9059cbb908a90610c7390610100900460ff168b611fdb565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610cd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfa9190611e11565b505b505b5080610d0981611e33565b915050610aad565b506001925050505b92915050565b6001546201000090046001600160a01b03163314610d3c57600080fd5b600180546001600160a01b0390921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff909216919091179055565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610db157600080fd5b80600003610dda576001600160a01b038216600090815260036020526040902060019055610e2f565b80600103610e2f576001600160a01b03821660009081526003602052604090206002905560018054610100900460ff169080610e1583611fef565b91906101000a81548160ff021916908360ff160217905550505b50600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ecf57600080fd5b60015460ff1615610edf57600080fd5b600180547fffffffffffffffffffff0000000000000000000000000000000000000000ff0016620100006001600160a01b0393909316929092027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169190911781179055565b6000806000600160029054906101000a90046001600160a01b03166001600160a01b031663da8909e56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc19190611d2b565b6001600160a01b031663d0b06f5d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ffe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110229190611df8565b90506000600160029054906101000a90046001600160a01b03166001600160a01b031663da8909e56040518163ffffffff1660e01b8152600401602060405180830381865afa158015611079573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109d9190611d2b565b6001600160a01b0316637f8483a46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fe9190611df8565b90508061110961111d565b6111139190611d77565b9491935090915050565b600254600090815b818110156112995760006002828154811061114257611142611dc9565b60009182526020822001546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03909116925082906370a0823190602401602060405180830381865afa1580156111ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d29190611df8565b6001600160a01b038316600090815260036020526040902054909150600181900361126e576001600160a01b038084166000908152600460205260408120549091829161122091168261129e565b506001600160a01b0380871660009081526005602052604090205491925061124e918391879189911661152b565b915061125c9050818461200e565b611266908861202d565b965050611283565b8060020361128357611280828761202d565b95505b505050808061129190611e33565b915050611125565b505090565b6000808263ffffffff16600003611316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f425000000000000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b604080516002808252606082018352600092602083019080368337019050509050838160008151811061134b5761134b611dc9565b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061137a5761137a611dc9565b602002602001019063ffffffff16908163ffffffff1681525050600080866001600160a01b031663883bdbfd846040518263ffffffff1660e01b81526004016113c39190612074565b600060405180830381865afa1580156113e0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114089190810190612187565b9150915060008260008151811061142157611421611dc9565b60200260200101518360018151811061143c5761143c611dc9565b602002602001015161144e9190612253565b905060008260008151811061146557611465611dc9565b60200260200101518360018151811061148057611480611dc9565b602002602001015161149291906122bb565b90506114a2600389900b836122e3565b965060008260060b1280156114c657506114c0600389900b83612339565b60060b15155b156114d957866114d58161235b565b9750505b60006114f26001600160a01b0363ffffffff8b16612390565b905061151c77ffffffffffffffffffffffffffffffffffffffff00000000602084901b16826123d0565b96505050505050509250929050565b600080611537866116aa565b90506fffffffffffffffffffffffffffffffff6001600160a01b0382161161160257600061156e6001600160a01b0383168061200e565b9050836001600160a01b0316856001600160a01b0316106115c4576115bf7801000000000000000000000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683611b2b565b6115fa565b6115fa81876fffffffffffffffffffffffffffffffff167801000000000000000000000000000000000000000000000000611b2b565b9250506116a1565b60006116216001600160a01b0383168068010000000000000000611b2b565b9050836001600160a01b0316856001600160a01b03161061166f5761166a700100000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683611b2b565b61169d565b61169d81876fffffffffffffffffffffffffffffffff16700100000000000000000000000000000000611b2b565b9250505b50949350505050565b60008060008360020b126116c1578260020b6116ce565b8260020b6116ce90612407565b90506116f97ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761861243f565b62ffffff16811115611767576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f5400000000000000000000000000000000000000000000000000000000000000604482015260640161130d565b60008160011660000361178b5770010000000000000000000000000000000061179d565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156117dc5760806117d7826ffff97272373d413259a46990580e213a61200e565b901c90505b6004821615611806576080611801826ffff2e50f5f656932ef12357cf3c7fdcc61200e565b901c90505b600882161561183057608061182b826fffe5caca7e10e4e61c3624eaa0941cd061200e565b901c90505b601082161561185a576080611855826fffcb9843d60f6159c9db58835c92664461200e565b901c90505b602082161561188457608061187f826fff973b41fa98c081472e6896dfb254c061200e565b901c90505b60408216156118ae5760806118a9826fff2ea16466c96a3843ec78b326b5286161200e565b901c90505b60808216156118d85760806118d3826ffe5dee046a99a2a811c461f1969c305361200e565b901c90505b6101008216156119035760806118fe826ffcbe86c7900a88aedcffc83b479aa3a461200e565b901c90505b61020082161561192e576080611929826ff987a7253ac413176f2b074cf7815e5461200e565b901c90505b610400821615611959576080611954826ff3392b0822b70005940c7a398e4b70f361200e565b901c90505b61080082161561198457608061197f826fe7159475a2c29b7443b29c7fa6e889d961200e565b901c90505b6110008216156119af5760806119aa826fd097f3bdfd2022b8845ad8f792aa582561200e565b901c90505b6120008216156119da5760806119d5826fa9f746462d870fdf8a65dc1f90e061e561200e565b901c90505b614000821615611a05576080611a00826f70d869a156d2a1b890bb3df62baf32f761200e565b901c90505b618000821615611a30576080611a2b826f31be135f97d08fd981231505542fcfa661200e565b901c90505b62010000821615611a5c576080611a57826f09aa508b5b7a84e1c677de54f3e99bc961200e565b901c90505b62020000821615611a87576080611a82826e5d6af8dedb81196699c329225ee60461200e565b901c90505b62040000821615611ab1576080611aac826d2216e584f5fa1ea926041bedfe9861200e565b901c90505b62080000821615611ad9576080611ad4826b048a170391f7dc42444e8fa261200e565b901c90505b60008460020b1315611af457611af181600019611fdb565b90505b611b036401000000008261247d565b15611b0f576001611b12565b60005b611b239060ff16602083901c61202d565b949350505050565b6000808060001985870985870292508281108382030391505080600003611b645760008411611b5957600080fd5b508290049050611caa565b808411611b7057600080fd5b600084868809808403938111909203919050600085611b9181600019611d77565b611b9c90600161202d565b16958690049593849004936000819003046001019050611bbc818461200e565b909317926000611bcd87600361200e565b6002189050611bdc818861200e565b611be7906002611d77565b611bf1908261200e565b9050611bfd818861200e565b611c08906002611d77565b611c12908261200e565b9050611c1e818861200e565b611c29906002611d77565b611c33908261200e565b9050611c3f818861200e565b611c4a906002611d77565b611c54908261200e565b9050611c60818861200e565b611c6b906002611d77565b611c75908261200e565b9050611c81818861200e565b611c8c906002611d77565b611c96908261200e565b9050611ca2818661200e565b955050505050505b9392505050565b600060208284031215611cc357600080fd5b5035919050565b6001600160a01b0381168114611cdf57600080fd5b50565b600060208284031215611cf457600080fd5b8135611caa81611cca565b60008060408385031215611d1257600080fd5b8235611d1d81611cca565b946020939093013593505050565b600060208284031215611d3d57600080fd5b8151611caa81611cca565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015611d8957611d89611d48565b500390565b6000825160005b81811015611daf5760208186018101518583015201611d95565b81811115611dbe576000828501525b509190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215611e0a57600080fd5b5051919050565b600060208284031215611e2357600080fd5b81518015158114611caa57600080fd5b60006000198203611e4657611e46611d48565b5060010190565b600060ff821680611e6057611e60611d48565b6000190192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600060208284031215611eab57600080fd5b815160ff81168114611caa57600080fd5b600181815b80851115611ef7578160001904821115611edd57611edd611d48565b80851615611eea57918102915b93841c9390800290611ec1565b509250929050565b600082611f0e57506001610d19565b81611f1b57506000610d19565b8160018114611f315760028114611f3b57611f57565b6001915050610d19565b60ff841115611f4c57611f4c611d48565b50506001821b610d19565b5060208310610133831016604e8410600b8410161715611f7a575081810a610d19565b611f848383611ebc565b8060001904821115611f9857611f98611d48565b029392505050565b6000611caa8383611eff565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082611fea57611fea611fac565b500490565b600060ff821660ff810361200557612005611d48565b60010192915050565b600081600019048311821515161561202857612028611d48565b500290565b6000821982111561204057612040611d48565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020808252825182820181905260009190848201906040850190845b818110156120b257835163ffffffff1683529284019291840191600101612090565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156120e7576120e7612045565b604052919050565b600067ffffffffffffffff82111561210957612109612045565b5060051b60200190565b600082601f83011261212457600080fd5b81516020612139612134836120ef565b6120be565b82815260059290921b8401810191818101908684111561215857600080fd5b8286015b8481101561217c57805161216f81611cca565b835291830191830161215c565b509695505050505050565b6000806040838503121561219a57600080fd5b825167ffffffffffffffff808211156121b257600080fd5b818501915085601f8301126121c657600080fd5b815160206121d6612134836120ef565b82815260059290921b840181019181810190898411156121f557600080fd5b948201945b838610156122235785518060060b81146122145760008081fd5b825294820194908201906121fa565b9188015191965090935050508082111561223c57600080fd5b5061224985828601612113565b9150509250929050565b60008160060b8360060b60008112817fffffffffffffffffffffffffffffffffffffffffffffffffff800000000000000183128115161561229657612296611d48565b81667fffffffffffff0183138116156122b1576122b1611d48565b5090039392505050565b60006001600160a01b03838116908316818110156122db576122db611d48565b039392505050565b60008160060b8360060b806122fa576122fa611fac565b60001981147fffffffffffffffffffffffffffffffffffffffffffffffffff800000000000008314161561233057612330611d48565b90059392505050565b60008260060b8061234c5761234c611fac565b808360060b0791505092915050565b60008160020b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000008103611e6057611e60611d48565b600077ffffffffffffffffffffffffffffffffffffffffffffffff808316818516818304811182151516156123c7576123c7611d48565b02949350505050565b600077ffffffffffffffffffffffffffffffffffffffffffffffff808416806123fb576123fb611fac565b92169190910492915050565b60007f8000000000000000000000000000000000000000000000000000000000000000820361243857612438611d48565b5060000390565b60008160020b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000810361247457612474611d48565b60000392915050565b60008261248c5761248c611fac565b50069056fea2646970667358221220ecec9a795266c982911a3ab5a99e3b530f7adc6c687bfca8d89c788007d5650a64736f6c634300080e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD PUSH2 0x24C7 PUSH2 0x4C PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x422 ADD MSTORE DUP2 DUP2 PUSH2 0x6EB ADD MSTORE DUP2 DUP2 PUSH2 0x720 ADD MSTORE DUP2 DUP2 PUSH2 0xD87 ADD MSTORE PUSH2 0xEA5 ADD MSTORE PUSH2 0x24C7 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x990DC9DB GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xD825BFFF GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD825BFFF EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xDEF1A5E8 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xEC556889 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xFED0A20E EQ PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x990DC9DB EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x9E955149 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xB4014879 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xCF9D4AFA EQ PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4051B9AA GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x4051B9AA EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x52FD856B EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x63B48EE6 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x7D0F7A88 EQ PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCB1982B EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xFBBFA3E EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x2637A477 EQ PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11B PUSH2 0x116 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB1 JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE2 JUMP JUMPDEST PUSH2 0x417 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE2 JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11B PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB1 JUMP JUMPDEST PUSH2 0x966 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11B PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x990 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE2 JUMP JUMPDEST PUSH2 0xD1F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0xD7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE2 JUMP JUMPDEST PUSH2 0xE9A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FC PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x164 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x351 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3F0A0797 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH2 0x402 PUSH2 0x111D JUMP JUMPDEST PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA6FA0B7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH3 0x10000 SWAP1 SWAP3 DIV SWAP1 SWAP2 AND SWAP1 DUP2 SWAP1 PUSH4 0xA6FA0B7B SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 AND SWAP3 POP PUSH1 0x44 ADD SWAP1 POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCF9D4AFA00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE MLOAD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x585 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x58A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6E8 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5B1 JUMPI PUSH2 0x5B1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP2 SWAP1 PUSH4 0xA9059CBB SWAP1 DUP8 SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x628 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x64C SWAP2 SWAP1 PUSH2 0x1DF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0x1E11 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x6E0 SWAP1 PUSH2 0x1E33 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x594 JUMP JUMPDEST POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x7D3 JUMPI POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3F0A0797 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BE SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x7DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x2 SUB PUSH2 0x82D JUMPI PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH2 0x813 DUP4 PUSH2 0x1E4D JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x2 SLOAD SWAP1 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x961 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x872 JUMPI PUSH2 0x872 PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x94F JUMPI PUSH1 0x2 PUSH2 0x899 PUSH1 0x1 DUP5 PUSH2 0x1D77 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x8A9 JUMPI PUSH2 0x8A9 PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x8D5 JUMPI PUSH2 0x8D5 PUSH2 0x1DC9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP1 SLOAD DUP1 PUSH2 0x914 JUMPI PUSH2 0x914 PUSH2 0x1E6A JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE ADD SWAP1 SSTORE JUMPDEST DUP1 PUSH2 0x959 DUP2 PUSH2 0x1E33 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x84D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x976 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3F0A0797 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA0D SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xA9E JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDA8909E5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA65 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA89 SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xAA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD11 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xACA JUMPI PUSH2 0xACA PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x2 SUB PUSH2 0xCFE JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB5D SWAP2 SWAP1 PUSH2 0x1E99 JUMP JUMPDEST SWAP1 POP PUSH1 0x12 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xC40 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH4 0xA9059CBB DUP10 PUSH2 0xB89 PUSH1 0x12 PUSH1 0xFF DUP7 AND PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0xB94 SWAP1 PUSH1 0xA PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xBA9 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP13 PUSH2 0x1FDB JUMP JUMPDEST PUSH2 0xBB3 SWAP2 SWAP1 PUSH2 0x1FDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC3A SWAP2 SWAP1 PUSH2 0x1E11 JUMP JUMPDEST POP PUSH2 0xCFC JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x12 SUB PUSH2 0xCFC JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 DUP11 SWAP1 PUSH2 0xC73 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP12 PUSH2 0x1FDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCD6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCFA SWAP2 SWAP1 PUSH2 0x1E11 JUMP JUMPDEST POP JUMPDEST POP JUMPDEST POP DUP1 PUSH2 0xD09 DUP2 PUSH2 0x1E33 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAAD JUMP JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH3 0x10000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xDB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0xDDA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 SSTORE PUSH2 0xE2F JUMP JUMPDEST DUP1 PUSH1 0x1 SUB PUSH2 0xE2F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH2 0xE15 DUP4 PUSH2 0x1FEF JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xECF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xEDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FF00 AND PUSH3 0x10000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 SWAP1 SWAP2 OR DUP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDA8909E5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFC1 SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0B06F5D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1022 SWAP2 SWAP1 PUSH2 0x1DF8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDA8909E5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1079 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109D SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7F8483A4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10FE SWAP2 SWAP1 PUSH2 0x1DF8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1109 PUSH2 0x111D JUMP JUMPDEST PUSH2 0x1113 SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST SWAP5 SWAP2 SWAP4 POP SWAP1 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1299 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1142 JUMPI PUSH2 0x1142 PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11D2 SWAP2 SWAP1 PUSH2 0x1DF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 DUP2 SWAP1 SUB PUSH2 0x126E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH2 0x1220 SWAP2 AND DUP3 PUSH2 0x129E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0x124E SWAP2 DUP4 SWAP2 DUP8 SWAP2 DUP10 SWAP2 AND PUSH2 0x152B JUMP JUMPDEST SWAP2 POP PUSH2 0x125C SWAP1 POP DUP2 DUP5 PUSH2 0x200E JUMP JUMPDEST PUSH2 0x1266 SWAP1 DUP9 PUSH2 0x202D JUMP JUMPDEST SWAP7 POP POP PUSH2 0x1283 JUMP JUMPDEST DUP1 PUSH1 0x2 SUB PUSH2 0x1283 JUMPI PUSH2 0x1280 DUP3 DUP8 PUSH2 0x202D JUMP JUMPDEST SWAP6 POP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x1291 SWAP1 PUSH2 0x1E33 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1125 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0x0 SUB PUSH2 0x1316 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4250000000000000000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP4 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x134B JUMPI PUSH2 0x134B PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x137A JUMPI PUSH2 0x137A PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x883BDBFD DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C3 SWAP2 SWAP1 PUSH2 0x2074 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1408 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2187 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1421 JUMPI PUSH2 0x1421 PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x143C JUMPI PUSH2 0x143C PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x144E SWAP2 SWAP1 PUSH2 0x2253 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1465 JUMPI PUSH2 0x1465 PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1480 JUMPI PUSH2 0x1480 PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1492 SWAP2 SWAP1 PUSH2 0x22BB JUMP JUMPDEST SWAP1 POP PUSH2 0x14A2 PUSH1 0x3 DUP10 SWAP1 SIGNEXTEND DUP4 PUSH2 0x22E3 JUMP JUMPDEST SWAP7 POP PUSH1 0x0 DUP3 PUSH1 0x6 SIGNEXTEND SLT DUP1 ISZERO PUSH2 0x14C6 JUMPI POP PUSH2 0x14C0 PUSH1 0x3 DUP10 SWAP1 SIGNEXTEND DUP4 PUSH2 0x2339 JUMP JUMPDEST PUSH1 0x6 SIGNEXTEND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x14D9 JUMPI DUP7 PUSH2 0x14D5 DUP2 PUSH2 0x235B JUMP JUMPDEST SWAP8 POP POP JUMPDEST PUSH1 0x0 PUSH2 0x14F2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH4 0xFFFFFFFF DUP12 AND PUSH2 0x2390 JUMP JUMPDEST SWAP1 POP PUSH2 0x151C PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000 PUSH1 0x20 DUP5 SWAP1 SHL AND DUP3 PUSH2 0x23D0 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1537 DUP7 PUSH2 0x16AA JUMP JUMPDEST SWAP1 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND GT PUSH2 0x1602 JUMPI PUSH1 0x0 PUSH2 0x156E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x15C4 JUMPI PUSH2 0x15BF PUSH25 0x1000000000000000000000000000000000000000000000000 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x1B2B JUMP JUMPDEST PUSH2 0x15FA JUMP JUMPDEST PUSH2 0x15FA DUP2 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH2 0x1B2B JUMP JUMPDEST SWAP3 POP POP PUSH2 0x16A1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1621 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 PUSH9 0x10000000000000000 PUSH2 0x1B2B JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x166F JUMPI PUSH2 0x166A PUSH17 0x100000000000000000000000000000000 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x1B2B JUMP JUMPDEST PUSH2 0x169D JUMP JUMPDEST PUSH2 0x169D DUP2 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH17 0x100000000000000000000000000000000 PUSH2 0x1B2B JUMP JUMPDEST SWAP3 POP POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x16C1 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x16CE JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x16CE SWAP1 PUSH2 0x2407 JUMP JUMPDEST SWAP1 POP PUSH2 0x16F9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH2 0x243F JUMP JUMPDEST PUSH3 0xFFFFFF AND DUP2 GT ISZERO PUSH2 0x1767 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x130D JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 AND PUSH1 0x0 SUB PUSH2 0x178B JUMPI PUSH17 0x100000000000000000000000000000000 PUSH2 0x179D JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x2 DUP3 AND ISZERO PUSH2 0x17DC JUMPI PUSH1 0x80 PUSH2 0x17D7 DUP3 PUSH16 0xFFF97272373D413259A46990580E213A PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 AND ISZERO PUSH2 0x1806 JUMPI PUSH1 0x80 PUSH2 0x1801 DUP3 PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x8 DUP3 AND ISZERO PUSH2 0x1830 JUMPI PUSH1 0x80 PUSH2 0x182B DUP3 PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 AND ISZERO PUSH2 0x185A JUMPI PUSH1 0x80 PUSH2 0x1855 DUP3 PUSH16 0xFFCB9843D60F6159C9DB58835C926644 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x20 DUP3 AND ISZERO PUSH2 0x1884 JUMPI PUSH1 0x80 PUSH2 0x187F DUP3 PUSH16 0xFF973B41FA98C081472E6896DFB254C0 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x40 DUP3 AND ISZERO PUSH2 0x18AE JUMPI PUSH1 0x80 PUSH2 0x18A9 DUP3 PUSH16 0xFF2EA16466C96A3843EC78B326B52861 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x80 DUP3 AND ISZERO PUSH2 0x18D8 JUMPI PUSH1 0x80 PUSH2 0x18D3 DUP3 PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 AND ISZERO PUSH2 0x1903 JUMPI PUSH1 0x80 PUSH2 0x18FE DUP3 PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x200 DUP3 AND ISZERO PUSH2 0x192E JUMPI PUSH1 0x80 PUSH2 0x1929 DUP3 PUSH16 0xF987A7253AC413176F2B074CF7815E54 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x400 DUP3 AND ISZERO PUSH2 0x1959 JUMPI PUSH1 0x80 PUSH2 0x1954 DUP3 PUSH16 0xF3392B0822B70005940C7A398E4B70F3 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x800 DUP3 AND ISZERO PUSH2 0x1984 JUMPI PUSH1 0x80 PUSH2 0x197F DUP3 PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0x19AF JUMPI PUSH1 0x80 PUSH2 0x19AA DUP3 PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0x19DA JUMPI PUSH1 0x80 PUSH2 0x19D5 DUP3 PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0x1A05 JUMPI PUSH1 0x80 PUSH2 0x1A00 DUP3 PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0x1A30 JUMPI PUSH1 0x80 PUSH2 0x1A2B DUP3 PUSH16 0x31BE135F97D08FD981231505542FCFA6 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0x1A5C JUMPI PUSH1 0x80 PUSH2 0x1A57 DUP3 PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0x1A87 JUMPI PUSH1 0x80 PUSH2 0x1A82 DUP3 PUSH15 0x5D6AF8DEDB81196699C329225EE604 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0x1AB1 JUMPI PUSH1 0x80 PUSH2 0x1AAC DUP3 PUSH14 0x2216E584F5FA1EA926041BEDFE98 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0x1AD9 JUMPI PUSH1 0x80 PUSH2 0x1AD4 DUP3 PUSH12 0x48A170391F7DC42444E8FA2 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x1AF4 JUMPI PUSH2 0x1AF1 DUP2 PUSH1 0x0 NOT PUSH2 0x1FDB JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1B03 PUSH5 0x100000000 DUP3 PUSH2 0x247D JUMP JUMPDEST ISZERO PUSH2 0x1B0F JUMPI PUSH1 0x1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0x1B23 SWAP1 PUSH1 0xFF AND PUSH1 0x20 DUP4 SWAP1 SHR PUSH2 0x202D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP DUP1 PUSH1 0x0 SUB PUSH2 0x1B64 JUMPI PUSH1 0x0 DUP5 GT PUSH2 0x1B59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP3 SWAP1 DIV SWAP1 POP PUSH2 0x1CAA JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x1B70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD DUP1 DUP5 SUB SWAP4 DUP2 GT SWAP1 SWAP3 SUB SWAP2 SWAP1 POP PUSH1 0x0 DUP6 PUSH2 0x1B91 DUP2 PUSH1 0x0 NOT PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x1B9C SWAP1 PUSH1 0x1 PUSH2 0x202D JUMP JUMPDEST AND SWAP6 DUP7 SWAP1 DIV SWAP6 SWAP4 DUP5 SWAP1 DIV SWAP4 PUSH1 0x0 DUP2 SWAP1 SUB DIV PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1BBC DUP2 DUP5 PUSH2 0x200E JUMP JUMPDEST SWAP1 SWAP4 OR SWAP3 PUSH1 0x0 PUSH2 0x1BCD DUP8 PUSH1 0x3 PUSH2 0x200E JUMP JUMPDEST PUSH1 0x2 XOR SWAP1 POP PUSH2 0x1BDC DUP2 DUP9 PUSH2 0x200E JUMP JUMPDEST PUSH2 0x1BE7 SWAP1 PUSH1 0x2 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x1BF1 SWAP1 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP PUSH2 0x1BFD DUP2 DUP9 PUSH2 0x200E JUMP JUMPDEST PUSH2 0x1C08 SWAP1 PUSH1 0x2 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x1C12 SWAP1 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP PUSH2 0x1C1E DUP2 DUP9 PUSH2 0x200E JUMP JUMPDEST PUSH2 0x1C29 SWAP1 PUSH1 0x2 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x1C33 SWAP1 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP PUSH2 0x1C3F DUP2 DUP9 PUSH2 0x200E JUMP JUMPDEST PUSH2 0x1C4A SWAP1 PUSH1 0x2 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x1C54 SWAP1 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP PUSH2 0x1C60 DUP2 DUP9 PUSH2 0x200E JUMP JUMPDEST PUSH2 0x1C6B SWAP1 PUSH1 0x2 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x1C75 SWAP1 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP PUSH2 0x1C81 DUP2 DUP9 PUSH2 0x200E JUMP JUMPDEST PUSH2 0x1C8C SWAP1 PUSH1 0x2 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x1C96 SWAP1 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP PUSH2 0x1CA2 DUP2 DUP7 PUSH2 0x200E JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1CDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CAA DUP2 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1D1D DUP2 PUSH2 0x1CCA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1CAA DUP2 PUSH2 0x1CCA JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1D89 JUMPI PUSH2 0x1D89 PUSH2 0x1D48 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1DAF JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x1D95 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1DBE JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1CAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x1E46 JUMPI PUSH2 0x1E46 PUSH2 0x1D48 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND DUP1 PUSH2 0x1E60 JUMPI PUSH2 0x1E60 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1CAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1EF7 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1EDD JUMPI PUSH2 0x1EDD PUSH2 0x1D48 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1EEA JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1F0E JUMPI POP PUSH1 0x1 PUSH2 0xD19 JUMP JUMPDEST DUP2 PUSH2 0x1F1B JUMPI POP PUSH1 0x0 PUSH2 0xD19 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1F31 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1F3B JUMPI PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xD19 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1F4C JUMPI PUSH2 0x1F4C PUSH2 0x1D48 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xD19 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1F7A JUMPI POP DUP2 DUP2 EXP PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x1F84 DUP4 DUP4 PUSH2 0x1EBC JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1F98 JUMPI PUSH2 0x1F98 PUSH2 0x1D48 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAA DUP4 DUP4 PUSH2 0x1EFF JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1FEA JUMPI PUSH2 0x1FEA PUSH2 0x1FAC JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0x2005 JUMPI PUSH2 0x2005 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2028 JUMPI PUSH2 0x2028 PUSH2 0x1D48 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2040 JUMPI PUSH2 0x2040 PUSH2 0x1D48 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x20B2 JUMPI DUP4 MLOAD PUSH4 0xFFFFFFFF AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2090 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x20E7 JUMPI PUSH2 0x20E7 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2109 JUMPI PUSH2 0x2109 PUSH2 0x2045 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x2139 PUSH2 0x2134 DUP4 PUSH2 0x20EF JUMP JUMPDEST PUSH2 0x20BE JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x217C JUMPI DUP1 MLOAD PUSH2 0x216F DUP2 PUSH2 0x1CCA JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x215C JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x219A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x21B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x21D6 PUSH2 0x2134 DUP4 PUSH2 0x20EF JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x21F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x2223 JUMPI DUP6 MLOAD DUP1 PUSH1 0x6 SIGNEXTEND DUP2 EQ PUSH2 0x2214 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x21FA JUMP JUMPDEST SWAP2 DUP9 ADD MLOAD SWAP2 SWAP7 POP SWAP1 SWAP4 POP POP POP DUP1 DUP3 GT ISZERO PUSH2 0x223C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2249 DUP6 DUP3 DUP7 ADD PUSH2 0x2113 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 SIGNEXTEND DUP4 PUSH1 0x6 SIGNEXTEND PUSH1 0x0 DUP2 SLT DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80000000000000 ADD DUP4 SLT DUP2 ISZERO AND ISZERO PUSH2 0x2296 JUMPI PUSH2 0x2296 PUSH2 0x1D48 JUMP JUMPDEST DUP2 PUSH7 0x7FFFFFFFFFFFFF ADD DUP4 SGT DUP2 AND ISZERO PUSH2 0x22B1 JUMPI PUSH2 0x22B1 PUSH2 0x1D48 JUMP JUMPDEST POP SWAP1 SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x22DB JUMPI PUSH2 0x22DB PUSH2 0x1D48 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 SIGNEXTEND DUP4 PUSH1 0x6 SIGNEXTEND DUP1 PUSH2 0x22FA JUMPI PUSH2 0x22FA PUSH2 0x1FAC JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80000000000000 DUP4 EQ AND ISZERO PUSH2 0x2330 JUMPI PUSH2 0x2330 PUSH2 0x1D48 JUMP JUMPDEST SWAP1 SDIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x6 SIGNEXTEND DUP1 PUSH2 0x234C JUMPI PUSH2 0x234C PUSH2 0x1FAC JUMP JUMPDEST DUP1 DUP4 PUSH1 0x6 SIGNEXTEND SMOD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP2 SUB PUSH2 0x1E60 JUMPI PUSH2 0x1E60 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x0 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP2 DUP4 DIV DUP2 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x23C7 JUMPI PUSH2 0x23C7 PUSH2 0x1D48 JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND DUP1 PUSH2 0x23FB JUMPI PUSH2 0x23FB PUSH2 0x1FAC JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 SUB PUSH2 0x2438 JUMPI PUSH2 0x2438 PUSH2 0x1D48 JUMP JUMPDEST POP PUSH1 0x0 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP2 SUB PUSH2 0x2474 JUMPI PUSH2 0x2474 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x0 SUB SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x248C JUMPI PUSH2 0x248C PUSH2 0x1FAC JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xEC SWAP11 PUSH26 0x5266C982911A3AB5A99E3B530F7ADC6C687BFCA8D89C788007D5 PUSH6 0xA64736F6C63 NUMBER STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "148:4871:13:-:0;;;608:56;;;;;;;;;-1:-1:-1;647:10:13;636:21;;148:4871;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@NAV_830": {
									"entryPoint": null,
									"id": 830,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1394": {
									"entryPoint": null,
									"id": 1394,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1401": {
									"entryPoint": null,
									"id": 1401,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addCoin_1217": {
									"entryPoint": 3452,
									"id": 1217,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@calculateNAV_1177": {
									"entryPoint": 4381,
									"id": 1177,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@coinArray_839": {
									"entryPoint": 2406,
									"id": 839,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@coinOracleAddr_847": {
									"entryPoint": null,
									"id": 847,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@coins_843": {
									"entryPoint": null,
									"id": 843,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@consult_1724": {
									"entryPoint": 4766,
									"id": 1724,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@delCoin_1293": {
									"entryPoint": 1813,
									"id": 1293,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deleteContract_1387": {
									"entryPoint": 1047,
									"id": 1387,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getQuoteAtTick_1822": {
									"entryPoint": 5419,
									"id": 1822,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@getSqrtRatioAtTick_2583": {
									"entryPoint": 5802,
									"id": 2583,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initContract_899": {
									"entryPoint": 3738,
									"id": 899,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@initDone_832": {
									"entryPoint": null,
									"id": 832,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mulDiv_1539": {
									"entryPoint": 6955,
									"id": 1539,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@oracleNAV_1082": {
									"entryPoint": 3909,
									"id": 1082,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@proxy_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@quoteIn_851": {
									"entryPoint": null,
									"id": 851,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFunds_1043": {
									"entryPoint": 2448,
									"id": 1043,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateNAV_930": {
									"entryPoint": 867,
									"id": 930,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@updateProxy_1311": {
									"entryPoint": 3359,
									"id": 1311,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_array_uint160_dyn_fromMemory": {
									"entryPoint": 8467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 7467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_int56_$dyn_memory_ptrt_array$_t_uint160_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 8583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 7833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint32_$dyn_memory_ptr__to_t_array$_t_uint32_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_int56_dyn": {
									"entryPoint": 8431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_int56": {
									"entryPoint": 8931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint192": {
									"entryPoint": 9168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 7868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 8096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 7935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint192": {
									"entryPoint": 9104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_int56": {
									"entryPoint": 8787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint160": {
									"entryPoint": 8891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"decrement_t_int24": {
									"entryPoint": 9051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"decrement_t_uint8": {
									"entryPoint": 7757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 8175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_int56": {
									"entryPoint": 9017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 9341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"negate_t_int24": {
									"entryPoint": 9279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"negate_t_int256": {
									"entryPoint": 9223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7496,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8108,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 7786,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7625,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8261,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 7370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13921:17",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:17"
															},
															"nodeType": "YulIf",
															"src": "94:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:17",
														"type": ""
													}
												],
												"src": "14:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:76:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "310:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "333:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "318:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:17"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "363:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:25:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "345:25:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "269:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "280:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "291:4:17",
														"type": ""
													}
												],
												"src": "199:177:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "426:109:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "513:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "515:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "515:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "515:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "449:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "460:5:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "467:42:17",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "456:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "456:54:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "446:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "446:65:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "439:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "439:73:17"
															},
															"nodeType": "YulIf",
															"src": "436:93:17"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "415:5:17",
														"type": ""
													}
												],
												"src": "381:154:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "610:177:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "656:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "665:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "668:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "658:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "658:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "658:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "631:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "640:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "652:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "623:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "623:32:17"
															},
															"nodeType": "YulIf",
															"src": "620:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "681:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "707:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "694:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "694:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "685:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "751:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "726:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "766:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "776:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "576:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "587:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "599:6:17",
														"type": ""
													}
												],
												"src": "540:247:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "893:125:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "903:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "915:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "926:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "911:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "911:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "903:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "945:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "960:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "968:42:17",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:55:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "938:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:74:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "938:74:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "862:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "873:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "884:4:17",
														"type": ""
													}
												],
												"src": "792:226:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1110:228:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1156:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1165:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1168:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1158:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1158:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1158:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1131:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1140:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1127:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1127:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1152:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1123:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:32:17"
															},
															"nodeType": "YulIf",
															"src": "1120:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1181:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1207:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1185:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1251:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1226:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1226:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1226:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1266:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1276:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1266:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1290:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1317:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1328:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1300:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1300:32:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1290:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1079:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1091:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1099:6:17",
														"type": ""
													}
												],
												"src": "1023:315:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1438:92:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1448:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1460:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1471:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1456:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1456:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1448:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1490:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1515:6:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1508:6:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1508:14:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1501:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1501:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1483:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1483:41:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1483:41:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1407:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1418:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1429:4:17",
														"type": ""
													}
												],
												"src": "1343:187:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1664:119:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1674:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1697:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1682:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1682:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1674:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1716:9:17"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1727:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1709:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:25:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1709:25:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1754:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1765:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1750:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1750:18:17"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1770:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1743:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1743:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1743:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1625:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1636:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1644:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1655:4:17",
														"type": ""
													}
												],
												"src": "1535:248:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1885:87:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1895:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1907:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1918:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1903:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1903:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1895:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1937:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1960:4:17",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1948:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1948:17:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1930:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1930:36:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1930:36:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1854:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1865:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1876:4:17",
														"type": ""
													}
												],
												"src": "1788:184:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2058:170:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2104:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2113:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2116:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2106:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2106:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2106:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2079:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2088:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2075:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2075:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2100:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2071:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2071:32:17"
															},
															"nodeType": "YulIf",
															"src": "2068:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2129:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2148:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2142:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2142:16:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2133:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2192:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2167:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2167:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2167:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2207:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2217:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2207:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2024:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2035:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2047:6:17",
														"type": ""
													}
												],
												"src": "1977:251:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2265:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2282:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2285:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2275:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2275:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2275:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2379:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2382:4:17",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2372:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2372:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2372:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2403:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2406:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2396:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2396:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2396:15:17"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2233:184:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2471:76:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2493:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2495:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2495:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2495:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2487:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2490:1:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2484:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2484:8:17"
															},
															"nodeType": "YulIf",
															"src": "2481:34:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2524:17:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2536:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2539:1:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2532:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2532:9:17"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2524:4:17"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2453:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2456:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2462:4:17",
														"type": ""
													}
												],
												"src": "2422:125:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2689:289:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2699:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2719:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2713:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2713:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2703:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2735:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2744:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2739:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2806:77:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "2831:3:17"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2836:1:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2827:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2827:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2854:6:17"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2862:1:17"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2850:3:17"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2850:14:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2866:4:17",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2846:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2846:25:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2840:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2840:32:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2820:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2820:53:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2820:53:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2765:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2768:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2762:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2776:21:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2778:17:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2787:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2790:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2783:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2783:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2778:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2758:3:17",
																"statements": []
															},
															"src": "2754:129:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2909:31:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "2922:3:17"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2927:6:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2918:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2918:16:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2936:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2911:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2911:27:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2911:27:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2898:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2901:6:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2895:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2895:13:17"
															},
															"nodeType": "YulIf",
															"src": "2892:48:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2949:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2960:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2965:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2956:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2956:16:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2949:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2665:3:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2670:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2681:3:17",
														"type": ""
													}
												],
												"src": "2552:426:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3015:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3032:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3035:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3025:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3025:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3129:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3132:4:17",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3122:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3122:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3122:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3153:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3156:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3146:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3146:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3146:15:17"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "2983:184:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3253:103:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3299:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3308:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3311:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3301:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3301:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3301:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3274:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3283:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3270:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3270:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3295:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3266:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3266:32:17"
															},
															"nodeType": "YulIf",
															"src": "3263:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3324:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3340:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3334:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3334:16:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3324:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3219:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3230:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3242:6:17",
														"type": ""
													}
												],
												"src": "3172:184:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3490:168:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3500:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3512:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3523:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3508:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3508:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3500:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3542:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3557:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3565:42:17",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3553:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3553:55:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3535:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3535:74:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3535:74:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3629:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3640:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3625:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3625:18:17"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3645:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3618:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3618:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3451:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3462:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3470:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3481:4:17",
														"type": ""
													}
												],
												"src": "3361:297:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3741:199:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3787:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3796:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3799:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3789:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3789:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3789:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3762:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3758:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3758:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3754:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3754:32:17"
															},
															"nodeType": "YulIf",
															"src": "3751:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3812:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3831:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3825:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3825:16:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3816:5:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3894:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3903:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3906:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3896:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3896:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3896:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3884:5:17"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3877:6:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3877:13:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3870:6:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3870:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3860:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3860:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3853:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3853:40:17"
															},
															"nodeType": "YulIf",
															"src": "3850:60:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3919:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3929:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3919:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3707:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3718:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3730:6:17",
														"type": ""
													}
												],
												"src": "3663:277:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3992:148:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4083:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4085:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4085:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4085:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4008:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4015:66:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4005:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4005:77:17"
															},
															"nodeType": "YulIf",
															"src": "4002:103:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4114:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4125:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4132:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4121:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4121:13:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4114:3:17"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3974:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3984:3:17",
														"type": ""
													}
												],
												"src": "3945:195:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4190:193:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4200:31:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4219:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4226:4:17",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4215:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4215:16:17"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "4204:7:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4259:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4261:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4261:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4261:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "4250:7:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4243:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4243:15:17"
															},
															"nodeType": "YulIf",
															"src": "4240:41:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4290:87:17",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "4301:7:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4310:66:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4297:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4297:80:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4290:3:17"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4172:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4182:3:17",
														"type": ""
													}
												],
												"src": "4145:238:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4420:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4437:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4440:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4430:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4430:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4430:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4534:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4537:4:17",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4527:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4527:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4527:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4558:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4561:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4551:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4551:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4551:15:17"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "4388:184:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4656:194:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4702:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4711:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4714:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4704:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4704:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4704:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4677:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4686:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4673:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4673:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4698:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4669:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4669:32:17"
															},
															"nodeType": "YulIf",
															"src": "4666:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4727:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4746:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4740:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4740:16:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4731:5:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4804:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4813:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4816:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4806:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4806:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4806:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4778:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4789:5:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4796:4:17",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4785:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4785:16:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4775:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4775:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4768:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4768:35:17"
															},
															"nodeType": "YulIf",
															"src": "4765:55:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4829:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4839:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4829:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4622:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4633:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4645:6:17",
														"type": ""
													}
												],
												"src": "4577:273:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:418:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4929:16:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4944:1:17",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "4933:7:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4954:16:17",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "4963:7:17"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4954:5:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4979:13:17",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "4987:5:17"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "4979:4:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5043:288:17",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5148:22:17",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "5150:16:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5150:18:17"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5150:18:17"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5063:4:17"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5073:66:17",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "5141:4:17"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "5069:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5069:77:17"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "5060:2:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5060:87:17"
																		},
																		"nodeType": "YulIf",
																		"src": "5057:113:17"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5209:29:17",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5211:25:17",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "5224:5:17"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "5231:4:17"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "5220:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5220:16:17"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "5211:5:17"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "5190:8:17"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "5200:7:17"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5186:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5186:22:17"
																		},
																		"nodeType": "YulIf",
																		"src": "5183:55:17"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5251:23:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5263:4:17"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5269:4:17"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "5259:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5259:15:17"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "5251:4:17"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5287:34:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "5303:7:17"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "5312:8:17"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "5299:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5299:22:17"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "5287:8:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "5012:8:17"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "5022:7:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5009:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5009:21:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5031:3:17",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5005:3:17",
																"statements": []
															},
															"src": "5001:330:17"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "4883:5:17",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "4890:8:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "4903:5:17",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "4910:4:17",
														"type": ""
													}
												],
												"src": "4855:482:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5401:807:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5439:52:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5453:10:17",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5462:1:17",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "5453:5:17"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "5476:5:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "5421:8:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5414:16:17"
															},
															"nodeType": "YulIf",
															"src": "5411:80:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5524:52:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5538:10:17",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5547:1:17",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "5538:5:17"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "5561:5:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "5510:4:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5503:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5503:12:17"
															},
															"nodeType": "YulIf",
															"src": "5500:76:17"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5612:52:17",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "5626:10:17",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5635:1:17",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "5626:5:17"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "5649:5:17"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5605:59:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5610:1:17",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5680:123:17",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5715:22:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "5717:16:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5717:18:17"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5717:18:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "5700:8:17"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5710:3:17",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "5697:2:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5697:17:17"
																				},
																				"nodeType": "YulIf",
																				"src": "5694:43:17"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "5750:25:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "5763:8:17"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5773:1:17",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5759:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5759:16:17"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "5750:5:17"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "5788:5:17"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5673:130:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5678:1:17",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "5592:4:17"
															},
															"nodeType": "YulSwitch",
															"src": "5585:218:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5901:70:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5915:28:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5928:4:17"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "5934:8:17"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "5924:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5924:19:17"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "5915:5:17"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "5956:5:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "5825:4:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5831:2:17",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "5822:2:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5822:12:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "5839:8:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5849:2:17",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "5836:2:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5836:16:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5818:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5818:35:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "5862:4:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5868:3:17",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "5859:2:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5859:13:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "5877:8:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5887:2:17",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "5874:2:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5874:16:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5855:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5855:36:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5815:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5815:77:17"
															},
															"nodeType": "YulIf",
															"src": "5812:159:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5980:57:17",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "6022:4:17"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6028:8:17"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "6003:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6003:34:17"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "5984:7:17",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "5993:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6142:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6144:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6144:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6144:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "6052:7:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6065:66:17",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "6133:6:17"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6061:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6061:79:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6049:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6049:92:17"
															},
															"nodeType": "YulIf",
															"src": "6046:118:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6173:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "6186:7:17"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "6195:6:17"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6182:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6182:20:17"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "6173:5:17"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "5372:4:17",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "5378:8:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "5391:5:17",
														"type": ""
													}
												],
												"src": "5342:866:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6283:61:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6293:45:17",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "6323:4:17"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6329:8:17"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "6302:20:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6302:36:17"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "6293:5:17"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "6254:4:17",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "6260:8:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "6273:5:17",
														"type": ""
													}
												],
												"src": "6213:131:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6381:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6398:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6401:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6391:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6391:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6391:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6495:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6498:4:17",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6488:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6488:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6488:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6519:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6522:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6512:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6512:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6512:15:17"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6349:184:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6584:74:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6607:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "6609:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6609:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6609:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6604:1:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6597:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6597:9:17"
															},
															"nodeType": "YulIf",
															"src": "6594:35:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6638:14:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6647:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6650:1:17"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6643:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6643:9:17"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6638:1:17"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6569:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6572:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6578:1:17",
														"type": ""
													}
												],
												"src": "6538:120:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6708:130:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6718:31:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6737:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6744:4:17",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6733:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6733:16:17"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "6722:7:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6779:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6781:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6781:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6781:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "6764:7:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6773:4:17",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6761:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6761:17:17"
															},
															"nodeType": "YulIf",
															"src": "6758:43:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6810:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "6821:7:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6830:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6817:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6817:15:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6810:3:17"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6690:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6700:3:17",
														"type": ""
													}
												],
												"src": "6663:175:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6895:176:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7014:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7016:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7016:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7016:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6926:1:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6919:6:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6919:9:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6912:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6912:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6934:1:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6941:66:17",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7009:1:17"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6937:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6937:74:17"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6931:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6931:81:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6908:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6908:105:17"
															},
															"nodeType": "YulIf",
															"src": "6905:131:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7045:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7060:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7063:1:17"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7056:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7056:9:17"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7045:7:17"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6874:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6877:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6883:7:17",
														"type": ""
													}
												],
												"src": "6843:228:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7124:80:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7151:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7153:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7153:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7153:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7140:1:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7147:1:17"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7143:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7143:6:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7137:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7137:13:17"
															},
															"nodeType": "YulIf",
															"src": "7134:39:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7182:16:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7193:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7196:1:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7189:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7189:9:17"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7182:3:17"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7107:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7110:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7116:3:17",
														"type": ""
													}
												],
												"src": "7076:128:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7383:151:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7400:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7411:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7393:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7393:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7393:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7434:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7445:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7430:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7430:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7450:1:17",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7423:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7423:29:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7423:29:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7472:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7483:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7468:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7468:18:17"
																	},
																	{
																		"hexValue": "4250",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7488:4:17",
																		"type": "",
																		"value": "BP"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7461:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:32:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7461:32:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7502:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7514:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7525:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7510:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7510:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7502:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7360:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7374:4:17",
														"type": ""
													}
												],
												"src": "7209:325:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7571:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7588:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7591:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7581:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7581:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7581:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7685:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7688:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7678:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7678:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7678:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7709:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7712:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7702:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7702:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7702:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7539:184:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7877:498:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7887:12:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7897:2:17",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7891:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7908:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7926:9:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7937:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7922:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7922:18:17"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "7912:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7956:9:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7967:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7949:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7949:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7949:21:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7979:17:17",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "7990:6:17"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "7983:3:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8005:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8025:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8019:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8019:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8009:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "8048:6:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8056:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8041:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8041:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8041:22:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8072:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8083:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8094:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8079:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8079:18:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8072:3:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8106:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8124:6:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8132:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8120:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8120:15:17"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "8110:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8144:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8153:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8148:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8212:137:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "8233:3:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "8248:6:17"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "8242:5:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8242:13:17"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8257:10:17",
																							"type": "",
																							"value": "0xffffffff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "8238:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8238:30:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8226:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8226:43:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8226:43:17"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8282:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "8293:3:17"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8298:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8289:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8289:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8282:3:17"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8314:25:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "8328:6:17"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8336:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8324:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8324:15:17"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8314:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8174:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8177:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8171:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8171:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8185:18:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8187:14:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8196:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8199:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8192:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8192:9:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8187:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8167:3:17",
																"statements": []
															},
															"src": "8163:186:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8358:11:17",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8366:3:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8358:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint32_$dyn_memory_ptr__to_t_array$_t_uint32_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7846:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7857:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7868:4:17",
														"type": ""
													}
												],
												"src": "7728:647:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8425:289:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8435:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8451:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8445:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8445:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "8435:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8463:117:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8485:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "8501:4:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8507:2:17",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8497:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8497:13:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8512:66:17",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8493:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8493:86:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8481:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8481:99:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "8467:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8655:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8657:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8657:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8657:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8598:10:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8610:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8595:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8595:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8634:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8646:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8631:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8631:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8592:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8592:62:17"
															},
															"nodeType": "YulIf",
															"src": "8589:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8693:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "8697:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8686:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8686:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8686:22:17"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8405:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8414:6:17",
														"type": ""
													}
												],
												"src": "8380:334:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8786:114:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8830:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8832:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8832:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8832:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8802:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8810:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8799:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8799:30:17"
															},
															"nodeType": "YulIf",
															"src": "8796:56:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8861:33:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8877:1:17",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8880:6:17"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8873:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8873:14:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8889:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8869:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8869:25:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8861:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_int56_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8766:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8777:4:17",
														"type": ""
													}
												],
												"src": "8719:181:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8980:657:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9029:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9038:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9041:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9008:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9016:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9004:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9004:17:17"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "9023:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "9000:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9000:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8993:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8993:35:17"
															},
															"nodeType": "YulIf",
															"src": "8990:55:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9054:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9070:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9064:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9064:13:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9058:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9086:14:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9096:4:17",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "9090:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9109:69:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9174:2:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_int56_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "9136:37:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9136:41:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "9120:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9120:58:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "9113:3:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9187:16:17",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "9200:3:17"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "9191:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "9219:3:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9224:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9212:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9212:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9212:15:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9236:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "9247:3:17"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "9252:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9243:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9243:12:17"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "9236:3:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9264:46:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9286:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9298:1:17",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "9301:2:17"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "9294:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9294:10:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9282:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9282:23:17"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "9307:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9278:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9278:32:17"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "9268:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9338:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9347:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9350:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9340:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9340:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9340:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9325:6:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9333:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9322:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9322:15:17"
															},
															"nodeType": "YulIf",
															"src": "9319:35:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9363:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9378:6:17"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "9386:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9374:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9374:15:17"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "9367:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9454:154:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9468:23:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "9487:3:17"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9481:5:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9481:10:17"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "9472:5:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "9529:5:17"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nodeType": "YulIdentifier",
																				"src": "9504:24:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9504:31:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9504:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "9555:3:17"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "9560:5:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9548:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9548:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9548:18:17"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9579:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "9590:3:17"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "9595:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9586:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9586:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "9579:3:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "9409:3:17"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9414:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9406:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9406:15:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9422:23:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9424:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "9435:3:17"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "9440:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9431:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9431:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "9424:3:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9402:3:17",
																"statements": []
															},
															"src": "9398:210:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9617:14:17",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "9626:5:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "9617:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint160_dyn_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8954:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8962:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8970:5:17",
														"type": ""
													}
												],
												"src": "8905:732:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9788:1157:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9834:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9843:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9846:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9836:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9836:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9836:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9809:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9818:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9805:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9805:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9830:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9801:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9801:32:17"
															},
															"nodeType": "YulIf",
															"src": "9798:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9859:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9879:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9873:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9873:16:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "9863:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9898:28:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9908:18:17",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9902:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9953:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9962:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9965:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9955:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9955:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9955:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9941:6:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9949:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9938:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9938:14:17"
															},
															"nodeType": "YulIf",
															"src": "9935:34:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9978:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9992:9:17"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10003:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9988:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9988:22:17"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "9982:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10058:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10067:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10070:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10060:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10060:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10060:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "10037:2:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10041:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10033:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10033:13:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10048:7:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "10029:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10029:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10022:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10022:35:17"
															},
															"nodeType": "YulIf",
															"src": "10019:55:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10083:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "10099:2:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10093:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10093:9:17"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "10087:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10111:14:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10121:4:17",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "10115:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10134:69:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "10199:2:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_int56_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "10161:37:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10161:41:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10145:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10145:58:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "10138:3:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10212:16:17",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "10225:3:17"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "10216:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "10244:3:17"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "10249:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10237:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10237:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10237:15:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10261:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "10272:3:17"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "10277:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10268:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10268:12:17"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "10261:3:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10289:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "10311:2:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10319:1:17",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "10322:2:17"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "10315:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10315:10:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10307:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10307:19:17"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "10328:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10303:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10303:28:17"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "10293:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10363:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10372:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10375:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10365:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10365:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10365:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10346:6:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10354:7:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10343:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10343:19:17"
															},
															"nodeType": "YulIf",
															"src": "10340:39:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10388:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "10403:2:17"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "10407:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10399:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10399:11:17"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "10392:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10475:252:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10489:23:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "10508:3:17"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "10502:5:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10502:10:17"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "10493:5:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "10580:74:17",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "10598:11:17",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10608:1:17",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_5",
																							"nodeType": "YulTypedName",
																							"src": "10602:2:17",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "10633:2:17"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "10637:2:17"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "10626:6:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10626:14:17"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "10626:14:17"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "10538:5:17"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "10556:1:17",
																									"type": "",
																									"value": "6"
																								},
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "10559:5:17"
																								}
																							],
																							"functionName": {
																								"name": "signextend",
																								"nodeType": "YulIdentifier",
																								"src": "10545:10:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10545:20:17"
																						}
																					],
																					"functionName": {
																						"name": "eq",
																						"nodeType": "YulIdentifier",
																						"src": "10535:2:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10535:31:17"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "10528:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10528:39:17"
																		},
																		"nodeType": "YulIf",
																		"src": "10525:129:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "10674:3:17"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "10679:5:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10667:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10667:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10667:18:17"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10698:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "10709:3:17"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "10714:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10705:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10705:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "10698:3:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "10430:3:17"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10435:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10427:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10427:15:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10443:23:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10445:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "10456:3:17"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "10461:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10452:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10452:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "10445:3:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10423:3:17",
																"statements": []
															},
															"src": "10419:308:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10736:15:17",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "10746:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10736:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10760:41:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10786:9:17"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "10797:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10782:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10782:18:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10776:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10776:25:17"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "10764:8:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10830:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10839:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10842:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10832:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10832:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10832:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "10816:8:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "10826:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10813:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10813:16:17"
															},
															"nodeType": "YulIf",
															"src": "10810:36:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10855:84:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10909:9:17"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "10920:8:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10905:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10905:24:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10931:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint160_dyn_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "10865:39:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10865:74:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "10855:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_int56_$dyn_memory_ptrt_array$_t_uint160_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9746:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9757:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9769:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9777:6:17",
														"type": ""
													}
												],
												"src": "9642:1303:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10997:357:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11007:27:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11029:1:17",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11032:1:17"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nodeType": "YulIdentifier",
																	"src": "11018:10:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11018:16:17"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nodeType": "YulTypedName",
																	"src": "11011:3:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11043:27:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11065:1:17",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11068:1:17"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nodeType": "YulIdentifier",
																	"src": "11054:10:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11054:16:17"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "11047:3:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11079:21:17",
															"value": {
																"arguments": [
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "11093:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11098:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11089:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11089:11:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11083:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11216:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11218:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11218:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11218:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11123:2:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11116:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11116:10:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x_1",
																				"nodeType": "YulIdentifier",
																				"src": "11132:3:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11141:66:17",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000"
																					},
																					{
																						"name": "y_1",
																						"nodeType": "YulIdentifier",
																						"src": "11209:3:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11137:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11137:76:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "11128:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11128:86:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11112:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11112:103:17"
															},
															"nodeType": "YulIf",
															"src": "11109:129:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11296:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11298:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11298:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11298:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "11254:2:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x_1",
																				"nodeType": "YulIdentifier",
																				"src": "11262:3:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11271:16:17",
																						"type": "",
																						"value": "0x7fffffffffffff"
																					},
																					{
																						"name": "y_1",
																						"nodeType": "YulIdentifier",
																						"src": "11289:3:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11267:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11267:26:17"
																			}
																		],
																		"functionName": {
																			"name": "sgt",
																			"nodeType": "YulIdentifier",
																			"src": "11258:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11258:36:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11250:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11250:45:17"
															},
															"nodeType": "YulIf",
															"src": "11247:71:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11327:21:17",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "11339:3:17"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "11344:3:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11335:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11335:13:17"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11327:4:17"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_int56",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10979:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10982:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10988:4:17",
														"type": ""
													}
												],
												"src": "10950:404:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11408:205:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11418:52:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11428:42:17",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11422:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11479:21:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11494:1:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "11497:2:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11490:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11490:10:17"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nodeType": "YulTypedName",
																	"src": "11483:3:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11509:21:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11524:1:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "11527:2:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11520:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11520:10:17"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "11513:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11555:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11557:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11557:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11557:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "11545:3:17"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "11550:3:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11542:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11542:12:17"
															},
															"nodeType": "YulIf",
															"src": "11539:38:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11586:21:17",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "11598:3:17"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "11603:3:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11594:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11594:13:17"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11586:4:17"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11390:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11393:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11399:4:17",
														"type": ""
													}
												],
												"src": "11359:254:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11662:345:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11672:27:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11694:1:17",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11697:1:17"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nodeType": "YulIdentifier",
																	"src": "11683:10:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11683:16:17"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nodeType": "YulTypedName",
																	"src": "11676:3:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11708:27:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11730:1:17",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11733:1:17"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nodeType": "YulIdentifier",
																	"src": "11719:10:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11719:16:17"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "11712:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11759:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11761:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11761:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11761:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "11754:3:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11747:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11747:11:17"
															},
															"nodeType": "YulIf",
															"src": "11744:37:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11951:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11953:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11953:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11953:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x_1",
																				"nodeType": "YulIdentifier",
																				"src": "11800:3:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11805:66:17",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11797:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11797:75:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y_1",
																				"nodeType": "YulIdentifier",
																				"src": "11877:3:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11882:66:17",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11874:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11874:75:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11793:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11793:157:17"
															},
															"nodeType": "YulIf",
															"src": "11790:183:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11982:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "11992:3:17"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "11997:3:17"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nodeType": "YulIdentifier",
																	"src": "11987:4:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11987:14:17"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11982:1:17"
																}
															]
														}
													]
												},
												"name": "checked_div_t_int56",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11647:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11650:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11656:1:17",
														"type": ""
													}
												],
												"src": "11618:389:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12048:130:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12058:27:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12080:1:17",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12083:1:17"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nodeType": "YulIdentifier",
																	"src": "12069:10:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12069:16:17"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "12062:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12109:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12111:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12111:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12111:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "12104:3:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12097:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12097:11:17"
															},
															"nodeType": "YulIf",
															"src": "12094:37:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12140:32:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12161:1:17",
																				"type": "",
																				"value": "6"
																			},
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "12164:1:17"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nodeType": "YulIdentifier",
																			"src": "12150:10:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12150:16:17"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "12168:3:17"
																	}
																],
																"functionName": {
																	"name": "smod",
																	"nodeType": "YulIdentifier",
																	"src": "12145:4:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12145:27:17"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12140:1:17"
																}
															]
														}
													]
												},
												"name": "mod_t_int56",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12033:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12036:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12042:1:17",
														"type": ""
													}
												],
												"src": "12012:166:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12228:261:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12238:35:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12264:1:17",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12267:5:17"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nodeType": "YulIdentifier",
																	"src": "12253:10:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12253:20:17"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "12242:7:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12365:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12367:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12367:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12367:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "12288:7:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12297:66:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12285:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12285:79:17"
															},
															"nodeType": "YulIf",
															"src": "12282:105:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12396:87:17",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "12407:7:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12416:66:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12403:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12403:80:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12396:3:17"
																}
															]
														}
													]
												},
												"name": "decrement_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12210:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12220:3:17",
														"type": ""
													}
												],
												"src": "12183:306:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12546:251:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12556:60:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12566:50:17",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12560:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12625:21:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12640:1:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "12643:2:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12636:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12636:10:17"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nodeType": "YulTypedName",
																	"src": "12629:3:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12655:21:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12670:1:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "12673:2:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12666:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12666:10:17"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "12659:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12736:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12738:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12738:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12738:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x_1",
																						"nodeType": "YulIdentifier",
																						"src": "12706:3:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12699:6:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12699:11:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12692:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12692:19:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y_1",
																				"nodeType": "YulIdentifier",
																				"src": "12716:3:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "12725:2:17"
																					},
																					{
																						"name": "x_1",
																						"nodeType": "YulIdentifier",
																						"src": "12729:3:17"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "12721:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12721:12:17"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12713:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12713:21:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12688:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12688:47:17"
															},
															"nodeType": "YulIf",
															"src": "12685:73:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12767:24:17",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "12782:3:17"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "12787:3:17"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12778:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12778:13:17"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12767:7:17"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint192",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12525:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12528:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12534:7:17",
														"type": ""
													}
												],
												"src": "12494:303:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12848:186:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12858:60:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12868:50:17",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12862:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12927:21:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12942:1:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "12945:2:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12938:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12938:10:17"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "12931:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12972:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12974:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12974:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12974:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "12967:3:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12960:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12960:11:17"
															},
															"nodeType": "YulIf",
															"src": "12957:37:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13003:25:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "13016:1:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13019:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13012:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13012:10:17"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "13024:3:17"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "13008:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13008:20:17"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "13003:1:17"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint192",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12833:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12836:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12842:1:17",
														"type": ""
													}
												],
												"src": "12802:232:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13082:148:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13173:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13175:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13175:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13175:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13098:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13105:66:17",
																		"type": "",
																		"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13095:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13095:77:17"
															},
															"nodeType": "YulIf",
															"src": "13092:103:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13204:20:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13215:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13218:5:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13211:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13211:13:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "13204:3:17"
																}
															]
														}
													]
												},
												"name": "negate_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13064:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13074:3:17",
														"type": ""
													}
												],
												"src": "13039:191:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13277:196:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13287:35:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13313:1:17",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13316:5:17"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nodeType": "YulIdentifier",
																	"src": "13302:10:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13302:20:17"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "13291:7:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13414:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13416:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13416:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13416:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "13337:7:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13346:66:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13334:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13334:79:17"
															},
															"nodeType": "YulIf",
															"src": "13331:105:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13445:22:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13456:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "13459:7:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13452:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13452:15:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "13445:3:17"
																}
															]
														}
													]
												},
												"name": "negate_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13259:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13269:3:17",
														"type": ""
													}
												],
												"src": "13235:238:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13652:150:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13669:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13680:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13662:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13662:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13662:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13703:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13714:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13699:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13699:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13719:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13692:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13692:29:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13692:29:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13741:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13752:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13737:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13737:18:17"
																	},
																	{
																		"hexValue": "54",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13757:3:17",
																		"type": "",
																		"value": "T"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13730:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13730:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13730:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13770:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13782:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13793:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13778:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13778:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13770:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13629:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13643:4:17",
														"type": ""
													}
												],
												"src": "13478:324:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13845:74:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13868:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "13870:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13870:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13870:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13865:1:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13858:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13858:9:17"
															},
															"nodeType": "YulIf",
															"src": "13855:35:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13899:14:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13908:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13911:1:17"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "13904:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13904:9:17"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "13899:1:17"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13830:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13833:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "13839:1:17",
														"type": ""
													}
												],
												"src": "13807:112:17"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function decrement_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if iszero(value_1) { panic_error_0x11() }\n        ret := add(value_1, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"BP\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_array$_t_uint32_$dyn_memory_ptr__to_t_array$_t_uint32_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_int56_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint160_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_int56_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_int56_$dyn_memory_ptrt_array$_t_uint160_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_int56_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            let value := mload(src)\n            if iszero(eq(value, signextend(6, value)))\n            {\n                let _5 := 0\n                revert(_5, _5)\n            }\n            mstore(dst, value)\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := mload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint160_dyn_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function checked_sub_t_int56(x, y) -> diff\n    {\n        let x_1 := signextend(6, x)\n        let y_1 := signextend(6, y)\n        let _1 := slt(y_1, 0)\n        if and(iszero(_1), slt(x_1, add(0xffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000, y_1))) { panic_error_0x11() }\n        if and(_1, sgt(x_1, add(0x7fffffffffffff, y_1))) { panic_error_0x11() }\n        diff := sub(x_1, y_1)\n    }\n    function checked_sub_t_uint160(x, y) -> diff\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if lt(x_1, y_1) { panic_error_0x11() }\n        diff := sub(x_1, y_1)\n    }\n    function checked_div_t_int56(x, y) -> r\n    {\n        let x_1 := signextend(6, x)\n        let y_1 := signextend(6, y)\n        if iszero(y_1) { panic_error_0x12() }\n        if and(eq(x_1, 0xffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000), eq(y_1, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) { panic_error_0x11() }\n        r := sdiv(x_1, y_1)\n    }\n    function mod_t_int56(x, y) -> r\n    {\n        let y_1 := signextend(6, y)\n        if iszero(y_1) { panic_error_0x12() }\n        r := smod(signextend(6, x), y_1)\n    }\n    function decrement_t_int24(value) -> ret\n    {\n        let value_1 := signextend(2, value)\n        if eq(value_1, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000) { panic_error_0x11() }\n        ret := add(value_1, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function checked_mul_t_uint192(x, y) -> product\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffffffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if and(iszero(iszero(x_1)), gt(y_1, div(_1, x_1))) { panic_error_0x11() }\n        product := mul(x_1, y_1)\n    }\n    function checked_div_t_uint192(x, y) -> r\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffffffffffff\n        let y_1 := and(y, _1)\n        if iszero(y_1) { panic_error_0x12() }\n        r := div(and(x, _1), y_1)\n    }\n    function negate_t_int256(value) -> ret\n    {\n        if eq(value, 0x8000000000000000000000000000000000000000000000000000000000000000) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n    function negate_t_int24(value) -> ret\n    {\n        let value_1 := signextend(2, value)\n        if eq(value_1, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000) { panic_error_0x11() }\n        ret := sub(0, value_1)\n    }\n    function abi_encode_tuple_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 1)\n        mstore(add(headStart, 64), \"T\")\n        tail := add(headStart, 96)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"828": [
									{
										"length": 32,
										"start": 1058
									},
									{
										"length": 32,
										"start": 1771
									},
									{
										"length": 32,
										"start": 1824
									},
									{
										"length": 32,
										"start": 3463
									},
									{
										"length": 32,
										"start": 3749
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100ec5760003560e01c8063990dc9db1161008a578063d825bfff11610059578063d825bfff146102b1578063def1a5e8146102e7578063ec55688914610311578063fed0a20e1461033757600080fd5b8063990dc9db146102215780639e95514914610251578063b401487914610271578063cf9d4afa1461029157600080fd5b80634051b9aa116100c65780634051b9aa1461019e57806352fd856b146101be57806363b48ee6146101d45780637d0f7a88146101f457600080fd5b80630cb1982b146100fb5780630fbbfa3e1461012e5780632637a4771461017c57600080fd5b366100f657600080fd5b600080fd5b34801561010757600080fd5b5061011b610116366004611cb1565b610363565b6040519081526020015b60405180910390f35b34801561013a57600080fd5b50610164610149366004611ce2565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610125565b34801561018857600080fd5b5061019c610197366004611ce2565b610417565b005b3480156101aa57600080fd5b5061019c6101b9366004611ce2565b610715565b3480156101ca57600080fd5b5061011b60005481565b3480156101e057600080fd5b506101646101ef366004611cb1565b610966565b34801561020057600080fd5b5061011b61020f366004611ce2565b60036020526000908152604090205481565b34801561022d57600080fd5b5061024161023c366004611cff565b610990565b6040519015158152602001610125565b34801561025d57600080fd5b5061019c61026c366004611ce2565b610d1f565b34801561027d57600080fd5b5061019c61028c366004611cff565b610d7c565b34801561029d57600080fd5b5061019c6102ac366004611ce2565b610e9a565b3480156102bd57600080fd5b506101646102cc366004611ce2565b6005602052600090815260409020546001600160a01b031681565b3480156102f357600080fd5b506102fc610f45565b60408051928352602083019190915201610125565b34801561031d57600080fd5b50600154610164906201000090046001600160a01b031681565b34801561034357600080fd5b506001546103519060ff1681565b60405160ff9091168152602001610125565b6000600160029054906101000a90046001600160a01b03166001600160a01b0316633f0a07976040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103dc9190611d2b565b6001600160a01b0316336001600160a01b0316146103f957600080fd5b8161040261111d565b61040c9190611d77565b600081905592915050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461044c57600080fd5b6001546040517fa6fa0b7b0000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301526201000090920490911690819063a6fa0b7b90602401600060405180830381600087803b1580156104b557600080fd5b505af11580156104c9573d6000803e3d6000fd5b50506040516001600160a01b03848116602483015285169250604401905060408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fcf9d4afa000000000000000000000000000000000000000000000000000000001790525161054a9190611d8e565b600060405180830381855af49150503d8060008114610585576040519150601f19603f3d011682016040523d82523d6000602084013e61058a565b606091505b5050600254905060005b818110156106e8576000600282815481106105b1576105b1611dc9565b6000918252602090912001546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b039091169150819063a9059cbb90879083906370a0823190602401602060405180830381865afa158015610628573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064c9190611df8565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156106af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d39190611e11565b505080806106e090611e33565b915050610594565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316ff5b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806107d35750600160029054906101000a90046001600160a01b03166001600160a01b0316633f0a07976040518163ffffffff1660e01b8152600401602060405180830381865afa15801561079a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107be9190611d2b565b6001600160a01b0316336001600160a01b0316145b6107dc57600080fd5b6001600160a01b03811660009081526003602052604090205460020361082d5760018054610100900460ff16908061081383611e4d565b91906101000a81548160ff021916908360ff160217905550505b6001600160a01b0381166000908152600360205260408120819055600254905b8181101561096157826001600160a01b03166002828154811061087257610872611dc9565b6000918252602090912001546001600160a01b03160361094f576002610899600184611d77565b815481106108a9576108a9611dc9565b600091825260209091200154600280546001600160a01b0390921691839081106108d5576108d5611dc9565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600280548061091457610914611e6a565b600082815260209020810160001990810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690550190555b8061095981611e33565b91505061084d565b505050565b6002818154811061097657600080fd5b6000918252602090912001546001600160a01b0316905081565b600080600160029054906101000a90046001600160a01b03169050806001600160a01b0316633f0a07976040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109e9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0d9190611d2b565b6001600160a01b0316336001600160a01b03161480610a9e5750806001600160a01b031663da8909e56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a899190611d2b565b6001600160a01b0316336001600160a01b0316145b610aa757600080fd5b60025460005b81811015610d1157600060028281548110610aca57610aca611dc9565b60009182526020808320909101546001600160a01b03168083526003909152604090912054909150600203610cfe576000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5d9190611e99565b905060128160ff161015610c40576001600160a01b03821663a9059cbb89610b89601260ff8616611d77565b610b9490600a611fa0565b600154610ba990610100900460ff168c611fdb565b610bb39190611fdb565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610c16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3a9190611e11565b50610cfc565b8060ff16601203610cfc576001546001600160a01b0383169063a9059cbb908a90610c7390610100900460ff168b611fdb565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610cd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfa9190611e11565b505b505b5080610d0981611e33565b915050610aad565b506001925050505b92915050565b6001546201000090046001600160a01b03163314610d3c57600080fd5b600180546001600160a01b0390921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff909216919091179055565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610db157600080fd5b80600003610dda576001600160a01b038216600090815260036020526040902060019055610e2f565b80600103610e2f576001600160a01b03821660009081526003602052604090206002905560018054610100900460ff169080610e1583611fef565b91906101000a81548160ff021916908360ff160217905550505b50600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ecf57600080fd5b60015460ff1615610edf57600080fd5b600180547fffffffffffffffffffff0000000000000000000000000000000000000000ff0016620100006001600160a01b0393909316929092027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169190911781179055565b6000806000600160029054906101000a90046001600160a01b03166001600160a01b031663da8909e56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc19190611d2b565b6001600160a01b031663d0b06f5d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ffe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110229190611df8565b90506000600160029054906101000a90046001600160a01b03166001600160a01b031663da8909e56040518163ffffffff1660e01b8152600401602060405180830381865afa158015611079573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109d9190611d2b565b6001600160a01b0316637f8483a46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fe9190611df8565b90508061110961111d565b6111139190611d77565b9491935090915050565b600254600090815b818110156112995760006002828154811061114257611142611dc9565b60009182526020822001546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03909116925082906370a0823190602401602060405180830381865afa1580156111ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d29190611df8565b6001600160a01b038316600090815260036020526040902054909150600181900361126e576001600160a01b038084166000908152600460205260408120549091829161122091168261129e565b506001600160a01b0380871660009081526005602052604090205491925061124e918391879189911661152b565b915061125c9050818461200e565b611266908861202d565b965050611283565b8060020361128357611280828761202d565b95505b505050808061129190611e33565b915050611125565b505090565b6000808263ffffffff16600003611316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f425000000000000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b604080516002808252606082018352600092602083019080368337019050509050838160008151811061134b5761134b611dc9565b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061137a5761137a611dc9565b602002602001019063ffffffff16908163ffffffff1681525050600080866001600160a01b031663883bdbfd846040518263ffffffff1660e01b81526004016113c39190612074565b600060405180830381865afa1580156113e0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114089190810190612187565b9150915060008260008151811061142157611421611dc9565b60200260200101518360018151811061143c5761143c611dc9565b602002602001015161144e9190612253565b905060008260008151811061146557611465611dc9565b60200260200101518360018151811061148057611480611dc9565b602002602001015161149291906122bb565b90506114a2600389900b836122e3565b965060008260060b1280156114c657506114c0600389900b83612339565b60060b15155b156114d957866114d58161235b565b9750505b60006114f26001600160a01b0363ffffffff8b16612390565b905061151c77ffffffffffffffffffffffffffffffffffffffff00000000602084901b16826123d0565b96505050505050509250929050565b600080611537866116aa565b90506fffffffffffffffffffffffffffffffff6001600160a01b0382161161160257600061156e6001600160a01b0383168061200e565b9050836001600160a01b0316856001600160a01b0316106115c4576115bf7801000000000000000000000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683611b2b565b6115fa565b6115fa81876fffffffffffffffffffffffffffffffff167801000000000000000000000000000000000000000000000000611b2b565b9250506116a1565b60006116216001600160a01b0383168068010000000000000000611b2b565b9050836001600160a01b0316856001600160a01b03161061166f5761166a700100000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683611b2b565b61169d565b61169d81876fffffffffffffffffffffffffffffffff16700100000000000000000000000000000000611b2b565b9250505b50949350505050565b60008060008360020b126116c1578260020b6116ce565b8260020b6116ce90612407565b90506116f97ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761861243f565b62ffffff16811115611767576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f5400000000000000000000000000000000000000000000000000000000000000604482015260640161130d565b60008160011660000361178b5770010000000000000000000000000000000061179d565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156117dc5760806117d7826ffff97272373d413259a46990580e213a61200e565b901c90505b6004821615611806576080611801826ffff2e50f5f656932ef12357cf3c7fdcc61200e565b901c90505b600882161561183057608061182b826fffe5caca7e10e4e61c3624eaa0941cd061200e565b901c90505b601082161561185a576080611855826fffcb9843d60f6159c9db58835c92664461200e565b901c90505b602082161561188457608061187f826fff973b41fa98c081472e6896dfb254c061200e565b901c90505b60408216156118ae5760806118a9826fff2ea16466c96a3843ec78b326b5286161200e565b901c90505b60808216156118d85760806118d3826ffe5dee046a99a2a811c461f1969c305361200e565b901c90505b6101008216156119035760806118fe826ffcbe86c7900a88aedcffc83b479aa3a461200e565b901c90505b61020082161561192e576080611929826ff987a7253ac413176f2b074cf7815e5461200e565b901c90505b610400821615611959576080611954826ff3392b0822b70005940c7a398e4b70f361200e565b901c90505b61080082161561198457608061197f826fe7159475a2c29b7443b29c7fa6e889d961200e565b901c90505b6110008216156119af5760806119aa826fd097f3bdfd2022b8845ad8f792aa582561200e565b901c90505b6120008216156119da5760806119d5826fa9f746462d870fdf8a65dc1f90e061e561200e565b901c90505b614000821615611a05576080611a00826f70d869a156d2a1b890bb3df62baf32f761200e565b901c90505b618000821615611a30576080611a2b826f31be135f97d08fd981231505542fcfa661200e565b901c90505b62010000821615611a5c576080611a57826f09aa508b5b7a84e1c677de54f3e99bc961200e565b901c90505b62020000821615611a87576080611a82826e5d6af8dedb81196699c329225ee60461200e565b901c90505b62040000821615611ab1576080611aac826d2216e584f5fa1ea926041bedfe9861200e565b901c90505b62080000821615611ad9576080611ad4826b048a170391f7dc42444e8fa261200e565b901c90505b60008460020b1315611af457611af181600019611fdb565b90505b611b036401000000008261247d565b15611b0f576001611b12565b60005b611b239060ff16602083901c61202d565b949350505050565b6000808060001985870985870292508281108382030391505080600003611b645760008411611b5957600080fd5b508290049050611caa565b808411611b7057600080fd5b600084868809808403938111909203919050600085611b9181600019611d77565b611b9c90600161202d565b16958690049593849004936000819003046001019050611bbc818461200e565b909317926000611bcd87600361200e565b6002189050611bdc818861200e565b611be7906002611d77565b611bf1908261200e565b9050611bfd818861200e565b611c08906002611d77565b611c12908261200e565b9050611c1e818861200e565b611c29906002611d77565b611c33908261200e565b9050611c3f818861200e565b611c4a906002611d77565b611c54908261200e565b9050611c60818861200e565b611c6b906002611d77565b611c75908261200e565b9050611c81818861200e565b611c8c906002611d77565b611c96908261200e565b9050611ca2818661200e565b955050505050505b9392505050565b600060208284031215611cc357600080fd5b5035919050565b6001600160a01b0381168114611cdf57600080fd5b50565b600060208284031215611cf457600080fd5b8135611caa81611cca565b60008060408385031215611d1257600080fd5b8235611d1d81611cca565b946020939093013593505050565b600060208284031215611d3d57600080fd5b8151611caa81611cca565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015611d8957611d89611d48565b500390565b6000825160005b81811015611daf5760208186018101518583015201611d95565b81811115611dbe576000828501525b509190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215611e0a57600080fd5b5051919050565b600060208284031215611e2357600080fd5b81518015158114611caa57600080fd5b60006000198203611e4657611e46611d48565b5060010190565b600060ff821680611e6057611e60611d48565b6000190192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600060208284031215611eab57600080fd5b815160ff81168114611caa57600080fd5b600181815b80851115611ef7578160001904821115611edd57611edd611d48565b80851615611eea57918102915b93841c9390800290611ec1565b509250929050565b600082611f0e57506001610d19565b81611f1b57506000610d19565b8160018114611f315760028114611f3b57611f57565b6001915050610d19565b60ff841115611f4c57611f4c611d48565b50506001821b610d19565b5060208310610133831016604e8410600b8410161715611f7a575081810a610d19565b611f848383611ebc565b8060001904821115611f9857611f98611d48565b029392505050565b6000611caa8383611eff565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082611fea57611fea611fac565b500490565b600060ff821660ff810361200557612005611d48565b60010192915050565b600081600019048311821515161561202857612028611d48565b500290565b6000821982111561204057612040611d48565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020808252825182820181905260009190848201906040850190845b818110156120b257835163ffffffff1683529284019291840191600101612090565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156120e7576120e7612045565b604052919050565b600067ffffffffffffffff82111561210957612109612045565b5060051b60200190565b600082601f83011261212457600080fd5b81516020612139612134836120ef565b6120be565b82815260059290921b8401810191818101908684111561215857600080fd5b8286015b8481101561217c57805161216f81611cca565b835291830191830161215c565b509695505050505050565b6000806040838503121561219a57600080fd5b825167ffffffffffffffff808211156121b257600080fd5b818501915085601f8301126121c657600080fd5b815160206121d6612134836120ef565b82815260059290921b840181019181810190898411156121f557600080fd5b948201945b838610156122235785518060060b81146122145760008081fd5b825294820194908201906121fa565b9188015191965090935050508082111561223c57600080fd5b5061224985828601612113565b9150509250929050565b60008160060b8360060b60008112817fffffffffffffffffffffffffffffffffffffffffffffffffff800000000000000183128115161561229657612296611d48565b81667fffffffffffff0183138116156122b1576122b1611d48565b5090039392505050565b60006001600160a01b03838116908316818110156122db576122db611d48565b039392505050565b60008160060b8360060b806122fa576122fa611fac565b60001981147fffffffffffffffffffffffffffffffffffffffffffffffffff800000000000008314161561233057612330611d48565b90059392505050565b60008260060b8061234c5761234c611fac565b808360060b0791505092915050565b60008160020b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000008103611e6057611e60611d48565b600077ffffffffffffffffffffffffffffffffffffffffffffffff808316818516818304811182151516156123c7576123c7611d48565b02949350505050565b600077ffffffffffffffffffffffffffffffffffffffffffffffff808416806123fb576123fb611fac565b92169190910492915050565b60007f8000000000000000000000000000000000000000000000000000000000000000820361243857612438611d48565b5060000390565b60008160020b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000810361247457612474611d48565b60000392915050565b60008261248c5761248c611fac565b50069056fea2646970667358221220ecec9a795266c982911a3ab5a99e3b530f7adc6c687bfca8d89c788007d5650a64736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x990DC9DB GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xD825BFFF GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD825BFFF EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xDEF1A5E8 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xEC556889 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xFED0A20E EQ PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x990DC9DB EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x9E955149 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xB4014879 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xCF9D4AFA EQ PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4051B9AA GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x4051B9AA EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x52FD856B EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x63B48EE6 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x7D0F7A88 EQ PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCB1982B EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xFBBFA3E EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x2637A477 EQ PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11B PUSH2 0x116 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB1 JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE2 JUMP JUMPDEST PUSH2 0x417 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE2 JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11B PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB1 JUMP JUMPDEST PUSH2 0x966 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11B PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x990 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE2 JUMP JUMPDEST PUSH2 0xD1F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0xD7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE2 JUMP JUMPDEST PUSH2 0xE9A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FC PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x164 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x351 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3F0A0797 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH2 0x402 PUSH2 0x111D JUMP JUMPDEST PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA6FA0B7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH3 0x10000 SWAP1 SWAP3 DIV SWAP1 SWAP2 AND SWAP1 DUP2 SWAP1 PUSH4 0xA6FA0B7B SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 AND SWAP3 POP PUSH1 0x44 ADD SWAP1 POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCF9D4AFA00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE MLOAD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x585 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x58A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6E8 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5B1 JUMPI PUSH2 0x5B1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP2 SWAP1 PUSH4 0xA9059CBB SWAP1 DUP8 SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x628 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x64C SWAP2 SWAP1 PUSH2 0x1DF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0x1E11 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x6E0 SWAP1 PUSH2 0x1E33 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x594 JUMP JUMPDEST POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x7D3 JUMPI POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3F0A0797 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BE SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x7DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x2 SUB PUSH2 0x82D JUMPI PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH2 0x813 DUP4 PUSH2 0x1E4D JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x2 SLOAD SWAP1 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x961 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x872 JUMPI PUSH2 0x872 PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x94F JUMPI PUSH1 0x2 PUSH2 0x899 PUSH1 0x1 DUP5 PUSH2 0x1D77 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x8A9 JUMPI PUSH2 0x8A9 PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x8D5 JUMPI PUSH2 0x8D5 PUSH2 0x1DC9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP1 SLOAD DUP1 PUSH2 0x914 JUMPI PUSH2 0x914 PUSH2 0x1E6A JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE ADD SWAP1 SSTORE JUMPDEST DUP1 PUSH2 0x959 DUP2 PUSH2 0x1E33 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x84D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x976 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3F0A0797 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA0D SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xA9E JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDA8909E5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA65 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA89 SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xAA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD11 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xACA JUMPI PUSH2 0xACA PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x2 SUB PUSH2 0xCFE JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB5D SWAP2 SWAP1 PUSH2 0x1E99 JUMP JUMPDEST SWAP1 POP PUSH1 0x12 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xC40 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH4 0xA9059CBB DUP10 PUSH2 0xB89 PUSH1 0x12 PUSH1 0xFF DUP7 AND PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0xB94 SWAP1 PUSH1 0xA PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xBA9 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP13 PUSH2 0x1FDB JUMP JUMPDEST PUSH2 0xBB3 SWAP2 SWAP1 PUSH2 0x1FDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC3A SWAP2 SWAP1 PUSH2 0x1E11 JUMP JUMPDEST POP PUSH2 0xCFC JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x12 SUB PUSH2 0xCFC JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 DUP11 SWAP1 PUSH2 0xC73 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP12 PUSH2 0x1FDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCD6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCFA SWAP2 SWAP1 PUSH2 0x1E11 JUMP JUMPDEST POP JUMPDEST POP JUMPDEST POP DUP1 PUSH2 0xD09 DUP2 PUSH2 0x1E33 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAAD JUMP JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH3 0x10000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xDB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0xDDA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 SSTORE PUSH2 0xE2F JUMP JUMPDEST DUP1 PUSH1 0x1 SUB PUSH2 0xE2F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH2 0xE15 DUP4 PUSH2 0x1FEF JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xECF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xEDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FF00 AND PUSH3 0x10000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 SWAP1 SWAP2 OR DUP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDA8909E5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFC1 SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0B06F5D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1022 SWAP2 SWAP1 PUSH2 0x1DF8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDA8909E5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1079 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109D SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7F8483A4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10FE SWAP2 SWAP1 PUSH2 0x1DF8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1109 PUSH2 0x111D JUMP JUMPDEST PUSH2 0x1113 SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST SWAP5 SWAP2 SWAP4 POP SWAP1 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1299 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1142 JUMPI PUSH2 0x1142 PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11D2 SWAP2 SWAP1 PUSH2 0x1DF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 DUP2 SWAP1 SUB PUSH2 0x126E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH2 0x1220 SWAP2 AND DUP3 PUSH2 0x129E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0x124E SWAP2 DUP4 SWAP2 DUP8 SWAP2 DUP10 SWAP2 AND PUSH2 0x152B JUMP JUMPDEST SWAP2 POP PUSH2 0x125C SWAP1 POP DUP2 DUP5 PUSH2 0x200E JUMP JUMPDEST PUSH2 0x1266 SWAP1 DUP9 PUSH2 0x202D JUMP JUMPDEST SWAP7 POP POP PUSH2 0x1283 JUMP JUMPDEST DUP1 PUSH1 0x2 SUB PUSH2 0x1283 JUMPI PUSH2 0x1280 DUP3 DUP8 PUSH2 0x202D JUMP JUMPDEST SWAP6 POP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x1291 SWAP1 PUSH2 0x1E33 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1125 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0x0 SUB PUSH2 0x1316 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4250000000000000000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP4 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x134B JUMPI PUSH2 0x134B PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x137A JUMPI PUSH2 0x137A PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x883BDBFD DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C3 SWAP2 SWAP1 PUSH2 0x2074 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1408 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2187 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1421 JUMPI PUSH2 0x1421 PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x143C JUMPI PUSH2 0x143C PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x144E SWAP2 SWAP1 PUSH2 0x2253 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1465 JUMPI PUSH2 0x1465 PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1480 JUMPI PUSH2 0x1480 PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1492 SWAP2 SWAP1 PUSH2 0x22BB JUMP JUMPDEST SWAP1 POP PUSH2 0x14A2 PUSH1 0x3 DUP10 SWAP1 SIGNEXTEND DUP4 PUSH2 0x22E3 JUMP JUMPDEST SWAP7 POP PUSH1 0x0 DUP3 PUSH1 0x6 SIGNEXTEND SLT DUP1 ISZERO PUSH2 0x14C6 JUMPI POP PUSH2 0x14C0 PUSH1 0x3 DUP10 SWAP1 SIGNEXTEND DUP4 PUSH2 0x2339 JUMP JUMPDEST PUSH1 0x6 SIGNEXTEND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x14D9 JUMPI DUP7 PUSH2 0x14D5 DUP2 PUSH2 0x235B JUMP JUMPDEST SWAP8 POP POP JUMPDEST PUSH1 0x0 PUSH2 0x14F2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH4 0xFFFFFFFF DUP12 AND PUSH2 0x2390 JUMP JUMPDEST SWAP1 POP PUSH2 0x151C PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000 PUSH1 0x20 DUP5 SWAP1 SHL AND DUP3 PUSH2 0x23D0 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1537 DUP7 PUSH2 0x16AA JUMP JUMPDEST SWAP1 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND GT PUSH2 0x1602 JUMPI PUSH1 0x0 PUSH2 0x156E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x15C4 JUMPI PUSH2 0x15BF PUSH25 0x1000000000000000000000000000000000000000000000000 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x1B2B JUMP JUMPDEST PUSH2 0x15FA JUMP JUMPDEST PUSH2 0x15FA DUP2 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH2 0x1B2B JUMP JUMPDEST SWAP3 POP POP PUSH2 0x16A1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1621 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 PUSH9 0x10000000000000000 PUSH2 0x1B2B JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x166F JUMPI PUSH2 0x166A PUSH17 0x100000000000000000000000000000000 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x1B2B JUMP JUMPDEST PUSH2 0x169D JUMP JUMPDEST PUSH2 0x169D DUP2 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH17 0x100000000000000000000000000000000 PUSH2 0x1B2B JUMP JUMPDEST SWAP3 POP POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x16C1 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x16CE JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x16CE SWAP1 PUSH2 0x2407 JUMP JUMPDEST SWAP1 POP PUSH2 0x16F9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH2 0x243F JUMP JUMPDEST PUSH3 0xFFFFFF AND DUP2 GT ISZERO PUSH2 0x1767 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x130D JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 AND PUSH1 0x0 SUB PUSH2 0x178B JUMPI PUSH17 0x100000000000000000000000000000000 PUSH2 0x179D JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x2 DUP3 AND ISZERO PUSH2 0x17DC JUMPI PUSH1 0x80 PUSH2 0x17D7 DUP3 PUSH16 0xFFF97272373D413259A46990580E213A PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 AND ISZERO PUSH2 0x1806 JUMPI PUSH1 0x80 PUSH2 0x1801 DUP3 PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x8 DUP3 AND ISZERO PUSH2 0x1830 JUMPI PUSH1 0x80 PUSH2 0x182B DUP3 PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 AND ISZERO PUSH2 0x185A JUMPI PUSH1 0x80 PUSH2 0x1855 DUP3 PUSH16 0xFFCB9843D60F6159C9DB58835C926644 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x20 DUP3 AND ISZERO PUSH2 0x1884 JUMPI PUSH1 0x80 PUSH2 0x187F DUP3 PUSH16 0xFF973B41FA98C081472E6896DFB254C0 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x40 DUP3 AND ISZERO PUSH2 0x18AE JUMPI PUSH1 0x80 PUSH2 0x18A9 DUP3 PUSH16 0xFF2EA16466C96A3843EC78B326B52861 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x80 DUP3 AND ISZERO PUSH2 0x18D8 JUMPI PUSH1 0x80 PUSH2 0x18D3 DUP3 PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 AND ISZERO PUSH2 0x1903 JUMPI PUSH1 0x80 PUSH2 0x18FE DUP3 PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x200 DUP3 AND ISZERO PUSH2 0x192E JUMPI PUSH1 0x80 PUSH2 0x1929 DUP3 PUSH16 0xF987A7253AC413176F2B074CF7815E54 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x400 DUP3 AND ISZERO PUSH2 0x1959 JUMPI PUSH1 0x80 PUSH2 0x1954 DUP3 PUSH16 0xF3392B0822B70005940C7A398E4B70F3 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x800 DUP3 AND ISZERO PUSH2 0x1984 JUMPI PUSH1 0x80 PUSH2 0x197F DUP3 PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0x19AF JUMPI PUSH1 0x80 PUSH2 0x19AA DUP3 PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0x19DA JUMPI PUSH1 0x80 PUSH2 0x19D5 DUP3 PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0x1A05 JUMPI PUSH1 0x80 PUSH2 0x1A00 DUP3 PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0x1A30 JUMPI PUSH1 0x80 PUSH2 0x1A2B DUP3 PUSH16 0x31BE135F97D08FD981231505542FCFA6 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0x1A5C JUMPI PUSH1 0x80 PUSH2 0x1A57 DUP3 PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0x1A87 JUMPI PUSH1 0x80 PUSH2 0x1A82 DUP3 PUSH15 0x5D6AF8DEDB81196699C329225EE604 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0x1AB1 JUMPI PUSH1 0x80 PUSH2 0x1AAC DUP3 PUSH14 0x2216E584F5FA1EA926041BEDFE98 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0x1AD9 JUMPI PUSH1 0x80 PUSH2 0x1AD4 DUP3 PUSH12 0x48A170391F7DC42444E8FA2 PUSH2 0x200E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x1AF4 JUMPI PUSH2 0x1AF1 DUP2 PUSH1 0x0 NOT PUSH2 0x1FDB JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1B03 PUSH5 0x100000000 DUP3 PUSH2 0x247D JUMP JUMPDEST ISZERO PUSH2 0x1B0F JUMPI PUSH1 0x1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0x1B23 SWAP1 PUSH1 0xFF AND PUSH1 0x20 DUP4 SWAP1 SHR PUSH2 0x202D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP DUP1 PUSH1 0x0 SUB PUSH2 0x1B64 JUMPI PUSH1 0x0 DUP5 GT PUSH2 0x1B59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP3 SWAP1 DIV SWAP1 POP PUSH2 0x1CAA JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x1B70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD DUP1 DUP5 SUB SWAP4 DUP2 GT SWAP1 SWAP3 SUB SWAP2 SWAP1 POP PUSH1 0x0 DUP6 PUSH2 0x1B91 DUP2 PUSH1 0x0 NOT PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x1B9C SWAP1 PUSH1 0x1 PUSH2 0x202D JUMP JUMPDEST AND SWAP6 DUP7 SWAP1 DIV SWAP6 SWAP4 DUP5 SWAP1 DIV SWAP4 PUSH1 0x0 DUP2 SWAP1 SUB DIV PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1BBC DUP2 DUP5 PUSH2 0x200E JUMP JUMPDEST SWAP1 SWAP4 OR SWAP3 PUSH1 0x0 PUSH2 0x1BCD DUP8 PUSH1 0x3 PUSH2 0x200E JUMP JUMPDEST PUSH1 0x2 XOR SWAP1 POP PUSH2 0x1BDC DUP2 DUP9 PUSH2 0x200E JUMP JUMPDEST PUSH2 0x1BE7 SWAP1 PUSH1 0x2 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x1BF1 SWAP1 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP PUSH2 0x1BFD DUP2 DUP9 PUSH2 0x200E JUMP JUMPDEST PUSH2 0x1C08 SWAP1 PUSH1 0x2 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x1C12 SWAP1 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP PUSH2 0x1C1E DUP2 DUP9 PUSH2 0x200E JUMP JUMPDEST PUSH2 0x1C29 SWAP1 PUSH1 0x2 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x1C33 SWAP1 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP PUSH2 0x1C3F DUP2 DUP9 PUSH2 0x200E JUMP JUMPDEST PUSH2 0x1C4A SWAP1 PUSH1 0x2 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x1C54 SWAP1 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP PUSH2 0x1C60 DUP2 DUP9 PUSH2 0x200E JUMP JUMPDEST PUSH2 0x1C6B SWAP1 PUSH1 0x2 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x1C75 SWAP1 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP PUSH2 0x1C81 DUP2 DUP9 PUSH2 0x200E JUMP JUMPDEST PUSH2 0x1C8C SWAP1 PUSH1 0x2 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x1C96 SWAP1 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP PUSH2 0x1CA2 DUP2 DUP7 PUSH2 0x200E JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1CDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CAA DUP2 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1D1D DUP2 PUSH2 0x1CCA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1CAA DUP2 PUSH2 0x1CCA JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1D89 JUMPI PUSH2 0x1D89 PUSH2 0x1D48 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1DAF JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x1D95 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1DBE JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1CAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x1E46 JUMPI PUSH2 0x1E46 PUSH2 0x1D48 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND DUP1 PUSH2 0x1E60 JUMPI PUSH2 0x1E60 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1CAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1EF7 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1EDD JUMPI PUSH2 0x1EDD PUSH2 0x1D48 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1EEA JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1F0E JUMPI POP PUSH1 0x1 PUSH2 0xD19 JUMP JUMPDEST DUP2 PUSH2 0x1F1B JUMPI POP PUSH1 0x0 PUSH2 0xD19 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1F31 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1F3B JUMPI PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xD19 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1F4C JUMPI PUSH2 0x1F4C PUSH2 0x1D48 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xD19 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1F7A JUMPI POP DUP2 DUP2 EXP PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x1F84 DUP4 DUP4 PUSH2 0x1EBC JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1F98 JUMPI PUSH2 0x1F98 PUSH2 0x1D48 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAA DUP4 DUP4 PUSH2 0x1EFF JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1FEA JUMPI PUSH2 0x1FEA PUSH2 0x1FAC JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0x2005 JUMPI PUSH2 0x2005 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2028 JUMPI PUSH2 0x2028 PUSH2 0x1D48 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2040 JUMPI PUSH2 0x2040 PUSH2 0x1D48 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x20B2 JUMPI DUP4 MLOAD PUSH4 0xFFFFFFFF AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2090 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x20E7 JUMPI PUSH2 0x20E7 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2109 JUMPI PUSH2 0x2109 PUSH2 0x2045 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x2139 PUSH2 0x2134 DUP4 PUSH2 0x20EF JUMP JUMPDEST PUSH2 0x20BE JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x217C JUMPI DUP1 MLOAD PUSH2 0x216F DUP2 PUSH2 0x1CCA JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x215C JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x219A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x21B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x21D6 PUSH2 0x2134 DUP4 PUSH2 0x20EF JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x21F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x2223 JUMPI DUP6 MLOAD DUP1 PUSH1 0x6 SIGNEXTEND DUP2 EQ PUSH2 0x2214 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x21FA JUMP JUMPDEST SWAP2 DUP9 ADD MLOAD SWAP2 SWAP7 POP SWAP1 SWAP4 POP POP POP DUP1 DUP3 GT ISZERO PUSH2 0x223C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2249 DUP6 DUP3 DUP7 ADD PUSH2 0x2113 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 SIGNEXTEND DUP4 PUSH1 0x6 SIGNEXTEND PUSH1 0x0 DUP2 SLT DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80000000000000 ADD DUP4 SLT DUP2 ISZERO AND ISZERO PUSH2 0x2296 JUMPI PUSH2 0x2296 PUSH2 0x1D48 JUMP JUMPDEST DUP2 PUSH7 0x7FFFFFFFFFFFFF ADD DUP4 SGT DUP2 AND ISZERO PUSH2 0x22B1 JUMPI PUSH2 0x22B1 PUSH2 0x1D48 JUMP JUMPDEST POP SWAP1 SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x22DB JUMPI PUSH2 0x22DB PUSH2 0x1D48 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 SIGNEXTEND DUP4 PUSH1 0x6 SIGNEXTEND DUP1 PUSH2 0x22FA JUMPI PUSH2 0x22FA PUSH2 0x1FAC JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80000000000000 DUP4 EQ AND ISZERO PUSH2 0x2330 JUMPI PUSH2 0x2330 PUSH2 0x1D48 JUMP JUMPDEST SWAP1 SDIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x6 SIGNEXTEND DUP1 PUSH2 0x234C JUMPI PUSH2 0x234C PUSH2 0x1FAC JUMP JUMPDEST DUP1 DUP4 PUSH1 0x6 SIGNEXTEND SMOD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP2 SUB PUSH2 0x1E60 JUMPI PUSH2 0x1E60 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x0 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP2 DUP4 DIV DUP2 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x23C7 JUMPI PUSH2 0x23C7 PUSH2 0x1D48 JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND DUP1 PUSH2 0x23FB JUMPI PUSH2 0x23FB PUSH2 0x1FAC JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 SUB PUSH2 0x2438 JUMPI PUSH2 0x2438 PUSH2 0x1D48 JUMP JUMPDEST POP PUSH1 0x0 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP2 SUB PUSH2 0x2474 JUMPI PUSH2 0x2474 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x0 SUB SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x248C JUMPI PUSH2 0x248C PUSH2 0x1FAC JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xEC SWAP11 PUSH26 0x5266C982911A3AB5A99E3B530F7ADC6C687BFCA8D89C788007D5 PUSH6 0xA64736F6C63 NUMBER STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "148:4871:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5002:8;;;148:4871;;;;;;;;;;;;;;;;;;;;;5002:8;;;148:4871;;;;;;;;;;;;;;;;;;;;;;;;;;5002:8;;;148:4871;;;;;;;;;;;;;;;;5002:8;;;148:4871;;;;4935:8;;;148:4871;5002:8;;;980:226;;;;;;;;;;-1:-1:-1;980:226:13;;;;;:::i;:::-;;:::i;:::-;;;345:25:17;;;333:2;318:18;980:226:13;;;;;;;;405:50;;;;;;;;;;-1:-1:-1;405:50:13;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;405:50:13;;;;;;-1:-1:-1;;;;;956:55:17;;;938:74;;926:2;911:18;405:50:13;792:226:17;4327:557:13;;;;;;;;;;-1:-1:-1;4327:557:13;;;;;:::i;:::-;;:::i;:::-;;3714:459;;;;;;;;;;-1:-1:-1;3714:459:13;;;;;:::i;:::-;;:::i;215:15::-;;;;;;;;;;;;;;;;308:26;;;;;;;;;;-1:-1:-1;308:26:13;;;;;:::i;:::-;;:::i;337:38::-;;;;;;;;;;-1:-1:-1;337:38:13;;;;;:::i;:::-;;;;;;;;;;;;;;1216:772;;;;;;;;;;-1:-1:-1;1216:772:13;;;;;:::i;:::-;;:::i;:::-;;;1508:14:17;;1501:22;1483:41;;1471:2;1456:18;1216:772:13;1343:187:17;4179:138:13;;;;;;;;;;-1:-1:-1;4179:138:13;;;;;:::i;:::-;;:::i;3438:266::-;;;;;;;;;;-1:-1:-1;3438:266:13;;;;;:::i;:::-;;:::i;843:131::-;;;;;;;;;;-1:-1:-1;843:131:13;;;;;:::i;:::-;;:::i;484:43::-;;;;;;;;;;-1:-1:-1;484:43:13;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;484:43:13;;;1998:530;;;;;;;;;;;;;:::i;:::-;;;;1709:25:17;;;1765:2;1750:18;;1743:34;;;;1682:18;1998:530:13;1535:248:17;284:20:13;;;;;;;;;;-1:-1:-1;284:20:13;;;;;;;-1:-1:-1;;;;;284:20:13;;;236:21;;;;;;;;;;-1:-1:-1;236:21:13;;;;;;;;;;;1960:4:17;1948:17;;;1930:36;;1918:2;1903:18;236:21:13;1788:184:17;980:226:13;1050:11;1106:5;;;;;;;;;-1:-1:-1;;;;;1106:5:13;-1:-1:-1;;;;;1099:30:13;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1085:46:13;:10;-1:-1:-1;;;;;1085:46:13;;1077:55;;;;;;1168:9;1151:14;:12;:14::i;:::-;:26;;;;:::i;:::-;1187:3;:12;;;1142:35;980:226;-1:-1:-1;;980:226:13:o;4327:557::-;717:10;-1:-1:-1;;;;;731:8:13;717:22;;709:31;;;;;;4441:5:::1;::::0;4456:41:::1;::::0;;;;-1:-1:-1;;;;;956:55:17;;;4456:41:13::1;::::0;::::1;938:74:17::0;4441:5:13;;;::::1;::::0;;::::1;::::0;;;4456:32:::1;::::0;911:18:17;;4456:41:13::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4528:59:13::1;::::0;-1:-1:-1;;;;;956:55:17;;;4528:59:13::1;::::0;::::1;938:74:17::0;4507:20:13;::::1;::::0;-1:-1:-1;911:18:17;;;-1:-1:-1;4528:59:13::1;::::0;;-1:-1:-1;;4528:59:13;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;::::1;;;;::::0;;4507:81;::::1;::::0;4528:59;4507:81:::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;4607:9:13::1;:16:::0;;-1:-1:-1;4598:6:13::1;4633:204;4653:1;4649;:5;4633:204;;;4683:23;4709:9;4719:1;4709:12;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;4777:48:::1;::::0;;;;4819:4:::1;4777:48;::::0;::::1;938:74:17::0;-1:-1:-1;;;;;4709:12:13;;::::1;::::0;-1:-1:-1;4709:12:13;;4735:32:::1;::::0;4768:7;;4709:12;;4777:33:::1;::::0;911:18:17;;4777:48:13::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4735:91;::::0;;::::1;::::0;;;;;;-1:-1:-1;;;;;3553:55:17;;;4735:91:13::1;::::0;::::1;3535:74:17::0;3625:18;;;3618:34;3508:18;;4735:91:13::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4669:168;4656:3;;;;;:::i;:::-;;;;4633:204;;;;4867:8;-1:-1:-1::0;;;;;4846:31:13::1;;3714:459:::0;3780:10;-1:-1:-1;;;;;3794:8:13;3780:22;;;:72;;;3827:5;;;;;;;;;-1:-1:-1;;;;;3827:5:13;-1:-1:-1;;;;;3820:30:13;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3806:46:13;:10;-1:-1:-1;;;;;3806:46:13;;3780:72;3772:81;;;;;;-1:-1:-1;;;;;3866:15:13;;;;;;:5;:15;;;;;;3885:1;3866:20;3863:34;;3888:7;:9;;;;;;;;:7;:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3863:34;-1:-1:-1;;;;;3907:15:13;;3925:1;3907:15;;;:5;:15;;;;;:19;;;3945:9;:16;;3971:196;3991:1;3987;:5;3971:196;;;4040:8;-1:-1:-1;;;;;4024:24:13;:9;4034:1;4024:12;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;4024:12:13;:24;4021:136;;4095:9;4105:3;4107:1;4105;:3;:::i;:::-;4095:14;;;;;;;;:::i;:::-;;;;;;;;;;;4080:9;:12;;-1:-1:-1;;;;;4095:14:13;;;;4090:1;;4080:12;;;;;;:::i;:::-;;;;;;;;;:29;;;;;-1:-1:-1;;;;;4080:29:13;;;;;-1:-1:-1;;;;;4080:29:13;;;;;;4127:9;:15;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;4127:15:13;;;;;;;;;;;;4021:136;3994:3;;;;:::i;:::-;;;;3971:196;;;;3762:411;3714:459;:::o;308:26::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;308:26:13;;-1:-1:-1;308:26:13;:::o;1216:772::-;1308:4;1328:17;1348:5;;;;;;;;;-1:-1:-1;;;;;1348:5:13;1328:25;;1392:9;-1:-1:-1;;;;;1385:34:13;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1371:50:13;:10;-1:-1:-1;;;;;1371:50:13;;:106;;;;1446:9;-1:-1:-1;;;;;1439:36:13;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1425:52:13;:10;-1:-1:-1;;;;;1425:52:13;;1371:106;1363:115;;;;;;1497:9;:16;1488:6;1532:429;1552:1;1548;:5;1532:429;;;1582:16;1601:9;1611:1;1601:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1601:12:13;1630:15;;;:5;:15;;;;;;;;1601:12;;-1:-1:-1;1649:1:13;1630:20;1627:324;;1682:14;1706:8;-1:-1:-1;;;;;1699:25:13;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1682:44;;1758:2;1747:8;:13;;;1744:192;;;-1:-1:-1;;;;;1762:25:13;;;1788:2;1821:17;1836:2;1821:14;;;:17;:::i;:::-;1816:23;;:2;:23;:::i;:::-;1808:7;;1792:23;;1808:7;;;;;1792:15;:23;:::i;:::-;:47;;;;:::i;:::-;1762:78;;;;;;;;;;-1:-1:-1;;;;;3553:55:17;;;1762:78:13;;;3535:74:17;3625:18;;;3618:34;3508:18;;1762:78:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1744:192;;;1866:8;:14;;1878:2;1866:14;1863:73;;1928:7;;-1:-1:-1;;;;;1882:25:13;;;;;1908:2;;1912:23;;1928:7;;;;;1912:15;:23;:::i;:::-;1882:54;;;;;;;;;;-1:-1:-1;;;;;3553:55:17;;;1882:54:13;;;3535:74:17;3625:18;;;3618:34;3508:18;;1882:54:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1863:73;1664:287;1627:324;-1:-1:-1;1555:3:13;;;;:::i;:::-;;;;1532:429;;;;1977:4;1970:11;;;;1216:772;;;;;:::o;4179:138::-;4279:5;;;;;-1:-1:-1;;;;;4279:5:13;4265:10;:19;4257:28;;;;;;4295:5;:15;;-1:-1:-1;;;;;4295:15:13;;;;;;;;;;;;;;;4179:138::o;3438:266::-;717:10;-1:-1:-1;;;;;731:8:13;717:22;;709:31;;;;;;3526:6:::1;3536:1;3526:11:::0;3523:141:::1;;-1:-1:-1::0;;;;;3539:15:13;::::1;;::::0;;;:5:::1;:15;::::0;;;;3557:1:::1;3539:19:::0;;3523:141:::1;;;3576:6;3586:1;3576:11:::0;3573:91:::1;;-1:-1:-1::0;;;;;3611:15:13;::::1;;::::0;;;:5:::1;:15;::::0;;;;3629:1:::1;3611:19:::0;;3644:7:::1;:9:::0;;::::1;::::0;::::1;;;::::0;:7;:9:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3573:91;-1:-1:-1::0;3673:9:13::1;:24:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3673:24:13;;;;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;;3673:24:13;;;::::1;::::0;;;::::1;::::0;;3438:266::o;843:131::-;717:10;-1:-1:-1;;;;;731:8:13;717:22;;709:31;;;;;;805:8:::1;::::0;::::1;;:13:::0;797:22:::1;;;::::0;::::1;;928:5:::2;:17:::0;;955:12;;928:17;-1:-1:-1;;;;;928:17:13;;;::::2;::::0;;;::::2;955:12:::0;;;;;;;::::2;::::0;;843:131::o;1998:530::-;2042:4;2048;2297:16;2337:5;;;;;;;;;-1:-1:-1;;;;;2337:5:13;-1:-1:-1;;;;;2330:32:13;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2316:61:13;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2297:82;;2389:9;2422:5;;;;;;;;;-1:-1:-1;;;;;2422:5:13;-1:-1:-1;;;;;2415:32:13;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2401:65:13;;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2389:79;;2503:4;2486:14;:12;:14::i;:::-;:21;;;;:::i;:::-;2478:43;2509:11;;-1:-1:-1;1998:530:13;;-1:-1:-1;;1998:530:13:o;2538:890::-;2751:9;:16;2585:11;;;2777:645;2797:1;2793;:5;2777:645;;;2827:12;2842:9;2852:1;2842:12;;;;;;;;:::i;:::-;;;;;;;;;;2883:37;;;;;2914:4;2883:37;;;938:74:17;-1:-1:-1;;;;;2842:12:13;;;;-1:-1:-1;2842:12:13;;2883:22;;911:18:17;;2883:37:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2948:11:13;;2934;2948;;;:5;:11;;;;;;2868:52;;-1:-1:-1;2999:1:13;2989:11;;;2986:425;;-1:-1:-1;;;;;3143:20:13;;;3032:10;3143:20;;;:14;:20;;;;;;3032:10;;;;3121:46;;3143:20;3032:10;3121:21;:46::i;:::-;-1:-1:-1;;;;;;3270:13:13;;;;;;;:7;:13;;;;;;3091:76;;-1:-1:-1;3197:87:13;;3091:76;;3254:7;;3264:4;;3270:13;3197:28;:87::i;:::-;3189:95;-1:-1:-1;3330:15:13;;-1:-1:-1;3189:95:13;3330:7;:15;:::i;:::-;3320:25;;;;:::i;:::-;;;3014:346;2986:425;;;3381:6;3391:1;3381:11;3378:33;;3394:17;3404:7;3394:17;;:::i;:::-;;;3378:33;2813:609;;;2800:3;;;;;:::i;:::-;;;;2777:645;;;;2602:826;2538:890;:::o;808:1241:15:-;905:24;931:29;984:10;:15;;998:1;984:15;976:30;;;;;;;7411:2:17;976:30:15;;;7393:21:17;7450:1;7430:18;;;7423:29;7488:4;7468:18;;;7461:32;7510:18;;976:30:15;;;;;;;;;1047:15;;;1060:1;1047:15;;;;;;;;1017:27;;1047:15;;;;;;;;;;-1:-1:-1;1047:15:15;1017:45;;1089:10;1072:11;1084:1;1072:14;;;;;;;;:::i;:::-;;;;;;:27;;;;;;;;;;;1126:1;1109:11;1121:1;1109:14;;;;;;;;:::i;:::-;;;;;;:18;;;;;;;;;;;1139:30;1171:51;1253:4;-1:-1:-1;;;;;1238:28:15;;1267:11;1238:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1238:41:15;;;;;;;;;;;;:::i;:::-;1138:141;;;;1290:26;1340:15;1356:1;1340:18;;;;;;;;:::i;:::-;;;;;;;1319:15;1335:1;1319:18;;;;;;;;:::i;:::-;;;;;;;:39;;;;:::i;:::-;1290:68;;1368:43;1466:34;1501:1;1466:37;;;;;;;;:::i;:::-;;;;;;;1426:34;1461:1;1426:37;;;;;;;;:::i;:::-;;;;;;;:77;;;;:::i;:::-;1368:135;-1:-1:-1;1541:40:15;;;;;:20;:40;:::i;:::-;1514:68;;1664:1;1641:20;:24;;;:75;;;;-1:-1:-1;1670:40:15;;;;;:20;:40;:::i;:::-;:45;;;;1641:75;1637:101;;;1718:20;;;;:::i;:::-;;;;1637:101;1866:22;1891:39;-1:-1:-1;;;;;1891:19:15;;;:39;:::i;:::-;1866:64;-1:-1:-1;1972:69:15;1990:50;2038:2;1990:50;;;;1866:64;1972:69;:::i;:::-;1940:102;;966:1083;;;;;;808:1241;;;;;:::o;2553:955::-;2709:19;2740:20;2763:33;2791:4;2763:27;:33::i;:::-;2740:56;-1:-1:-1;2931:17:15;-1:-1:-1;;;;;2915:33:15;;;2911:591;;2964:17;2984:36;-1:-1:-1;;;;;2984:36:15;;;;:::i;:::-;2964:56;;3060:10;-1:-1:-1;;;;;3048:22:15;:9;-1:-1:-1;;;;;3048:22:15;;:156;;3156:48;3172:8;3182:10;3156:48;;3194:9;3156:15;:48::i;:::-;3048:156;;;3089:48;3105:9;3116:10;3089:48;;3128:8;3089:15;:48::i;:::-;3034:170;;2950:265;2911:591;;;3235:17;3255:52;-1:-1:-1;;;;;3255:52:15;;;3299:7;3255:15;:52::i;:::-;3235:72;;3347:10;-1:-1:-1;;;;;3335:22:15;:9;-1:-1:-1;;;;;3335:22:15;;:156;;3443:48;3459:8;3469:10;3443:48;;3481:9;3443:15;:48::i;:::-;3335:156;;;3376:48;3392:9;3403:10;3376:48;;3415:8;3376:15;:48::i;:::-;3321:170;;3221:281;2911:591;2730:778;2553:955;;;;;;:::o;1355:2588:16:-;1418:20;1450:15;1475:1;1468:4;:8;;;:57;;1519:4;1512:12;;1468:57;;;1495:4;1488:12;;1487:13;;;:::i;:::-;1450:75;-1:-1:-1;637:9:16;477:7;637:9;:::i;:::-;1554:25;;1543:7;:36;;1535:50;;;;;;;13680:2:17;1535:50:16;;;13662:21:17;13719:1;13699:18;;;13692:29;13757:3;13737:18;;;13730:31;13778:18;;1535:50:16;13478:324:17;1535:50:16;1596:13;1612:7;1622:3;1612:13;1629:1;1612:18;:93;;1670:35;1612:93;;;1633:34;1612:93;1596:109;;;-1:-1:-1;1729:3:16;1719:13;;:18;1715:83;;1795:3;1748:42;:5;1756:34;1748:42;:::i;:::-;1747:51;;1739:59;;1715:83;1822:3;1812:13;;:18;1808:83;;1888:3;1841:42;:5;1849:34;1841:42;:::i;:::-;1840:51;;1832:59;;1808:83;1915:3;1905:13;;:18;1901:83;;1981:3;1934:42;:5;1942:34;1934:42;:::i;:::-;1933:51;;1925:59;;1901:83;2008:4;1998:14;;:19;1994:84;;2075:3;2028:42;:5;2036:34;2028:42;:::i;:::-;2027:51;;2019:59;;1994:84;2102:4;2092:14;;:19;2088:84;;2169:3;2122:42;:5;2130:34;2122:42;:::i;:::-;2121:51;;2113:59;;2088:84;2196:4;2186:14;;:19;2182:84;;2263:3;2216:42;:5;2224:34;2216:42;:::i;:::-;2215:51;;2207:59;;2182:84;2290:4;2280:14;;:19;2276:84;;2357:3;2310:42;:5;2318:34;2310:42;:::i;:::-;2309:51;;2301:59;;2276:84;2384:5;2374:15;;:20;2370:85;;2452:3;2405:42;:5;2413:34;2405:42;:::i;:::-;2404:51;;2396:59;;2370:85;2479:5;2469:15;;:20;2465:85;;2547:3;2500:42;:5;2508:34;2500:42;:::i;:::-;2499:51;;2491:59;;2465:85;2574:5;2564:15;;:20;2560:85;;2642:3;2595:42;:5;2603:34;2595:42;:::i;:::-;2594:51;;2586:59;;2560:85;2669:5;2659:15;;:20;2655:85;;2737:3;2690:42;:5;2698:34;2690:42;:::i;:::-;2689:51;;2681:59;;2655:85;2764:6;2754:16;;:21;2750:86;;2833:3;2786:42;:5;2794:34;2786:42;:::i;:::-;2785:51;;2777:59;;2750:86;2860:6;2850:16;;:21;2846:86;;2929:3;2882:42;:5;2890:34;2882:42;:::i;:::-;2881:51;;2873:59;;2846:86;2956:6;2946:16;;:21;2942:86;;3025:3;2978:42;:5;2986:34;2978:42;:::i;:::-;2977:51;;2969:59;;2942:86;3052:6;3042:16;;:21;3038:86;;3121:3;3074:42;:5;3082:34;3074:42;:::i;:::-;3073:51;;3065:59;;3038:86;3148:7;3138:17;;:22;3134:86;;3217:3;3171:41;:5;3179:33;3171:41;:::i;:::-;3170:50;;3162:58;;3134:86;3244:7;3234:17;;:22;3230:85;;3312:3;3267:40;:5;3275:32;3267:40;:::i;:::-;3266:49;;3258:57;;3230:85;3339:7;3329:17;;:22;3325:83;;3405:3;3362:38;:5;3370:30;3362:38;:::i;:::-;3361:47;;3353:55;;3325:83;3432:7;3422:17;;:22;3418:78;;3493:3;3455:33;:5;3463:25;3455:33;:::i;:::-;3454:42;;3446:50;;3418:78;3518:1;3511:4;:8;;;3507:47;;;3529:25;3549:5;-1:-1:-1;;3529:25:16;:::i;:::-;3521:33;;3507:47;3904:17;3913:7;3904:5;:17;:::i;:::-;:22;:30;;3933:1;3904:30;;;3929:1;3904:30;3887:48;;;;3897:2;3888:11;;;3887:48;:::i;:::-;3864:72;1355:2588;-1:-1:-1;;;;1355:2588:16:o;742:3801:14:-;854:14;;;-1:-1:-1;;1361:1:14;1358;1351:20;1400:1;1397;1393:9;1384:18;;1451:5;1447:2;1444:13;1436:5;1432:2;1428:14;1424:34;1415:43;;;1540:5;1549:1;1540:10;1536:179;;1588:1;1574:11;:15;1566:24;;;;;;-1:-1:-1;1641:23:14;;;;-1:-1:-1;1691:13:14;;1536:179;1842:5;1828:11;:19;1820:28;;;;;;2125:17;2201:11;2198:1;2195;2188:25;2373:21;;;;2330:20;;2319:32;;;;2175:38;-1:-1:-1;2553:12:14;2608:11;2569:31;2608:11;-1:-1:-1;;2569:31:14;:::i;:::-;:35;;2603:1;2569:35;:::i;:::-;2568:51;2713:22;;;;;2841:16;;;;;3089:1;3085:12;;;3081:23;3106:1;3077:31;;-1:-1:-1;3136:12:14;3077:31;3136:5;:12;:::i;:::-;3127:21;;;;3482:11;3497:15;3501:11;3497:1;:15;:::i;:::-;3516:1;3496:21;;-1:-1:-1;3743:17:14;3496:21;3743:11;:17;:::i;:::-;3739:21;;:1;:21;:::i;:::-;3732:28;;;;:::i;:::-;;-1:-1:-1;3801:17:14;3732:28;3801:11;:17;:::i;:::-;3797:21;;:1;:21;:::i;:::-;3790:28;;;;:::i;:::-;;-1:-1:-1;3860:17:14;3790:28;3860:11;:17;:::i;:::-;3856:21;;:1;:21;:::i;:::-;3849:28;;;;:::i;:::-;;-1:-1:-1;3919:17:14;3849:28;3919:11;:17;:::i;:::-;3915:21;;:1;:21;:::i;:::-;3908:28;;;;:::i;:::-;;-1:-1:-1;3978:17:14;3908:28;3978:11;:17;:::i;:::-;3974:21;;:1;:21;:::i;:::-;3967:28;;;;:::i;:::-;;-1:-1:-1;4038:17:14;3967:28;4038:11;:17;:::i;:::-;4034:21;;:1;:21;:::i;:::-;4027:28;;;;:::i;:::-;;-1:-1:-1;4502:11:14;4027:28;4502:5;:11;:::i;:::-;4493:20;;4523:13;;;;;742:3801;;;;;;:::o;14:180:17:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:17;;14:180;-1:-1:-1;14:180:17:o;381:154::-;-1:-1:-1;;;;;460:5:17;456:54;449:5;446:65;436:93;;525:1;522;515:12;436:93;381:154;:::o;540:247::-;599:6;652:2;640:9;631:7;627:23;623:32;620:52;;;668:1;665;658:12;620:52;707:9;694:23;726:31;751:5;726:31;:::i;1023:315::-;1091:6;1099;1152:2;1140:9;1131:7;1127:23;1123:32;1120:52;;;1168:1;1165;1158:12;1120:52;1207:9;1194:23;1226:31;1251:5;1226:31;:::i;:::-;1276:5;1328:2;1313:18;;;;1300:32;;-1:-1:-1;;;1023:315:17:o;1977:251::-;2047:6;2100:2;2088:9;2079:7;2075:23;2071:32;2068:52;;;2116:1;2113;2106:12;2068:52;2148:9;2142:16;2167:31;2192:5;2167:31;:::i;2233:184::-;2285:77;2282:1;2275:88;2382:4;2379:1;2372:15;2406:4;2403:1;2396:15;2422:125;2462:4;2490:1;2487;2484:8;2481:34;;;2495:18;;:::i;:::-;-1:-1:-1;2532:9:17;;2422:125::o;2552:426::-;2681:3;2719:6;2713:13;2744:1;2754:129;2768:6;2765:1;2762:13;2754:129;;;2866:4;2850:14;;;2846:25;;2840:32;2827:11;;;2820:53;2783:12;2754:129;;;2901:6;2898:1;2895:13;2892:48;;;2936:1;2927:6;2922:3;2918:16;2911:27;2892:48;-1:-1:-1;2956:16:17;;;;;2552:426;-1:-1:-1;;2552:426:17:o;2983:184::-;3035:77;3032:1;3025:88;3132:4;3129:1;3122:15;3156:4;3153:1;3146:15;3172:184;3242:6;3295:2;3283:9;3274:7;3270:23;3266:32;3263:52;;;3311:1;3308;3301:12;3263:52;-1:-1:-1;3334:16:17;;3172:184;-1:-1:-1;3172:184:17:o;3663:277::-;3730:6;3783:2;3771:9;3762:7;3758:23;3754:32;3751:52;;;3799:1;3796;3789:12;3751:52;3831:9;3825:16;3884:5;3877:13;3870:21;3863:5;3860:32;3850:60;;3906:1;3903;3896:12;3945:195;3984:3;-1:-1:-1;;4008:5:17;4005:77;4002:103;;4085:18;;:::i;:::-;-1:-1:-1;4132:1:17;4121:13;;3945:195::o;4145:238::-;4182:3;4226:4;4219:5;4215:16;4250:7;4240:41;;4261:18;;:::i;:::-;-1:-1:-1;;4297:80:17;;4145:238;-1:-1:-1;;4145:238:17:o;4388:184::-;4440:77;4437:1;4430:88;4537:4;4534:1;4527:15;4561:4;4558:1;4551:15;4577:273;4645:6;4698:2;4686:9;4677:7;4673:23;4669:32;4666:52;;;4714:1;4711;4704:12;4666:52;4746:9;4740:16;4796:4;4789:5;4785:16;4778:5;4775:27;4765:55;;4816:1;4813;4806:12;4855:482;4944:1;4987:5;4944:1;5001:330;5022:7;5012:8;5009:21;5001:330;;;5141:4;-1:-1:-1;;5069:77:17;5063:4;5060:87;5057:113;;;5150:18;;:::i;:::-;5200:7;5190:8;5186:22;5183:55;;;5220:16;;;;5183:55;5299:22;;;;5259:15;;;;5001:330;;;5005:3;4855:482;;;;;:::o;5342:866::-;5391:5;5421:8;5411:80;;-1:-1:-1;5462:1:17;5476:5;;5411:80;5510:4;5500:76;;-1:-1:-1;5547:1:17;5561:5;;5500:76;5592:4;5610:1;5605:59;;;;5678:1;5673:130;;;;5585:218;;5605:59;5635:1;5626:10;;5649:5;;;5673:130;5710:3;5700:8;5697:17;5694:43;;;5717:18;;:::i;:::-;-1:-1:-1;;5773:1:17;5759:16;;5788:5;;5585:218;;5887:2;5877:8;5874:16;5868:3;5862:4;5859:13;5855:36;5849:2;5839:8;5836:16;5831:2;5825:4;5822:12;5818:35;5815:77;5812:159;;;-1:-1:-1;5924:19:17;;;5956:5;;5812:159;6003:34;6028:8;6022:4;6003:34;:::i;:::-;6133:6;-1:-1:-1;;6061:79:17;6052:7;6049:92;6046:118;;;6144:18;;:::i;:::-;6182:20;;5342:866;-1:-1:-1;;;5342:866:17:o;6213:131::-;6273:5;6302:36;6329:8;6323:4;6302:36;:::i;6349:184::-;6401:77;6398:1;6391:88;6498:4;6495:1;6488:15;6522:4;6519:1;6512:15;6538:120;6578:1;6604;6594:35;;6609:18;;:::i;:::-;-1:-1:-1;6643:9:17;;6538:120::o;6663:175::-;6700:3;6744:4;6737:5;6733:16;6773:4;6764:7;6761:17;6758:43;;6781:18;;:::i;:::-;6830:1;6817:15;;6663:175;-1:-1:-1;;6663:175:17:o;6843:228::-;6883:7;7009:1;-1:-1:-1;;6937:74:17;6934:1;6931:81;6926:1;6919:9;6912:17;6908:105;6905:131;;;7016:18;;:::i;:::-;-1:-1:-1;7056:9:17;;6843:228::o;7076:128::-;7116:3;7147:1;7143:6;7140:1;7137:13;7134:39;;;7153:18;;:::i;:::-;-1:-1:-1;7189:9:17;;7076:128::o;7539:184::-;7591:77;7588:1;7581:88;7688:4;7685:1;7678:15;7712:4;7709:1;7702:15;7728:647;7897:2;7949:21;;;8019:13;;7922:18;;;8041:22;;;7868:4;;7897:2;8120:15;;;;8094:2;8079:18;;;7868:4;8163:186;8177:6;8174:1;8171:13;8163:186;;;8242:13;;8257:10;8238:30;8226:43;;8324:15;;;;8289:12;;;;8199:1;8192:9;8163:186;;;-1:-1:-1;8366:3:17;;7728:647;-1:-1:-1;;;;;;7728:647:17:o;8380:334::-;8451:2;8445:9;8507:2;8497:13;;-1:-1:-1;;8493:86:17;8481:99;;8610:18;8595:34;;8631:22;;;8592:62;8589:88;;;8657:18;;:::i;:::-;8693:2;8686:22;8380:334;;-1:-1:-1;8380:334:17:o;8719:181::-;8777:4;8810:18;8802:6;8799:30;8796:56;;;8832:18;;:::i;:::-;-1:-1:-1;8877:1:17;8873:14;8889:4;8869:25;;8719:181::o;8905:732::-;8970:5;9023:3;9016:4;9008:6;9004:17;9000:27;8990:55;;9041:1;9038;9031:12;8990:55;9070:6;9064:13;9096:4;9120:58;9136:41;9174:2;9136:41;:::i;:::-;9120:58;:::i;:::-;9212:15;;;9298:1;9294:10;;;;9282:23;;9278:32;;;9243:12;;;;9322:15;;;9319:35;;;9350:1;9347;9340:12;9319:35;9386:2;9378:6;9374:15;9398:210;9414:6;9409:3;9406:15;9398:210;;;9487:3;9481:10;9504:31;9529:5;9504:31;:::i;:::-;9548:18;;9586:12;;;;9431;;9398:210;;;-1:-1:-1;9626:5:17;8905:732;-1:-1:-1;;;;;;8905:732:17:o;9642:1303::-;9769:6;9777;9830:2;9818:9;9809:7;9805:23;9801:32;9798:52;;;9846:1;9843;9836:12;9798:52;9879:9;9873:16;9908:18;9949:2;9941:6;9938:14;9935:34;;;9965:1;9962;9955:12;9935:34;10003:6;9992:9;9988:22;9978:32;;10048:7;10041:4;10037:2;10033:13;10029:27;10019:55;;10070:1;10067;10060:12;10019:55;10099:2;10093:9;10121:4;10145:58;10161:41;10199:2;10161:41;:::i;10145:58::-;10237:15;;;10319:1;10315:10;;;;10307:19;;10303:28;;;10268:12;;;;10343:19;;;10340:39;;;10375:1;10372;10365:12;10340:39;10399:11;;;;10419:308;10435:6;10430:3;10427:15;10419:308;;;10508:3;10502:10;10559:5;10556:1;10545:20;10538:5;10535:31;10525:129;;10608:1;10637:2;10633;10626:14;10525:129;10667:18;;10452:12;;;;10705;;;;10419:308;;;10782:18;;;10776:25;10746:5;;-1:-1:-1;10776:25:17;;-1:-1:-1;;;10813:16:17;;;10810:36;;;10842:1;10839;10832:12;10810:36;;10865:74;10931:7;10920:8;10909:9;10905:24;10865:74;:::i;:::-;10855:84;;;9642:1303;;;;;:::o;10950:404::-;10988:4;11032:1;11029;11018:16;11068:1;11065;11054:16;11098:1;11093:3;11089:11;11209:3;11141:66;11137:76;11132:3;11128:86;11123:2;11116:10;11112:103;11109:129;;;11218:18;;:::i;:::-;11289:3;11271:16;11267:26;11262:3;11258:36;11254:2;11250:45;11247:71;;;11298:18;;:::i;:::-;-1:-1:-1;11335:13:17;;;10950:404;-1:-1:-1;;;10950:404:17:o;11359:254::-;11399:4;-1:-1:-1;;;;;11520:10:17;;;;11490;;11542:12;;;11539:38;;;11557:18;;:::i;:::-;11594:13;;11359:254;-1:-1:-1;;;11359:254:17:o;11618:389::-;11656:1;11697;11694;11683:16;11733:1;11730;11719:16;11754:3;11744:37;;11761:18;;:::i;:::-;-1:-1:-1;;11877:3:17;11874:75;11805:66;11800:3;11797:75;11793:157;11790:183;;;11953:18;;:::i;:::-;11987:14;;;11618:389;-1:-1:-1;;;11618:389:17:o;12012:166::-;12042:1;12083;12080;12069:16;12104:3;12094:37;;12111:18;;:::i;:::-;12168:3;12164:1;12161;12150:16;12145:27;12140:32;;;12012:166;;;;:::o;12183:306::-;12220:3;12267:5;12264:1;12253:20;12297:66;12288:7;12285:79;12282:105;;12367:18;;:::i;12494:303::-;12534:7;12566:50;12643:2;12640:1;12636:10;12673:2;12670:1;12666:10;12729:3;12725:2;12721:12;12716:3;12713:21;12706:3;12699:11;12692:19;12688:47;12685:73;;;12738:18;;:::i;:::-;12778:13;;12494:303;-1:-1:-1;;;;12494:303:17:o;12802:232::-;12842:1;12868:50;12945:2;12942:1;12938:10;12967:3;12957:37;;12974:18;;:::i;:::-;13012:10;;13008:20;;;;;12802:232;-1:-1:-1;;12802:232:17:o;13039:191::-;13074:3;13105:66;13098:5;13095:77;13092:103;;13175:18;;:::i;:::-;-1:-1:-1;13215:1:17;13211:13;;13039:191::o;13235:238::-;13269:3;13316:5;13313:1;13302:20;13346:66;13337:7;13334:79;13331:105;;13416:18;;:::i;:::-;13456:1;13452:15;;13235:238;-1:-1:-1;;13235:238:17:o;13807:112::-;13839:1;13865;13855:35;;13870:18;;:::i;:::-;-1:-1:-1;13904:9:17;;13807:112::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1883000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "169",
								"NAV()": "2329",
								"addCoin(address,uint256)": "infinite",
								"coinArray(uint256)": "4681",
								"coinOracleAddr(address)": "2598",
								"coins(address)": "2591",
								"delCoin(address)": "infinite",
								"deleteContract(address)": "infinite",
								"initContract(address)": "infinite",
								"initDone()": "2401",
								"oracleNAV()": "infinite",
								"proxy()": "2414",
								"quoteIn(address)": "2574",
								"transferFunds(address,uint256)": "infinite",
								"updateNAV(uint256)": "infinite",
								"updateProxy(address)": "26757"
							},
							"internal": {
								"calculateNAV()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 148,
									"end": 5019,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 608,
									"end": 664,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 608,
									"end": 664,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 608,
									"end": 664,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 608,
									"end": 664,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 608,
									"end": 664,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 608,
									"end": 664,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 608,
									"end": 664,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 608,
									"end": 664,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 608,
									"end": 664,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 608,
									"end": 664,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 647,
									"end": 657,
									"name": "CALLER",
									"source": 13
								},
								{
									"begin": 636,
									"end": 657,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 636,
									"end": 657,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "ASSIGNIMMUTABLE",
									"source": 13,
									"value": "828"
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 148,
									"end": 5019,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ecec9a795266c982911a3ab5a99e3b530f7adc6c687bfca8d89c788007d5650a64736f6c634300080e0033",
									".code": [
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "990DC9DB"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "D825BFFF"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "D825BFFF"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "DEF1A5E8"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "EC556889"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "FED0A20E"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5002,
											"end": 5010,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5010,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5002,
											"end": 5010,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "990DC9DB"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "9E955149"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "B4014879"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "CF9D4AFA"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5002,
											"end": 5010,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5010,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5002,
											"end": 5010,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "4051B9AA"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "4051B9AA"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "52FD856B"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "63B48EE6"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "7D0F7A88"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5002,
											"end": 5010,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5010,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5002,
											"end": 5010,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "CB1982B"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "FBBFA3E"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "2637A477"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5002,
											"end": 5010,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5010,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5002,
											"end": 5010,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 4943,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4935,
											"end": 4943,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 4943,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 148,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5002,
											"end": 5010,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5010,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5002,
											"end": 5010,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 980,
											"end": 1206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 980,
											"end": 1206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 405,
											"end": 455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 405,
											"end": 455,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 455,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 956,
											"end": 1011,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 956,
											"end": 1011,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 956,
											"end": 1011,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 938,
											"end": 1012,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 938,
											"end": 1012,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 926,
											"end": 928,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 911,
											"end": 929,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 405,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 792,
											"end": 1018,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 4327,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 4327,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 3714,
											"end": 4173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 3714,
											"end": 4173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 215,
											"end": 230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 215,
											"end": 230,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 230,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 215,
											"end": 230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 215,
											"end": 230,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 230,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 215,
											"end": 230,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 308,
											"end": 334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 308,
											"end": 334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 337,
											"end": 375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 337,
											"end": 375,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 337,
											"end": 375,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 1216,
											"end": 1988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 1216,
											"end": 1988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1508,
											"end": 1522,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1508,
											"end": 1522,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1501,
											"end": 1523,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1483,
											"end": 1524,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1483,
											"end": 1524,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1471,
											"end": 1473,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1456,
											"end": 1474,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 1343,
											"end": 1530,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 4179,
											"end": 4317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 4179,
											"end": 4317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 3438,
											"end": 3704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 3438,
											"end": 3704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 843,
											"end": 974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 843,
											"end": 974,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 974,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 843,
											"end": 974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 843,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 843,
											"end": 974,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 843,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 843,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 843,
											"end": 974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 843,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 484,
											"end": 527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 527,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 484,
											"end": 527,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 484,
											"end": 527,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 1998,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1709,
											"end": 1734,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1709,
											"end": 1734,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1709,
											"end": 1734,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1765,
											"end": 1767,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1750,
											"end": 1768,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1750,
											"end": 1768,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1743,
											"end": 1777,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1743,
											"end": 1777,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1743,
											"end": 1777,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1743,
											"end": 1777,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1682,
											"end": 1700,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 1535,
											"end": 1783,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 284,
											"end": 304,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 284,
											"end": 304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 284,
											"end": 304,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 284,
											"end": 304,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 284,
											"end": 304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 284,
											"end": 304,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 284,
											"end": 304,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 284,
											"end": 304,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "PUSH",
											"source": 13,
											"value": "10000"
										},
										{
											"begin": 284,
											"end": 304,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 284,
											"end": 304,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 284,
											"end": 304,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1960,
											"end": 1964,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 1948,
											"end": 1965,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1948,
											"end": 1965,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1948,
											"end": 1965,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1930,
											"end": 1966,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1930,
											"end": 1966,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1918,
											"end": 1920,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1903,
											"end": 1921,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 1788,
											"end": 1972,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1061,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1099,
											"end": 1129,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1129,
											"name": "PUSH",
											"source": 13,
											"value": "3F0A0797"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 1099,
											"end": 1131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1085,
											"end": 1131,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1085,
											"end": 1095,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1085,
											"end": 1131,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1085,
											"end": 1131,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1151,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 1151,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 1151,
											"end": 1165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1151,
											"end": 1165,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 1151,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1151,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 1151,
											"end": 1177,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1151,
											"end": 1177,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1151,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 1151,
											"end": 1177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1151,
											"end": 1177,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 1151,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1190,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1199,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1199,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1199,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1142,
											"end": 1177,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1206,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 980,
											"end": 1206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 4327,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 717,
											"end": 727,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 731,
											"end": 739,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "828"
										},
										{
											"begin": 717,
											"end": 739,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 717,
											"end": 739,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 709,
											"end": 740,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 740,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 709,
											"end": 740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4441,
											"end": 4446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4441,
											"end": 4446,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4456,
											"end": 4497,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"name": "PUSH",
											"source": 13,
											"value": "A6FA0B7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4456,
											"end": 4497,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 956,
											"end": 1011,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 956,
											"end": 1011,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 956,
											"end": 1011,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4456,
											"end": 4497,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 938,
											"end": 1012,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4441,
											"end": 4446,
											"name": "PUSH",
											"source": 13,
											"value": "10000"
										},
										{
											"begin": 4441,
											"end": 4446,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4441,
											"end": 4446,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4441,
											"end": 4446,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4441,
											"end": 4446,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4441,
											"end": 4446,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4441,
											"end": 4446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4441,
											"end": 4446,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4441,
											"end": 4446,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4441,
											"end": 4446,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "A6FA0B7B"
										},
										{
											"begin": 4456,
											"end": 4488,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 911,
											"end": 929,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 911,
											"end": 929,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4497,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4497,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 4456,
											"end": 4497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4528,
											"end": 4587,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 956,
											"end": 1011,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 956,
											"end": 1011,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 956,
											"end": 1011,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4528,
											"end": 4587,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 938,
											"end": 1012,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4507,
											"end": 4527,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4527,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4527,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 911,
											"end": 929,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 911,
											"end": 929,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 911,
											"end": 929,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4528,
											"end": 4587,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4528,
											"end": 4587,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4528,
											"end": 4587,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "CF9D4AFA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4528,
											"end": 4587,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 4507,
											"end": 4588,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4587,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 4507,
											"end": 4588,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "DELEGATECALL",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 4507,
											"end": 4588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4607,
											"end": 4616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4607,
											"end": 4623,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4623,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4598,
											"end": 4604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4633,
											"end": 4837,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 4633,
											"end": 4837,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4653,
											"end": 4654,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4649,
											"end": 4650,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4649,
											"end": 4654,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4837,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4837,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 4633,
											"end": 4837,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4683,
											"end": 4706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4719,
											"end": 4720,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 4709,
											"end": 4721,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4721,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4721,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4777,
											"end": 4825,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"name": "PUSH",
											"source": 13,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4777,
											"end": 4825,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4823,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4777,
											"end": 4825,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 938,
											"end": 1012,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4709,
											"end": 4721,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4709,
											"end": 4721,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "A9059CBB"
										},
										{
											"begin": 4735,
											"end": 4767,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4768,
											"end": 4775,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4768,
											"end": 4775,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4721,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 4777,
											"end": 4810,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 911,
											"end": 929,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 911,
											"end": 929,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4825,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 4777,
											"end": 4825,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 4777,
											"end": 4825,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4735,
											"end": 4826,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4735,
											"end": 4826,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3553,
											"end": 3608,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3553,
											"end": 3608,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3553,
											"end": 3608,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4735,
											"end": 4826,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3535,
											"end": 3609,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3618,
											"end": 3652,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4826,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 4735,
											"end": 4826,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4826,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4669,
											"end": 4837,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4656,
											"end": 4659,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4656,
											"end": 4659,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4656,
											"end": 4659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 4656,
											"end": 4659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4656,
											"end": 4659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 4656,
											"end": 4659,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4656,
											"end": 4659,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 4656,
											"end": 4659,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4656,
											"end": 4659,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4656,
											"end": 4659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4656,
											"end": 4659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4837,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 4633,
											"end": 4837,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4837,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 4633,
											"end": 4837,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4837,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4867,
											"end": 4875,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "828"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4846,
											"end": 4877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4846,
											"end": 4877,
											"modifierDepth": 1,
											"name": "SELFDESTRUCT",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3780,
											"end": 3790,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3794,
											"end": 3802,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "828"
										},
										{
											"begin": 3780,
											"end": 3802,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3780,
											"end": 3802,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3780,
											"end": 3802,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3780,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 3780,
											"end": 3852,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3780,
											"end": 3852,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3827,
											"end": 3832,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3827,
											"end": 3832,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3827,
											"end": 3832,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3827,
											"end": 3832,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3827,
											"end": 3832,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3827,
											"end": 3832,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3827,
											"end": 3832,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3827,
											"end": 3832,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3827,
											"end": 3832,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3827,
											"end": 3832,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3820,
											"end": 3850,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3850,
											"name": "PUSH",
											"source": 13,
											"value": "3F0A0797"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 3820,
											"end": 3852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3806,
											"end": 3852,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3806,
											"end": 3816,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3806,
											"end": 3852,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3806,
											"end": 3852,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3780,
											"end": 3852,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 3780,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3772,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 3772,
											"end": 3853,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3772,
											"end": 3853,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3772,
											"end": 3853,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3772,
											"end": 3853,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3772,
											"end": 3853,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 3772,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3866,
											"end": 3871,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3885,
											"end": 3886,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3866,
											"end": 3886,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3863,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 3863,
											"end": 3897,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3895,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3895,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 3888,
											"end": 3897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3863,
											"end": 3897,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 3863,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3912,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3922,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3945,
											"end": 3954,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3945,
											"end": 3961,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3945,
											"end": 3961,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3971,
											"end": 4167,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 3971,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3991,
											"end": 3992,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3987,
											"end": 3988,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3987,
											"end": 3992,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3971,
											"end": 4167,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3971,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 3971,
											"end": 4167,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4040,
											"end": 4048,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4024,
											"end": 4048,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4033,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4034,
											"end": 4035,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 4024,
											"end": 4036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4048,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4021,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 4021,
											"end": 4157,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4104,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4105,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 4107,
											"end": 4108,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4105,
											"end": 4106,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 4105,
											"end": 4108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4108,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 4105,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 4095,
											"end": 4109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4089,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4109,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4090,
											"end": 4091,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4090,
											"end": 4091,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 4080,
											"end": 4092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "tag",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4136,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 4127,
											"end": 4142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4021,
											"end": 4157,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 4021,
											"end": 4157,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 3994,
											"end": 3997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3971,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 3971,
											"end": 4167,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3971,
											"end": 4167,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 3971,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3971,
											"end": 4167,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3762,
											"end": 4173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 4173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "tag",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 308,
											"end": 334,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 308,
											"end": 334,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 308,
											"end": 334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1308,
											"end": 1312,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1345,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1353,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1353,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1392,
											"end": 1401,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1385,
											"end": 1419,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1419,
											"name": "PUSH",
											"source": 13,
											"value": "3F0A0797"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 1385,
											"end": 1421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 1385,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1371,
											"end": 1421,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1381,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1371,
											"end": 1421,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1421,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1477,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 1371,
											"end": 1477,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1446,
											"end": 1455,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1439,
											"end": 1475,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1475,
											"name": "PUSH",
											"source": 13,
											"value": "DA8909E5"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 1439,
											"end": 1477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1439,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1425,
											"end": 1477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1425,
											"end": 1435,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1425,
											"end": 1477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1425,
											"end": 1477,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1477,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 1371,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1363,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 1363,
											"end": 1478,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1363,
											"end": 1478,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1363,
											"end": 1478,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1363,
											"end": 1478,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1363,
											"end": 1478,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 1363,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1497,
											"end": 1513,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1961,
											"name": "tag",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 1532,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1548,
											"end": 1549,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 1961,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 1532,
											"end": 1961,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1582,
											"end": 1598,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1610,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1611,
											"end": 1612,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 1601,
											"end": 1613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1635,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1649,
											"end": 1650,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1630,
											"end": 1650,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1627,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 1627,
											"end": 1951,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1682,
											"end": 1696,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1714,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1724,
											"name": "PUSH",
											"source": 13,
											"value": "313CE567"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 1699,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1682,
											"end": 1726,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1682,
											"end": 1726,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1758,
											"end": 1760,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 1747,
											"end": 1755,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1747,
											"end": 1760,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1747,
											"end": 1760,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1747,
											"end": 1760,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1744,
											"end": 1936,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1744,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 1744,
											"end": 1936,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1762,
											"end": 1787,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1787,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1787,
											"name": "PUSH",
											"source": 13,
											"value": "A9059CBB"
										},
										{
											"begin": 1788,
											"end": 1790,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 1836,
											"end": 1838,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 1821,
											"end": 1838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1816,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 1816,
											"end": 1839,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1816,
											"end": 1818,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 1816,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 1816,
											"end": 1839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1816,
											"end": 1839,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 1816,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1815,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1808,
											"end": 1815,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1815,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1808,
											"end": 1815,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1815,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1815,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1808,
											"end": 1815,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1792,
											"end": 1807,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 1792,
											"end": 1815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1792,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 1792,
											"end": 1839,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1792,
											"end": 1839,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1792,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 1792,
											"end": 1839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1792,
											"end": 1839,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 1792,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3553,
											"end": 3608,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3553,
											"end": 3608,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3553,
											"end": 3608,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3535,
											"end": 3609,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3618,
											"end": 3652,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 1762,
											"end": 1840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "tag",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1744,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 1744,
											"end": 1936,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1744,
											"end": 1936,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 1744,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1866,
											"end": 1874,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1866,
											"end": 1880,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1866,
											"end": 1880,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1878,
											"end": 1880,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 1866,
											"end": 1880,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1863,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 1863,
											"end": 1936,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1882,
											"end": 1907,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1907,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1907,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1907,
											"name": "PUSH",
											"source": 13,
											"value": "A9059CBB"
										},
										{
											"begin": 1882,
											"end": 1907,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1908,
											"end": 1910,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 1908,
											"end": 1910,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1912,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 1912,
											"end": 1935,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1912,
											"end": 1927,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 1912,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 1912,
											"end": 1935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1912,
											"end": 1935,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 1912,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3553,
											"end": 3608,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3553,
											"end": 3608,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3553,
											"end": 3608,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3535,
											"end": 3609,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3618,
											"end": 3652,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 1882,
											"end": 1936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1863,
											"end": 1936,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 1863,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1664,
											"end": 1951,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1627,
											"end": 1951,
											"name": "tag",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 1627,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1555,
											"end": 1558,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 1555,
											"end": 1558,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 1555,
											"end": 1558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1558,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 1555,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1558,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1558,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1558,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 1532,
											"end": 1961,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 1961,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 1532,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 1961,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 1981,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1970,
											"end": 1981,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1970,
											"end": 1981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1970,
											"end": 1981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1970,
											"end": 1981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 4179,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "PUSH",
											"source": 13,
											"value": "10000"
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4275,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4284,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4257,
											"end": 4285,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 4257,
											"end": 4285,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4257,
											"end": 4285,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4257,
											"end": 4285,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4257,
											"end": 4285,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4257,
											"end": 4285,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 4257,
											"end": 4285,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4300,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "PUSH",
											"source": 13,
											"value": "10000"
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF"
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 3438,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 717,
											"end": 727,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 731,
											"end": 739,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "828"
										},
										{
											"begin": 717,
											"end": 739,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 717,
											"end": 739,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 709,
											"end": 740,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 740,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "tag",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 709,
											"end": 740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3526,
											"end": 3532,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3526,
											"end": 3537,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3523,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 3523,
											"end": 3664,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3539,
											"end": 3554,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3554,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3554,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3554,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3554,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 3539,
											"end": 3554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3539,
											"end": 3554,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3554,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3539,
											"end": 3554,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3554,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3557,
											"end": 3558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3539,
											"end": 3558,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3558,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3523,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 3523,
											"end": 3664,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3523,
											"end": 3664,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 3523,
											"end": 3664,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3582,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3586,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3576,
											"end": 3587,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3573,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 3573,
											"end": 3664,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3611,
											"end": 3626,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3626,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3611,
											"end": 3626,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3626,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3626,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 3611,
											"end": 3626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3611,
											"end": 3626,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3626,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3611,
											"end": 3626,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3626,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3629,
											"end": 3630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3611,
											"end": 3630,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3630,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3644,
											"end": 3653,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3644,
											"end": 3653,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3651,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 3644,
											"end": 3653,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 3644,
											"end": 3653,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3653,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3573,
											"end": 3664,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 3573,
											"end": 3664,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3673,
											"end": 3682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "PUSH",
											"source": 13,
											"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 843,
											"end": 974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 717,
											"end": 727,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 731,
											"end": 739,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "828"
										},
										{
											"begin": 717,
											"end": 739,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 717,
											"end": 739,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 709,
											"end": 740,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 740,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 709,
											"end": 740,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 709,
											"end": 740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 805,
											"end": 813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 805,
											"end": 813,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 805,
											"end": 813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 805,
											"end": 813,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 805,
											"end": 818,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 797,
											"end": 819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 797,
											"end": 819,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 797,
											"end": 819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 819,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 797,
											"end": 819,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 797,
											"end": 819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 797,
											"end": 819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 928,
											"end": 933,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 928,
											"end": 945,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 928,
											"end": 945,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FF00"
										},
										{
											"begin": 955,
											"end": 967,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 928,
											"end": 945,
											"name": "PUSH",
											"source": 13,
											"value": "10000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 928,
											"end": 945,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 928,
											"end": 945,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 928,
											"end": 945,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 928,
											"end": 945,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 928,
											"end": 945,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 928,
											"end": 945,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 928,
											"end": 945,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 928,
											"end": 945,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 955,
											"end": 967,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"modifierDepth": 2,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 955,
											"end": 967,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 843,
											"end": 974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2052,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2330,
											"end": 2362,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2362,
											"name": "PUSH",
											"source": 13,
											"value": "DA8909E5"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 2330,
											"end": 2364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 2330,
											"end": 2364,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2316,
											"end": 2377,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2377,
											"name": "PUSH",
											"source": 13,
											"value": "D0B06F5D"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 2316,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2297,
											"end": 2379,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2297,
											"end": 2379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2389,
											"end": 2398,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2415,
											"end": 2447,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2447,
											"name": "PUSH",
											"source": 13,
											"value": "DA8909E5"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 2415,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 2415,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2401,
											"end": 2466,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2466,
											"name": "PUSH",
											"source": 13,
											"value": "7F8483A4"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 2401,
											"end": 2468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 2401,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2389,
											"end": 2468,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2389,
											"end": 2468,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2503,
											"end": 2507,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2486,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 2486,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 2486,
											"end": 2500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2486,
											"end": 2500,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 2486,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2486,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 2486,
											"end": 2507,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2486,
											"end": 2507,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2486,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 2486,
											"end": 2507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2486,
											"end": 2507,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 2486,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2478,
											"end": 2521,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2509,
											"end": 2520,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2509,
											"end": 2520,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2528,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2538,
											"end": 3428,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 2538,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2751,
											"end": 2760,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2751,
											"end": 2767,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2596,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2596,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2596,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2777,
											"end": 3422,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 2777,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2797,
											"end": 2798,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2793,
											"end": 2794,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2793,
											"end": 2798,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2777,
											"end": 3422,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2777,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 2777,
											"end": 3422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2827,
											"end": 2839,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2851,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2852,
											"end": 2853,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 2842,
											"end": 2854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH",
											"source": 13,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2914,
											"end": 2918,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 938,
											"end": 1012,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2854,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2905,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 2883,
											"end": 2905,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 911,
											"end": 929,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 911,
											"end": 929,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 2883,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 2883,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2934,
											"end": 2945,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2953,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2959,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2999,
											"end": 3000,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2989,
											"end": 3000,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2989,
											"end": 3000,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2989,
											"end": 3000,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 2986,
											"end": 3411,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3032,
											"end": 3042,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3157,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3032,
											"end": 3042,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3032,
											"end": 3042,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3032,
											"end": 3042,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3032,
											"end": 3042,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3032,
											"end": 3042,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3121,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 3121,
											"end": 3167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3277,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3091,
											"end": 3167,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3091,
											"end": 3167,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3197,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 3197,
											"end": 3284,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3091,
											"end": 3167,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3091,
											"end": 3167,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3254,
											"end": 3261,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3254,
											"end": 3261,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3264,
											"end": 3268,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 3264,
											"end": 3268,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 3197,
											"end": 3284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3284,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 3197,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3189,
											"end": 3284,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3189,
											"end": 3284,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3330,
											"end": 3337,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 3330,
											"end": 3345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 3320,
											"end": 3345,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3345,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 3320,
											"end": 3345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3345,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 3320,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3345,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3345,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3014,
											"end": 3360,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 2986,
											"end": 3411,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3411,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 2986,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3381,
											"end": 3387,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3391,
											"end": 3392,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3381,
											"end": 3392,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3378,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 3378,
											"end": 3411,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 3404,
											"end": 3411,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 3394,
											"end": 3411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3378,
											"end": 3411,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 3378,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2813,
											"end": 3422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2813,
											"end": 3422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2813,
											"end": 3422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 2800,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2777,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 2777,
											"end": 3422,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2777,
											"end": 3422,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 2777,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2777,
											"end": 3422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2602,
											"end": 3428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2538,
											"end": 3428,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2538,
											"end": 3428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 808,
											"end": 2049,
											"name": "tag",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 808,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 905,
											"end": 929,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 960,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 984,
											"end": 994,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 984,
											"end": 999,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 984,
											"end": 999,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 998,
											"end": 999,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 999,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "PUSH",
											"source": 15,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7411,
											"end": 7413,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7393,
											"end": 7414,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7450,
											"end": 7451,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 7430,
											"end": 7448,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7430,
											"end": 7448,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7430,
											"end": 7448,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7423,
											"end": 7452,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7488,
											"end": 7492,
											"name": "PUSH",
											"source": 17,
											"value": "4250000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7468,
											"end": 7486,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 7468,
											"end": 7486,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7468,
											"end": 7486,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7461,
											"end": 7493,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7510,
											"end": 7528,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 7510,
											"end": 7528,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "tag",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "tag",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 976,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1060,
											"end": 1061,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1017,
											"end": 1044,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 1044,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1017,
											"end": 1062,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1017,
											"end": 1062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1089,
											"end": 1099,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1083,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1084,
											"end": 1085,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 1072,
											"end": 1086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "tag",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1086,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1099,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1099,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1072,
											"end": 1099,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1099,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1099,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1099,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1072,
											"end": 1099,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1099,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1099,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1099,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1099,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1120,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1121,
											"end": 1122,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 1109,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "tag",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1123,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1127,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1127,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1127,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1127,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1127,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1127,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1127,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1127,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1127,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1127,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1127,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1169,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1222,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1253,
											"end": 1257,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1238,
											"end": 1266,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1266,
											"name": "PUSH",
											"source": 15,
											"value": "883BDBFD"
										},
										{
											"begin": 1267,
											"end": 1278,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 1238,
											"end": 1279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "tag",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "tag",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 1238,
											"end": 1279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "tag",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1138,
											"end": 1279,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1138,
											"end": 1279,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1138,
											"end": 1279,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1138,
											"end": 1279,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1290,
											"end": 1316,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1340,
											"end": 1355,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1356,
											"end": 1357,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 1340,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "tag",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1334,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1335,
											"end": 1336,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 1319,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "tag",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 1319,
											"end": 1358,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1358,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 1319,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1358,
											"name": "tag",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 1319,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1290,
											"end": 1358,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1290,
											"end": 1358,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1500,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1501,
											"end": 1502,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 1466,
											"end": 1503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "tag",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1460,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1461,
											"end": 1462,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 1426,
											"end": 1463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "tag",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 1426,
											"end": 1503,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1503,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 1426,
											"end": 1503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1503,
											"name": "tag",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 1426,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1368,
											"end": 1503,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1541,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 1541,
											"end": 1581,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 1541,
											"end": 1581,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 1541,
											"end": 1581,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1541,
											"end": 1581,
											"name": "SIGNEXTEND",
											"source": 15
										},
										{
											"begin": 1541,
											"end": 1561,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1541,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 1541,
											"end": 1581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1541,
											"end": 1581,
											"name": "tag",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 1541,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1582,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1582,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1664,
											"end": 1665,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1641,
											"end": 1661,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1641,
											"end": 1665,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 1641,
											"end": 1665,
											"name": "SIGNEXTEND",
											"source": 15
										},
										{
											"begin": 1641,
											"end": 1665,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1641,
											"end": 1716,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1641,
											"end": 1716,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1641,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 1641,
											"end": 1716,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1670,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 1670,
											"end": 1710,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 1670,
											"end": 1710,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 1670,
											"end": 1710,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1670,
											"end": 1710,
											"name": "SIGNEXTEND",
											"source": 15
										},
										{
											"begin": 1670,
											"end": 1690,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1670,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 1670,
											"end": 1710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1670,
											"end": 1710,
											"name": "tag",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 1670,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1670,
											"end": 1715,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 1670,
											"end": 1715,
											"name": "SIGNEXTEND",
											"source": 15
										},
										{
											"begin": 1670,
											"end": 1715,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1670,
											"end": 1715,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1641,
											"end": 1716,
											"name": "tag",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 1641,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1738,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 1637,
											"end": 1738,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 1738,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 1718,
											"end": 1738,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 1718,
											"end": 1738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 1738,
											"name": "tag",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 1718,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 1738,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 1738,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 1738,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1738,
											"name": "tag",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 1637,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1866,
											"end": 1888,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1891,
											"end": 1910,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1891,
											"end": 1910,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 1891,
											"end": 1910,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1891,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 1891,
											"end": 1930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1891,
											"end": 1930,
											"name": "tag",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 1891,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1866,
											"end": 1930,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1972,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 1990,
											"end": 2040,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000"
										},
										{
											"begin": 2038,
											"end": 2040,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2040,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1990,
											"end": 2040,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1990,
											"end": 2040,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 1990,
											"end": 2040,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1866,
											"end": 1930,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1972,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 1972,
											"end": 2041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1972,
											"end": 2041,
											"name": "tag",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 1972,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1940,
											"end": 2042,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 1940,
											"end": 2042,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 966,
											"end": 2049,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 966,
											"end": 2049,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 966,
											"end": 2049,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 966,
											"end": 2049,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 966,
											"end": 2049,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 966,
											"end": 2049,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 808,
											"end": 2049,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 808,
											"end": 2049,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 808,
											"end": 2049,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 808,
											"end": 2049,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 808,
											"end": 2049,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 808,
											"end": 2049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2553,
											"end": 3508,
											"name": "tag",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 2553,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2709,
											"end": 2728,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2763,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 2791,
											"end": 2795,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2763,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 2763,
											"end": 2796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2763,
											"end": 2796,
											"name": "tag",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 2763,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2740,
											"end": 2796,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2931,
											"end": 2948,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2915,
											"end": 2948,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2915,
											"end": 2948,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2915,
											"end": 2948,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2911,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 2911,
											"end": 3502,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 2981,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2984,
											"end": 3020,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2984,
											"end": 3020,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2984,
											"end": 3020,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2984,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 2984,
											"end": 3020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2984,
											"end": 3020,
											"name": "tag",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 2984,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 3020,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 3020,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3060,
											"end": 3070,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3048,
											"end": 3070,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3048,
											"end": 3057,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3048,
											"end": 3070,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3048,
											"end": 3070,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3048,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 3048,
											"end": 3204,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3156,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 3172,
											"end": 3180,
											"name": "PUSH",
											"source": 15,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3182,
											"end": 3192,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3156,
											"end": 3204,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3156,
											"end": 3204,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3194,
											"end": 3203,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3156,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 3156,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3156,
											"end": 3204,
											"name": "tag",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 3156,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3048,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 3048,
											"end": 3204,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3048,
											"end": 3204,
											"name": "tag",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 3048,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3089,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3116,
											"end": 3126,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3089,
											"end": 3137,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3089,
											"end": 3137,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3128,
											"end": 3136,
											"name": "PUSH",
											"source": 15,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3089,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 3089,
											"end": 3137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3089,
											"end": 3137,
											"name": "tag",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 3089,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3034,
											"end": 3204,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3034,
											"end": 3204,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2950,
											"end": 3215,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2911,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 2911,
											"end": 3502,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2911,
											"end": 3502,
											"name": "tag",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 2911,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3235,
											"end": 3252,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3255,
											"end": 3307,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3255,
											"end": 3307,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3255,
											"end": 3307,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3299,
											"end": 3306,
											"name": "PUSH",
											"source": 15,
											"value": "10000000000000000"
										},
										{
											"begin": 3255,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 3255,
											"end": 3307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3255,
											"end": 3307,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 3255,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3235,
											"end": 3307,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3235,
											"end": 3307,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3347,
											"end": 3357,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3335,
											"end": 3357,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3335,
											"end": 3344,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3335,
											"end": 3357,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3335,
											"end": 3357,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3335,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 3335,
											"end": 3491,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3443,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 3459,
											"end": 3467,
											"name": "PUSH",
											"source": 15,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 3469,
											"end": 3479,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3443,
											"end": 3491,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3443,
											"end": 3491,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3481,
											"end": 3490,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3443,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 3443,
											"end": 3491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3443,
											"end": 3491,
											"name": "tag",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 3443,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3335,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 3335,
											"end": 3491,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3335,
											"end": 3491,
											"name": "tag",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 3335,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3376,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 3392,
											"end": 3401,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3403,
											"end": 3413,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3376,
											"end": 3424,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3376,
											"end": 3424,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3415,
											"end": 3423,
											"name": "PUSH",
											"source": 15,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 3376,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 3376,
											"end": 3424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3376,
											"end": 3424,
											"name": "tag",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 3376,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3321,
											"end": 3491,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3321,
											"end": 3491,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3221,
											"end": 3502,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2911,
											"end": 3502,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 2911,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2730,
											"end": 3508,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2553,
											"end": 3508,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2553,
											"end": 3508,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2553,
											"end": 3508,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2553,
											"end": 3508,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2553,
											"end": 3508,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2553,
											"end": 3508,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2553,
											"end": 3508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1355,
											"end": 3943,
											"name": "tag",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 1355,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1418,
											"end": 1438,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1465,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1475,
											"end": 1476,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1472,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1468,
											"end": 1476,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 1468,
											"end": 1476,
											"name": "SIGNEXTEND",
											"source": 16
										},
										{
											"begin": 1468,
											"end": 1476,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1519,
											"end": 1523,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1512,
											"end": 1524,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 1512,
											"end": 1524,
											"name": "SIGNEXTEND",
											"source": 16
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "tag",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1495,
											"end": 1499,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1500,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 1488,
											"end": 1500,
											"name": "SIGNEXTEND",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 1487,
											"end": 1500,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 1487,
											"end": 1500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1500,
											"name": "tag",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 1487,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1450,
											"end": 1525,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 637,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 477,
											"end": 484,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 637,
											"end": 646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 637,
											"end": 646,
											"name": "tag",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1554,
											"end": 1579,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFF"
										},
										{
											"begin": 1554,
											"end": 1579,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1543,
											"end": 1550,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1543,
											"end": 1579,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 1543,
											"end": 1579,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13680,
											"end": 13682,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13662,
											"end": 13683,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13719,
											"end": 13720,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 13699,
											"end": 13717,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 13699,
											"end": 13717,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13699,
											"end": 13717,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13692,
											"end": 13721,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13757,
											"end": 13760,
											"name": "PUSH",
											"source": 17,
											"value": "5400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13737,
											"end": 13755,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 13737,
											"end": 13755,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13737,
											"end": 13755,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13730,
											"end": 13761,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13778,
											"end": 13796,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 13778,
											"end": 13796,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "268"
										},
										{
											"begin": 13478,
											"end": 13802,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "tag",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1619,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1622,
											"end": 1625,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1612,
											"end": 1625,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1629,
											"end": 1630,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1630,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1670,
											"end": 1705,
											"name": "PUSH",
											"source": 16,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "tag",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1633,
											"end": 1667,
											"name": "PUSH",
											"source": 16,
											"value": "FFFCB933BD6FAD37AA2D162D1A594001"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "tag",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1596,
											"end": 1705,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1596,
											"end": 1705,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1596,
											"end": 1705,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1729,
											"end": 1732,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 1719,
											"end": 1732,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1719,
											"end": 1732,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1719,
											"end": 1737,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1715,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 1715,
											"end": 1798,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1795,
											"end": 1798,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1756,
											"end": 1790,
											"name": "PUSH",
											"source": 16,
											"value": "FFF97272373D413259A46990580E213A"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 1748,
											"end": 1790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "tag",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1747,
											"end": 1798,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1747,
											"end": 1798,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 1739,
											"end": 1798,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1739,
											"end": 1798,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1715,
											"end": 1798,
											"name": "tag",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 1715,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1822,
											"end": 1825,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1812,
											"end": 1825,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1812,
											"end": 1825,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1808,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 1808,
											"end": 1891,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1888,
											"end": 1891,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 1841,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 1841,
											"end": 1846,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1849,
											"end": 1883,
											"name": "PUSH",
											"source": 16,
											"value": "FFF2E50F5F656932EF12357CF3C7FDCC"
										},
										{
											"begin": 1841,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 1841,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1841,
											"end": 1883,
											"name": "tag",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 1841,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1840,
											"end": 1891,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1840,
											"end": 1891,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 1832,
											"end": 1891,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1832,
											"end": 1891,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1808,
											"end": 1891,
											"name": "tag",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 1808,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1915,
											"end": 1918,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1905,
											"end": 1923,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1901,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 1901,
											"end": 1984,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1981,
											"end": 1984,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 1934,
											"end": 1939,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1942,
											"end": 1976,
											"name": "PUSH",
											"source": 16,
											"value": "FFE5CACA7E10E4E61C3624EAA0941CD0"
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 1934,
											"end": 1976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "tag",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1933,
											"end": 1984,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1933,
											"end": 1984,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 1925,
											"end": 1984,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1925,
											"end": 1984,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1901,
											"end": 1984,
											"name": "tag",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 1901,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2008,
											"end": 2012,
											"name": "PUSH",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1998,
											"end": 2017,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1994,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 1994,
											"end": 2078,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2075,
											"end": 2078,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2028,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 2028,
											"end": 2033,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "PUSH",
											"source": 16,
											"value": "FFCB9843D60F6159C9DB58835C926644"
										},
										{
											"begin": 2028,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 2028,
											"end": 2070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2028,
											"end": 2070,
											"name": "tag",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 2028,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2027,
											"end": 2078,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2027,
											"end": 2078,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2019,
											"end": 2078,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2019,
											"end": 2078,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1994,
											"end": 2078,
											"name": "tag",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 1994,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2102,
											"end": 2106,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2092,
											"end": 2111,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2088,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 2088,
											"end": 2172,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2169,
											"end": 2172,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 2122,
											"end": 2127,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "PUSH",
											"source": 16,
											"value": "FF973B41FA98C081472E6896DFB254C0"
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 2122,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "tag",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2172,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2172,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2113,
											"end": 2172,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2113,
											"end": 2172,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2088,
											"end": 2172,
											"name": "tag",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 2088,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2196,
											"end": 2200,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2186,
											"end": 2200,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2186,
											"end": 2200,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2186,
											"end": 2205,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 2182,
											"end": 2266,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2263,
											"end": 2266,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2216,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 2216,
											"end": 2221,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "PUSH",
											"source": 16,
											"value": "FF2EA16466C96A3843EC78B326B52861"
										},
										{
											"begin": 2216,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 2216,
											"end": 2258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2216,
											"end": 2258,
											"name": "tag",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 2216,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2215,
											"end": 2266,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2215,
											"end": 2266,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2207,
											"end": 2266,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2207,
											"end": 2266,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2266,
											"name": "tag",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 2182,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2290,
											"end": 2294,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2280,
											"end": 2294,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2280,
											"end": 2294,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2280,
											"end": 2299,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2276,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 2276,
											"end": 2360,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2357,
											"end": 2360,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2310,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "349"
										},
										{
											"begin": 2310,
											"end": 2315,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2318,
											"end": 2352,
											"name": "PUSH",
											"source": 16,
											"value": "FE5DEE046A99A2A811C461F1969C3053"
										},
										{
											"begin": 2310,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 2310,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2310,
											"end": 2352,
											"name": "tag",
											"source": 16,
											"value": "349"
										},
										{
											"begin": 2310,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2309,
											"end": 2360,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2309,
											"end": 2360,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2301,
											"end": 2360,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2301,
											"end": 2360,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2276,
											"end": 2360,
											"name": "tag",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 2276,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2384,
											"end": 2389,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2374,
											"end": 2389,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2374,
											"end": 2389,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2374,
											"end": 2394,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2370,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "350"
										},
										{
											"begin": 2370,
											"end": 2455,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2452,
											"end": 2455,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2405,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 2405,
											"end": 2410,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2413,
											"end": 2447,
											"name": "PUSH",
											"source": 16,
											"value": "FCBE86C7900A88AEDCFFC83B479AA3A4"
										},
										{
											"begin": 2405,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 2405,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2405,
											"end": 2447,
											"name": "tag",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 2405,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2404,
											"end": 2455,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2404,
											"end": 2455,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2396,
											"end": 2455,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2396,
											"end": 2455,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2370,
											"end": 2455,
											"name": "tag",
											"source": 16,
											"value": "350"
										},
										{
											"begin": 2370,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2479,
											"end": 2484,
											"name": "PUSH",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 2469,
											"end": 2484,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2469,
											"end": 2484,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2469,
											"end": 2489,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2465,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 2465,
											"end": 2550,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2547,
											"end": 2550,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2500,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 2500,
											"end": 2505,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2508,
											"end": 2542,
											"name": "PUSH",
											"source": 16,
											"value": "F987A7253AC413176F2B074CF7815E54"
										},
										{
											"begin": 2500,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 2500,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2542,
											"name": "tag",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 2500,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2499,
											"end": 2550,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2499,
											"end": 2550,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2491,
											"end": 2550,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2491,
											"end": 2550,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2465,
											"end": 2550,
											"name": "tag",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 2465,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2574,
											"end": 2579,
											"name": "PUSH",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 2564,
											"end": 2579,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2564,
											"end": 2579,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2564,
											"end": 2584,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2560,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 2560,
											"end": 2645,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2642,
											"end": 2645,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2595,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2603,
											"end": 2637,
											"name": "PUSH",
											"source": 16,
											"value": "F3392B0822B70005940C7A398E4B70F3"
										},
										{
											"begin": 2595,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 2595,
											"end": 2637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2595,
											"end": 2637,
											"name": "tag",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 2595,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2594,
											"end": 2645,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2594,
											"end": 2645,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2586,
											"end": 2645,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2586,
											"end": 2645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2560,
											"end": 2645,
											"name": "tag",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 2560,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2669,
											"end": 2674,
											"name": "PUSH",
											"source": 16,
											"value": "800"
										},
										{
											"begin": 2659,
											"end": 2674,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2659,
											"end": 2674,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2659,
											"end": 2679,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2655,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "356"
										},
										{
											"begin": 2655,
											"end": 2740,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2737,
											"end": 2740,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2690,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 2690,
											"end": 2695,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "PUSH",
											"source": 16,
											"value": "E7159475A2C29B7443B29C7FA6E889D9"
										},
										{
											"begin": 2690,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 2690,
											"end": 2732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2690,
											"end": 2732,
											"name": "tag",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 2690,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2689,
											"end": 2740,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2689,
											"end": 2740,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2681,
											"end": 2740,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2681,
											"end": 2740,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2655,
											"end": 2740,
											"name": "tag",
											"source": 16,
											"value": "356"
										},
										{
											"begin": 2655,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "PUSH",
											"source": 16,
											"value": "1000"
										},
										{
											"begin": 2754,
											"end": 2770,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2754,
											"end": 2770,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2754,
											"end": 2775,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2750,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "358"
										},
										{
											"begin": 2750,
											"end": 2836,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2833,
											"end": 2836,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2786,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 2786,
											"end": 2791,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2794,
											"end": 2828,
											"name": "PUSH",
											"source": 16,
											"value": "D097F3BDFD2022B8845AD8F792AA5825"
										},
										{
											"begin": 2786,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 2786,
											"end": 2828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2786,
											"end": 2828,
											"name": "tag",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 2786,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2785,
											"end": 2836,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2785,
											"end": 2836,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2777,
											"end": 2836,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2777,
											"end": 2836,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2750,
											"end": 2836,
											"name": "tag",
											"source": 16,
											"value": "358"
										},
										{
											"begin": 2750,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "PUSH",
											"source": 16,
											"value": "2000"
										},
										{
											"begin": 2850,
											"end": 2866,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2850,
											"end": 2866,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2846,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 2846,
											"end": 2932,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2929,
											"end": 2932,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2882,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 2882,
											"end": 2887,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2890,
											"end": 2924,
											"name": "PUSH",
											"source": 16,
											"value": "A9F746462D870FDF8A65DC1F90E061E5"
										},
										{
											"begin": 2882,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 2882,
											"end": 2924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2882,
											"end": 2924,
											"name": "tag",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 2882,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2881,
											"end": 2932,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2881,
											"end": 2932,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2873,
											"end": 2932,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2873,
											"end": 2932,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2846,
											"end": 2932,
											"name": "tag",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 2846,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "PUSH",
											"source": 16,
											"value": "4000"
										},
										{
											"begin": 2946,
											"end": 2962,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2946,
											"end": 2962,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2946,
											"end": 2967,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2942,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 2942,
											"end": 3028,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3025,
											"end": 3028,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2978,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2986,
											"end": 3020,
											"name": "PUSH",
											"source": 16,
											"value": "70D869A156D2A1B890BB3DF62BAF32F7"
										},
										{
											"begin": 2978,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 2978,
											"end": 3020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2978,
											"end": 3020,
											"name": "tag",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 2978,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2977,
											"end": 3028,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2977,
											"end": 3028,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 2969,
											"end": 3028,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2969,
											"end": 3028,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2942,
											"end": 3028,
											"name": "tag",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 2942,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3052,
											"end": 3058,
											"name": "PUSH",
											"source": 16,
											"value": "8000"
										},
										{
											"begin": 3042,
											"end": 3058,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3042,
											"end": 3058,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3042,
											"end": 3063,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3038,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 3038,
											"end": 3124,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3121,
											"end": 3124,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 3074,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 3074,
											"end": 3079,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3082,
											"end": 3116,
											"name": "PUSH",
											"source": 16,
											"value": "31BE135F97D08FD981231505542FCFA6"
										},
										{
											"begin": 3074,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 3074,
											"end": 3116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3074,
											"end": 3116,
											"name": "tag",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 3074,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3073,
											"end": 3124,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3073,
											"end": 3124,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 3065,
											"end": 3124,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3065,
											"end": 3124,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3038,
											"end": 3124,
											"name": "tag",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 3038,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3148,
											"end": 3155,
											"name": "PUSH",
											"source": 16,
											"value": "10000"
										},
										{
											"begin": 3138,
											"end": 3155,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3138,
											"end": 3155,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3138,
											"end": 3160,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3134,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 3134,
											"end": 3220,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3217,
											"end": 3220,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 3171,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 3171,
											"end": 3176,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3212,
											"name": "PUSH",
											"source": 16,
											"value": "9AA508B5B7A84E1C677DE54F3E99BC9"
										},
										{
											"begin": 3171,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 3171,
											"end": 3212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3171,
											"end": 3212,
											"name": "tag",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 3171,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3170,
											"end": 3220,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3170,
											"end": 3220,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 3162,
											"end": 3220,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3162,
											"end": 3220,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3134,
											"end": 3220,
											"name": "tag",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 3134,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3244,
											"end": 3251,
											"name": "PUSH",
											"source": 16,
											"value": "20000"
										},
										{
											"begin": 3234,
											"end": 3251,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3234,
											"end": 3251,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3234,
											"end": 3256,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3230,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 3230,
											"end": 3315,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3312,
											"end": 3315,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 3267,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 3267,
											"end": 3272,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3275,
											"end": 3307,
											"name": "PUSH",
											"source": 16,
											"value": "5D6AF8DEDB81196699C329225EE604"
										},
										{
											"begin": 3267,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 3267,
											"end": 3307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3267,
											"end": 3307,
											"name": "tag",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 3267,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3266,
											"end": 3315,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3266,
											"end": 3315,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 3258,
											"end": 3315,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3258,
											"end": 3315,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3230,
											"end": 3315,
											"name": "tag",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 3230,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "PUSH",
											"source": 16,
											"value": "40000"
										},
										{
											"begin": 3329,
											"end": 3346,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3329,
											"end": 3346,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3329,
											"end": 3351,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3325,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 3325,
											"end": 3408,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3405,
											"end": 3408,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 3362,
											"end": 3367,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3370,
											"end": 3400,
											"name": "PUSH",
											"source": 16,
											"value": "2216E584F5FA1EA926041BEDFE98"
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 3362,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "tag",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3361,
											"end": 3408,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3361,
											"end": 3408,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 3353,
											"end": 3408,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3353,
											"end": 3408,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3325,
											"end": 3408,
											"name": "tag",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 3325,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3432,
											"end": 3439,
											"name": "PUSH",
											"source": 16,
											"value": "80000"
										},
										{
											"begin": 3422,
											"end": 3439,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3439,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3444,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3418,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 3418,
											"end": 3496,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3493,
											"end": 3496,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 3455,
											"end": 3460,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3463,
											"end": 3488,
											"name": "PUSH",
											"source": 16,
											"value": "48A170391F7DC42444E8FA2"
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 3455,
											"end": 3488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "tag",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 3446,
											"end": 3496,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3446,
											"end": 3496,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3418,
											"end": 3496,
											"name": "tag",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 3418,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3518,
											"end": 3519,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3511,
											"end": 3515,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3511,
											"end": 3519,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 3511,
											"end": 3519,
											"name": "SIGNEXTEND",
											"source": 16
										},
										{
											"begin": 3511,
											"end": 3519,
											"name": "SGT",
											"source": 16
										},
										{
											"begin": 3507,
											"end": 3554,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3507,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 3507,
											"end": 3554,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3529,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3529,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "197"
										},
										{
											"begin": 3529,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3529,
											"end": 3554,
											"name": "tag",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 3529,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3521,
											"end": 3554,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3521,
											"end": 3554,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3507,
											"end": 3554,
											"name": "tag",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 3507,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3904,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 3913,
											"end": 3920,
											"name": "PUSH",
											"source": 16,
											"value": "100000000"
										},
										{
											"begin": 3904,
											"end": 3909,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3904,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 3904,
											"end": 3921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3904,
											"end": 3921,
											"name": "tag",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 3904,
											"end": 3921,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3904,
											"end": 3926,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3933,
											"end": 3934,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "tag",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3929,
											"end": 3930,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "tag",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3897,
											"end": 3899,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "261"
										},
										{
											"begin": 3887,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "tag",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 1355,
											"end": 3943,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1355,
											"end": 3943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 742,
											"end": 4543,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 742,
											"end": 4543,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 854,
											"end": 868,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 868,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 854,
											"end": 868,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1358,
											"end": 1359,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1351,
											"end": 1371,
											"name": "MULMOD",
											"source": 14
										},
										{
											"begin": 1400,
											"end": 1401,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1397,
											"end": 1398,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1393,
											"end": 1402,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1384,
											"end": 1402,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1384,
											"end": 1402,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1451,
											"end": 1456,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1447,
											"end": 1449,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1444,
											"end": 1457,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1436,
											"end": 1441,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1432,
											"end": 1434,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1428,
											"end": 1442,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1424,
											"end": 1458,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1415,
											"end": 1458,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1415,
											"end": 1458,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1415,
											"end": 1458,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1540,
											"end": 1545,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1550,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1536,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 1536,
											"end": 1715,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1589,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1574,
											"end": 1585,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1574,
											"end": 1589,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1566,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 1566,
											"end": 1590,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1566,
											"end": 1590,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1590,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1566,
											"end": 1590,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1566,
											"end": 1590,
											"name": "tag",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 1566,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1641,
											"end": 1664,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1664,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1664,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1664,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1691,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 1691,
											"end": 1704,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1536,
											"end": 1715,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 1536,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1842,
											"end": 1847,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1828,
											"end": 1839,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2212,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2195,
											"end": 2196,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 2188,
											"end": 2213,
											"name": "MULMOD",
											"source": 14
										},
										{
											"begin": 2373,
											"end": 2394,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2373,
											"end": 2394,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2373,
											"end": 2394,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2373,
											"end": 2394,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2330,
											"end": 2350,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2330,
											"end": 2350,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2319,
											"end": 2351,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2319,
											"end": 2351,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2319,
											"end": 2351,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2319,
											"end": 2351,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2175,
											"end": 2213,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2619,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2569,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 2608,
											"end": 2619,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2569,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 2569,
											"end": 2600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2569,
											"end": 2600,
											"name": "tag",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 2569,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2603,
											"end": 2604,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 2569,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2568,
											"end": 2619,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2713,
											"end": 2735,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 2713,
											"end": 2735,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2713,
											"end": 2735,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2713,
											"end": 2735,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 2713,
											"end": 2735,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3089,
											"end": 3090,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3081,
											"end": 3104,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3106,
											"end": 3107,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3077,
											"end": 3108,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3077,
											"end": 3108,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3136,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 3077,
											"end": 3108,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3136,
											"end": 3141,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3136,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3136,
											"end": 3148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3136,
											"end": 3148,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 3136,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3127,
											"end": 3148,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3127,
											"end": 3148,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3127,
											"end": 3148,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 3127,
											"end": 3148,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3493,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 3501,
											"end": 3512,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3497,
											"end": 3498,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3497,
											"end": 3512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "tag",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3516,
											"end": 3517,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3496,
											"end": 3517,
											"name": "XOR",
											"source": 14
										},
										{
											"begin": 3496,
											"end": 3517,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3743,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 3496,
											"end": 3517,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3743,
											"end": 3754,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3743,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3743,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3743,
											"end": 3760,
											"name": "tag",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 3743,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3739,
											"end": 3740,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 3739,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "tag",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3732,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3801,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3801,
											"end": 3812,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3801,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3801,
											"end": 3818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3801,
											"end": 3818,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 3801,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3797,
											"end": 3798,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 3797,
											"end": 3818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "tag",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3790,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 3790,
											"end": 3818,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3790,
											"end": 3818,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3790,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3790,
											"end": 3818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3790,
											"end": 3818,
											"name": "tag",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 3790,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3790,
											"end": 3818,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3860,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 3790,
											"end": 3818,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3860,
											"end": 3871,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3860,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3860,
											"end": 3877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3860,
											"end": 3877,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 3860,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3856,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 3856,
											"end": 3877,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3856,
											"end": 3857,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3856,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 3856,
											"end": 3877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3856,
											"end": 3877,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 3856,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3849,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 3849,
											"end": 3877,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3849,
											"end": 3877,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3849,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3849,
											"end": 3877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3849,
											"end": 3877,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 3849,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3849,
											"end": 3877,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3919,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 3849,
											"end": 3877,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 3930,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3919,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 3936,
											"name": "tag",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 3919,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3915,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 3915,
											"end": 3936,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3915,
											"end": 3916,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3915,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 3915,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3915,
											"end": 3936,
											"name": "tag",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 3915,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3908,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "tag",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3978,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3978,
											"end": 3989,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3978,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3978,
											"end": 3995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3978,
											"end": 3995,
											"name": "tag",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 3978,
											"end": 3995,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3974,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 3974,
											"end": 3995,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3974,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 3974,
											"end": 3995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3974,
											"end": 3995,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 3974,
											"end": 3995,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3967,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 3967,
											"end": 3995,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3967,
											"end": 3995,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3967,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 3967,
											"end": 3995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3967,
											"end": 3995,
											"name": "tag",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 3967,
											"end": 3995,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3967,
											"end": 3995,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4038,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 3967,
											"end": 3995,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4038,
											"end": 4049,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 4038,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 4038,
											"end": 4055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4038,
											"end": 4055,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 4038,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4034,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 4034,
											"end": 4055,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4034,
											"end": 4035,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 4034,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 4034,
											"end": 4055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4034,
											"end": 4055,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 4034,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4027,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 4027,
											"end": 4055,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4027,
											"end": 4055,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4027,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 4027,
											"end": 4055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4027,
											"end": 4055,
											"name": "tag",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 4027,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4027,
											"end": 4055,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4502,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 4027,
											"end": 4055,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4502,
											"end": 4507,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4502,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 4502,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4502,
											"end": 4513,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 4502,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4493,
											"end": 4513,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4493,
											"end": 4513,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4523,
											"end": 4536,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4523,
											"end": 4536,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4523,
											"end": 4536,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4523,
											"end": 4536,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4523,
											"end": 4536,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 742,
											"end": 4543,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 742,
											"end": 4543,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 742,
											"end": 4543,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 742,
											"end": 4543,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 742,
											"end": 4543,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 742,
											"end": 4543,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 742,
											"end": 4543,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 742,
											"end": 4543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 381,
											"end": 535,
											"name": "tag",
											"source": 17,
											"value": "408"
										},
										{
											"begin": 381,
											"end": 535,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 460,
											"end": 465,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 456,
											"end": 510,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 449,
											"end": 454,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 446,
											"end": 511,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 436,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "421"
										},
										{
											"begin": 436,
											"end": 529,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 523,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 515,
											"end": 527,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 436,
											"end": 529,
											"name": "tag",
											"source": 17,
											"value": "421"
										},
										{
											"begin": 436,
											"end": 529,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 381,
											"end": 535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 381,
											"end": 535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 540,
											"end": 787,
											"name": "tag",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 540,
											"end": 787,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 599,
											"end": 605,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 652,
											"end": 654,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 640,
											"end": 649,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 631,
											"end": 638,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 627,
											"end": 650,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 623,
											"end": 655,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 620,
											"end": 672,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 620,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "423"
										},
										{
											"begin": 620,
											"end": 672,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 668,
											"end": 669,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 666,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 670,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 620,
											"end": 672,
											"name": "tag",
											"source": 17,
											"value": "423"
										},
										{
											"begin": 620,
											"end": 672,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 707,
											"end": 716,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 694,
											"end": 717,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 726,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "381"
										},
										{
											"begin": 751,
											"end": 756,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 726,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "408"
										},
										{
											"begin": 726,
											"end": 757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1023,
											"end": 1338,
											"name": "tag",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 1023,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1105,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1152,
											"end": 1154,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1140,
											"end": 1149,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1131,
											"end": 1138,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1127,
											"end": 1150,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1120,
											"end": 1172,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1120,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "427"
										},
										{
											"begin": 1120,
											"end": 1172,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1168,
											"end": 1169,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1166,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1158,
											"end": 1170,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1120,
											"end": 1172,
											"name": "tag",
											"source": 17,
											"value": "427"
										},
										{
											"begin": 1120,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1207,
											"end": 1216,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1194,
											"end": 1217,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "428"
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "408"
										},
										{
											"begin": 1226,
											"end": 1257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1257,
											"name": "tag",
											"source": 17,
											"value": "428"
										},
										{
											"begin": 1226,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1276,
											"end": 1281,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 1328,
											"end": 1330,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1313,
											"end": 1331,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1313,
											"end": 1331,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1313,
											"end": 1331,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1313,
											"end": 1331,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1300,
											"end": 1332,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1300,
											"end": 1332,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1023,
											"end": 1338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1977,
											"end": 2228,
											"name": "tag",
											"source": 17,
											"value": "103"
										},
										{
											"begin": 1977,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2047,
											"end": 2053,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2102,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2088,
											"end": 2097,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2079,
											"end": 2086,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2071,
											"end": 2103,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2068,
											"end": 2120,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2068,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "433"
										},
										{
											"begin": 2068,
											"end": 2120,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2116,
											"end": 2117,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2113,
											"end": 2114,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2118,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2068,
											"end": 2120,
											"name": "tag",
											"source": 17,
											"value": "433"
										},
										{
											"begin": 2068,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2148,
											"end": 2157,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2142,
											"end": 2158,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2167,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "381"
										},
										{
											"begin": 2192,
											"end": 2197,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2167,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "408"
										},
										{
											"begin": 2167,
											"end": 2198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2233,
											"end": 2417,
											"name": "tag",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 2233,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2285,
											"end": 2362,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2363,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2382,
											"end": 2386,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 2379,
											"end": 2380,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2372,
											"end": 2387,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2406,
											"end": 2410,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2404,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2396,
											"end": 2411,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2422,
											"end": 2547,
											"name": "tag",
											"source": 17,
											"value": "108"
										},
										{
											"begin": 2422,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2462,
											"end": 2466,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2491,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2487,
											"end": 2488,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2484,
											"end": 2492,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 2481,
											"end": 2515,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2481,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 2481,
											"end": 2515,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 2495,
											"end": 2513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "tag",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2532,
											"end": 2541,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2532,
											"end": 2541,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2422,
											"end": 2547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2552,
											"end": 2978,
											"name": "tag",
											"source": 17,
											"value": "118"
										},
										{
											"begin": 2552,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2681,
											"end": 2684,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2719,
											"end": 2725,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2713,
											"end": 2726,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2744,
											"end": 2745,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2883,
											"name": "tag",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 2754,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2768,
											"end": 2774,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2765,
											"end": 2766,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2762,
											"end": 2775,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 2754,
											"end": 2883,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2754,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 2754,
											"end": 2883,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2866,
											"end": 2870,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2864,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2850,
											"end": 2864,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2850,
											"end": 2864,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2846,
											"end": 2871,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2846,
											"end": 2871,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2840,
											"end": 2872,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2827,
											"end": 2838,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2827,
											"end": 2838,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2827,
											"end": 2838,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2820,
											"end": 2873,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2783,
											"end": 2795,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2754,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 2754,
											"end": 2883,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2754,
											"end": 2883,
											"name": "tag",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 2754,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2901,
											"end": 2907,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2898,
											"end": 2899,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2895,
											"end": 2908,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 2892,
											"end": 2940,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2892,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 2892,
											"end": 2940,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2936,
											"end": 2937,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2933,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2922,
											"end": 2925,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2918,
											"end": 2934,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2911,
											"end": 2938,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2892,
											"end": 2940,
											"name": "tag",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 2892,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2956,
											"end": 2972,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2956,
											"end": 2972,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2956,
											"end": 2972,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2956,
											"end": 2972,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2956,
											"end": 2972,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2552,
											"end": 2978,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2552,
											"end": 2978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2983,
											"end": 3167,
											"name": "tag",
											"source": 17,
											"value": "127"
										},
										{
											"begin": 2983,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3035,
											"end": 3112,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3032,
											"end": 3033,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3113,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3132,
											"end": 3136,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 3129,
											"end": 3130,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3122,
											"end": 3137,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3156,
											"end": 3160,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 3153,
											"end": 3154,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3146,
											"end": 3161,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3172,
											"end": 3356,
											"name": "tag",
											"source": 17,
											"value": "133"
										},
										{
											"begin": 3172,
											"end": 3356,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3248,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3295,
											"end": 3297,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3283,
											"end": 3292,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3274,
											"end": 3281,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3266,
											"end": 3298,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3263,
											"end": 3315,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3263,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 3263,
											"end": 3315,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3311,
											"end": 3312,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3308,
											"end": 3309,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3301,
											"end": 3313,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3263,
											"end": 3315,
											"name": "tag",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 3263,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3334,
											"end": 3350,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3334,
											"end": 3350,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3172,
											"end": 3356,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3172,
											"end": 3356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3663,
											"end": 3940,
											"name": "tag",
											"source": 17,
											"value": "139"
										},
										{
											"begin": 3663,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3730,
											"end": 3736,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3783,
											"end": 3785,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3762,
											"end": 3769,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3758,
											"end": 3781,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3754,
											"end": 3786,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3751,
											"end": 3803,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3751,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 3751,
											"end": 3803,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3799,
											"end": 3800,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3796,
											"end": 3797,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3789,
											"end": 3801,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3751,
											"end": 3803,
											"name": "tag",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 3751,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3831,
											"end": 3840,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3825,
											"end": 3841,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3884,
											"end": 3889,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3877,
											"end": 3890,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3863,
											"end": 3868,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3860,
											"end": 3892,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 3850,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "381"
										},
										{
											"begin": 3850,
											"end": 3910,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3906,
											"end": 3907,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3904,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3896,
											"end": 3908,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3945,
											"end": 4140,
											"name": "tag",
											"source": 17,
											"value": "141"
										},
										{
											"begin": 3945,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3984,
											"end": 3987,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4008,
											"end": 4013,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4005,
											"end": 4082,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4002,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 4002,
											"end": 4105,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 4085,
											"end": 4103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "tag",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4132,
											"end": 4133,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4121,
											"end": 4134,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4121,
											"end": 4134,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3945,
											"end": 4140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4145,
											"end": 4383,
											"name": "tag",
											"source": 17,
											"value": "150"
										},
										{
											"begin": 4145,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4182,
											"end": 4185,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4230,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 4219,
											"end": 4224,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4215,
											"end": 4231,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4250,
											"end": 4257,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4240,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 4240,
											"end": 4281,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4261,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 4261,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 4261,
											"end": 4279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4261,
											"end": 4279,
											"name": "tag",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 4261,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4297,
											"end": 4377,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4297,
											"end": 4377,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4145,
											"end": 4383,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4145,
											"end": 4383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "tag",
											"source": 17,
											"value": "167"
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4440,
											"end": 4517,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4437,
											"end": 4438,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4430,
											"end": 4518,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4537,
											"end": 4541,
											"name": "PUSH",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 4534,
											"end": 4535,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4527,
											"end": 4542,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4561,
											"end": 4565,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 4558,
											"end": 4559,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4566,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4577,
											"end": 4850,
											"name": "tag",
											"source": 17,
											"value": "191"
										},
										{
											"begin": 4577,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4645,
											"end": 4651,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4698,
											"end": 4700,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4686,
											"end": 4695,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4677,
											"end": 4684,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4673,
											"end": 4696,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4669,
											"end": 4701,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4666,
											"end": 4718,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4666,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "459"
										},
										{
											"begin": 4666,
											"end": 4718,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4714,
											"end": 4715,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4711,
											"end": 4712,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4704,
											"end": 4716,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4666,
											"end": 4718,
											"name": "tag",
											"source": 17,
											"value": "459"
										},
										{
											"begin": 4666,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4746,
											"end": 4755,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4740,
											"end": 4756,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4796,
											"end": 4800,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 4789,
											"end": 4794,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4785,
											"end": 4801,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4778,
											"end": 4783,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 4765,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "381"
										},
										{
											"begin": 4765,
											"end": 4820,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4816,
											"end": 4817,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4813,
											"end": 4814,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4806,
											"end": 4818,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 5337,
											"name": "tag",
											"source": 17,
											"value": "410"
										},
										{
											"begin": 4855,
											"end": 5337,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4944,
											"end": 4945,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4987,
											"end": 4992,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4944,
											"end": 4945,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5001,
											"end": 5331,
											"name": "tag",
											"source": 17,
											"value": "462"
										},
										{
											"begin": 5001,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5022,
											"end": 5029,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5012,
											"end": 5020,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5009,
											"end": 5030,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 5001,
											"end": 5331,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5001,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "464"
										},
										{
											"begin": 5001,
											"end": 5331,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5141,
											"end": 5145,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5069,
											"end": 5146,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 5063,
											"end": 5067,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5060,
											"end": 5147,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 5057,
											"end": 5170,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5057,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "466"
										},
										{
											"begin": 5057,
											"end": 5170,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5150,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "466"
										},
										{
											"begin": 5150,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 5150,
											"end": 5168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5150,
											"end": 5168,
											"name": "tag",
											"source": 17,
											"value": "466"
										},
										{
											"begin": 5150,
											"end": 5168,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5200,
											"end": 5207,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5190,
											"end": 5198,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5186,
											"end": 5208,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5183,
											"end": 5238,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5183,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "467"
										},
										{
											"begin": 5183,
											"end": 5238,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5220,
											"end": 5236,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5220,
											"end": 5236,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5220,
											"end": 5236,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 5220,
											"end": 5236,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5183,
											"end": 5238,
											"name": "tag",
											"source": 17,
											"value": "467"
										},
										{
											"begin": 5183,
											"end": 5238,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5299,
											"end": 5321,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 5299,
											"end": 5321,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5299,
											"end": 5321,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 5299,
											"end": 5321,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 5259,
											"end": 5274,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5259,
											"end": 5274,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5259,
											"end": 5274,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 5259,
											"end": 5274,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5001,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "462"
										},
										{
											"begin": 5001,
											"end": 5331,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5001,
											"end": 5331,
											"name": "tag",
											"source": 17,
											"value": "464"
										},
										{
											"begin": 5001,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5005,
											"end": 5008,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 5337,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 5337,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 5337,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 5337,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 5337,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 5337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5342,
											"end": 6208,
											"name": "tag",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 5342,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5391,
											"end": 5396,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5429,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5411,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 5411,
											"end": 5491,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5462,
											"end": 5463,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 5476,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "172"
										},
										{
											"begin": 5476,
											"end": 5481,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5411,
											"end": 5491,
											"name": "tag",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 5411,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5510,
											"end": 5514,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5500,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "470"
										},
										{
											"begin": 5500,
											"end": 5576,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5547,
											"end": 5548,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "172"
										},
										{
											"begin": 5561,
											"end": 5566,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5500,
											"end": 5576,
											"name": "tag",
											"source": 17,
											"value": "470"
										},
										{
											"begin": 5500,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5592,
											"end": 5596,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5610,
											"end": 5611,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 5605,
											"end": 5664,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5605,
											"end": 5664,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 5605,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 5605,
											"end": 5664,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5678,
											"end": 5679,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 5673,
											"end": 5803,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5673,
											"end": 5803,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 5673,
											"end": 5803,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "473"
										},
										{
											"begin": 5673,
											"end": 5803,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5585,
											"end": 5803,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "471"
										},
										{
											"begin": 5585,
											"end": 5803,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5605,
											"end": 5664,
											"name": "tag",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 5605,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5635,
											"end": 5636,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 5626,
											"end": 5636,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5626,
											"end": 5636,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5649,
											"end": 5654,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5649,
											"end": 5654,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "172"
										},
										{
											"begin": 5649,
											"end": 5654,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5673,
											"end": 5803,
											"name": "tag",
											"source": 17,
											"value": "473"
										},
										{
											"begin": 5673,
											"end": 5803,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5710,
											"end": 5713,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 5700,
											"end": 5708,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5697,
											"end": 5714,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 5694,
											"end": 5737,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5694,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "475"
										},
										{
											"begin": 5694,
											"end": 5737,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5717,
											"end": 5735,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "475"
										},
										{
											"begin": 5717,
											"end": 5735,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 5717,
											"end": 5735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5717,
											"end": 5735,
											"name": "tag",
											"source": 17,
											"value": "475"
										},
										{
											"begin": 5717,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5773,
											"end": 5774,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 5759,
											"end": 5775,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5759,
											"end": 5775,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 5788,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "172"
										},
										{
											"begin": 5788,
											"end": 5793,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5585,
											"end": 5803,
											"name": "tag",
											"source": 17,
											"value": "471"
										},
										{
											"begin": 5585,
											"end": 5803,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5585,
											"end": 5803,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5887,
											"end": 5889,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5877,
											"end": 5885,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5874,
											"end": 5890,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 5868,
											"end": 5871,
											"name": "PUSH",
											"source": 17,
											"value": "133"
										},
										{
											"begin": 5862,
											"end": 5866,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5859,
											"end": 5872,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 5855,
											"end": 5891,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5849,
											"end": 5851,
											"name": "PUSH",
											"source": 17,
											"value": "4E"
										},
										{
											"begin": 5839,
											"end": 5847,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5836,
											"end": 5852,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 5831,
											"end": 5833,
											"name": "PUSH",
											"source": 17,
											"value": "B"
										},
										{
											"begin": 5825,
											"end": 5829,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5822,
											"end": 5834,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 5818,
											"end": 5853,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5815,
											"end": 5892,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 5812,
											"end": 5971,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5812,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "476"
										},
										{
											"begin": 5812,
											"end": 5971,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5924,
											"end": 5943,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5924,
											"end": 5943,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5924,
											"end": 5943,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 5956,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "172"
										},
										{
											"begin": 5956,
											"end": 5961,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5812,
											"end": 5971,
											"name": "tag",
											"source": 17,
											"value": "476"
										},
										{
											"begin": 5812,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "477"
										},
										{
											"begin": 6028,
											"end": 6036,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6022,
											"end": 6026,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "410"
										},
										{
											"begin": 6003,
											"end": 6037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "tag",
											"source": 17,
											"value": "477"
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6133,
											"end": 6139,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6061,
											"end": 6140,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 6052,
											"end": 6059,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6049,
											"end": 6141,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 6046,
											"end": 6164,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6046,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 6046,
											"end": 6164,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6144,
											"end": 6162,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 6144,
											"end": 6162,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 6144,
											"end": 6162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6144,
											"end": 6162,
											"name": "tag",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 6144,
											"end": 6162,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6182,
											"end": 6202,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 6182,
											"end": 6202,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 5342,
											"end": 6208,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5342,
											"end": 6208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6213,
											"end": 6344,
											"name": "tag",
											"source": 17,
											"value": "195"
										},
										{
											"begin": 6213,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6273,
											"end": 6278,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6302,
											"end": 6338,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "381"
										},
										{
											"begin": 6329,
											"end": 6337,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6302,
											"end": 6338,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 6302,
											"end": 6338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6349,
											"end": 6533,
											"name": "tag",
											"source": 17,
											"value": "412"
										},
										{
											"begin": 6349,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6401,
											"end": 6478,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6398,
											"end": 6399,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6391,
											"end": 6479,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6498,
											"end": 6502,
											"name": "PUSH",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 6495,
											"end": 6496,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6488,
											"end": 6503,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6522,
											"end": 6526,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 6519,
											"end": 6520,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6512,
											"end": 6527,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6538,
											"end": 6658,
											"name": "tag",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 6538,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6578,
											"end": 6579,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6604,
											"end": 6605,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6594,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "485"
										},
										{
											"begin": 6594,
											"end": 6629,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6609,
											"end": 6627,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "485"
										},
										{
											"begin": 6609,
											"end": 6627,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "412"
										},
										{
											"begin": 6609,
											"end": 6627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6609,
											"end": 6627,
											"name": "tag",
											"source": 17,
											"value": "485"
										},
										{
											"begin": 6609,
											"end": 6627,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6643,
											"end": 6652,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 6643,
											"end": 6652,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6538,
											"end": 6658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6663,
											"end": 6838,
											"name": "tag",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 6663,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6700,
											"end": 6703,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6744,
											"end": 6748,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 6737,
											"end": 6742,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6733,
											"end": 6749,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6773,
											"end": 6777,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 6764,
											"end": 6771,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6761,
											"end": 6778,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "488"
										},
										{
											"begin": 6758,
											"end": 6801,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6781,
											"end": 6799,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "488"
										},
										{
											"begin": 6781,
											"end": 6799,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 6781,
											"end": 6799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6781,
											"end": 6799,
											"name": "tag",
											"source": 17,
											"value": "488"
										},
										{
											"begin": 6781,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6830,
											"end": 6831,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 6817,
											"end": 6832,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6817,
											"end": 6832,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6663,
											"end": 6838,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6663,
											"end": 6838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6843,
											"end": 7071,
											"name": "tag",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 6843,
											"end": 7071,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6883,
											"end": 6890,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7009,
											"end": 7010,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6937,
											"end": 7011,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 6934,
											"end": 6935,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6931,
											"end": 7012,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 6926,
											"end": 6927,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6919,
											"end": 6928,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 6929,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6908,
											"end": 7013,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6905,
											"end": 7036,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6905,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "491"
										},
										{
											"begin": 6905,
											"end": 7036,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "491"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 7016,
											"end": 7034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "tag",
											"source": 17,
											"value": "491"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7056,
											"end": 7065,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 7056,
											"end": 7065,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6843,
											"end": 7071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7076,
											"end": 7204,
											"name": "tag",
											"source": 17,
											"value": "261"
										},
										{
											"begin": 7076,
											"end": 7204,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7116,
											"end": 7119,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7147,
											"end": 7148,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7143,
											"end": 7149,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 7140,
											"end": 7141,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7137,
											"end": 7150,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7134,
											"end": 7173,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7134,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "494"
										},
										{
											"begin": 7134,
											"end": 7173,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7153,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "494"
										},
										{
											"begin": 7153,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 7153,
											"end": 7171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7153,
											"end": 7171,
											"name": "tag",
											"source": 17,
											"value": "494"
										},
										{
											"begin": 7153,
											"end": 7171,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7189,
											"end": 7198,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7189,
											"end": 7198,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7076,
											"end": 7204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7539,
											"end": 7723,
											"name": "tag",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 7539,
											"end": 7723,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7591,
											"end": 7668,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7588,
											"end": 7589,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7581,
											"end": 7669,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7688,
											"end": 7692,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 7685,
											"end": 7686,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7678,
											"end": 7693,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7712,
											"end": 7716,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7709,
											"end": 7710,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7702,
											"end": 7717,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7728,
											"end": 8375,
											"name": "tag",
											"source": 17,
											"value": "279"
										},
										{
											"begin": 7728,
											"end": 8375,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7897,
											"end": 7899,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7949,
											"end": 7970,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7949,
											"end": 7970,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7949,
											"end": 7970,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8019,
											"end": 8032,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7922,
											"end": 7940,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7922,
											"end": 7940,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7922,
											"end": 7940,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8041,
											"end": 8063,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8041,
											"end": 8063,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8041,
											"end": 8063,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7868,
											"end": 7872,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7868,
											"end": 7872,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7897,
											"end": 7899,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8120,
											"end": 8135,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8120,
											"end": 8135,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8120,
											"end": 8135,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8120,
											"end": 8135,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8094,
											"end": 8096,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8097,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8079,
											"end": 8097,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8079,
											"end": 8097,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7868,
											"end": 7872,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8163,
											"end": 8349,
											"name": "tag",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 8163,
											"end": 8349,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8177,
											"end": 8183,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8174,
											"end": 8175,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8171,
											"end": 8184,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 8163,
											"end": 8349,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8163,
											"end": 8349,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 8163,
											"end": 8349,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8242,
											"end": 8255,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8242,
											"end": 8255,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 8257,
											"end": 8267,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8238,
											"end": 8268,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 8226,
											"end": 8269,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8226,
											"end": 8269,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8324,
											"end": 8339,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8324,
											"end": 8339,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8324,
											"end": 8339,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8324,
											"end": 8339,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8289,
											"end": 8301,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8289,
											"end": 8301,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8289,
											"end": 8301,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8289,
											"end": 8301,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8199,
											"end": 8200,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 8192,
											"end": 8201,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8163,
											"end": 8349,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 8163,
											"end": 8349,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8163,
											"end": 8349,
											"name": "tag",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 8163,
											"end": 8349,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8366,
											"end": 8369,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8366,
											"end": 8369,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 7728,
											"end": 8375,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7728,
											"end": 8375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8380,
											"end": 8714,
											"name": "tag",
											"source": 17,
											"value": "413"
										},
										{
											"begin": 8380,
											"end": 8714,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8451,
											"end": 8453,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8445,
											"end": 8454,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 8507,
											"end": 8509,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 8497,
											"end": 8510,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8497,
											"end": 8510,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8493,
											"end": 8579,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 8481,
											"end": 8580,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8481,
											"end": 8580,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8595,
											"end": 8629,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8595,
											"end": 8629,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8631,
											"end": 8653,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8631,
											"end": 8653,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8631,
											"end": 8653,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 8592,
											"end": 8654,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 8589,
											"end": 8677,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8589,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "503"
										},
										{
											"begin": 8589,
											"end": 8677,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "503"
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 8657,
											"end": 8675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "tag",
											"source": 17,
											"value": "503"
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8693,
											"end": 8695,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8686,
											"end": 8708,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8380,
											"end": 8714,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8380,
											"end": 8714,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8380,
											"end": 8714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8719,
											"end": 8900,
											"name": "tag",
											"source": 17,
											"value": "414"
										},
										{
											"begin": 8719,
											"end": 8900,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8777,
											"end": 8781,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8810,
											"end": 8828,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8802,
											"end": 8808,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8799,
											"end": 8829,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8796,
											"end": 8852,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8796,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 8796,
											"end": 8852,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8832,
											"end": 8850,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 8832,
											"end": 8850,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 8832,
											"end": 8850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8832,
											"end": 8850,
											"name": "tag",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 8832,
											"end": 8850,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8877,
											"end": 8878,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 8873,
											"end": 8887,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 8889,
											"end": 8893,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8869,
											"end": 8894,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8869,
											"end": 8894,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8719,
											"end": 8900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8905,
											"end": 9637,
											"name": "tag",
											"source": 17,
											"value": "415"
										},
										{
											"begin": 8905,
											"end": 9637,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8970,
											"end": 8975,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9023,
											"end": 9026,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9016,
											"end": 9020,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 9008,
											"end": 9014,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9004,
											"end": 9021,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9000,
											"end": 9027,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 8990,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 8990,
											"end": 9045,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9041,
											"end": 9042,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9038,
											"end": 9039,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9031,
											"end": 9043,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 8990,
											"end": 9045,
											"name": "tag",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 8990,
											"end": 9045,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9070,
											"end": 9076,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9064,
											"end": 9077,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 9096,
											"end": 9100,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9120,
											"end": 9178,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "509"
										},
										{
											"begin": 9136,
											"end": 9177,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "510"
										},
										{
											"begin": 9174,
											"end": 9176,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9136,
											"end": 9177,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "414"
										},
										{
											"begin": 9136,
											"end": 9177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9136,
											"end": 9177,
											"name": "tag",
											"source": 17,
											"value": "510"
										},
										{
											"begin": 9136,
											"end": 9177,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9120,
											"end": 9178,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "413"
										},
										{
											"begin": 9120,
											"end": 9178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9120,
											"end": 9178,
											"name": "tag",
											"source": 17,
											"value": "509"
										},
										{
											"begin": 9120,
											"end": 9178,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9212,
											"end": 9227,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9212,
											"end": 9227,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9212,
											"end": 9227,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9298,
											"end": 9299,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 9294,
											"end": 9304,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9294,
											"end": 9304,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9294,
											"end": 9304,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9294,
											"end": 9304,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 9282,
											"end": 9305,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9282,
											"end": 9305,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9278,
											"end": 9310,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9278,
											"end": 9310,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9278,
											"end": 9310,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9243,
											"end": 9255,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9243,
											"end": 9255,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9243,
											"end": 9255,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9243,
											"end": 9255,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9322,
											"end": 9337,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9322,
											"end": 9337,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9322,
											"end": 9337,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 9319,
											"end": 9354,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9319,
											"end": 9354,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "511"
										},
										{
											"begin": 9319,
											"end": 9354,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9350,
											"end": 9351,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9347,
											"end": 9348,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9340,
											"end": 9352,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9319,
											"end": 9354,
											"name": "tag",
											"source": 17,
											"value": "511"
										},
										{
											"begin": 9319,
											"end": 9354,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9386,
											"end": 9388,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9378,
											"end": 9384,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9374,
											"end": 9389,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9398,
											"end": 9608,
											"name": "tag",
											"source": 17,
											"value": "512"
										},
										{
											"begin": 9398,
											"end": 9608,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9414,
											"end": 9420,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9409,
											"end": 9412,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9406,
											"end": 9421,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 9398,
											"end": 9608,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9398,
											"end": 9608,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 9398,
											"end": 9608,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9487,
											"end": 9490,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9481,
											"end": 9491,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 9504,
											"end": 9535,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "515"
										},
										{
											"begin": 9529,
											"end": 9534,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9504,
											"end": 9535,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "408"
										},
										{
											"begin": 9504,
											"end": 9535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9504,
											"end": 9535,
											"name": "tag",
											"source": 17,
											"value": "515"
										},
										{
											"begin": 9504,
											"end": 9535,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9548,
											"end": 9566,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9548,
											"end": 9566,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9586,
											"end": 9598,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9586,
											"end": 9598,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9586,
											"end": 9598,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9586,
											"end": 9598,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9431,
											"end": 9443,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9431,
											"end": 9443,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9398,
											"end": 9608,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "512"
										},
										{
											"begin": 9398,
											"end": 9608,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9398,
											"end": 9608,
											"name": "tag",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 9398,
											"end": 9608,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9626,
											"end": 9631,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 8905,
											"end": 9637,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8905,
											"end": 9637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9642,
											"end": 10945,
											"name": "tag",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 9642,
											"end": 10945,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9769,
											"end": 9775,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9777,
											"end": 9783,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9830,
											"end": 9832,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 9818,
											"end": 9827,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9809,
											"end": 9816,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9805,
											"end": 9828,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 9801,
											"end": 9833,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 9798,
											"end": 9850,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9798,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "517"
										},
										{
											"begin": 9798,
											"end": 9850,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9846,
											"end": 9847,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9843,
											"end": 9844,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9836,
											"end": 9848,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9798,
											"end": 9850,
											"name": "tag",
											"source": 17,
											"value": "517"
										},
										{
											"begin": 9798,
											"end": 9850,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9879,
											"end": 9888,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9873,
											"end": 9889,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 9908,
											"end": 9926,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9949,
											"end": 9951,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9941,
											"end": 9947,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9938,
											"end": 9952,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 9935,
											"end": 9969,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9935,
											"end": 9969,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "518"
										},
										{
											"begin": 9935,
											"end": 9969,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9965,
											"end": 9966,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9962,
											"end": 9963,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9955,
											"end": 9967,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9935,
											"end": 9969,
											"name": "tag",
											"source": 17,
											"value": "518"
										},
										{
											"begin": 9935,
											"end": 9969,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10003,
											"end": 10009,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9992,
											"end": 10001,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9988,
											"end": 10010,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9978,
											"end": 10010,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9978,
											"end": 10010,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10048,
											"end": 10055,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10041,
											"end": 10045,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 10037,
											"end": 10039,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10033,
											"end": 10046,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10029,
											"end": 10056,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 10019,
											"end": 10074,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "519"
										},
										{
											"begin": 10019,
											"end": 10074,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10070,
											"end": 10071,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10068,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10060,
											"end": 10072,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 10019,
											"end": 10074,
											"name": "tag",
											"source": 17,
											"value": "519"
										},
										{
											"begin": 10019,
											"end": 10074,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10099,
											"end": 10101,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10093,
											"end": 10102,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 10121,
											"end": 10125,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10145,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "520"
										},
										{
											"begin": 10161,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "510"
										},
										{
											"begin": 10199,
											"end": 10201,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10161,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "414"
										},
										{
											"begin": 10161,
											"end": 10202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10145,
											"end": 10203,
											"name": "tag",
											"source": 17,
											"value": "520"
										},
										{
											"begin": 10145,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10237,
											"end": 10252,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10237,
											"end": 10252,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10237,
											"end": 10252,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10319,
											"end": 10320,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 10315,
											"end": 10325,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10315,
											"end": 10325,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10315,
											"end": 10325,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10315,
											"end": 10325,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 10307,
											"end": 10326,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10307,
											"end": 10326,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10303,
											"end": 10331,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10303,
											"end": 10331,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10303,
											"end": 10331,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10268,
											"end": 10280,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10268,
											"end": 10280,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10268,
											"end": 10280,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10268,
											"end": 10280,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10343,
											"end": 10362,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 10343,
											"end": 10362,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10343,
											"end": 10362,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10379,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "522"
										},
										{
											"begin": 10340,
											"end": 10379,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10375,
											"end": 10376,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10372,
											"end": 10373,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10365,
											"end": 10377,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10379,
											"name": "tag",
											"source": 17,
											"value": "522"
										},
										{
											"begin": 10340,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10399,
											"end": 10410,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 10399,
											"end": 10410,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10399,
											"end": 10410,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10399,
											"end": 10410,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 10419,
											"end": 10727,
											"name": "tag",
											"source": 17,
											"value": "523"
										},
										{
											"begin": 10419,
											"end": 10727,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10435,
											"end": 10441,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10430,
											"end": 10433,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 10427,
											"end": 10442,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 10419,
											"end": 10727,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10419,
											"end": 10727,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "525"
										},
										{
											"begin": 10419,
											"end": 10727,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10508,
											"end": 10511,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10502,
											"end": 10512,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10556,
											"end": 10557,
											"name": "PUSH",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 10545,
											"end": 10565,
											"name": "SIGNEXTEND",
											"source": 17
										},
										{
											"begin": 10538,
											"end": 10543,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10535,
											"end": 10566,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 10525,
											"end": 10654,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "526"
										},
										{
											"begin": 10525,
											"end": 10654,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10608,
											"end": 10609,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10637,
											"end": 10639,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10633,
											"end": 10635,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10626,
											"end": 10640,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 10525,
											"end": 10654,
											"name": "tag",
											"source": 17,
											"value": "526"
										},
										{
											"begin": 10525,
											"end": 10654,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10667,
											"end": 10685,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10667,
											"end": 10685,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10452,
											"end": 10464,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 10452,
											"end": 10464,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10452,
											"end": 10464,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10452,
											"end": 10464,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 10705,
											"end": 10717,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10705,
											"end": 10717,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10705,
											"end": 10717,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10705,
											"end": 10717,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10419,
											"end": 10727,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "523"
										},
										{
											"begin": 10419,
											"end": 10727,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10419,
											"end": 10727,
											"name": "tag",
											"source": 17,
											"value": "525"
										},
										{
											"begin": 10419,
											"end": 10727,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10782,
											"end": 10800,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10782,
											"end": 10800,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 10782,
											"end": 10800,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10776,
											"end": 10801,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 10746,
											"end": 10751,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10746,
											"end": 10751,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10776,
											"end": 10801,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10776,
											"end": 10801,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10813,
											"end": 10829,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 10810,
											"end": 10846,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10810,
											"end": 10846,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "527"
										},
										{
											"begin": 10810,
											"end": 10846,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10842,
											"end": 10843,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10839,
											"end": 10840,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10832,
											"end": 10844,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 10810,
											"end": 10846,
											"name": "tag",
											"source": 17,
											"value": "527"
										},
										{
											"begin": 10810,
											"end": 10846,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10810,
											"end": 10846,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10865,
											"end": 10939,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "528"
										},
										{
											"begin": 10931,
											"end": 10938,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10920,
											"end": 10928,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10909,
											"end": 10918,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 10905,
											"end": 10929,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10865,
											"end": 10939,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "415"
										},
										{
											"begin": 10865,
											"end": 10939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10865,
											"end": 10939,
											"name": "tag",
											"source": 17,
											"value": "528"
										},
										{
											"begin": 10865,
											"end": 10939,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10855,
											"end": 10939,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10855,
											"end": 10939,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10855,
											"end": 10939,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9642,
											"end": 10945,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9642,
											"end": 10945,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9642,
											"end": 10945,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9642,
											"end": 10945,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9642,
											"end": 10945,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9642,
											"end": 10945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10950,
											"end": 11354,
											"name": "tag",
											"source": 17,
											"value": "289"
										},
										{
											"begin": 10950,
											"end": 11354,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10988,
											"end": 10992,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11032,
											"end": 11033,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11029,
											"end": 11030,
											"name": "PUSH",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 11018,
											"end": 11034,
											"name": "SIGNEXTEND",
											"source": 17
										},
										{
											"begin": 11068,
											"end": 11069,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11065,
											"end": 11066,
											"name": "PUSH",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 11054,
											"end": 11070,
											"name": "SIGNEXTEND",
											"source": 17
										},
										{
											"begin": 11098,
											"end": 11099,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11093,
											"end": 11096,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11089,
											"end": 11100,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 11209,
											"end": 11212,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11141,
											"end": 11207,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80000000000000"
										},
										{
											"begin": 11137,
											"end": 11213,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11132,
											"end": 11135,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11128,
											"end": 11214,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 11123,
											"end": 11125,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11116,
											"end": 11126,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11112,
											"end": 11215,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 11109,
											"end": 11238,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11109,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "531"
										},
										{
											"begin": 11109,
											"end": 11238,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11218,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "531"
										},
										{
											"begin": 11218,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 11218,
											"end": 11236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11218,
											"end": 11236,
											"name": "tag",
											"source": 17,
											"value": "531"
										},
										{
											"begin": 11218,
											"end": 11236,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11289,
											"end": 11292,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11271,
											"end": 11287,
											"name": "PUSH",
											"source": 17,
											"value": "7FFFFFFFFFFFFF"
										},
										{
											"begin": 11267,
											"end": 11293,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11262,
											"end": 11265,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11258,
											"end": 11294,
											"name": "SGT",
											"source": 17
										},
										{
											"begin": 11254,
											"end": 11256,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11250,
											"end": 11295,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 11247,
											"end": 11318,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11247,
											"end": 11318,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 11247,
											"end": 11318,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11298,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 11298,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 11298,
											"end": 11316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11298,
											"end": 11316,
											"name": "tag",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 11298,
											"end": 11316,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11335,
											"end": 11348,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11335,
											"end": 11348,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 11335,
											"end": 11348,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 10950,
											"end": 11354,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10950,
											"end": 11354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11359,
											"end": 11613,
											"name": "tag",
											"source": 17,
											"value": "295"
										},
										{
											"begin": 11359,
											"end": 11613,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11399,
											"end": 11403,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11520,
											"end": 11530,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11520,
											"end": 11530,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11520,
											"end": 11530,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 11520,
											"end": 11530,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11490,
											"end": 11500,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11490,
											"end": 11500,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 11542,
											"end": 11554,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11542,
											"end": 11554,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11542,
											"end": 11554,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 11539,
											"end": 11577,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11539,
											"end": 11577,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "536"
										},
										{
											"begin": 11539,
											"end": 11577,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11557,
											"end": 11575,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "536"
										},
										{
											"begin": 11557,
											"end": 11575,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 11557,
											"end": 11575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11557,
											"end": 11575,
											"name": "tag",
											"source": 17,
											"value": "536"
										},
										{
											"begin": 11557,
											"end": 11575,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11594,
											"end": 11607,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 11594,
											"end": 11607,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 11359,
											"end": 11613,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11359,
											"end": 11613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11618,
											"end": 12007,
											"name": "tag",
											"source": 17,
											"value": "297"
										},
										{
											"begin": 11618,
											"end": 12007,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11656,
											"end": 11657,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11697,
											"end": 11698,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11694,
											"end": 11695,
											"name": "PUSH",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 11683,
											"end": 11699,
											"name": "SIGNEXTEND",
											"source": 17
										},
										{
											"begin": 11733,
											"end": 11734,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11730,
											"end": 11731,
											"name": "PUSH",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 11719,
											"end": 11735,
											"name": "SIGNEXTEND",
											"source": 17
										},
										{
											"begin": 11754,
											"end": 11757,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11744,
											"end": 11781,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "539"
										},
										{
											"begin": 11744,
											"end": 11781,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11761,
											"end": 11779,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "539"
										},
										{
											"begin": 11761,
											"end": 11779,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "412"
										},
										{
											"begin": 11761,
											"end": 11779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11761,
											"end": 11779,
											"name": "tag",
											"source": 17,
											"value": "539"
										},
										{
											"begin": 11761,
											"end": 11779,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11877,
											"end": 11880,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11874,
											"end": 11949,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 11805,
											"end": 11871,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80000000000000"
										},
										{
											"begin": 11800,
											"end": 11803,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11797,
											"end": 11872,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 11793,
											"end": 11950,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 11790,
											"end": 11973,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11790,
											"end": 11973,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "541"
										},
										{
											"begin": 11790,
											"end": 11973,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "541"
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 11953,
											"end": 11971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "tag",
											"source": 17,
											"value": "541"
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11987,
											"end": 12001,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11987,
											"end": 12001,
											"name": "SDIV",
											"source": 17
										},
										{
											"begin": 11987,
											"end": 12001,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 11618,
											"end": 12007,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11618,
											"end": 12007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12012,
											"end": 12178,
											"name": "tag",
											"source": 17,
											"value": "300"
										},
										{
											"begin": 12012,
											"end": 12178,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12042,
											"end": 12043,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12083,
											"end": 12084,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12080,
											"end": 12081,
											"name": "PUSH",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 12069,
											"end": 12085,
											"name": "SIGNEXTEND",
											"source": 17
										},
										{
											"begin": 12104,
											"end": 12107,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12094,
											"end": 12131,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "544"
										},
										{
											"begin": 12094,
											"end": 12131,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12111,
											"end": 12129,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "544"
										},
										{
											"begin": 12111,
											"end": 12129,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "412"
										},
										{
											"begin": 12111,
											"end": 12129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12111,
											"end": 12129,
											"name": "tag",
											"source": 17,
											"value": "544"
										},
										{
											"begin": 12111,
											"end": 12129,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12168,
											"end": 12171,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12164,
											"end": 12165,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12161,
											"end": 12162,
											"name": "PUSH",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 12150,
											"end": 12166,
											"name": "SIGNEXTEND",
											"source": 17
										},
										{
											"begin": 12145,
											"end": 12172,
											"name": "SMOD",
											"source": 17
										},
										{
											"begin": 12140,
											"end": 12172,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12140,
											"end": 12172,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12140,
											"end": 12172,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12012,
											"end": 12178,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12012,
											"end": 12178,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12012,
											"end": 12178,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12012,
											"end": 12178,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12012,
											"end": 12178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12183,
											"end": 12489,
											"name": "tag",
											"source": 17,
											"value": "303"
										},
										{
											"begin": 12183,
											"end": 12489,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12220,
											"end": 12223,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12267,
											"end": 12272,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12264,
											"end": 12265,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 12253,
											"end": 12273,
											"name": "SIGNEXTEND",
											"source": 17
										},
										{
											"begin": 12297,
											"end": 12363,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000"
										},
										{
											"begin": 12288,
											"end": 12295,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12285,
											"end": 12364,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 12282,
											"end": 12387,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 12282,
											"end": 12387,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12367,
											"end": 12385,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 12367,
											"end": 12385,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 12367,
											"end": 12385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12494,
											"end": 12797,
											"name": "tag",
											"source": 17,
											"value": "305"
										},
										{
											"begin": 12494,
											"end": 12797,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12534,
											"end": 12541,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12566,
											"end": 12616,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12643,
											"end": 12645,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12640,
											"end": 12641,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12636,
											"end": 12646,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 12673,
											"end": 12675,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12670,
											"end": 12671,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12666,
											"end": 12676,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 12729,
											"end": 12732,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12725,
											"end": 12727,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12721,
											"end": 12733,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 12716,
											"end": 12719,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12713,
											"end": 12734,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 12706,
											"end": 12709,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12699,
											"end": 12710,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12692,
											"end": 12711,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12688,
											"end": 12735,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 12685,
											"end": 12758,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12685,
											"end": 12758,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 12685,
											"end": 12758,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12738,
											"end": 12756,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 12738,
											"end": 12756,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 12738,
											"end": 12756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12738,
											"end": 12756,
											"name": "tag",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 12738,
											"end": 12756,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12778,
											"end": 12791,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 12778,
											"end": 12791,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 12494,
											"end": 12797,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12494,
											"end": 12797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12802,
											"end": 13034,
											"name": "tag",
											"source": 17,
											"value": "307"
										},
										{
											"begin": 12802,
											"end": 13034,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12842,
											"end": 12843,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12868,
											"end": 12918,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12945,
											"end": 12947,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12942,
											"end": 12943,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12938,
											"end": 12948,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 12967,
											"end": 12970,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12957,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 12957,
											"end": 12994,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12974,
											"end": 12992,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 12974,
											"end": 12992,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "412"
										},
										{
											"begin": 12974,
											"end": 12992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12974,
											"end": 12992,
											"name": "tag",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 12974,
											"end": 12992,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13012,
											"end": 13022,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 13012,
											"end": 13022,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 13008,
											"end": 13028,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13008,
											"end": 13028,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13008,
											"end": 13028,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13008,
											"end": 13028,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 13008,
											"end": 13028,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12802,
											"end": 13034,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12802,
											"end": 13034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13039,
											"end": 13230,
											"name": "tag",
											"source": 17,
											"value": "328"
										},
										{
											"begin": 13039,
											"end": 13230,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13074,
											"end": 13077,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13105,
											"end": 13171,
											"name": "PUSH",
											"source": 17,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13098,
											"end": 13103,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13095,
											"end": 13172,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 13092,
											"end": 13195,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 13092,
											"end": 13195,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13175,
											"end": 13193,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 13175,
											"end": 13193,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 13175,
											"end": 13193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13175,
											"end": 13193,
											"name": "tag",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 13175,
											"end": 13193,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13215,
											"end": 13216,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13211,
											"end": 13224,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 13211,
											"end": 13224,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13039,
											"end": 13230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13235,
											"end": 13473,
											"name": "tag",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 13235,
											"end": 13473,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13269,
											"end": 13272,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13316,
											"end": 13321,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13313,
											"end": 13314,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 13302,
											"end": 13322,
											"name": "SIGNEXTEND",
											"source": 17
										},
										{
											"begin": 13346,
											"end": 13412,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000"
										},
										{
											"begin": 13337,
											"end": 13344,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13334,
											"end": 13413,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 13331,
											"end": 13436,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 13331,
											"end": 13436,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13416,
											"end": 13434,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 13416,
											"end": 13434,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 13416,
											"end": 13434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13416,
											"end": 13434,
											"name": "tag",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 13416,
											"end": 13434,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13456,
											"end": 13457,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13452,
											"end": 13467,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 13452,
											"end": 13467,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 13235,
											"end": 13473,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13235,
											"end": 13473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13807,
											"end": 13919,
											"name": "tag",
											"source": 17,
											"value": "377"
										},
										{
											"begin": 13807,
											"end": 13919,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13839,
											"end": 13840,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13865,
											"end": 13866,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13855,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 13855,
											"end": 13890,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13870,
											"end": 13888,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 13870,
											"end": 13888,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "412"
										},
										{
											"begin": 13870,
											"end": 13888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13870,
											"end": 13888,
											"name": "tag",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 13870,
											"end": 13888,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13904,
											"end": 13913,
											"name": "MOD",
											"source": 17
										},
										{
											"begin": 13904,
											"end": 13913,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13807,
											"end": 13919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"TFGv3/Contracts/Interfaces/IERC20.sol",
								"TFGv3/Contracts/Interfaces/IProxy.sol",
								"TFGv3/Contracts/Interfaces/ISCCommission.sol",
								"TFGv3/Contracts/Interfaces/ISCExchange.sol",
								"TFGv3/Contracts/Interfaces/ISCOps.sol",
								"TFGv3/Contracts/Interfaces/ISCStorage.sol",
								"TFGv3/Contracts/SCStorage.sol",
								"TFGv3/Contracts/libraries/FullMath.sol",
								"TFGv3/Contracts/libraries/OracleLibrary.sol",
								"TFGv3/Contracts/libraries/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"NAV()": "52fd856b",
							"addCoin(address,uint256)": "b4014879",
							"coinArray(uint256)": "63b48ee6",
							"coinOracleAddr(address)": "0fbbfa3e",
							"coins(address)": "7d0f7a88",
							"delCoin(address)": "4051b9aa",
							"deleteContract(address)": "2637a477",
							"initContract(address)": "cf9d4afa",
							"initDone()": "fed0a20e",
							"oracleNAV()": "def1a5e8",
							"proxy()": "ec556889",
							"quoteIn(address)": "d825bfff",
							"transferFunds(address,uint256)": "990dc9db",
							"updateNAV(uint256)": "0cb1982b",
							"updateProxy(address)": "9e955149"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"NAV\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"coinAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stable\",\"type\":\"uint256\"}],\"name\":\"addCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"coinArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"coinOracleAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"coins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"coinAddr\",\"type\":\"address\"}],\"name\":\"delCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"deleteContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"name\":\"initContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initDone\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleNAV\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"quoteIn\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalToTransfer\",\"type\":\"uint256\"}],\"name\":\"transferFunds\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"comission\",\"type\":\"uint256\"}],\"name\":\"updateNAV\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newNAV\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"updateProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TFGv3/Contracts/SCStorage.sol\":\"SCStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"TFGv3/Contracts/Interfaces/IERC20.sol\":{\"keccak256\":\"0x59a03f41c93e1e60f5d0cd67af555cb474afb987990fb47dc128c74ea5a960f2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7de853bafd2ce286ab83b7acba0d271df56d08efafeaf050f94a7972668a8b8d\",\"dweb:/ipfs/QmXTDrwjPT3VWQTrRE94LrbDb1yFcKEHWDbRurXBgWaXBu\"]},\"TFGv3/Contracts/Interfaces/IProxy.sol\":{\"keccak256\":\"0x457ec80cafbaf6e5f70cf6364557fdc497e802c3617a15966fc6c79fa995d044\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://23e2a5b5168b3235a983595e31036adf66060d62ae9e5f6d097df1b1e6559f34\",\"dweb:/ipfs/QmajmGCZ4LhmUJL3eFh8kKRLRuR31SMUnqNbcFjeKCoQD5\"]},\"TFGv3/Contracts/Interfaces/ISCCommission.sol\":{\"keccak256\":\"0x9f9b9e99159eabe43404d867a64018b9b659c8eb1634603dd5ac3959536f943a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://199b2f59b06b0a015d00136b9b6198b051183f26baf374c78462286aae037f5e\",\"dweb:/ipfs/QmYA9CWEVqwN84CGoEwAUWi9w2R9t3xp7xfnEc9bxHwjMi\"]},\"TFGv3/Contracts/Interfaces/ISCExchange.sol\":{\"keccak256\":\"0x31ea8830f6820ac5dbe085226419a2ec19d0a3d12aec8148ab69cd31da5c856b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fbf0a05b5b50f2b9beecc7ef90eb7af924a40f2e1a248cce747d9f44284c1379\",\"dweb:/ipfs/QmbKkQSU64e7Z31pKveJnC7jdVLnW7uaYALtbcnYiXjf7y\"]},\"TFGv3/Contracts/Interfaces/ISCOps.sol\":{\"keccak256\":\"0x3e4655a10df0f0cf6c011a9bb55cd9592061d2b7a6540ffbc04c8267d4513940\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9945f611e8120c4e6a9108006e8938e2e062858de2d31c4c3cba9a3167afc971\",\"dweb:/ipfs/Qmb7KDX9ai8RHcnFiY9cwqiFAtmvXsUMQaUr4XhZkzTm6q\"]},\"TFGv3/Contracts/Interfaces/ISCStorage.sol\":{\"keccak256\":\"0x44fa27b592c9491dd280b6b8c0363b817cb957a52abdb27579776d4e5e083d31\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://28e367601b9c8293cbb61bb7eaf04515fa2a5eb5af002b70198ffc36e9944e0e\",\"dweb:/ipfs/QmW3KoqMe7fyGJabsrbZzFi7yiFtffiepqq997biioCJM1\"]},\"TFGv3/Contracts/SCStorage.sol\":{\"keccak256\":\"0x3e5e839c87cabdda4791c4604b9bf774dbf17939b36d5c608c67ad5a1e644baa\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7d91c6545a3a6324a820e603712d21dd319a8a1fa23baa405147710bde9d5075\",\"dweb:/ipfs/QmdtKvdVNpuWd9iM1ohfvWwHZCUT17BRbsig6ArXw6WqxW\"]},\"TFGv3/Contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xaa9d8894cfc7826e4d1abacb026b022ef4ff07569037b8796474d43257fb1f19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d4defb32c4331c11a78f235cc5a844c67036221eb9b7fdd5ef81ea024b1c05b\",\"dweb:/ipfs/QmRX1y6Wsg8eyAvTcDynRBvH65cFt7B2DH2Ux92C12m588\"]},\"TFGv3/Contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0xcacc4667cb467669c33dbbdf898aacfd7e9930e8a5d0d9e0bbd08834014f3c13\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da89bdd8b6f4affa09bba21577f2a0ac91503af49d0483363948925466a24c79\",\"dweb:/ipfs/QmPL4D9sFMemJRbp7n6vAYtQ2J5rUzAaaJLF4inhBgsrQj\"]},\"TFGv3/Contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x4e462c54ef76ba13b63b3a5be7b2547278c34fe744c2b3688a629ba3fde5437c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6587b7f7caa7e970fa2917c6b978e3665d33b41ebcfccd8193c28eba81540631\",\"dweb:/ipfs/QmebDyrzkzSYgAPi1ik1ZbB4GXy82UhYVU6z6vwyipvpHN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 830,
								"contract": "TFGv3/Contracts/SCStorage.sol:SCStorage",
								"label": "NAV",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 832,
								"contract": "TFGv3/Contracts/SCStorage.sol:SCStorage",
								"label": "initDone",
								"offset": 0,
								"slot": "1",
								"type": "t_uint8"
							},
							{
								"astId": 834,
								"contract": "TFGv3/Contracts/SCStorage.sol:SCStorage",
								"label": "nStable",
								"offset": 1,
								"slot": "1",
								"type": "t_uint8"
							},
							{
								"astId": 836,
								"contract": "TFGv3/Contracts/SCStorage.sol:SCStorage",
								"label": "proxy",
								"offset": 2,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 839,
								"contract": "TFGv3/Contracts/SCStorage.sol:SCStorage",
								"label": "coinArray",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 843,
								"contract": "TFGv3/Contracts/SCStorage.sol:SCStorage",
								"label": "coins",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 847,
								"contract": "TFGv3/Contracts/SCStorage.sol:SCStorage",
								"label": "coinOracleAddr",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 851,
								"contract": "TFGv3/Contracts/SCStorage.sol:SCStorage",
								"label": "quoteIn",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TFGv3/Contracts/libraries/FullMath.sol": {
				"FullMath": {
					"abi": [],
					"devdoc": {
						"details": "Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits",
						"kind": "dev",
						"methods": {},
						"title": "Contains 512-bit math functions",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TFGv3/Contracts/libraries/FullMath.sol\":355:5142  library FullMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"TFGv3/Contracts/libraries/FullMath.sol\":355:5142  library FullMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205f0168c064fe8453425e09edb7fa60b51d81130041f9900f31800e58e0f6ac6a64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f0168c064fe8453425e09edb7fa60b51d81130041f9900f31800e58e0f6ac6a64736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F ADD PUSH9 0xC064FE8453425E09ED 0xB7 STATICCALL PUSH1 0xB5 SAR DUP2 SGT STOP COINBASE 0xF9 SWAP1 0xF BALANCE DUP1 0xE PC 0xE0 0xF6 0xAC PUSH11 0x64736F6C634300080E0033 ",
							"sourceMap": "355:4787:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;355:4787:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f0168c064fe8453425e09edb7fa60b51d81130041f9900f31800e58e0f6ac6a64736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F ADD PUSH9 0xC064FE8453425E09ED 0xB7 STATICCALL PUSH1 0xB5 SAR DUP2 SGT STOP COINBASE 0xF9 SWAP1 0xF BALANCE DUP1 0xE PC 0xE0 0xF6 0xAC PUSH11 0x64736F6C634300080E0033 ",
							"sourceMap": "355:4787:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDivRoundingUp(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 355,
									"end": 5142,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205f0168c064fe8453425e09edb7fa60b51d81130041f9900f31800e58e0f6ac6a64736f6c634300080e0033",
									".code": [
										{
											"begin": 355,
											"end": 5142,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 355,
											"end": 5142,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 355,
											"end": 5142,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 355,
											"end": 5142,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 355,
											"end": 5142,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 355,
											"end": 5142,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 355,
											"end": 5142,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 5142,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 355,
											"end": 5142,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"TFGv3/Contracts/Interfaces/IERC20.sol",
								"TFGv3/Contracts/Interfaces/IProxy.sol",
								"TFGv3/Contracts/Interfaces/ISCCommission.sol",
								"TFGv3/Contracts/Interfaces/ISCExchange.sol",
								"TFGv3/Contracts/Interfaces/ISCOps.sol",
								"TFGv3/Contracts/Interfaces/ISCStorage.sol",
								"TFGv3/Contracts/SCStorage.sol",
								"TFGv3/Contracts/libraries/FullMath.sol",
								"TFGv3/Contracts/libraries/OracleLibrary.sol",
								"TFGv3/Contracts/libraries/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Handles \\\"phantom overflow\\\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Contains 512-bit math functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"TFGv3/Contracts/libraries/FullMath.sol\":\"FullMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"TFGv3/Contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xaa9d8894cfc7826e4d1abacb026b022ef4ff07569037b8796474d43257fb1f19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d4defb32c4331c11a78f235cc5a844c67036221eb9b7fdd5ef81ea024b1c05b\",\"dweb:/ipfs/QmRX1y6Wsg8eyAvTcDynRBvH65cFt7B2DH2Ux92C12m588\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision",
						"version": 1
					}
				}
			},
			"TFGv3/Contracts/libraries/OracleLibrary.sol": {
				"OracleLibrary": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Oracle library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":279:9291  library OracleLibrary {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"TFGv3/Contracts/libraries/OracleLibrary.sol\":279:9291  library OracleLibrary {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cc6debaa217ed121c25043218783ef1d8414643490bfdef985da046f7b0fa65f64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cc6debaa217ed121c25043218783ef1d8414643490bfdef985da046f7b0fa65f64736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC PUSH14 0xEBAA217ED121C25043218783EF1D DUP5 EQ PUSH5 0x3490BFDEF9 DUP6 0xDA DIV PUSH16 0x7B0FA65F64736F6C634300080E003300 ",
							"sourceMap": "279:9012:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;279:9012:15;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cc6debaa217ed121c25043218783ef1d8414643490bfdef985da046f7b0fa65f64736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC PUSH14 0xEBAA217ED121C25043218783EF1D DUP5 EQ PUSH5 0x3490BFDEF9 DUP6 0xDA DIV PUSH16 0x7B0FA65F64736F6C634300080E003300 ",
							"sourceMap": "279:9012:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"consult(address,uint32)": "infinite",
								"getBlockStartingTickAndLiquidity(address)": "infinite",
								"getChainedPrice(address[] memory,int24[] memory)": "infinite",
								"getOldestObservationSecondsAgo(address)": "infinite",
								"getQuoteAtTick(int24,uint128,address,address)": "infinite",
								"getWeightedArithmeticMeanTick(struct OracleLibrary.WeightedTickData memory[] memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 279,
									"end": 9291,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cc6debaa217ed121c25043218783ef1d8414643490bfdef985da046f7b0fa65f64736f6c634300080e0033",
									".code": [
										{
											"begin": 279,
											"end": 9291,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 279,
											"end": 9291,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 279,
											"end": 9291,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 279,
											"end": 9291,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 279,
											"end": 9291,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 279,
											"end": 9291,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 279,
											"end": 9291,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 9291,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 279,
											"end": 9291,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"TFGv3/Contracts/Interfaces/IERC20.sol",
								"TFGv3/Contracts/Interfaces/IProxy.sol",
								"TFGv3/Contracts/Interfaces/ISCCommission.sol",
								"TFGv3/Contracts/Interfaces/ISCExchange.sol",
								"TFGv3/Contracts/Interfaces/ISCOps.sol",
								"TFGv3/Contracts/Interfaces/ISCStorage.sol",
								"TFGv3/Contracts/SCStorage.sol",
								"TFGv3/Contracts/libraries/FullMath.sol",
								"TFGv3/Contracts/libraries/OracleLibrary.sol",
								"TFGv3/Contracts/libraries/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Oracle library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides functions to integrate with V3 pool oracle\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"TFGv3/Contracts/libraries/OracleLibrary.sol\":\"OracleLibrary\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"TFGv3/Contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xaa9d8894cfc7826e4d1abacb026b022ef4ff07569037b8796474d43257fb1f19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d4defb32c4331c11a78f235cc5a844c67036221eb9b7fdd5ef81ea024b1c05b\",\"dweb:/ipfs/QmRX1y6Wsg8eyAvTcDynRBvH65cFt7B2DH2Ux92C12m588\"]},\"TFGv3/Contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0xcacc4667cb467669c33dbbdf898aacfd7e9930e8a5d0d9e0bbd08834014f3c13\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da89bdd8b6f4affa09bba21577f2a0ac91503af49d0483363948925466a24c79\",\"dweb:/ipfs/QmPL4D9sFMemJRbp7n6vAYtQ2J5rUzAaaJLF4inhBgsrQj\"]},\"TFGv3/Contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x4e462c54ef76ba13b63b3a5be7b2547278c34fe744c2b3688a629ba3fde5437c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6587b7f7caa7e970fa2917c6b978e3665d33b41ebcfccd8193c28eba81540631\",\"dweb:/ipfs/QmebDyrzkzSYgAPi1ik1ZbB4GXy82UhYVU6z6vwyipvpHN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Provides functions to integrate with V3 pool oracle",
						"version": 1
					}
				}
			},
			"TFGv3/Contracts/libraries/TickMath.sol": {
				"TickMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"MAX_SQRT_RATIO": {
								"details": "The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
							},
							"MAX_TICK": {
								"details": "The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
							},
							"MIN_SQRT_RATIO": {
								"details": "The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
							},
							"MIN_TICK": {
								"details": "The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
							}
						},
						"title": "Math library for computing sqrt prices from ticks and vice versa",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TFGv3/Contracts/libraries/TickMath.sol\":306:8645  library TickMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"TFGv3/Contracts/libraries/TickMath.sol\":306:8645  library TickMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203b6dd9820fb4d7855ba1a777f15a10805e8f5dbf7db334edf0c46c99e1c4ed6364736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203b6dd9820fb4d7855ba1a777f15a10805e8f5dbf7db334edf0c46c99e1c4ed6364736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE PUSH14 0xD9820FB4D7855BA1A777F15A1080 0x5E DUP16 0x5D 0xBF PUSH30 0xB334EDF0C46C99E1C4ED6364736F6C634300080E00330000000000000000 ",
							"sourceMap": "306:8339:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;306:8339:16;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203b6dd9820fb4d7855ba1a777f15a10805e8f5dbf7db334edf0c46c99e1c4ed6364736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE PUSH14 0xD9820FB4D7855BA1A777F15A1080 0x5E DUP16 0x5D 0xBF PUSH30 0xB334EDF0C46C99E1C4ED6364736F6C634300080E00330000000000000000 ",
							"sourceMap": "306:8339:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getSqrtRatioAtTick(int24)": "infinite",
								"getTickAtSqrtRatio(uint160)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203b6dd9820fb4d7855ba1a777f15a10805e8f5dbf7db334edf0c46c99e1c4ed6364736f6c634300080e0033",
									".code": [
										{
											"begin": 306,
											"end": 8645,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"TFGv3/Contracts/Interfaces/IERC20.sol",
								"TFGv3/Contracts/Interfaces/IProxy.sol",
								"TFGv3/Contracts/Interfaces/ISCCommission.sol",
								"TFGv3/Contracts/Interfaces/ISCExchange.sol",
								"TFGv3/Contracts/Interfaces/ISCOps.sol",
								"TFGv3/Contracts/Interfaces/ISCStorage.sol",
								"TFGv3/Contracts/SCStorage.sol",
								"TFGv3/Contracts/libraries/FullMath.sol",
								"TFGv3/Contracts/libraries/OracleLibrary.sol",
								"TFGv3/Contracts/libraries/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"TFGv3/Contracts/libraries/TickMath.sol\":\"TickMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"TFGv3/Contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x4e462c54ef76ba13b63b3a5be7b2547278c34fe744c2b3688a629ba3fde5437c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6587b7f7caa7e970fa2917c6b978e3665d33b41ebcfccd8193c28eba81540631\",\"dweb:/ipfs/QmebDyrzkzSYgAPi1ik1ZbB4GXy82UhYVU6z6vwyipvpHN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "Warning: Return value of low-level calls not used.\n   --> TFGv3/Contracts/SCStorage.sol:142:9:\n    |\n142 |         newAddr.delegatecall(abi.encodeWithSignature(\"initContract(address)\", proxyAddr));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4588,
					"file": "TFGv3/Contracts/SCStorage.sol",
					"start": 4507
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							21
						],
						"IUniswapV3PoolActions": [
							117
						],
						"IUniswapV3PoolDerivedState": [
							148
						],
						"IUniswapV3PoolEvents": [
							267
						],
						"IUniswapV3PoolImmutables": [
							307
						],
						"IUniswapV3PoolOwnerActions": [
							333
						],
						"IUniswapV3PoolState": [
							441
						]
					},
					"id": 22,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:0"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 22,
							"sourceUnit": 308,
							"src": "71:45:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 22,
							"sourceUnit": 442,
							"src": "117:40:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 22,
							"sourceUnit": 149,
							"src": "158:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 22,
							"sourceUnit": 118,
							"src": "206:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 22,
							"sourceUnit": 334,
							"src": "249:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 22,
							"sourceUnit": 268,
							"src": "297:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "IUniswapV3PoolImmutables",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 307,
										"src": "637:24:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "637:24:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IUniswapV3PoolState",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 441,
										"src": "667:19:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "667:19:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IUniswapV3PoolDerivedState",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 148,
										"src": "692:26:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "692:26:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "IUniswapV3PoolActions",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 117,
										"src": "724:21:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "724:21:0"
								},
								{
									"baseName": {
										"id": 17,
										"name": "IUniswapV3PoolOwnerActions",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 333,
										"src": "751:26:0"
									},
									"id": 18,
									"nodeType": "InheritanceSpecifier",
									"src": "751:26:0"
								},
								{
									"baseName": {
										"id": 19,
										"name": "IUniswapV3PoolEvents",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 267,
										"src": "783:20:0"
									},
									"id": 20,
									"nodeType": "InheritanceSpecifier",
									"src": "783:20:0"
								}
							],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "340:265:0",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 21,
							"linearizedBaseContracts": [
								21,
								267,
								333,
								117,
								148,
								441,
								307
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "615:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 22,
							"src": "605:203:0",
							"usedErrors": []
						}
					],
					"src": "45:764:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							117
						]
					},
					"id": 118,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 23,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 24,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:1",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 117,
							"linearizedBaseContracts": [
								117
							],
							"name": "IUniswapV3PoolActions",
							"nameLocation": "183:21:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "211:206:1",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "431:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "450:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "442:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 26,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:22:1"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:1"
									},
									"scope": 117,
									"src": "422:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "479:1029:1",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1522:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1544:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1536:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1569:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1563:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 34,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1594:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1588:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 36,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1621:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1613:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 38,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1652:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1637:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 40,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1637:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:136:1"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1689:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1681:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1706:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1698:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:34:1"
									},
									"scope": 117,
									"src": "1513:202:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1721:1053:1",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "2788:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2813:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2805:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2838:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2832:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 52,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2863:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2857:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 54,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "2890:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2882:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 56,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "2924:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2916:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 58,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:151:1"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2973:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2965:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 61,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 63,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:34:1"
									},
									"scope": 117,
									"src": "2779:220:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3005:631:1",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3650:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3670:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3664:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 68,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3695:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3689:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 70,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3689:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3722:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3714:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 72,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:80:1"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3761:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3753:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3778:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3770:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:34:1"
									},
									"scope": 117,
									"src": "3641:146:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3793:1015:1",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "4822:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4844:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4836:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "4868:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4863:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 84,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "4895:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4888:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 86,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4888:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "4928:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4920:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 88,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4970:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4955:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 90,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4955:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:154:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5006:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4999:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 93,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5022:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "5015:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 95,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4998:32:1"
									},
									"scope": 117,
									"src": "4813:218:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "5037:657:1",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 110,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nameLocation": "5708:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5731:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "5723:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5758:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "5750:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5783:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "5775:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5815:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "5800:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 106,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:112:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:0:1"
									},
									"scope": 117,
									"src": "5699:136:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "5841:367:1",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nameLocation": "6222:34:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "6264:26:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "6257:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 112,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6256:35:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:1"
									},
									"scope": 117,
									"src": "6213:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 118,
							"src": "173:6130:1",
							"usedErrors": []
						}
					],
					"src": "45:6259:1"
				},
				"id": 1
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							148
						]
					},
					"id": 149,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 119,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolDerivedState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 120,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:2",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 148,
							"linearizedBaseContracts": [
								148
							],
							"name": "IUniswapV3PoolDerivedState",
							"nameLocation": "303:26:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "336:1045:2",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nameLocation": "1395:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nameLocation": "1421:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "1403:29:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 122,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1403:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 123,
													"nodeType": "ArrayTypeName",
													"src": "1403:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:31:2"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nameLocation": "1496:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "1481:30:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 126,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1481:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 127,
													"nodeType": "ArrayTypeName",
													"src": "1481:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nameLocation": "1530:34:2",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "1513:51:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 129,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1513:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 130,
													"nodeType": "ArrayTypeName",
													"src": "1513:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:85:2"
									},
									"scope": 148,
									"src": "1386:180:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "1572:771:2",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nameLocation": "2357:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2389:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "2383:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 135,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2406:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "2400:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 137,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2400:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:34:2"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nameLocation": "2483:20:2",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "2477:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 140,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2477:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nameLocation": "2525:29:2",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "2517:37:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 142,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "secondsInside",
												"nameLocation": "2575:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "2568:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 144,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:135:2"
									},
									"scope": 148,
									"src": "2348:251:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 149,
							"src": "293:2308:2",
							"usedErrors": []
						}
					],
					"src": "45:2557:2"
				},
				"id": 2
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							267
						]
					},
					"id": 268,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 150,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 151,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:3",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 267,
							"linearizedBaseContracts": [
								267
							],
							"name": "IUniswapV3PoolEvents",
							"nameLocation": "169:20:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "196:344:3",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"eventSelector": "98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95",
									"id": 158,
									"name": "Initialize",
									"nameLocation": "551:10:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "570:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "562:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 153,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "590:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "584:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 155,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:34:3"
									},
									"src": "545:51:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "602:551:3",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"eventSelector": "7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde",
									"id": 175,
									"name": "Mint",
									"nameLocation": "1164:4:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1186:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1178:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1218:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1202:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1247:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1233:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 164,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1280:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1266:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 166,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1307:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1299:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 168,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1331:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1323:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1356:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1348:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:201:3"
									},
									"src": "1158:212:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "1376:493:3",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"eventSelector": "70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0",
									"id": 190,
									"name": "Collect",
									"nameLocation": "1880:7:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1913:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1897:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1936:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1928:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1969:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1955:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 181,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1955:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2002:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1988:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 183,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1988:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2029:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2021:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 185,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2054:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2046:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 187,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:180:3"
									},
									"src": "1874:194:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2074:523:3",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"eventSelector": "0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c",
									"id": 205,
									"name": "Burn",
									"nameLocation": "2608:4:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2638:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "2622:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2667:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "2653:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 194,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2653:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2700:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "2686:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 196,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2686:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "2719:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 198,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2751:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "2743:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2776:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "2768:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:177:3"
									},
									"src": "2602:188:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "2796:600:3",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"eventSelector": "c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67",
									"id": 222,
									"name": "Swap",
									"nameLocation": "3407:4:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3437:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "3421:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3469:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "3453:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3495:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "3488:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 211,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3519:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "3512:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 213,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3544:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "3536:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 215,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3574:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "3566:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 217,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3599:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "3593:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 219,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3593:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:198:3"
									},
									"src": "3401:209:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "3616:562:3",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"eventSelector": "bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633",
									"id": 237,
									"name": "Flash",
									"nameLocation": "4189:5:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4220:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "4204:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4252:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "4236:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4279:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "4271:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4304:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "4296:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nameLocation": "4329:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "4321:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nameLocation": "4352:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "4344:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4194:169:3"
									},
									"src": "4183:181:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "4370:451:3",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"eventSelector": "ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a",
									"id": 244,
									"name": "IncreaseObservationCardinalityNext",
									"nameLocation": "4832:34:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nameLocation": "4883:29:3",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "4876:36:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 239,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4876:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nameLocation": "4929:29:3",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "4922:36:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 241,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4922:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:98:3"
									},
									"src": "4826:139:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "4971:370:3",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"eventSelector": "973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133",
									"id": 255,
									"name": "SetFeeProtocol",
									"nameLocation": "5352:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nameLocation": "5373:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "5367:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 246,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nameLocation": "5396:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "5390:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 248,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5390:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nameLocation": "5419:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "5413:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 250,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5413:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nameLocation": "5442:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "5436:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 252,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5366:92:3"
									},
									"src": "5346:113:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:3",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"eventSelector": "596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151",
									"id": 266,
									"name": "CollectProtocol",
									"nameLocation": "5860:15:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5892:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5876:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5916:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5900:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5935:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5927:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 261,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5952:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5944:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 263,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:85:3"
									},
									"src": "5854:107:3"
								}
							],
							"scope": 268,
							"src": "159:5804:3",
							"usedErrors": []
						}
					],
					"src": "45:5919:3"
				},
				"id": 3
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							307
						]
					},
					"id": 308,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 269,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolImmutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "71:153:4",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 307,
							"linearizedBaseContracts": [
								307
							],
							"name": "IUniswapV3PoolImmutables",
							"nameLocation": "234:24:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "265:138:4",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 276,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "417:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:4"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "450:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:9:4"
									},
									"scope": 307,
									"src": "408:51:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "465:113:4",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "592:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "624:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:9:4"
									},
									"scope": 307,
									"src": "583:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "639:114:4",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "767:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:4"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "799:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:9:4"
									},
									"scope": 307,
									"src": "758:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "814:84:4",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "912:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:4"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "941:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 291,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:8:4"
									},
									"scope": 307,
									"src": "903:46:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "955:358:4",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 300,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nameLocation": "1327:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:4"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "1364:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 297,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:7:4"
									},
									"scope": 307,
									"src": "1318:53:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "1377:363:4",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nameLocation": "1754:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:4"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1799:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 303,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:9:4"
									},
									"scope": 307,
									"src": "1745:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 308,
							"src": "224:1586:4",
							"usedErrors": []
						}
					],
					"src": "45:1766:4"
				},
				"id": 4
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							333
						]
					},
					"id": 334,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 309,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolOwnerActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 310,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:5",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 333,
							"linearizedBaseContracts": [
								333
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nameLocation": "197:26:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "230:205:5",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nameLocation": "449:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nameLocation": "470:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "464:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 312,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nameLocation": "490:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "484:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 314,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "484:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:40:5"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:5"
									},
									"scope": 333,
									"src": "440:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "519:483:5",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 332,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nameLocation": "1016:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1049:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "1041:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "1076:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "1068:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 322,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "1110:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "1102:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 324,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:101:5"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1159:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "1151:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 327,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1176:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "1168:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 329,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:34:5"
									},
									"scope": 333,
									"src": "1007:178:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 334,
							"src": "187:1000:5",
							"usedErrors": []
						}
					],
					"src": "45:1143:5"
				},
				"id": 5
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							441
						]
					},
					"id": 442,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 335,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 336,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:6",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 441,
							"linearizedBaseContracts": [
								441
							],
							"name": "IUniswapV3PoolState",
							"nameLocation": "250:19:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "276:1140:6",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "1430:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:2:6"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1506:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1498:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 339,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1538:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1532:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 341,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1532:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "1563:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1556:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 343,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1556:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "1600:22:6",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1593:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 345,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "1643:26:6",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1636:33:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 347,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1636:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "1689:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1683:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 349,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1683:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "1719:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1714:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 351,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:253:6"
									},
									"scope": 441,
									"src": "1421:317:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "1744:168:6",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 360,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nameLocation": "1926:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:2:6"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1972:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:9:6"
									},
									"scope": 441,
									"src": "1917:64:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "1987:168:6",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 366,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nameLocation": "2169:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2189:2:6"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "2215:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:9:6"
									},
									"scope": 441,
									"src": "2160:64:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "2230:147:6",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 374,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nameLocation": "2391:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:2:6"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "2437:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "2429:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 369,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "2453:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "2445:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 371,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:32:6"
									},
									"scope": 441,
									"src": "2382:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "2467:150:6",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 380,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nameLocation": "2631:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:6"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "2666:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 377,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:9:6"
									},
									"scope": 441,
									"src": "2622:53:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "2681:1244:6",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nameLocation": "3939:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3951:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "3945:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 382,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3945:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:12:6"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nameLocation": "4025:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4017:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 385,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nameLocation": "4060:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4053:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 387,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4053:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nameLocation": "4094:21:6",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4086:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nameLocation": "4137:21:6",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4129:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nameLocation": "4178:21:6",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4172:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 393,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4172:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nameLocation": "4221:30:6",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4213:38:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 395,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nameLocation": "4272:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4265:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 397,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4265:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "4305:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4300:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 399,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4300:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:323:6"
									},
									"scope": 441,
									"src": "3930:397:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "4333:99:6",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 410,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nameLocation": "4446:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "wordPosition",
												"nameLocation": "4463:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4457:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 404,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4457:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:20:6"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4500:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:9:6"
									},
									"scope": 441,
									"src": "4437:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "4515:700:6",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "5229:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5247:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "5239:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 412,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5238:13:6"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "5320:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "5312:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 415,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "5352:24:6",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "5344:32:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "5398:24:6",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "5390:32:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "5444:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "5436:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 421,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "5477:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "5469:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 423,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5469:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:200:6"
									},
									"scope": 441,
									"src": "5220:279:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "5505:749:6",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 440,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nameLocation": "6268:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6289:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "6281:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6281:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6280:15:6"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "6363:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "6356:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 431,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6356:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nameLocation": "6397:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "6391:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 433,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6391:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nameLocation": "6433:33:6",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "6425:41:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 435,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "6485:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "6480:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 437,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6480:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6342:164:6"
									},
									"scope": 441,
									"src": "6259:248:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 442,
							"src": "240:6269:6",
							"usedErrors": []
						}
					],
					"src": "45:6465:6"
				},
				"id": 6
			},
			"TFGv3/Contracts/Interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "TFGv3/Contracts/Interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							556
						]
					},
					"id": 557,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 443,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:25:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 556,
							"linearizedBaseContracts": [
								556
							],
							"name": "IERC20",
							"nameLocation": "82:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "06fdde03",
									"id": 448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "104:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "108:2:7"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "134:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 445,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "134:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "133:15:7"
									},
									"scope": 556,
									"src": "95:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "164:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "170:2:7"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "196:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 450,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "196:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "195:15:7"
									},
									"scope": 556,
									"src": "155:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 458,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "226:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "234:2:7"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "260:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 455,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "260:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "259:7:7"
									},
									"scope": 556,
									"src": "217:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "286:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "297:2:7"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "323:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "322:9:7"
									},
									"scope": 556,
									"src": "277:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "347:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "357:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:17:7"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "397:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "397:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "396:9:7"
									},
									"scope": 556,
									"src": "338:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "421:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "438:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "430:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "450:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "442:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:28:7"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "476:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 476,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "476:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "475:6:7"
									},
									"scope": 556,
									"src": "412:70:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 490,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "501:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "522:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "514:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "514:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "536:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "528:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "528:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "548:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "540:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "513:42:7"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "574:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 487,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "574:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "573:6:7"
									},
									"scope": 556,
									"src": "492:88:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "595:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "605:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "628:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "620:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "604:32:7"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "660:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:9:7"
									},
									"scope": 556,
									"src": "586:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "684:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "700:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "692:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "717:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "709:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "691:33:7"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "743:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 505,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "743:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:6:7"
									},
									"scope": 556,
									"src": "675:74:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "768:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "781:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "773:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "795:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "790:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "790:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:30:7"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "821:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 514,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "821:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:6:7"
									},
									"scope": 556,
									"src": "759:68:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "846:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "859:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "851:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "851:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "850:16:7"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "885:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "885:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:6:7"
									},
									"scope": 556,
									"src": "837:54:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "79cc6790",
									"id": 533,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "910:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "927:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "919:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "919:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "941:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "933:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "933:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "918:30:7"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "967:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 530,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "967:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:6:7"
									},
									"scope": 556,
									"src": "901:72:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 541,
									"name": "Transfer",
									"nameLocation": "985:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1010:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "994:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1032:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "1016:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1044:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "1036:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1036:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:57:7"
									},
									"src": "979:72:7"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 549,
									"name": "Approval",
									"nameLocation": "1063:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1088:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1072:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1072:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1111:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1095:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1095:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1128:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1120:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1071:63:7"
									},
									"src": "1057:78:7"
								},
								{
									"anonymous": false,
									"eventSelector": "0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885",
									"id": 555,
									"name": "Mint",
									"nameLocation": "1147:4:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1168:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "1152:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1152:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1180:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "1172:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1151:35:7"
									},
									"src": "1141:46:7"
								}
							],
							"scope": 557,
							"src": "72:1117:7",
							"usedErrors": []
						}
					],
					"src": "45:1144:7"
				},
				"id": 7
			},
			"TFGv3/Contracts/Interfaces/IProxy.sol": {
				"ast": {
					"absolutePath": "TFGv3/Contracts/Interfaces/IProxy.sol",
					"exportedSymbols": {
						"IERC20": [
							556
						],
						"IProxy": [
							644
						],
						"ISCCommission": [
							702
						],
						"ISCExchange": [
							748
						],
						"ISCOps": [
							774
						],
						"ISCStorage": [
							820
						]
					},
					"id": 645,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 558,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:25:8"
						},
						{
							"absolutePath": "TFGv3/Contracts/Interfaces/ISCStorage.sol",
							"file": "./ISCStorage.sol",
							"id": 559,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 821,
							"src": "73:26:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "TFGv3/Contracts/Interfaces/ISCCommission.sol",
							"file": "./ISCCommission.sol",
							"id": 560,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 703,
							"src": "100:29:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "TFGv3/Contracts/Interfaces/ISCOps.sol",
							"file": "./ISCOps.sol",
							"id": 561,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 775,
							"src": "130:22:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "TFGv3/Contracts/Interfaces/ISCExchange.sol",
							"file": "./ISCExchange.sol",
							"id": 562,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 749,
							"src": "153:27:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "TFGv3/Contracts/Interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 563,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 557,
							"src": "181:22:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IProxy",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 644,
							"linearizedBaseContracts": [
								644
							],
							"name": "IProxy",
							"nameLocation": "215:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "1b46a447",
									"id": 576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initAddrs",
									"nameLocation": "234:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "exchangeAddr",
												"nameLocation": "252:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "244:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "244:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "storageAddr",
												"nameLocation": "274:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "266:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "266:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "commissionAddr",
												"nameLocation": "295:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "287:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "287:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "opsAddr",
												"nameLocation": "319:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "311:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "tokenAddr",
												"nameLocation": "336:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "328:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "328:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "243:103:8"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "355:0:8"
									},
									"scope": 644,
									"src": "225:131:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "600e1b2b",
									"id": 588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "multicall",
									"nameLocation": "369:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "396:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "379:21:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 577,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "379:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 578,
													"nodeType": "ArrayTypeName",
													"src": "379:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "contractAddr",
												"nameLocation": "421:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "402:31:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 580,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "402:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 581,
													"nodeType": "ArrayTypeName",
													"src": "402:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:56:8"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "results",
												"nameLocation": "468:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "453:22:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 584,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "453:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 585,
													"nodeType": "ArrayTypeName",
													"src": "453:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:24:8"
									},
									"scope": 644,
									"src": "360:117:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3f0a0797",
									"id": 593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exchangeContract",
									"nameLocation": "489:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "505:2:8"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "531:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:9:8"
									},
									"scope": 644,
									"src": "480:60:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8ae91695",
									"id": 598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setExchangeAddr",
									"nameLocation": "551:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "exchangeAddr",
												"nameLocation": "575:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "567:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "566:22:8"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "597:0:8"
									},
									"scope": 644,
									"src": "542:56:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "11ce0267",
									"id": 603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "storageContract",
									"nameLocation": "610:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "625:2:8"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "651:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:9:8"
									},
									"scope": 644,
									"src": "601:59:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a6fa0b7b",
									"id": 608,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setStorageAddr",
									"nameLocation": "671:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "storageAddr",
												"nameLocation": "694:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "686:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:21:8"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "715:0:8"
									},
									"scope": 644,
									"src": "662:54:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "da8909e5",
									"id": 613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "commissionContract",
									"nameLocation": "728:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "746:2:8"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "772:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "771:9:8"
									},
									"scope": 644,
									"src": "719:62:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "101dfd19",
									"id": 618,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setCommissionAddr",
									"nameLocation": "792:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "commissionAddr",
												"nameLocation": "818:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "810:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "809:24:8"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:0:8"
									},
									"scope": 644,
									"src": "783:60:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dc96d689",
									"id": 623,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "opsContract",
									"nameLocation": "855:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "866:2:8"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "892:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:8"
									},
									"scope": 644,
									"src": "846:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cf368a39",
									"id": 628,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOpsAddr",
									"nameLocation": "912:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "opsAddr",
												"nameLocation": "931:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "923:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "922:17:8"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "948:0:8"
									},
									"scope": 644,
									"src": "903:46:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fc0c546a",
									"id": 633,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "961:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "966:2:8"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "992:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "992:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "991:9:8"
									},
									"scope": 644,
									"src": "952:49:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2ebd1e28",
									"id": 638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTokenAddr",
									"nameLocation": "1012:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "tokenAddr",
												"nameLocation": "1033:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "1025:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1024:19:8"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1052:0:8"
									},
									"scope": 644,
									"src": "1003:50:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2637a477",
									"id": 643,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deleteContract",
									"nameLocation": "1065:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "newAddr",
												"nameLocation": "1088:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "1080:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1080:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1079:17:8"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1105:0:8"
									},
									"scope": 644,
									"src": "1056:50:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 645,
							"src": "205:903:8",
							"usedErrors": []
						}
					],
					"src": "46:1062:8"
				},
				"id": 8
			},
			"TFGv3/Contracts/Interfaces/ISCCommission.sol": {
				"ast": {
					"absolutePath": "TFGv3/Contracts/Interfaces/ISCCommission.sol",
					"exportedSymbols": {
						"ISCCommission": [
							702
						]
					},
					"id": 703,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 646,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "48:25:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISCCommission",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 702,
							"linearizedBaseContracts": [
								702
							],
							"name": "ISCCommission",
							"nameLocation": "87:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0b06f5d",
									"id": 651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lastUpdated",
									"nameLocation": "118:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "129:2:9"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "154:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "154:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "153:6:9"
									},
									"scope": 702,
									"src": "109:51:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7f8483a4",
									"id": 656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "accumCommission",
									"nameLocation": "177:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "192:2:9"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "217:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "217:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "216:6:9"
									},
									"scope": 702,
									"src": "168:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "37799661",
									"id": 669,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initContract",
									"nameLocation": "240:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "proxyAddr",
												"nameLocation": "261:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "253:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "253:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "lastUpdated_",
												"nameLocation": "277:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "272:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "272:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "accumCommission_",
												"nameLocation": "296:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "291:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "291:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "feeYear_",
												"nameLocation": "319:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "314:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "314:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "r_",
												"nameLocation": "334:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "329:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "329:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "252:85:9"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "346:0:9"
									},
									"scope": 702,
									"src": "231:116:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bdedd45e",
									"id": 676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "payComissions",
									"nameLocation": "364:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "buyOrSell",
												"nameLocation": "383:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "378:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:16:9"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "payedComissions",
												"nameLocation": "417:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "412:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "412:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "411:22:9"
									},
									"scope": 702,
									"src": "355:79:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fc693786",
									"id": 685,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectCommission",
									"nameLocation": "451:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "tokensToTransfer",
												"nameLocation": "488:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "469:35:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 677,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "469:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 678,
													"nodeType": "ArrayTypeName",
													"src": "469:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "qty",
												"nameLocation": "522:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "506:19:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 680,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "506:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 681,
													"nodeType": "ArrayTypeName",
													"src": "506:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "468:58:9"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "535:0:9"
									},
									"scope": 702,
									"src": "442:94:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9e955149",
									"id": 690,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateProxy",
									"nameLocation": "553:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "newAddr",
												"nameLocation": "573:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "565:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:17:9"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "590:0:9"
									},
									"scope": 702,
									"src": "544:47:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1d69b196",
									"id": 701,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deleteContract",
									"nameLocation": "608:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "newAddr",
												"nameLocation": "631:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "623:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "tokensToTransfer",
												"nameLocation": "659:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "640:35:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 693,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "640:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 694,
													"nodeType": "ArrayTypeName",
													"src": "640:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "qty",
												"nameLocation": "693:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "677:19:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 696,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "677:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 697,
													"nodeType": "ArrayTypeName",
													"src": "677:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "622:75:9"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:0:9"
									},
									"scope": 702,
									"src": "599:108:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 703,
							"src": "77:633:9",
							"usedErrors": []
						}
					],
					"src": "48:662:9"
				},
				"id": 9
			},
			"TFGv3/Contracts/Interfaces/ISCExchange.sol": {
				"ast": {
					"absolutePath": "TFGv3/Contracts/Interfaces/ISCExchange.sol",
					"exportedSymbols": {
						"ISCExchange": [
							748
						]
					},
					"id": 749,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 704,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "48:25:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISCExchange",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 748,
							"linearizedBaseContracts": [
								748
							],
							"name": "ISCExchange",
							"nameLocation": "87:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "365afe2f",
									"id": 711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "buyTokensOutput",
									"nameLocation": "116:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "stableAddr",
												"nameLocation": "140:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "132:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "tokensOut",
												"nameLocation": "157:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "152:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "152:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "131:36:10"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "176:0:10"
									},
									"scope": 748,
									"src": "107:70:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9be56034",
									"id": 718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "buyTokensInput",
									"nameLocation": "194:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "stableAddr",
												"nameLocation": "217:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "209:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "209:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "qtyIn",
												"nameLocation": "234:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "229:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "229:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "208:32:10"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "249:0:10"
									},
									"scope": 748,
									"src": "185:65:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6c11bcd3",
									"id": 723,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sellTokens",
									"nameLocation": "267:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "qty",
												"nameLocation": "283:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "278:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "278:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "277:10:10"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "296:0:10"
									},
									"scope": 748,
									"src": "258:39:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2637a477",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deleteContract",
									"nameLocation": "314:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "newAddr",
												"nameLocation": "337:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "329:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "328:17:10"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "354:0:10"
									},
									"scope": 748,
									"src": "305:50:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "44337ea1",
									"id": 735,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addToBlacklist",
									"nameLocation": "372:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "395:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "387:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "386:12:10"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "417:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "417:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:6:10"
									},
									"scope": 748,
									"src": "363:60:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "537df3b6",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeFromBlacklist",
									"nameLocation": "440:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "468:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "460:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:12:10"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "490:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 739,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "490:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:6:10"
									},
									"scope": 748,
									"src": "431:65:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9e955149",
									"id": 747,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateProxy",
									"nameLocation": "513:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "newAddr",
												"nameLocation": "533:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "525:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:17:10"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "550:0:10"
									},
									"scope": 748,
									"src": "504:47:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 749,
							"src": "77:477:10",
							"usedErrors": []
						}
					],
					"src": "48:506:10"
				},
				"id": 10
			},
			"TFGv3/Contracts/Interfaces/ISCOps.sol": {
				"ast": {
					"absolutePath": "TFGv3/Contracts/Interfaces/ISCOps.sol",
					"exportedSymbols": {
						"ISCOps": [
							774
						]
					},
					"id": 775,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 750,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "48:25:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISCOps",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 774,
							"linearizedBaseContracts": [
								774
							],
							"name": "ISCOps",
							"nameLocation": "87:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "cf9d4afa",
									"id": 755,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initContract",
									"nameLocation": "111:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "proxyAddr",
												"nameLocation": "132:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "124:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "124:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "123:19:11"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "151:0:11"
									},
									"scope": 774,
									"src": "102:50:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1fa4e970",
									"id": 763,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniSwap",
									"nameLocation": "169:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "196:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "177:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 756,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "177:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 757,
													"nodeType": "ArrayTypeName",
													"src": "177:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "207:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "202:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "202:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "176:38:11"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "223:0:11"
									},
									"scope": 774,
									"src": "160:64:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9e955149",
									"id": 768,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateProxy",
									"nameLocation": "241:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "newAddr",
												"nameLocation": "261:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "253:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "253:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "252:17:11"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "278:0:11"
									},
									"scope": 774,
									"src": "232:47:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2637a477",
									"id": 773,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deleteContract",
									"nameLocation": "296:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "newContract",
												"nameLocation": "319:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "311:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "310:21:11"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "340:0:11"
									},
									"scope": 774,
									"src": "287:54:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 775,
							"src": "77:267:11",
							"usedErrors": []
						}
					],
					"src": "48:296:11"
				},
				"id": 11
			},
			"TFGv3/Contracts/Interfaces/ISCStorage.sol": {
				"ast": {
					"absolutePath": "TFGv3/Contracts/Interfaces/ISCStorage.sol",
					"exportedSymbols": {
						"ISCStorage": [
							820
						]
					},
					"id": 821,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 776,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "48:25:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISCStorage",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 820,
							"linearizedBaseContracts": [
								820
							],
							"name": "ISCStorage",
							"nameLocation": "87:10:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "0cb1982b",
									"id": 783,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateNAV",
									"nameLocation": "115:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "comission",
												"nameLocation": "130:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "125:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "125:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "124:16:12"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "newNAV",
												"nameLocation": "164:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "159:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "159:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "158:13:12"
									},
									"scope": 820,
									"src": "106:66:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "52fd856b",
									"id": 788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "NAV",
									"nameLocation": "189:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "192:2:12"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "218:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "218:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "217:6:12"
									},
									"scope": 820,
									"src": "180:44:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "990dc9db",
									"id": 797,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFunds",
									"nameLocation": "241:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "263:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "255:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "255:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "totalToTransfer",
												"nameLocation": "272:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "267:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "267:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "254:34:12"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "307:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 794,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "307:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:6:12"
									},
									"scope": 820,
									"src": "232:81:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b4014879",
									"id": 804,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addCoin",
									"nameLocation": "330:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "coinAddr",
												"nameLocation": "346:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "338:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "stable",
												"nameLocation": "361:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "356:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "356:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "337:31:12"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "377:0:12"
									},
									"scope": 820,
									"src": "321:57:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4051b9aa",
									"id": 809,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delCoin",
									"nameLocation": "395:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "coinAddr",
												"nameLocation": "411:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "403:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:18:12"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "429:0:12"
									},
									"scope": 820,
									"src": "386:44:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9e955149",
									"id": 814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateProxy",
									"nameLocation": "447:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "newAddr",
												"nameLocation": "467:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "459:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "458:17:12"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "484:0:12"
									},
									"scope": 820,
									"src": "438:47:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2637a477",
									"id": 819,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deleteContract",
									"nameLocation": "502:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "newAddr",
												"nameLocation": "525:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "517:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:17:12"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "542:0:12"
									},
									"scope": 820,
									"src": "493:50:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 821,
							"src": "77:469:12",
							"usedErrors": []
						}
					],
					"src": "48:498:12"
				},
				"id": 12
			},
			"TFGv3/Contracts/SCStorage.sol": {
				"ast": {
					"absolutePath": "TFGv3/Contracts/SCStorage.sol",
					"exportedSymbols": {
						"FullMath": [
							1583
						],
						"IERC20": [
							556
						],
						"IProxy": [
							644
						],
						"ISCCommission": [
							702
						],
						"ISCExchange": [
							748
						],
						"ISCOps": [
							774
						],
						"ISCStorage": [
							820
						],
						"IUniswapV3Pool": [
							21
						],
						"IUniswapV3PoolActions": [
							117
						],
						"IUniswapV3PoolDerivedState": [
							148
						],
						"IUniswapV3PoolEvents": [
							267
						],
						"IUniswapV3PoolImmutables": [
							307
						],
						"IUniswapV3PoolOwnerActions": [
							333
						],
						"IUniswapV3PoolState": [
							441
						],
						"OracleLibrary": [
							2185
						],
						"SCStorage": [
							1402
						],
						"TickMath": [
							2723
						]
					},
					"id": 1403,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 822,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:25:13"
						},
						{
							"absolutePath": "TFGv3/Contracts/Interfaces/IProxy.sol",
							"file": "./Interfaces/IProxy.sol",
							"id": 823,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1403,
							"sourceUnit": 645,
							"src": "73:33:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "TFGv3/Contracts/libraries/OracleLibrary.sol",
							"file": "./libraries/OracleLibrary.sol",
							"id": 824,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1403,
							"sourceUnit": 2186,
							"src": "107:39:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 825,
										"name": "ISCStorage",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 820,
										"src": "170:10:13"
									},
									"id": 826,
									"nodeType": "InheritanceSpecifier",
									"src": "170:10:13"
								}
							],
							"canonicalName": "SCStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1402,
							"linearizedBaseContracts": [
								1402,
								820
							],
							"name": "SCStorage",
							"nameLocation": "157:9:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 828,
									"mutability": "immutable",
									"name": "deployer",
									"nameLocation": "202:8:13",
									"nodeType": "VariableDeclaration",
									"scope": 1402,
									"src": "184:26:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 827,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "184:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										788
									],
									"constant": false,
									"functionSelector": "52fd856b",
									"id": 830,
									"mutability": "mutable",
									"name": "NAV",
									"nameLocation": "227:3:13",
									"nodeType": "VariableDeclaration",
									"scope": 1402,
									"src": "215:15:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 829,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "215:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fed0a20e",
									"id": 832,
									"mutability": "mutable",
									"name": "initDone",
									"nameLocation": "249:8:13",
									"nodeType": "VariableDeclaration",
									"scope": 1402,
									"src": "236:21:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 831,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "236:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 834,
									"mutability": "mutable",
									"name": "nStable",
									"nameLocation": "269:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 1402,
									"src": "263:13:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 833,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "263:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "ec556889",
									"id": 836,
									"mutability": "mutable",
									"name": "proxy",
									"nameLocation": "299:5:13",
									"nodeType": "VariableDeclaration",
									"scope": 1402,
									"src": "284:20:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 835,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "284:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "63b48ee6",
									"id": 839,
									"mutability": "mutable",
									"name": "coinArray",
									"nameLocation": "325:9:13",
									"nodeType": "VariableDeclaration",
									"scope": 1402,
									"src": "308:26:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 837,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "308:7:13",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 838,
										"nodeType": "ArrayTypeName",
										"src": "308:9:13",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7d0f7a88",
									"id": 843,
									"mutability": "mutable",
									"name": "coins",
									"nameLocation": "370:5:13",
									"nodeType": "VariableDeclaration",
									"scope": 1402,
									"src": "337:38:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 842,
										"keyType": {
											"id": 840,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "346:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "337:25:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 841,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "357:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0fbbfa3e",
									"id": 847,
									"mutability": "mutable",
									"name": "coinOracleAddr",
									"nameLocation": "441:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 1402,
									"src": "405:50:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 846,
										"keyType": {
											"id": 844,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "414:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "405:28:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 845,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "425:7:13",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d825bfff",
									"id": 851,
									"mutability": "mutable",
									"name": "quoteIn",
									"nameLocation": "520:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 1402,
									"src": "484:43:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 850,
										"keyType": {
											"id": 848,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "493:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "484:28:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 849,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "504:7:13",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "626:38:13",
										"statements": [
											{
												"expression": {
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 854,
														"name": "deployer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "636:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 855,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "647:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "647:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "636:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "636:21:13"
											}
										]
									},
									"id": 860,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "619:2:13"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "626:0:13"
									},
									"scope": 1402,
									"src": "608:56:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "699:59:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 863,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "717:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "717:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 865,
																"name": "deployer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "731:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "717:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 862,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "709:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "709:31:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "709:31:13"
											},
											{
												"id": 869,
												"nodeType": "PlaceholderStatement",
												"src": "750:1:13"
											}
										]
									},
									"id": 871,
									"name": "OnlyDeployer",
									"nameLocation": "680:12:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "692:2:13"
									},
									"src": "671:87:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "787:50:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 874,
																"name": "initDone",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 832,
																"src": "805:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "817:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "805:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 873,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "797:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "797:22:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "797:22:13"
											},
											{
												"id": 879,
												"nodeType": "PlaceholderStatement",
												"src": "829:1:13"
											}
										]
									},
									"id": 881,
									"name": "NonInit",
									"nameLocation": "773:7:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "780:2:13"
									},
									"src": "764:73:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "918:56:13",
										"statements": [
											{
												"expression": {
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 890,
														"name": "proxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "928:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 891,
														"name": "proxyAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "936:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "928:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "928:17:13"
											},
											{
												"expression": {
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 894,
														"name": "initDone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "955:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "966:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "955:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "955:12:13"
											}
										]
									},
									"functionSelector": "cf9d4afa",
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 886,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 885,
												"name": "OnlyDeployer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 871,
												"src": "893:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "893:12:13"
										},
										{
											"id": 888,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 887,
												"name": "NonInit",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 881,
												"src": "906:7:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "906:7:13"
										}
									],
									"name": "initContract",
									"nameLocation": "852:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "proxyAddr",
												"nameLocation": "873:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "865:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "864:19:13"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "918:0:13"
									},
									"scope": 1402,
									"src": "843:131:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										783
									],
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "1067:139:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 908,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1085:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1085:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 911,
																				"name": "proxy",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 836,
																				"src": "1106:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 910,
																			"name": "IProxy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "1099:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IProxy_$644_$",
																				"typeString": "type(contract IProxy)"
																			}
																		},
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1099:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IProxy_$644",
																			"typeString": "contract IProxy"
																		}
																	},
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "exchangeContract",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 593,
																	"src": "1099:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1099:32:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1085:46:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 907,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1077:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1077:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "1077:55:13"
											},
											{
												"expression": {
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 918,
														"name": "newNAV",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "1142:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 919,
																"name": "calculateNAV",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "1151:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1151:14:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 921,
															"name": "comission",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "1168:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1151:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1142:35:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "1142:35:13"
											},
											{
												"expression": {
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 925,
														"name": "NAV",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "1187:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 926,
														"name": "newNAV",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "1193:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1187:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "1187:12:13"
											}
										]
									},
									"functionSelector": "0cb1982b",
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateNAV",
									"nameLocation": "989:9:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 903,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1032:8:13"
									},
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "comission",
												"nameLocation": "1004:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "999:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "999:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "998:16:13"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "newNAV",
												"nameLocation": "1055:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "1050:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1050:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1049:13:13"
									},
									"scope": 1402,
									"src": "980:226:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										797
									],
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "1318:670:13",
										"statements": [
											{
												"assignments": [
													941
												],
												"declarations": [
													{
														"constant": false,
														"id": 941,
														"mutability": "mutable",
														"name": "proxyAddr",
														"nameLocation": "1336:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 1042,
														"src": "1328:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 940,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1328:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 943,
												"initialValue": {
													"id": 942,
													"name": "proxy",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 836,
													"src": "1348:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1328:25:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 945,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1371:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1371:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 948,
																					"name": "proxyAddr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 941,
																					"src": "1392:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 947,
																				"name": "IProxy",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 644,
																				"src": "1385:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IProxy_$644_$",
																					"typeString": "type(contract IProxy)"
																				}
																			},
																			"id": 949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:17:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IProxy_$644",
																				"typeString": "contract IProxy"
																			}
																		},
																		"id": 950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "exchangeContract",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 593,
																		"src": "1385:34:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1385:36:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1371:50:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 953,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1425:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1425:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 956,
																					"name": "proxyAddr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 941,
																					"src": "1446:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 955,
																				"name": "IProxy",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 644,
																				"src": "1439:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IProxy_$644_$",
																					"typeString": "type(contract IProxy)"
																				}
																			},
																			"id": 957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1439:17:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IProxy_$644",
																				"typeString": "contract IProxy"
																			}
																		},
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "commissionContract",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 613,
																		"src": "1439:36:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1439:38:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1425:52:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1371:106:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 944,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1363:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1363:115:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "1363:115:13"
											},
											{
												"assignments": [
													965
												],
												"declarations": [
													{
														"constant": false,
														"id": 965,
														"mutability": "mutable",
														"name": "n",
														"nameLocation": "1493:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 1042,
														"src": "1488:6:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 964,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1488:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 968,
												"initialValue": {
													"expression": {
														"id": 966,
														"name": "coinArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "1497:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1497:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1488:25:13"
											},
											{
												"body": {
													"id": 1038,
													"nodeType": "Block",
													"src": "1568:393:13",
													"statements": [
														{
															"assignments": [
																980
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 980,
																	"mutability": "mutable",
																	"name": "coinAddr",
																	"nameLocation": "1590:8:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1038,
																	"src": "1582:16:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 979,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1582:7:13",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 984,
															"initialValue": {
																"baseExpression": {
																	"id": 981,
																	"name": "coinArray",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "1601:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 983,
																"indexExpression": {
																	"id": 982,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "1611:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1601:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1582:31:13"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 985,
																		"name": "coins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "1630:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 987,
																	"indexExpression": {
																		"id": 986,
																		"name": "coinAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 980,
																		"src": "1636:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1630:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1649:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1630:20:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1037,
															"nodeType": "IfStatement",
															"src": "1627:324:13",
															"trueBody": {
																"id": 1036,
																"nodeType": "Block",
																"src": "1664:287:13",
																"statements": [
																	{
																		"assignments": [
																			991
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 991,
																				"mutability": "mutable",
																				"name": "decimals",
																				"nameLocation": "1688:8:13",
																				"nodeType": "VariableDeclaration",
																				"scope": 1036,
																				"src": "1682:14:13",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"typeName": {
																					"id": 990,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "1682:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 997,
																		"initialValue": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"arguments": [
																						{
																							"id": 993,
																							"name": "coinAddr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 980,
																							"src": "1706:8:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 992,
																						"name": "IERC20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 556,
																						"src": "1699:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20_$556_$",
																							"typeString": "type(contract IERC20)"
																						}
																					},
																					"id": 994,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1699:16:13",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$556",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 995,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "decimals",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 458,
																				"src": "1699:25:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																					"typeString": "function () view external returns (uint8)"
																				}
																			},
																			"id": 996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1699:27:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1682:44:13"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 998,
																				"name": "decimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 991,
																				"src": "1747:8:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "3138",
																				"id": 999,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1758:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18_by_1",
																					"typeString": "int_const 18"
																				},
																				"value": "18"
																			},
																			"src": "1747:13:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 1023,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1021,
																					"name": "decimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 991,
																					"src": "1866:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "3138",
																					"id": 1022,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1878:2:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_18_by_1",
																						"typeString": "int_const 18"
																					},
																					"value": "18"
																				},
																				"src": "1866:14:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 1034,
																			"nodeType": "IfStatement",
																			"src": "1863:73:13",
																			"trueBody": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1028,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 932,
																							"src": "1908:2:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1031,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1029,
																								"name": "totalToTransfer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 934,
																								"src": "1912:15:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"id": 1030,
																								"name": "nStable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 834,
																								"src": "1928:7:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"src": "1912:23:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"arguments": [
																								{
																									"id": 1025,
																									"name": "coinAddr",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 980,
																									"src": "1889:8:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 1024,
																								"name": "IERC20",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 556,
																								"src": "1882:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC20_$556_$",
																									"typeString": "type(contract IERC20)"
																								}
																							},
																							"id": 1026,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "1882:16:13",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IERC20_$556",
																								"typeString": "contract IERC20"
																							}
																						},
																						"id": 1027,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "transfer",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 479,
																						"src": "1882:25:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																							"typeString": "function (address,uint256) external returns (bool)"
																						}
																					},
																					"id": 1032,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1882:54:13",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1033,
																				"nodeType": "ExpressionStatement",
																				"src": "1882:54:13"
																			}
																		},
																		"id": 1035,
																		"nodeType": "IfStatement",
																		"src": "1744:192:13",
																		"trueBody": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1005,
																						"name": "to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 932,
																						"src": "1788:2:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1018,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1008,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1006,
																								"name": "totalToTransfer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 934,
																								"src": "1792:15:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"id": 1007,
																								"name": "nStable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 834,
																								"src": "1808:7:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"src": "1792:23:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1017,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "3130",
																								"id": 1009,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "1816:2:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "**",
																							"rightExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 1015,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"arguments": [
																												{
																													"id": 1012,
																													"name": "decimals",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 991,
																													"src": "1826:8:13",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												],
																												"id": 1011,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"nodeType": "ElementaryTypeNameExpression",
																												"src": "1821:4:13",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_uint256_$",
																													"typeString": "type(uint256)"
																												},
																												"typeName": {
																													"id": 1010,
																													"name": "uint",
																													"nodeType": "ElementaryTypeName",
																													"src": "1821:4:13",
																													"typeDescriptions": {}
																												}
																											},
																											"id": 1013,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "typeConversion",
																											"lValueRequested": false,
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "1821:14:13",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"hexValue": "3138",
																											"id": 1014,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "1836:2:13",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_18_by_1",
																												"typeString": "int_const 18"
																											},
																											"value": "18"
																										},
																										"src": "1821:17:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 1016,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "1820:19:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1816:23:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1792:47:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"id": 1002,
																								"name": "coinAddr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 980,
																								"src": "1769:8:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 1001,
																							"name": "IERC20",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 556,
																							"src": "1762:6:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_IERC20_$556_$",
																								"typeString": "type(contract IERC20)"
																							}
																						},
																						"id": 1003,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1762:16:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$556",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 1004,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "transfer",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 479,
																					"src": "1762:25:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 1019,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1762:78:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 1020,
																			"nodeType": "ExpressionStatement",
																			"src": "1762:78:13"
																		}
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 973,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "1548:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 974,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "1552:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1548:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1039,
												"initializationExpression": {
													"assignments": [
														970
													],
													"declarations": [
														{
															"constant": false,
															"id": 970,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1541:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 1039,
															"src": "1536:6:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 969,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1536:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 972,
													"initialValue": {
														"hexValue": "30",
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1545:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1536:10:13"
												},
												"loopExpression": {
													"expression": {
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1555:3:13",
														"subExpression": {
															"id": 976,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "1555:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 978,
													"nodeType": "ExpressionStatement",
													"src": "1555:3:13"
												},
												"nodeType": "ForStatement",
												"src": "1532:429:13"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1977:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 939,
												"id": 1041,
												"nodeType": "Return",
												"src": "1970:11:13"
											}
										]
									},
									"functionSelector": "990dc9db",
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFunds",
									"nameLocation": "1225:13:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 936,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1290:8:13"
									},
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1247:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "1239:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "totalToTransfer",
												"nameLocation": "1256:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "1251:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1251:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1238:34:13"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "1308:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 937,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1308:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1307:6:13"
									},
									"scope": 1402,
									"src": "1216:772:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "2058:470:13",
										"statements": [
											{
												"assignments": [
													1051
												],
												"declarations": [
													{
														"constant": false,
														"id": 1051,
														"mutability": "mutable",
														"name": "lastUpdated",
														"nameLocation": "2302:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 1081,
														"src": "2297:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1050,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2297:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1061,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1054,
																					"name": "proxy",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 836,
																					"src": "2337:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1053,
																				"name": "IProxy",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 644,
																				"src": "2330:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IProxy_$644_$",
																					"typeString": "type(contract IProxy)"
																				}
																			},
																			"id": 1055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2330:13:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IProxy_$644",
																				"typeString": "contract IProxy"
																			}
																		},
																		"id": 1056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "commissionContract",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 613,
																		"src": "2330:32:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 1057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2330:34:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1052,
																"name": "ISCCommission",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 702,
																"src": "2316:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISCCommission_$702_$",
																	"typeString": "type(contract ISCCommission)"
																}
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2316:49:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISCCommission_$702",
																"typeString": "contract ISCCommission"
															}
														},
														"id": 1059,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastUpdated",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 651,
														"src": "2316:61:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2316:63:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2297:82:13"
											},
											{
												"assignments": [
													1063
												],
												"declarations": [
													{
														"constant": false,
														"id": 1063,
														"mutability": "mutable",
														"name": "acum",
														"nameLocation": "2394:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 1081,
														"src": "2389:9:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1062,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2389:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1073,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1066,
																					"name": "proxy",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 836,
																					"src": "2422:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1065,
																				"name": "IProxy",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 644,
																				"src": "2415:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IProxy_$644_$",
																					"typeString": "type(contract IProxy)"
																				}
																			},
																			"id": 1067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2415:13:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IProxy_$644",
																				"typeString": "contract IProxy"
																			}
																		},
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "commissionContract",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 613,
																		"src": "2415:32:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2415:34:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1064,
																"name": "ISCCommission",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 702,
																"src": "2401:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISCCommission_$702_$",
																	"typeString": "type(contract ISCCommission)"
																}
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2401:49:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISCCommission_$702",
																"typeString": "contract ISCCommission"
															}
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "accumCommission",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 656,
														"src": "2401:65:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2401:67:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2389:79:13"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1074,
																	"name": "calculateNAV",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1177,
																	"src": "2486:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2486:14:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1076,
																"name": "acum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "2503:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2486:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1078,
															"name": "lastUpdated",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "2509:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1079,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2485:36:13",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1049,
												"id": 1080,
												"nodeType": "Return",
												"src": "2478:43:13"
											}
										]
									},
									"functionSelector": "def1a5e8",
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "oracleNAV",
									"nameLocation": "2007:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2016:2:13"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2042:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2048:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2048:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:12:13"
									},
									"scope": 1402,
									"src": "1998:530:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "2602:826:13",
										"statements": [
											{
												"assignments": [
													1088
												],
												"declarations": [
													{
														"constant": false,
														"id": 1088,
														"mutability": "mutable",
														"name": "n",
														"nameLocation": "2747:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 1176,
														"src": "2742:6:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1087,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2742:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1091,
												"initialValue": {
													"expression": {
														"id": 1089,
														"name": "coinArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "2751:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2751:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2742:25:13"
											},
											{
												"body": {
													"id": 1174,
													"nodeType": "Block",
													"src": "2813:609:13",
													"statements": [
														{
															"assignments": [
																1103
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1103,
																	"mutability": "mutable",
																	"name": "coin",
																	"nameLocation": "2835:4:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1174,
																	"src": "2827:12:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1102,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2827:7:13",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1107,
															"initialValue": {
																"baseExpression": {
																	"id": 1104,
																	"name": "coinArray",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "2842:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1106,
																"indexExpression": {
																	"id": 1105,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "2852:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2842:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2827:27:13"
														},
														{
															"assignments": [
																1109
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1109,
																	"mutability": "mutable",
																	"name": "balance",
																	"nameLocation": "2873:7:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1174,
																	"src": "2868:12:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1108,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "2868:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1119,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1116,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2914:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SCStorage_$1402",
																					"typeString": "contract SCStorage"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SCStorage_$1402",
																					"typeString": "contract SCStorage"
																				}
																			],
																			"id": 1115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2906:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1114,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2906:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2906:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1111,
																				"name": "coin",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1103,
																				"src": "2890:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1110,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 556,
																			"src": "2883:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$556_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2883:12:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$556",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 470,
																	"src": "2883:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2883:37:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2868:52:13"
														},
														{
															"assignments": [
																1121
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1121,
																	"mutability": "mutable",
																	"name": "stable",
																	"nameLocation": "2939:6:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1174,
																	"src": "2934:11:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1120,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "2934:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1125,
															"initialValue": {
																"baseExpression": {
																	"id": 1122,
																	"name": "coins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 843,
																	"src": "2948:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1124,
																"indexExpression": {
																	"id": 1123,
																	"name": "coin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "2954:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2948:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2934:25:13"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1126,
																	"name": "stable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1121,
																	"src": "2989:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2999:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2989:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1165,
																		"name": "stable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "3381:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3391:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "3381:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1172,
																"nodeType": "IfStatement",
																"src": "3378:33:13",
																"trueBody": {
																	"expression": {
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1168,
																			"name": "newNAV",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1085,
																			"src": "3394:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1169,
																			"name": "balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1109,
																			"src": "3404:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3394:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1171,
																	"nodeType": "ExpressionStatement",
																	"src": "3394:17:13"
																}
															},
															"id": 1173,
															"nodeType": "IfStatement",
															"src": "2986:425:13",
															"trueBody": {
																"id": 1164,
																"nodeType": "Block",
																"src": "3014:346:13",
																"statements": [
																	{
																		"assignments": [
																			1130
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1130,
																				"mutability": "mutable",
																				"name": "quote",
																				"nameLocation": "3037:5:13",
																				"nodeType": "VariableDeclaration",
																				"scope": 1164,
																				"src": "3032:10:13",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1129,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "3032:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1131,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3032:10:13"
																	},
																	{
																		"id": 1157,
																		"nodeType": "UncheckedBlock",
																		"src": "3060:243:13",
																		"statements": [
																			{
																				"assignments": [
																					1133,
																					null
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 1133,
																						"mutability": "mutable",
																						"name": "arithmeticMeanTick",
																						"nameLocation": "3098:18:13",
																						"nodeType": "VariableDeclaration",
																						"scope": 1157,
																						"src": "3092:24:13",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						},
																						"typeName": {
																							"id": 1132,
																							"name": "int24",
																							"nodeType": "ElementaryTypeName",
																							"src": "3092:5:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						},
																						"visibility": "internal"
																					},
																					null
																				],
																				"id": 1141,
																				"initialValue": {
																					"arguments": [
																						{
																							"baseExpression": {
																								"id": 1136,
																								"name": "coinOracleAddr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 847,
																								"src": "3143:14:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																									"typeString": "mapping(address => address)"
																								}
																							},
																							"id": 1138,
																							"indexExpression": {
																								"id": 1137,
																								"name": "coin",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1103,
																								"src": "3158:4:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "3143:20:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"hexValue": "30",
																							"id": 1139,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3165:1:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"expression": {
																							"id": 1134,
																							"name": "OracleLibrary",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2185,
																							"src": "3121:13:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_OracleLibrary_$2185_$",
																								"typeString": "type(library OracleLibrary)"
																							}
																						},
																						"id": 1135,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "consult",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1724,
																						"src": "3121:21:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint32_$returns$_t_int24_$_t_uint128_$",
																							"typeString": "function (address,uint32) view returns (int24,uint128)"
																						}
																					},
																					"id": 1140,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3121:46:13",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$_t_int24_$_t_uint128_$",
																						"typeString": "tuple(int24,uint128)"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "3091:76:13"
																			},
																			{
																				"expression": {
																					"id": 1155,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1142,
																						"name": "quote",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1130,
																						"src": "3189:5:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 1145,
																								"name": "arithmeticMeanTick",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1133,
																								"src": "3226:18:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int24",
																									"typeString": "int24"
																								}
																							},
																							{
																								"arguments": [
																									{
																										"id": 1148,
																										"name": "balance",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1109,
																										"src": "3254:7:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 1147,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "3246:7:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint128_$",
																										"typeString": "type(uint128)"
																									},
																									"typeName": {
																										"id": 1146,
																										"name": "uint128",
																										"nodeType": "ElementaryTypeName",
																										"src": "3246:7:13",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1149,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3246:16:13",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint128",
																									"typeString": "uint128"
																								}
																							},
																							{
																								"id": 1150,
																								"name": "coin",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1103,
																								"src": "3264:4:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"baseExpression": {
																									"id": 1151,
																									"name": "quoteIn",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 851,
																									"src": "3270:7:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																										"typeString": "mapping(address => address)"
																									}
																								},
																								"id": 1153,
																								"indexExpression": {
																									"id": 1152,
																									"name": "coin",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1103,
																									"src": "3278:4:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "3270:13:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_int24",
																									"typeString": "int24"
																								},
																								{
																									"typeIdentifier": "t_uint128",
																									"typeString": "uint128"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 1143,
																								"name": "OracleLibrary",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2185,
																								"src": "3197:13:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_OracleLibrary_$2185_$",
																									"typeString": "type(library OracleLibrary)"
																								}
																							},
																							"id": 1144,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "getQuoteAtTick",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1822,
																							"src": "3197:28:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_int24_$_t_uint128_$_t_address_$_t_address_$returns$_t_uint256_$",
																								"typeString": "function (int24,uint128,address,address) pure returns (uint256)"
																							}
																						},
																						"id": 1154,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3197:87:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3189:95:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1156,
																				"nodeType": "ExpressionStatement",
																				"src": "3189:95:13"
																			}
																		]
																	},
																	{
																		"expression": {
																			"id": 1162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1158,
																				"name": "newNAV",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1085,
																				"src": "3320:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1159,
																					"name": "balance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1109,
																					"src": "3330:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1160,
																					"name": "quote",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1130,
																					"src": "3340:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3330:15:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3320:25:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1163,
																		"nodeType": "ExpressionStatement",
																		"src": "3320:25:13"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1096,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "2793:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1097,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "2797:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2793:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1175,
												"initializationExpression": {
													"assignments": [
														1093
													],
													"declarations": [
														{
															"constant": false,
															"id": 1093,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2786:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 1175,
															"src": "2781:6:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1092,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2781:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1095,
													"initialValue": {
														"hexValue": "30",
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2790:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2781:10:13"
												},
												"loopExpression": {
													"expression": {
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2800:3:13",
														"subExpression": {
															"id": 1099,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "2800:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1101,
													"nodeType": "ExpressionStatement",
													"src": "2800:3:13"
												},
												"nodeType": "ForStatement",
												"src": "2777:645:13"
											}
										]
									},
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateNAV",
									"nameLocation": "2547:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2559:2:13"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "newNAV",
												"nameLocation": "2590:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "2585:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2585:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2584:13:13"
									},
									"scope": 1402,
									"src": "2538:890:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										804
									],
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "3513:191:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1186,
														"name": "stable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "3526:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1187,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3536:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3526:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1195,
															"name": "stable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "3576:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3586:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3576:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1208,
													"nodeType": "IfStatement",
													"src": "3573:91:13",
													"trueBody": {
														"id": 1207,
														"nodeType": "Block",
														"src": "3597:67:13",
														"statements": [
															{
																"expression": {
																	"id": 1202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 1198,
																			"name": "coins",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 843,
																			"src": "3611:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1200,
																		"indexExpression": {
																			"id": 1199,
																			"name": "coinAddr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1179,
																			"src": "3617:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "3611:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "32",
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3629:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "3611:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1203,
																"nodeType": "ExpressionStatement",
																"src": "3611:19:13"
															},
															{
																"expression": {
																	"id": 1205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "3644:9:13",
																	"subExpression": {
																		"id": 1204,
																		"name": "nStable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 834,
																		"src": "3644:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 1206,
																"nodeType": "ExpressionStatement",
																"src": "3644:9:13"
															}
														]
													}
												},
												"id": 1209,
												"nodeType": "IfStatement",
												"src": "3523:141:13",
												"trueBody": {
													"expression": {
														"id": 1193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"baseExpression": {
																"id": 1189,
																"name": "coins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 843,
																"src": "3539:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1191,
															"indexExpression": {
																"id": 1190,
																"name": "coinAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "3545:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "IndexAccess",
															"src": "3539:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3557:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3539:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1194,
													"nodeType": "ExpressionStatement",
													"src": "3539:19:13"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1213,
															"name": "coinAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "3688:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1210,
															"name": "coinArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "3673:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3673:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:24:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "3673:24:13"
											}
										]
									},
									"functionSelector": "b4014879",
									"id": 1217,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1184,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1183,
												"name": "OnlyDeployer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 871,
												"src": "3496:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3496:12:13"
										}
									],
									"name": "addCoin",
									"nameLocation": "3447:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "coinAddr",
												"nameLocation": "3463:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "3455:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "stable",
												"nameLocation": "3478:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "3473:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3473:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:31:13"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3513:0:13"
									},
									"scope": 1402,
									"src": "3438:266:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										809
									],
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "3762:411:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1223,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3780:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3780:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1225,
																	"name": "deployer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "3794:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3780:22:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1227,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3806:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3806:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1230,
																					"name": "proxy",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 836,
																					"src": "3827:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1229,
																				"name": "IProxy",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 644,
																				"src": "3820:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IProxy_$644_$",
																					"typeString": "type(contract IProxy)"
																				}
																			},
																			"id": 1231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3820:13:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IProxy_$644",
																				"typeString": "contract IProxy"
																			}
																		},
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "exchangeContract",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 593,
																		"src": "3820:30:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3820:32:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3806:46:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3780:72:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3772:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3772:81:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "3772:81:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1238,
															"name": "coins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "3866:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1240,
														"indexExpression": {
															"id": 1239,
															"name": "coinAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "3872:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3866:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "32",
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3885:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "3866:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1246,
												"nodeType": "IfStatement",
												"src": "3863:34:13",
												"trueBody": {
													"expression": {
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "3888:9:13",
														"subExpression": {
															"id": 1243,
															"name": "nStable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "3888:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1245,
													"nodeType": "ExpressionStatement",
													"src": "3888:9:13"
												}
											},
											{
												"expression": {
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1247,
															"name": "coins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "3907:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1249,
														"indexExpression": {
															"id": 1248,
															"name": "coinAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "3913:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3907:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1250,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3925:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3907:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "3907:19:13"
											},
											{
												"assignments": [
													1254
												],
												"declarations": [
													{
														"constant": false,
														"id": 1254,
														"mutability": "mutable",
														"name": "n",
														"nameLocation": "3941:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 1292,
														"src": "3936:6:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1253,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3936:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1257,
												"initialValue": {
													"expression": {
														"id": 1255,
														"name": "coinArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "3945:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3945:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3936:25:13"
											},
											{
												"body": {
													"id": 1290,
													"nodeType": "Block",
													"src": "4007:160:13",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1268,
																		"name": "coinArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "4024:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1270,
																	"indexExpression": {
																		"id": 1269,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1259,
																		"src": "4034:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4024:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1271,
																	"name": "coinAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1219,
																	"src": "4040:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4024:24:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1289,
															"nodeType": "IfStatement",
															"src": "4021:136:13",
															"trueBody": {
																"id": 1288,
																"nodeType": "Block",
																"src": "4062:95:13",
																"statements": [
																	{
																		"expression": {
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1273,
																					"name": "coinArray",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 839,
																					"src": "4080:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1275,
																				"indexExpression": {
																					"id": 1274,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1259,
																					"src": "4090:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4080:12:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1276,
																					"name": "coinArray",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 839,
																					"src": "4095:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1280,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1279,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1277,
																						"name": "n",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1254,
																						"src": "4105:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1278,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4107:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "4105:3:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4095:14:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "4080:29:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1282,
																		"nodeType": "ExpressionStatement",
																		"src": "4080:29:13"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1283,
																					"name": "coinArray",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 839,
																					"src": "4127:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "4127:13:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 1286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4127:15:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1287,
																		"nodeType": "ExpressionStatement",
																		"src": "4127:15:13"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1262,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "3987:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1263,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "3991:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3987:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1291,
												"initializationExpression": {
													"assignments": [
														1259
													],
													"declarations": [
														{
															"constant": false,
															"id": 1259,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3980:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 1291,
															"src": "3975:6:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1258,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3975:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1261,
													"initialValue": {
														"hexValue": "30",
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3984:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3975:10:13"
												},
												"loopExpression": {
													"expression": {
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3994:3:13",
														"subExpression": {
															"id": 1265,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "3994:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1267,
													"nodeType": "ExpressionStatement",
													"src": "3994:3:13"
												},
												"nodeType": "ForStatement",
												"src": "3971:196:13"
											}
										]
									},
									"functionSelector": "4051b9aa",
									"id": 1293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delCoin",
									"nameLocation": "3723:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "coinAddr",
												"nameLocation": "3739:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3731:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3730:18:13"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3762:0:13"
									},
									"scope": 1402,
									"src": "3714:459:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										814
									],
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "4247:70:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1300,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4265:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4265:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1302,
																"name": "proxy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 836,
																"src": "4279:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4265:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4257:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4257:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "4257:28:13"
											},
											{
												"expression": {
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1306,
														"name": "proxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "4295:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1307,
														"name": "newAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "4303:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4295:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "4295:15:13"
											}
										]
									},
									"functionSelector": "9e955149",
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateProxy",
									"nameLocation": "4188:11:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1297,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4234:8:13"
									},
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "newAddr",
												"nameLocation": "4208:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "4200:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4200:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4199:17:13"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4247:0:13"
									},
									"scope": 1402,
									"src": "4179:138:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										819
									],
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "4411:473:13",
										"statements": [
											{
												"assignments": [
													1320
												],
												"declarations": [
													{
														"constant": false,
														"id": 1320,
														"mutability": "mutable",
														"name": "proxyAddr",
														"nameLocation": "4429:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 1386,
														"src": "4421:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1319,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4421:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1322,
												"initialValue": {
													"id": 1321,
													"name": "proxy",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 836,
													"src": "4441:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4421:25:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1327,
															"name": "newAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "4489:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1324,
																	"name": "proxyAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "4463:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1323,
																"name": "IProxy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "4456:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IProxy_$644_$",
																	"typeString": "type(contract IProxy)"
																}
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4456:17:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IProxy_$644",
																"typeString": "contract IProxy"
															}
														},
														"id": 1326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "setStorageAddr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 608,
														"src": "4456:32:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4456:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "4456:41:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "696e6974436f6e7472616374286164647265737329",
																	"id": 1335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4552:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_cf9d4afa5954e14c65b6abfb613fbb48ee661f50cfb1c9e0b24b914d132dd504",
																		"typeString": "literal_string \"initContract(address)\""
																	},
																	"value": "initContract(address)"
																},
																{
																	"id": 1336,
																	"name": "proxyAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "4577:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_cf9d4afa5954e14c65b6abfb613fbb48ee661f50cfb1c9e0b24b914d132dd504",
																		"typeString": "literal_string \"initContract(address)\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1333,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4528:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "4528:23:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4528:59:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1330,
															"name": "newAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "4507:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4507:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4507:81:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 1339,
												"nodeType": "ExpressionStatement",
												"src": "4507:81:13"
											},
											{
												"assignments": [
													1341
												],
												"declarations": [
													{
														"constant": false,
														"id": 1341,
														"mutability": "mutable",
														"name": "n",
														"nameLocation": "4603:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 1386,
														"src": "4598:6:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1340,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4598:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1344,
												"initialValue": {
													"expression": {
														"id": 1342,
														"name": "coinArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "4607:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4607:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4598:25:13"
											},
											{
												"body": {
													"id": 1377,
													"nodeType": "Block",
													"src": "4669:168:13",
													"statements": [
														{
															"assignments": [
																1356
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1356,
																	"mutability": "mutable",
																	"name": "tokenToTransfer",
																	"nameLocation": "4691:15:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1377,
																	"src": "4683:23:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1355,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4683:7:13",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1360,
															"initialValue": {
																"baseExpression": {
																	"id": 1357,
																	"name": "coinArray",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "4709:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1359,
																"indexExpression": {
																	"id": 1358,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1346,
																	"src": "4719:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4709:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4683:38:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1365,
																		"name": "newAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1313,
																		"src": "4768:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1372,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "4819:4:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_SCStorage_$1402",
																							"typeString": "contract SCStorage"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_SCStorage_$1402",
																							"typeString": "contract SCStorage"
																						}
																					],
																					"id": 1371,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "4811:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1370,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "4811:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1373,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4811:13:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1367,
																						"name": "tokenToTransfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1356,
																						"src": "4784:15:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1366,
																					"name": "IERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 556,
																					"src": "4777:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC20_$556_$",
																						"typeString": "type(contract IERC20)"
																					}
																				},
																				"id": 1368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4777:23:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$556",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 1369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "balanceOf",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 470,
																			"src": "4777:33:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address) view external returns (uint256)"
																			}
																		},
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4777:48:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1362,
																				"name": "tokenToTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1356,
																				"src": "4742:15:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1361,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 556,
																			"src": "4735:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$556_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4735:23:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$556",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 479,
																	"src": "4735:32:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4735:91:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1376,
															"nodeType": "ExpressionStatement",
															"src": "4735:91:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1349,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "4649:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1350,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "4653:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4649:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1378,
												"initializationExpression": {
													"assignments": [
														1346
													],
													"declarations": [
														{
															"constant": false,
															"id": 1346,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4642:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 1378,
															"src": "4637:6:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1345,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4637:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1348,
													"initialValue": {
														"hexValue": "30",
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4646:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4637:10:13"
												},
												"loopExpression": {
													"expression": {
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4656:3:13",
														"subExpression": {
															"id": 1352,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "4656:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1354,
													"nodeType": "ExpressionStatement",
													"src": "4656:3:13"
												},
												"nodeType": "ForStatement",
												"src": "4633:204:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1382,
																	"name": "deployer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "4867:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4859:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1380,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4859:8:13",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4859:17:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1379,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "4846:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4846:31:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1385,
												"nodeType": "ExpressionStatement",
												"src": "4846:31:13"
											}
										]
									},
									"functionSelector": "2637a477",
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1317,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1316,
												"name": "OnlyDeployer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 871,
												"src": "4394:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4394:12:13"
										}
									],
									"name": "deleteContract",
									"nameLocation": "4336:14:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1315,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4385:8:13"
									},
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "newAddr",
												"nameLocation": "4359:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "4351:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4351:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4350:17:13"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4411:0:13"
									},
									"scope": 1402,
									"src": "4327:557:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "4925:25:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1390,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "4935:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4935:8:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1392,
												"nodeType": "ExpressionStatement",
												"src": "4935:8:13"
											}
										]
									},
									"id": 1394,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4901:2:13"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4925:0:13"
									},
									"scope": 1402,
									"src": "4894:56:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "4992:25:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1397,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "5002:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5002:8:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "5002:8:13"
											}
										]
									},
									"id": 1401,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4968:2:13"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4992:0:13"
									},
									"scope": 1402,
									"src": "4960:57:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1403,
							"src": "148:4871:13",
							"usedErrors": []
						}
					],
					"src": "46:4973:13"
				},
				"id": 13
			},
			"TFGv3/Contracts/libraries/FullMath.sol": {
				"ast": {
					"absolutePath": "TFGv3/Contracts/libraries/FullMath.sol",
					"exportedSymbols": {
						"FullMath": [
							1583
						]
					},
					"id": 1584,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1404,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FullMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1405,
								"nodeType": "StructuredDocumentation",
								"src": "58:297:14",
								"text": "@title Contains 512-bit math functions\n @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits"
							},
							"fullyImplemented": true,
							"id": 1583,
							"linearizedBaseContracts": [
								1583
							],
							"name": "FullMath",
							"nameLocation": "363:8:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "870:3673:14",
										"statements": [
											{
												"assignments": [
													1418
												],
												"declarations": [
													{
														"constant": false,
														"id": 1418,
														"mutability": "mutable",
														"name": "prod0",
														"nameLocation": "1191:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 1538,
														"src": "1183:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1417,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1183:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1419,
												"nodeType": "VariableDeclarationStatement",
												"src": "1183:13:14"
											},
											{
												"assignments": [
													1421
												],
												"declarations": [
													{
														"constant": false,
														"id": 1421,
														"mutability": "mutable",
														"name": "prod1",
														"nameLocation": "1259:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 1538,
														"src": "1251:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1420,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1251:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1422,
												"nodeType": "VariableDeclarationStatement",
												"src": "1251:13:14"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1327:141:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1341:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "1358:1:14"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "1361:1:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1368:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1364:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1364:6:14"
																	}
																],
																"functionName": {
																	"name": "mulmod",
																	"nodeType": "YulIdentifier",
																	"src": "1351:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1351:20:14"
															},
															"variables": [
																{
																	"name": "mm",
																	"nodeType": "YulTypedName",
																	"src": "1345:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1384:18:14",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "1397:1:14"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "1400:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1393:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:9:14"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nodeType": "YulIdentifier",
																	"src": "1384:5:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1415:43:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nodeType": "YulIdentifier",
																				"src": "1432:2:14"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "1436:5:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1428:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1428:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nodeType": "YulIdentifier",
																				"src": "1447:2:14"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "1451:5:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1444:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1444:13:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1424:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1424:34:14"
															},
															"variableNames": [
																{
																	"name": "prod1",
																	"nodeType": "YulIdentifier",
																	"src": "1415:5:14"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1408,
														"isOffset": false,
														"isSlot": false,
														"src": "1358:1:14",
														"valueSize": 1
													},
													{
														"declaration": 1408,
														"isOffset": false,
														"isSlot": false,
														"src": "1397:1:14",
														"valueSize": 1
													},
													{
														"declaration": 1410,
														"isOffset": false,
														"isSlot": false,
														"src": "1361:1:14",
														"valueSize": 1
													},
													{
														"declaration": 1410,
														"isOffset": false,
														"isSlot": false,
														"src": "1400:1:14",
														"valueSize": 1
													},
													{
														"declaration": 1418,
														"isOffset": false,
														"isSlot": false,
														"src": "1384:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1418,
														"isOffset": false,
														"isSlot": false,
														"src": "1436:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1418,
														"isOffset": false,
														"isSlot": false,
														"src": "1451:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1421,
														"isOffset": false,
														"isSlot": false,
														"src": "1415:5:14",
														"valueSize": 1
													}
												],
												"id": 1423,
												"nodeType": "InlineAssembly",
												"src": "1318:150:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1424,
														"name": "prod1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "1540:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1549:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1540:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1437,
												"nodeType": "IfStatement",
												"src": "1536:179:14",
												"trueBody": {
													"id": 1436,
													"nodeType": "Block",
													"src": "1552:163:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1428,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1412,
																			"src": "1574:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1588:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1574:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1427,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1566:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1566:24:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1432,
															"nodeType": "ExpressionStatement",
															"src": "1566:24:14"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "1613:65:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1631:33:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "prod0",
																					"nodeType": "YulIdentifier",
																					"src": "1645:5:14"
																				},
																				{
																					"name": "denominator",
																					"nodeType": "YulIdentifier",
																					"src": "1652:11:14"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "1641:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1641:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "result",
																				"nodeType": "YulIdentifier",
																				"src": "1631:6:14"
																			}
																		]
																	}
																]
															},
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1412,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1652:11:14",
																	"valueSize": 1
																},
																{
																	"declaration": 1418,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1645:5:14",
																	"valueSize": 1
																},
																{
																	"declaration": 1415,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1631:6:14",
																	"valueSize": 1
																}
															],
															"id": 1433,
															"nodeType": "InlineAssembly",
															"src": "1604:74:14"
														},
														{
															"expression": {
																"id": 1434,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1415,
																"src": "1698:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1416,
															"id": 1435,
															"nodeType": "Return",
															"src": "1691:13:14"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1439,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "1828:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1440,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1421,
																"src": "1842:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1828:19:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1438,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1820:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1820:28:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1443,
												"nodeType": "ExpressionStatement",
												"src": "1820:28:14"
											},
											{
												"assignments": [
													1445
												],
												"declarations": [
													{
														"constant": false,
														"id": 1445,
														"mutability": "mutable",
														"name": "remainder",
														"nameLocation": "2133:9:14",
														"nodeType": "VariableDeclaration",
														"scope": 1538,
														"src": "2125:17:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1444,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2125:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1446,
												"nodeType": "VariableDeclarationStatement",
												"src": "2125:17:14"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2161:62:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2175:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "2195:1:14"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "2198:1:14"
																	},
																	{
																		"name": "denominator",
																		"nodeType": "YulIdentifier",
																		"src": "2201:11:14"
																	}
																],
																"functionName": {
																	"name": "mulmod",
																	"nodeType": "YulIdentifier",
																	"src": "2188:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2188:25:14"
															},
															"variableNames": [
																{
																	"name": "remainder",
																	"nodeType": "YulIdentifier",
																	"src": "2175:9:14"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1408,
														"isOffset": false,
														"isSlot": false,
														"src": "2195:1:14",
														"valueSize": 1
													},
													{
														"declaration": 1410,
														"isOffset": false,
														"isSlot": false,
														"src": "2198:1:14",
														"valueSize": 1
													},
													{
														"declaration": 1412,
														"isOffset": false,
														"isSlot": false,
														"src": "2201:11:14",
														"valueSize": 1
													},
													{
														"declaration": 1445,
														"isOffset": false,
														"isSlot": false,
														"src": "2175:9:14",
														"valueSize": 1
													}
												],
												"id": 1447,
												"nodeType": "InlineAssembly",
												"src": "2152:71:14"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2296:108:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2310:41:14",
															"value": {
																"arguments": [
																	{
																		"name": "prod1",
																		"nodeType": "YulIdentifier",
																		"src": "2323:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "2333:9:14"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "2344:5:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2330:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2330:20:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2319:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2319:32:14"
															},
															"variableNames": [
																{
																	"name": "prod1",
																	"nodeType": "YulIdentifier",
																	"src": "2310:5:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2364:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "prod0",
																		"nodeType": "YulIdentifier",
																		"src": "2377:5:14"
																	},
																	{
																		"name": "remainder",
																		"nodeType": "YulIdentifier",
																		"src": "2384:9:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2373:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2373:21:14"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nodeType": "YulIdentifier",
																	"src": "2364:5:14"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1418,
														"isOffset": false,
														"isSlot": false,
														"src": "2344:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1418,
														"isOffset": false,
														"isSlot": false,
														"src": "2364:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1418,
														"isOffset": false,
														"isSlot": false,
														"src": "2377:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1421,
														"isOffset": false,
														"isSlot": false,
														"src": "2310:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1421,
														"isOffset": false,
														"isSlot": false,
														"src": "2323:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1445,
														"isOffset": false,
														"isSlot": false,
														"src": "2333:9:14",
														"valueSize": 1
													},
													{
														"declaration": 1445,
														"isOffset": false,
														"isSlot": false,
														"src": "2384:9:14",
														"valueSize": 1
													}
												],
												"id": 1448,
												"nodeType": "InlineAssembly",
												"src": "2287:117:14"
											},
											{
												"assignments": [
													1450
												],
												"declarations": [
													{
														"constant": false,
														"id": 1450,
														"mutability": "mutable",
														"name": "twos",
														"nameLocation": "2561:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 1538,
														"src": "2553:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1449,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2553:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1463,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"arguments": [
																				{
																					"id": 1453,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2574:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1452,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "2574:7:14",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					}
																				],
																				"id": 1451,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "2569:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2569:13:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint256",
																				"typeString": "type(uint256)"
																			}
																		},
																		"id": 1455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "2569:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1456,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1412,
																		"src": "2589:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2569:31:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2603:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2569:35:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1460,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2568:37:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 1461,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1412,
														"src": "2608:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2568:51:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2553:66:14"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2684:61:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2698:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "denominator",
																		"nodeType": "YulIdentifier",
																		"src": "2717:11:14"
																	},
																	{
																		"name": "twos",
																		"nodeType": "YulIdentifier",
																		"src": "2730:4:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2713:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2713:22:14"
															},
															"variableNames": [
																{
																	"name": "denominator",
																	"nodeType": "YulIdentifier",
																	"src": "2698:11:14"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1412,
														"isOffset": false,
														"isSlot": false,
														"src": "2698:11:14",
														"valueSize": 1
													},
													{
														"declaration": 1412,
														"isOffset": false,
														"isSlot": false,
														"src": "2717:11:14",
														"valueSize": 1
													},
													{
														"declaration": 1450,
														"isOffset": false,
														"isSlot": false,
														"src": "2730:4:14",
														"valueSize": 1
													}
												],
												"id": 1464,
												"nodeType": "InlineAssembly",
												"src": "2675:70:14"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2818:49:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2832:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "prod0",
																		"nodeType": "YulIdentifier",
																		"src": "2845:5:14"
																	},
																	{
																		"name": "twos",
																		"nodeType": "YulIdentifier",
																		"src": "2852:4:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2841:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2841:16:14"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nodeType": "YulIdentifier",
																	"src": "2832:5:14"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1418,
														"isOffset": false,
														"isSlot": false,
														"src": "2832:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1418,
														"isOffset": false,
														"isSlot": false,
														"src": "2845:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1450,
														"isOffset": false,
														"isSlot": false,
														"src": "2852:4:14",
														"valueSize": 1
													}
												],
												"id": 1465,
												"nodeType": "InlineAssembly",
												"src": "2809:58:14"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3055:63:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3069:39:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3089:1:14",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "3092:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3085:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3085:12:14"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3099:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3081:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3081:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3106:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3077:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3077:31:14"
															},
															"variableNames": [
																{
																	"name": "twos",
																	"nodeType": "YulIdentifier",
																	"src": "3069:4:14"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1450,
														"isOffset": false,
														"isSlot": false,
														"src": "3069:4:14",
														"valueSize": 1
													},
													{
														"declaration": 1450,
														"isOffset": false,
														"isSlot": false,
														"src": "3092:4:14",
														"valueSize": 1
													},
													{
														"declaration": 1450,
														"isOffset": false,
														"isSlot": false,
														"src": "3099:4:14",
														"valueSize": 1
													}
												],
												"id": 1466,
												"nodeType": "InlineAssembly",
												"src": "3046:72:14"
											},
											{
												"expression": {
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1467,
														"name": "prod0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "3127:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1468,
															"name": "prod1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "3136:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1469,
															"name": "twos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "3144:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3136:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3127:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "3127:21:14"
											},
											{
												"assignments": [
													1474
												],
												"declarations": [
													{
														"constant": false,
														"id": 1474,
														"mutability": "mutable",
														"name": "inv",
														"nameLocation": "3490:3:14",
														"nodeType": "VariableDeclaration",
														"scope": 1538,
														"src": "3482:11:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1473,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3482:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1481,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "33",
																	"id": 1475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3497:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1476,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1412,
																	"src": "3501:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3497:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1478,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3496:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "^",
													"rightExpression": {
														"hexValue": "32",
														"id": 1479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3516:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "3496:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3482:35:14"
											},
											{
												"expression": {
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1482,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "3732:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3739:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1484,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "3743:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1485,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "3757:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3743:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3739:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3732:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "3732:28:14"
											},
											{
												"expression": {
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1490,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "3790:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3797:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1492,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "3801:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1493,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "3815:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3801:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3797:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3790:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1497,
												"nodeType": "ExpressionStatement",
												"src": "3790:28:14"
											},
											{
												"expression": {
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1498,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "3849:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3856:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1500,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "3860:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1501,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "3874:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3860:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3856:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3849:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "3849:28:14"
											},
											{
												"expression": {
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1506,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "3908:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3915:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1508,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "3919:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1509,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "3933:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3919:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3915:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3908:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1513,
												"nodeType": "ExpressionStatement",
												"src": "3908:28:14"
											},
											{
												"expression": {
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1514,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "3967:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3974:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1516,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "3978:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1517,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "3992:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3978:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3974:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3967:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "3967:28:14"
											},
											{
												"expression": {
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1522,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "4027:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4034:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1524,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "4038:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1525,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "4052:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4038:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4034:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4027:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1529,
												"nodeType": "ExpressionStatement",
												"src": "4027:28:14"
											},
											{
												"expression": {
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1530,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "4493:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1531,
															"name": "prod0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "4502:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1532,
															"name": "inv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "4510:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4502:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4493:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1535,
												"nodeType": "ExpressionStatement",
												"src": "4493:20:14"
											},
											{
												"expression": {
													"id": 1536,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1415,
													"src": "4530:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1416,
												"id": 1537,
												"nodeType": "Return",
												"src": "4523:13:14"
											}
										]
									},
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "378:359:14",
										"text": "@notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv"
									},
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "751:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "775:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "767:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "794:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "786:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "786:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "813:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "805:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "757:73:14"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "862:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "854:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "853:16:14"
									},
									"scope": 1583,
									"src": "742:3801:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1581,
										"nodeType": "Block",
										"src": "4963:177:14",
										"statements": [
											{
												"expression": {
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1551,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "4973:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1553,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1542,
																"src": "4989:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1554,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1544,
																"src": "4992:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1555,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1546,
																"src": "4995:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1552,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1539,
															"src": "4982:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4982:25:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4973:34:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1558,
												"nodeType": "ExpressionStatement",
												"src": "4973:34:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1560,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1542,
																"src": "5028:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1561,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1544,
																"src": "5031:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1562,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1546,
																"src": "5034:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1559,
															"name": "mulmod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967280,
															"src": "5021:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5021:25:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5049:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5021:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1580,
												"nodeType": "IfStatement",
												"src": "5017:117:14",
												"trueBody": {
													"id": 1579,
													"nodeType": "Block",
													"src": "5052:82:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1567,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1549,
																			"src": "5074:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1570,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5088:7:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1569,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "5088:7:14",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						}
																					],
																					"id": 1568,
																					"name": "type",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967269,
																					"src": "5083:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 1571,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5083:13:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_meta_type_t_uint256",
																					"typeString": "type(uint256)"
																				}
																			},
																			"id": 1572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "max",
																			"nodeType": "MemberAccess",
																			"src": "5083:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5074:26:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1566,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5066:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5066:35:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1575,
															"nodeType": "ExpressionStatement",
															"src": "5066:35:14"
														},
														{
															"expression": {
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "5115:8:14",
																"subExpression": {
																	"id": 1576,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1549,
																	"src": "5115:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1578,
															"nodeType": "ExpressionStatement",
															"src": "5115:8:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "4549:271:14",
										"text": "@notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result"
									},
									"id": 1582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDivRoundingUp",
									"nameLocation": "4834:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4868:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "4860:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4887:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "4879:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "4906:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "4898:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4850:73:14"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4955:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "4947:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4947:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4946:16:14"
									},
									"scope": 1583,
									"src": "4825:315:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1584,
							"src": "355:4787:14",
							"usedErrors": []
						}
					],
					"src": "32:5111:14"
				},
				"id": 14
			},
			"TFGv3/Contracts/libraries/OracleLibrary.sol": {
				"ast": {
					"absolutePath": "TFGv3/Contracts/libraries/OracleLibrary.sol",
					"exportedSymbols": {
						"FullMath": [
							1583
						],
						"IUniswapV3Pool": [
							21
						],
						"IUniswapV3PoolActions": [
							117
						],
						"IUniswapV3PoolDerivedState": [
							148
						],
						"IUniswapV3PoolEvents": [
							267
						],
						"IUniswapV3PoolImmutables": [
							307
						],
						"IUniswapV3PoolOwnerActions": [
							333
						],
						"IUniswapV3PoolState": [
							441
						],
						"OracleLibrary": [
							2185
						],
						"TickMath": [
							2723
						]
					},
					"id": 2186,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1585,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:15"
						},
						{
							"absolutePath": "TFGv3/Contracts/libraries/FullMath.sol",
							"file": "./FullMath.sol",
							"id": 1586,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2186,
							"sourceUnit": 1584,
							"src": "71:24:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "TFGv3/Contracts/libraries/TickMath.sol",
							"file": "./TickMath.sol",
							"id": 1587,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2186,
							"sourceUnit": 2724,
							"src": "96:24:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 1588,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2186,
							"sourceUnit": 22,
							"src": "121:66:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "OracleLibrary",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1589,
								"nodeType": "StructuredDocumentation",
								"src": "189:90:15",
								"text": "@title Oracle library\n @notice Provides functions to integrate with V3 pool oracle"
							},
							"fullyImplemented": true,
							"id": 2185,
							"linearizedBaseContracts": [
								2185
							],
							"name": "OracleLibrary",
							"nameLocation": "287:13:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "966:1083:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1602,
																"name": "secondsAgo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "984:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "998:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "984:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4250",
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1001:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb",
																"typeString": "literal_string \"BP\""
															},
															"value": "BP"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb",
																"typeString": "literal_string \"BP\""
															}
														],
														"id": 1601,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "976:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "976:30:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1607,
												"nodeType": "ExpressionStatement",
												"src": "976:30:15"
											},
											{
												"assignments": [
													1612
												],
												"declarations": [
													{
														"constant": false,
														"id": 1612,
														"mutability": "mutable",
														"name": "secondsAgos",
														"nameLocation": "1033:11:15",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "1017:27:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
															"typeString": "uint32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1610,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "1017:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1611,
															"nodeType": "ArrayTypeName",
															"src": "1017:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
																"typeString": "uint32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1618,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1060:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1047:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint32_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint32[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1613,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "1051:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1614,
															"nodeType": "ArrayTypeName",
															"src": "1051:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
																"typeString": "uint32[]"
															}
														}
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1047:15:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
														"typeString": "uint32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1017:45:15"
											},
											{
												"expression": {
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1619,
															"name": "secondsAgos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "1072:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																"typeString": "uint32[] memory"
															}
														},
														"id": 1621,
														"indexExpression": {
															"hexValue": "30",
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1084:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1072:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1622,
														"name": "secondsAgo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "1089:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1072:27:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1624,
												"nodeType": "ExpressionStatement",
												"src": "1072:27:15"
											},
											{
												"expression": {
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1625,
															"name": "secondsAgos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "1109:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																"typeString": "uint32[] memory"
															}
														},
														"id": 1627,
														"indexExpression": {
															"hexValue": "31",
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1121:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1109:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1126:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1109:18:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "1109:18:15"
											},
											{
												"assignments": [
													1635,
													1638
												],
												"declarations": [
													{
														"constant": false,
														"id": 1635,
														"mutability": "mutable",
														"name": "tickCumulatives",
														"nameLocation": "1154:15:15",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "1139:30:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
															"typeString": "int56[]"
														},
														"typeName": {
															"baseType": {
																"id": 1633,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "1139:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																}
															},
															"id": 1634,
															"nodeType": "ArrayTypeName",
															"src": "1139:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
																"typeString": "int56[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1638,
														"mutability": "mutable",
														"name": "secondsPerLiquidityCumulativeX128s",
														"nameLocation": "1188:34:15",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "1171:51:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
															"typeString": "uint160[]"
														},
														"typeName": {
															"baseType": {
																"id": 1636,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "1171:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 1637,
															"nodeType": "ArrayTypeName",
															"src": "1171:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
																"typeString": "uint160[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1645,
												"initialValue": {
													"arguments": [
														{
															"id": 1643,
															"name": "secondsAgos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "1267:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																"typeString": "uint32[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																"typeString": "uint32[] memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1640,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "1253:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1639,
																"name": "IUniswapV3Pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "1238:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$21_$",
																	"typeString": "type(contract IUniswapV3Pool)"
																}
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1238:20:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$21",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "observe",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 133,
														"src": "1238:28:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_array$_t_uint32_$dyn_memory_ptr_$returns$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
															"typeString": "function (uint32[] memory) view external returns (int56[] memory,uint160[] memory)"
														}
													},
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1238:41:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
														"typeString": "tuple(int56[] memory,uint160[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1138:141:15"
											},
											{
												"assignments": [
													1647
												],
												"declarations": [
													{
														"constant": false,
														"id": 1647,
														"mutability": "mutable",
														"name": "tickCumulativesDelta",
														"nameLocation": "1296:20:15",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "1290:26:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														},
														"typeName": {
															"id": 1646,
															"name": "int56",
															"nodeType": "ElementaryTypeName",
															"src": "1290:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1655,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1648,
															"name": "tickCumulatives",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1635,
															"src": "1319:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
																"typeString": "int56[] memory"
															}
														},
														"id": 1650,
														"indexExpression": {
															"hexValue": "31",
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1335:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1319:18:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 1651,
															"name": "tickCumulatives",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1635,
															"src": "1340:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
																"typeString": "int56[] memory"
															}
														},
														"id": 1653,
														"indexExpression": {
															"hexValue": "30",
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1356:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1340:18:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "1319:39:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1290:68:15"
											},
											{
												"assignments": [
													1657
												],
												"declarations": [
													{
														"constant": false,
														"id": 1657,
														"mutability": "mutable",
														"name": "secondsPerLiquidityCumulativesDelta",
														"nameLocation": "1376:35:15",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "1368:43:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 1656,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "1368:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1665,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1658,
															"name": "secondsPerLiquidityCumulativeX128s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "1426:34:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
																"typeString": "uint160[] memory"
															}
														},
														"id": 1660,
														"indexExpression": {
															"hexValue": "31",
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1461:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1426:37:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 1661,
															"name": "secondsPerLiquidityCumulativeX128s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "1466:34:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
																"typeString": "uint160[] memory"
															}
														},
														"id": 1663,
														"indexExpression": {
															"hexValue": "30",
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1501:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1466:37:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "1426:77:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1368:135:15"
											},
											{
												"expression": {
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1666,
														"name": "arithmeticMeanTick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "1514:18:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																},
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1669,
																	"name": "tickCumulativesDelta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1647,
																	"src": "1541:20:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int56",
																		"typeString": "int56"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1672,
																			"name": "secondsAgo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1594,
																			"src": "1570:10:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		],
																		"id": 1671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1564:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int32_$",
																			"typeString": "type(int32)"
																		},
																		"typeName": {
																			"id": 1670,
																			"name": "int32",
																			"nodeType": "ElementaryTypeName",
																			"src": "1564:5:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1564:17:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int32",
																		"typeString": "int32"
																	}
																},
																"src": "1541:40:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																}
															],
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1535:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 1667,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "1535:5:15",
																"typeDescriptions": {}
															}
														},
														"id": 1675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1535:47:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "1514:68:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 1677,
												"nodeType": "ExpressionStatement",
												"src": "1514:68:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														},
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1678,
															"name": "tickCumulativesDelta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "1641:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1664:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1641:24:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																},
																"id": 1688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_int56",
																		"typeString": "int56"
																	},
																	"id": 1686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1681,
																		"name": "tickCumulativesDelta",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1647,
																		"src": "1670:20:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int56",
																			"typeString": "int56"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1684,
																				"name": "secondsAgo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1594,
																				"src": "1699:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			],
																			"id": 1683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1693:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int32_$",
																				"typeString": "type(int32)"
																			},
																			"typeName": {
																				"id": 1682,
																				"name": "int32",
																				"nodeType": "ElementaryTypeName",
																				"src": "1693:5:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1693:17:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int32",
																			"typeString": "int32"
																		}
																	},
																	"src": "1670:40:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int56",
																		"typeString": "int56"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1714:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1670:45:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1689,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1669:47:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1641:75:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1694,
												"nodeType": "IfStatement",
												"src": "1637:101:15",
												"trueBody": {
													"expression": {
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "1718:20:15",
														"subExpression": {
															"id": 1691,
															"name": "arithmeticMeanTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "1718:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"id": 1693,
													"nodeType": "ExpressionStatement",
													"src": "1718:20:15"
												}
											},
											{
												"assignments": [
													1696
												],
												"declarations": [
													{
														"constant": false,
														"id": 1696,
														"mutability": "mutable",
														"name": "secondsAgoX160",
														"nameLocation": "1874:14:15",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "1866:22:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														},
														"typeName": {
															"id": 1695,
															"name": "uint192",
															"nodeType": "ElementaryTypeName",
															"src": "1866:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint192",
																"typeString": "uint192"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1707,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1699,
																"name": "secondsAgo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "1899:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															],
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1891:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint192_$",
																"typeString": "type(uint192)"
															},
															"typeName": {
																"id": 1697,
																"name": "uint192",
																"nodeType": "ElementaryTypeName",
																"src": "1891:7:15",
																"typeDescriptions": {}
															}
														},
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1891:19:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1918:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1702,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "1918:7:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 1701,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1913:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1913:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1913:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "1891:39:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1866:64:15"
											},
											{
												"expression": {
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1708,
														"name": "harmonicMeanLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "1940:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint192",
																	"typeString": "uint192"
																},
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1711,
																	"name": "secondsAgoX160",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1696,
																	"src": "1972:14:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint192",
																		"typeString": "uint192"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint192",
																				"typeString": "uint192"
																			},
																			"id": 1717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1714,
																						"name": "secondsPerLiquidityCumulativesDelta",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1657,
																						"src": "1998:35:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					],
																					"id": 1713,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1990:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint192_$",
																						"typeString": "type(uint192)"
																					},
																					"typeName": {
																						"id": 1712,
																						"name": "uint192",
																						"nodeType": "ElementaryTypeName",
																						"src": "1990:7:15",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1715,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1990:44:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint192",
																					"typeString": "uint192"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1716,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2038:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "1990:50:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint192",
																				"typeString": "uint192"
																			}
																		}
																	],
																	"id": 1718,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1989:52:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint192",
																		"typeString": "uint192"
																	}
																},
																"src": "1972:69:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint192",
																	"typeString": "uint192"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint192",
																	"typeString": "uint192"
																}
															],
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1964:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint128_$",
																"typeString": "type(uint128)"
															},
															"typeName": {
																"id": 1709,
																"name": "uint128",
																"nodeType": "ElementaryTypeName",
																"src": "1964:7:15",
																"typeDescriptions": {}
															}
														},
														"id": 1720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1964:78:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "1940:102:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 1722,
												"nodeType": "ExpressionStatement",
												"src": "1940:102:15"
											}
										]
									},
									"documentation": {
										"id": 1590,
										"nodeType": "StructuredDocumentation",
										"src": "307:496:15",
										"text": "@notice Calculates time-weighted means of tick and liquidity for a given Uniswap V3 pool\n @param pool Address of the pool that we want to observe\n @param secondsAgo Number of seconds in the past from which to calculate the time-weighted means\n @return arithmeticMeanTick The arithmetic mean tick from (block.timestamp - secondsAgo) to block.timestamp\n @return harmonicMeanLiquidity The harmonic mean liquidity from (block.timestamp - secondsAgo) to block.timestamp"
									},
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "consult",
									"nameLocation": "817:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "833:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "825:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "secondsAgo",
												"nameLocation": "846:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "839:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1593,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "839:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "824:33:15"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "arithmeticMeanTick",
												"nameLocation": "911:18:15",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "905:24:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1596,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "905:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "harmonicMeanLiquidity",
												"nameLocation": "939:21:15",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "931:29:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1598,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "904:57:15"
									},
									"scope": 2185,
									"src": "808:1241:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1821,
										"nodeType": "Block",
										"src": "2730:778:15",
										"statements": [
											{
												"assignments": [
													1739
												],
												"declarations": [
													{
														"constant": false,
														"id": 1739,
														"mutability": "mutable",
														"name": "sqrtRatioX96",
														"nameLocation": "2748:12:15",
														"nodeType": "VariableDeclaration",
														"scope": 1821,
														"src": "2740:20:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 1738,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "2740:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1744,
												"initialValue": {
													"arguments": [
														{
															"id": 1742,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "2791:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"expression": {
															"id": 1740,
															"name": "TickMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2723,
															"src": "2763:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TickMath_$2723_$",
																"typeString": "type(library TickMath)"
															}
														},
														"id": 1741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getSqrtRatioAtTick",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2583,
														"src": "2763:27:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
															"typeString": "function (int24) pure returns (uint160)"
														}
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2763:33:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2740:56:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1745,
														"name": "sqrtRatioX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "2915:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2936:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 1747,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "2936:7:15",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 1746,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2931:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2931:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 1750,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2931:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "2915:33:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1819,
													"nodeType": "Block",
													"src": "3221:281:15",
													"statements": [
														{
															"assignments": [
																1786
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1786,
																	"mutability": "mutable",
																	"name": "ratioX128",
																	"nameLocation": "3243:9:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 1819,
																	"src": "3235:17:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1785,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3235:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1795,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1789,
																		"name": "sqrtRatioX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1739,
																		"src": "3271:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"id": 1790,
																		"name": "sqrtRatioX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1739,
																		"src": "3285:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		},
																		"id": 1793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3299:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3634",
																			"id": 1792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3304:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "3299:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	],
																	"expression": {
																		"id": 1787,
																		"name": "FullMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1583,
																		"src": "3255:8:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_FullMath_$1583_$",
																			"typeString": "type(library FullMath)"
																		}
																	},
																	"id": 1788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mulDiv",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1539,
																	"src": "3255:15:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3255:52:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3235:72:15"
														},
														{
															"expression": {
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1796,
																	"name": "quoteAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1736,
																	"src": "3321:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1797,
																			"name": "baseToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1731,
																			"src": "3335:9:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1798,
																			"name": "quoteToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1733,
																			"src": "3347:10:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "3335:22:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				},
																				"id": 1812,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1810,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3459:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "313238",
																					"id": 1811,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3464:3:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_128_by_1",
																						"typeString": "int_const 128"
																					},
																					"value": "128"
																				},
																				"src": "3459:8:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				}
																			},
																			{
																				"id": 1813,
																				"name": "baseAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1729,
																				"src": "3469:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			{
																				"id": 1814,
																				"name": "ratioX128",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1786,
																				"src": "3481:9:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1808,
																				"name": "FullMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1583,
																				"src": "3443:8:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FullMath_$1583_$",
																					"typeString": "type(library FullMath)"
																				}
																			},
																			"id": 1809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mulDiv",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1539,
																			"src": "3443:15:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3443:48:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3335:156:15",
																	"trueExpression": {
																		"arguments": [
																			{
																				"id": 1802,
																				"name": "ratioX128",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1786,
																				"src": "3392:9:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1803,
																				"name": "baseAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1729,
																				"src": "3403:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				},
																				"id": 1806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1804,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3415:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "313238",
																					"id": 1805,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3420:3:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_128_by_1",
																						"typeString": "int_const 128"
																					},
																					"value": "128"
																				},
																				"src": "3415:8:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				},
																				{
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				}
																			],
																			"expression": {
																				"id": 1800,
																				"name": "FullMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1583,
																				"src": "3376:8:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FullMath_$1583_$",
																					"typeString": "type(library FullMath)"
																				}
																			},
																			"id": 1801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mulDiv",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1539,
																			"src": "3376:15:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3376:48:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3321:170:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1818,
															"nodeType": "ExpressionStatement",
															"src": "3321:170:15"
														}
													]
												},
												"id": 1820,
												"nodeType": "IfStatement",
												"src": "2911:591:15",
												"trueBody": {
													"id": 1784,
													"nodeType": "Block",
													"src": "2950:265:15",
													"statements": [
														{
															"assignments": [
																1753
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1753,
																	"mutability": "mutable",
																	"name": "ratioX192",
																	"nameLocation": "2972:9:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 1784,
																	"src": "2964:17:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1752,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2964:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1760,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1756,
																			"name": "sqrtRatioX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1739,
																			"src": "2992:12:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2984:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1754,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2984:7:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2984:21:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1758,
																	"name": "sqrtRatioX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1739,
																	"src": "3008:12:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "2984:36:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2964:56:15"
														},
														{
															"expression": {
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1761,
																	"name": "quoteAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1736,
																	"src": "3034:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1762,
																			"name": "baseToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1731,
																			"src": "3048:9:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1763,
																			"name": "quoteToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1733,
																			"src": "3060:10:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "3048:22:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				},
																				"id": 1777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1775,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3172:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "313932",
																					"id": 1776,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3177:3:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_192_by_1",
																						"typeString": "int_const 192"
																					},
																					"value": "192"
																				},
																				"src": "3172:8:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				}
																			},
																			{
																				"id": 1778,
																				"name": "baseAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1729,
																				"src": "3182:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			{
																				"id": 1779,
																				"name": "ratioX192",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1753,
																				"src": "3194:9:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1773,
																				"name": "FullMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1583,
																				"src": "3156:8:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FullMath_$1583_$",
																					"typeString": "type(library FullMath)"
																				}
																			},
																			"id": 1774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mulDiv",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1539,
																			"src": "3156:15:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3156:48:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3048:156:15",
																	"trueExpression": {
																		"arguments": [
																			{
																				"id": 1767,
																				"name": "ratioX192",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1753,
																				"src": "3105:9:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1768,
																				"name": "baseAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1729,
																				"src": "3116:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				},
																				"id": 1771,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1769,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3128:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "313932",
																					"id": 1770,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3133:3:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_192_by_1",
																						"typeString": "int_const 192"
																					},
																					"value": "192"
																				},
																				"src": "3128:8:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				},
																				{
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				}
																			],
																			"expression": {
																				"id": 1765,
																				"name": "FullMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1583,
																				"src": "3089:8:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FullMath_$1583_$",
																					"typeString": "type(library FullMath)"
																				}
																			},
																			"id": 1766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mulDiv",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1539,
																			"src": "3089:15:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3089:48:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3034:170:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1783,
															"nodeType": "ExpressionStatement",
															"src": "3034:170:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "2055:493:15",
										"text": "@notice Given a tick and a token amount, calculates the amount of token received in exchange\n @param tick Tick value used to calculate the quote\n @param baseAmount Amount of token to be converted\n @param baseToken Address of an ERC20 token contract used as the baseAmount denomination\n @param quoteToken Address of an ERC20 token contract used as the quoteAmount denomination\n @return quoteAmount Amount of quoteToken received for baseAmount of baseToken"
									},
									"id": 1822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getQuoteAtTick",
									"nameLocation": "2562:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "2592:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "2586:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1726,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2586:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "baseAmount",
												"nameLocation": "2614:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "2606:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1728,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2606:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "baseToken",
												"nameLocation": "2642:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "2634:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2634:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "quoteToken",
												"nameLocation": "2669:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "2661:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2576:109:15"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "quoteAmount",
												"nameLocation": "2717:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "2709:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2709:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2708:21:15"
									},
									"scope": 2185,
									"src": "2553:955:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1887,
										"nodeType": "Block",
										"src": "3880:684:15",
										"statements": [
											{
												"assignments": [
													null,
													null,
													1831,
													1833,
													null,
													null,
													null
												],
												"declarations": [
													null,
													null,
													{
														"constant": false,
														"id": 1831,
														"mutability": "mutable",
														"name": "observationIndex",
														"nameLocation": "3902:16:15",
														"nodeType": "VariableDeclaration",
														"scope": 1887,
														"src": "3895:23:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 1830,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "3895:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1833,
														"mutability": "mutable",
														"name": "observationCardinality",
														"nameLocation": "3927:22:15",
														"nodeType": "VariableDeclaration",
														"scope": 1887,
														"src": "3920:29:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 1832,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "3920:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1839,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1835,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1825,
																	"src": "3974:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1834,
																"name": "IUniswapV3Pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "3959:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$21_$",
																	"typeString": "type(contract IUniswapV3Pool)"
																}
															},
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3959:20:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$21",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "slot0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 354,
														"src": "3959:26:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
															"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
														}
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3959:28:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
														"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3890:97:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1841,
																"name": "observationCardinality",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1833,
																"src": "4005:22:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4030:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4005:26:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e49",
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4033:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e817963341ac54b6c6630a42fcd594b50ae6e47bc5952aa5478cb70078a54ca0",
																"typeString": "literal_string \"NI\""
															},
															"value": "NI"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e817963341ac54b6c6630a42fcd594b50ae6e47bc5952aa5478cb70078a54ca0",
																"typeString": "literal_string \"NI\""
															}
														],
														"id": 1840,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3997:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3997:41:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1846,
												"nodeType": "ExpressionStatement",
												"src": "3997:41:15"
											},
											{
												"assignments": [
													1848,
													null,
													null,
													1850
												],
												"declarations": [
													{
														"constant": false,
														"id": 1848,
														"mutability": "mutable",
														"name": "observationTimestamp",
														"nameLocation": "4057:20:15",
														"nodeType": "VariableDeclaration",
														"scope": 1887,
														"src": "4050:27:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1847,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "4050:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													{
														"constant": false,
														"id": 1850,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4088:11:15",
														"nodeType": "VariableDeclaration",
														"scope": 1887,
														"src": "4083:16:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1849,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4083:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1862,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		},
																		"id": 1857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1855,
																			"name": "observationIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1831,
																			"src": "4150:16:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4169:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4150:20:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	}
																],
																"id": 1858,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4149:22:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1859,
																"name": "observationCardinality",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1833,
																"src": "4174:22:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "4149:47:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1852,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1825,
																	"src": "4130:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1851,
																"name": "IUniswapV3Pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "4115:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$21_$",
																	"typeString": "type(contract IUniswapV3Pool)"
																}
															},
															"id": 1853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4115:20:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$21",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1854,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "observations",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 440,
														"src": "4115:33:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint32_$_t_int56_$_t_uint160_$_t_bool_$",
															"typeString": "function (uint256) view external returns (uint32,int56,uint160,bool)"
														}
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4115:82:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint32_$_t_int56_$_t_uint160_$_t_bool_$",
														"typeString": "tuple(uint32,int56,uint160,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4049:148:15"
											},
											{
												"condition": {
													"id": 1864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4382:12:15",
													"subExpression": {
														"id": 1863,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1850,
														"src": "4383:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1876,
												"nodeType": "IfStatement",
												"src": "4378:110:15",
												"trueBody": {
													"id": 1875,
													"nodeType": "Block",
													"src": "4396:92:15",
													"statements": [
														{
															"expression": {
																"id": 1873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 1865,
																			"name": "observationTimestamp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1848,
																			"src": "4411:20:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		null,
																		null,
																		null
																	],
																	"id": 1866,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "4410:28:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint32_$__$__$__$",
																		"typeString": "tuple(uint32,,,)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4475:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1868,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1825,
																					"src": "4456:4:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1867,
																				"name": "IUniswapV3Pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 21,
																				"src": "4441:14:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$21_$",
																					"typeString": "type(contract IUniswapV3Pool)"
																				}
																			},
																			"id": 1869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4441:20:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IUniswapV3Pool_$21",
																				"typeString": "contract IUniswapV3Pool"
																			}
																		},
																		"id": 1870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "observations",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 440,
																		"src": "4441:33:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint32_$_t_int56_$_t_uint160_$_t_bool_$",
																			"typeString": "function (uint256) view external returns (uint32,int56,uint160,bool)"
																		}
																	},
																	"id": 1872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4441:36:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint32_$_t_int56_$_t_uint160_$_t_bool_$",
																		"typeString": "tuple(uint32,int56,uint160,bool)"
																	}
																},
																"src": "4410:67:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1874,
															"nodeType": "ExpressionStatement",
															"src": "4410:67:15"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1877,
														"name": "secondsAgo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1828,
														"src": "4498:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1880,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4518:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4518:15:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4511:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint32_$",
																	"typeString": "type(uint32)"
																},
																"typeName": {
																	"id": 1878,
																	"name": "uint32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4511:6:15",
																	"typeDescriptions": {}
																}
															},
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4511:23:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1883,
															"name": "observationTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "4537:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "4511:46:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "4498:59:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1886,
												"nodeType": "ExpressionStatement",
												"src": "4498:59:15"
											}
										]
									},
									"documentation": {
										"id": 1823,
										"nodeType": "StructuredDocumentation",
										"src": "3514:265:15",
										"text": "@notice Given a pool, it returns the number of seconds ago of the oldest stored observation\n @param pool Address of Uniswap V3 pool that we want to observe\n @return secondsAgo The number of seconds ago of the oldest observation stored for the pool"
									},
									"id": 1888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOldestObservationSecondsAgo",
									"nameLocation": "3793:30:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3832:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "3824:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3824:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3823:14:15"
									},
									"returnParameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "secondsAgo",
												"nameLocation": "3868:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "3861:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1827,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3861:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3860:19:15"
									},
									"scope": 2185,
									"src": "3784:780:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2033,
										"nodeType": "Block",
										"src": "4885:1683:15",
										"statements": [
											{
												"assignments": [
													null,
													1899,
													1901,
													1903,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1899,
														"mutability": "mutable",
														"name": "tick",
														"nameLocation": "4904:4:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "4898:10:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 1898,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "4898:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1901,
														"mutability": "mutable",
														"name": "observationIndex",
														"nameLocation": "4917:16:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "4910:23:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 1900,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "4910:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1903,
														"mutability": "mutable",
														"name": "observationCardinality",
														"nameLocation": "4942:22:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "4935:29:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 1902,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "4935:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1909,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1905,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1891,
																	"src": "4989:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1904,
																"name": "IUniswapV3Pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "4974:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$21_$",
																	"typeString": "type(contract IUniswapV3Pool)"
																}
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4974:20:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$21",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "slot0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 354,
														"src": "4974:26:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
															"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
														}
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4974:28:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
														"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4895:107:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 1913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1911,
																"name": "observationCardinality",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1903,
																"src": "5104:22:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "31",
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5129:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "5104:26:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e454f",
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5132:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6dc5790d7c4bfaaa2e4f8e2cd517bacd4a3831f85c0964e56f2743cbb847bc46",
																"typeString": "literal_string \"NEO\""
															},
															"value": "NEO"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6dc5790d7c4bfaaa2e4f8e2cd517bacd4a3831f85c0964e56f2743cbb847bc46",
																"typeString": "literal_string \"NEO\""
															}
														],
														"id": 1910,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5096:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5096:42:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1916,
												"nodeType": "ExpressionStatement",
												"src": "5096:42:15"
											},
											{
												"assignments": [
													1918,
													1920,
													1922,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1918,
														"mutability": "mutable",
														"name": "observationTimestamp",
														"nameLocation": "5463:20:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "5456:27:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1917,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "5456:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1920,
														"mutability": "mutable",
														"name": "tickCumulative",
														"nameLocation": "5491:14:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "5485:20:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														},
														"typeName": {
															"id": 1919,
															"name": "int56",
															"nodeType": "ElementaryTypeName",
															"src": "5485:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1922,
														"mutability": "mutable",
														"name": "secondsPerLiquidityCumulativeX128",
														"nameLocation": "5515:33:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "5507:41:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 1921,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "5507:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1929,
												"initialValue": {
													"arguments": [
														{
															"id": 1927,
															"name": "observationIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1901,
															"src": "5600:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1924,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1891,
																	"src": "5581:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1923,
																"name": "IUniswapV3Pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "5566:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$21_$",
																	"typeString": "type(contract IUniswapV3Pool)"
																}
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5566:20:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$21",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "observations",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 440,
														"src": "5566:33:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint32_$_t_int56_$_t_uint160_$_t_bool_$",
															"typeString": "function (uint256) view external returns (uint32,int56,uint160,bool)"
														}
													},
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:51:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint32_$_t_int56_$_t_uint160_$_t_bool_$",
														"typeString": "tuple(uint32,int56,uint160,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5455:162:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1930,
														"name": "observationTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1918,
														"src": "5631:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1933,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5662:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5662:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5655:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint32_$",
																"typeString": "type(uint32)"
															},
															"typeName": {
																"id": 1931,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "5655:6:15",
																"typeDescriptions": {}
															}
														},
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5655:23:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "5631:47:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1946,
												"nodeType": "IfStatement",
												"src": "5627:125:15",
												"trueBody": {
													"id": 1945,
													"nodeType": "Block",
													"src": "5680:72:15",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"id": 1937,
																		"name": "tick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1899,
																		"src": "5702:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1939,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1891,
																						"src": "5723:4:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1938,
																					"name": "IUniswapV3Pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 21,
																					"src": "5708:14:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$21_$",
																						"typeString": "type(contract IUniswapV3Pool)"
																					}
																				},
																				"id": 1940,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5708:20:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV3Pool_$21",
																					"typeString": "contract IUniswapV3Pool"
																				}
																			},
																			"id": 1941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "liquidity",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 380,
																			"src": "5708:30:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$",
																				"typeString": "function () view external returns (uint128)"
																			}
																		},
																		"id": 1942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5708:32:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	}
																],
																"id": 1943,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5701:40:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int24_$_t_uint128_$",
																	"typeString": "tuple(int24,uint128)"
																}
															},
															"functionReturnParameters": 1897,
															"id": 1944,
															"nodeType": "Return",
															"src": "5694:47:15"
														}
													]
												}
											},
											{
												"assignments": [
													1948
												],
												"declarations": [
													{
														"constant": false,
														"id": 1948,
														"mutability": "mutable",
														"name": "prevIndex",
														"nameLocation": "5770:9:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "5762:17:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1947,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5762:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1960,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1951,
																				"name": "observationIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1901,
																				"src": "5791:16:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			],
																			"id": 1950,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5783:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1949,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "5783:7:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5783:25:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1953,
																		"name": "observationCardinality",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1903,
																		"src": "5811:22:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "5783:50:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5836:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5783:54:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1957,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5782:56:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1958,
														"name": "observationCardinality",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1903,
														"src": "5841:22:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "5782:81:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5762:101:15"
											},
											{
												"assignments": [
													1962,
													1964,
													1966,
													1968
												],
												"declarations": [
													{
														"constant": false,
														"id": 1962,
														"mutability": "mutable",
														"name": "prevObservationTimestamp",
														"nameLocation": "5894:24:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "5887:31:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1961,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "5887:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1964,
														"mutability": "mutable",
														"name": "prevTickCumulative",
														"nameLocation": "5938:18:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "5932:24:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														},
														"typeName": {
															"id": 1963,
															"name": "int56",
															"nodeType": "ElementaryTypeName",
															"src": "5932:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1966,
														"mutability": "mutable",
														"name": "prevSecondsPerLiquidityCumulativeX128",
														"nameLocation": "5978:37:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "5970:45:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 1965,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "5970:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1968,
														"mutability": "mutable",
														"name": "prevInitialized",
														"nameLocation": "6034:15:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "6029:20:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1967,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6029:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1975,
												"initialValue": {
													"arguments": [
														{
															"id": 1973,
															"name": "prevIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1948,
															"src": "6096:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1970,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1891,
																	"src": "6077:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1969,
																"name": "IUniswapV3Pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "6062:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$21_$",
																	"typeString": "type(contract IUniswapV3Pool)"
																}
															},
															"id": 1971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6062:20:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$21",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "observations",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 440,
														"src": "6062:33:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint32_$_t_int56_$_t_uint160_$_t_bool_$",
															"typeString": "function (uint256) view external returns (uint32,int56,uint160,bool)"
														}
													},
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6062:44:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint32_$_t_int56_$_t_uint160_$_t_bool_$",
														"typeString": "tuple(uint32,int56,uint160,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5873:233:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1977,
															"name": "prevInitialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "6125:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f4e49",
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6142:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4375a34c158c497e1dec923d39179cd2bff1d358f7876b16ed4f850d3b707895",
																"typeString": "literal_string \"ONI\""
															},
															"value": "ONI"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4375a34c158c497e1dec923d39179cd2bff1d358f7876b16ed4f850d3b707895",
																"typeString": "literal_string \"ONI\""
															}
														],
														"id": 1976,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6117:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6117:31:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1980,
												"nodeType": "ExpressionStatement",
												"src": "6117:31:15"
											},
											{
												"assignments": [
													1982
												],
												"declarations": [
													{
														"constant": false,
														"id": 1982,
														"mutability": "mutable",
														"name": "delta",
														"nameLocation": "6166:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "6159:12:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1981,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "6159:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1986,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1983,
														"name": "observationTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1918,
														"src": "6174:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1984,
														"name": "prevObservationTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1962,
														"src": "6197:24:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "6174:47:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6159:62:15"
											},
											{
												"expression": {
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1987,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1899,
														"src": "6231:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																},
																"id": 1998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int56",
																				"typeString": "int56"
																			},
																			"id": 1992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1990,
																				"name": "tickCumulative",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1920,
																				"src": "6245:14:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int56",
																					"typeString": "int56"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1991,
																				"name": "prevTickCumulative",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1964,
																				"src": "6262:18:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int56",
																					"typeString": "int56"
																				}
																			},
																			"src": "6245:35:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int56",
																				"typeString": "int56"
																			}
																		}
																	],
																	"id": 1993,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6244:37:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int56",
																		"typeString": "int56"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1996,
																			"name": "delta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1982,
																			"src": "6290:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		],
																		"id": 1995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6284:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int32_$",
																			"typeString": "type(int32)"
																		},
																		"typeName": {
																			"id": 1994,
																			"name": "int32",
																			"nodeType": "ElementaryTypeName",
																			"src": "6284:5:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6284:12:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int32",
																		"typeString": "int32"
																	}
																},
																"src": "6244:52:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																}
															],
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6238:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 1988,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "6238:5:15",
																"typeDescriptions": {}
															}
														},
														"id": 1999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6238:59:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "6231:66:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 2001,
												"nodeType": "ExpressionStatement",
												"src": "6231:66:15"
											},
											{
												"assignments": [
													2003
												],
												"declarations": [
													{
														"constant": false,
														"id": 2003,
														"mutability": "mutable",
														"name": "liquidity",
														"nameLocation": "6315:9:15",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "6307:17:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 2002,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "6307:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2028,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint192",
																"typeString": "uint192"
															},
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint192",
																			"typeString": "uint192"
																		},
																		"id": 2015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2008,
																					"name": "delta",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1982,
																					"src": "6373:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				],
																				"id": 2007,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6365:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint192_$",
																					"typeString": "type(uint192)"
																				},
																				"typeName": {
																					"id": 2006,
																					"name": "uint192",
																					"nodeType": "ElementaryTypeName",
																					"src": "6365:7:15",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6365:14:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint192",
																				"typeString": "uint192"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 2012,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6387:7:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint160_$",
																							"typeString": "type(uint160)"
																						},
																						"typeName": {
																							"id": 2011,
																							"name": "uint160",
																							"nodeType": "ElementaryTypeName",
																							"src": "6387:7:15",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_type$_t_uint160_$",
																							"typeString": "type(uint160)"
																						}
																					],
																					"id": 2010,
																					"name": "type",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967269,
																					"src": "6382:4:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 2013,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6382:13:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_meta_type_t_uint160",
																					"typeString": "type(uint160)"
																				}
																			},
																			"id": 2014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "max",
																			"nodeType": "MemberAccess",
																			"src": "6382:17:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "6365:34:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint192",
																			"typeString": "uint192"
																		}
																	}
																],
																"id": 2016,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6364:36:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint192",
																	"typeString": "uint192"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint192",
																			"typeString": "uint192"
																		},
																		"id": 2024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 2021,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2019,
																						"name": "secondsPerLiquidityCumulativeX128",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1922,
																						"src": "6432:33:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 2020,
																						"name": "prevSecondsPerLiquidityCumulativeX128",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1966,
																						"src": "6468:37:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"src": "6432:73:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				],
																				"id": 2018,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6424:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint192_$",
																					"typeString": "type(uint192)"
																				},
																				"typeName": {
																					"id": 2017,
																					"name": "uint192",
																					"nodeType": "ElementaryTypeName",
																					"src": "6424:7:15",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6424:82:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint192",
																				"typeString": "uint192"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3332",
																			"id": 2023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6510:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "6424:88:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint192",
																			"typeString": "uint192"
																		}
																	}
																],
																"id": 2025,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6423:90:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint192",
																	"typeString": "uint192"
																}
															},
															"src": "6364:149:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint192",
																"typeString": "uint192"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint192",
																"typeString": "uint192"
															}
														],
														"id": 2005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6339:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 2004,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "6339:7:15",
															"typeDescriptions": {}
														}
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6339:188:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6307:220:15"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2029,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1899,
															"src": "6545:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 2030,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2003,
															"src": "6551:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"id": 2031,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6544:17:15",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int24_$_t_uint128_$",
														"typeString": "tuple(int24,uint128)"
													}
												},
												"functionReturnParameters": 1897,
												"id": 2032,
												"nodeType": "Return",
												"src": "6537:24:15"
											}
										]
									},
									"documentation": {
										"id": 1889,
										"nodeType": "StructuredDocumentation",
										"src": "4570:215:15",
										"text": "@notice Given a pool, it returns the tick value as of the start of the current block\n @param pool Address of Uniswap V3 pool\n @return The tick that the pool was in at the start of the current block"
									},
									"id": 2034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBlockStartingTickAndLiquidity",
									"nameLocation": "4799:32:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "4840:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "4832:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4832:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4831:14:15"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "4869:5:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1893,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4869:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "4876:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1895,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4868:16:15"
									},
									"scope": 2185,
									"src": "4790:1778:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "OracleLibrary.WeightedTickData",
									"id": 2039,
									"members": [
										{
											"constant": false,
											"id": 2036,
											"mutability": "mutable",
											"name": "tick",
											"nameLocation": "6690:4:15",
											"nodeType": "VariableDeclaration",
											"scope": 2039,
											"src": "6684:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 2035,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "6684:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2038,
											"mutability": "mutable",
											"name": "weight",
											"nameLocation": "6712:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2039,
											"src": "6704:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2037,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "6704:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "WeightedTickData",
									"nameLocation": "6657:16:15",
									"nodeType": "StructDefinition",
									"scope": 2185,
									"src": "6650:75:15",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2121,
										"nodeType": "Block",
										"src": "7482:733:15",
										"statements": [
											{
												"assignments": [
													2050
												],
												"declarations": [
													{
														"constant": false,
														"id": 2050,
														"mutability": "mutable",
														"name": "numerator",
														"nameLocation": "7575:9:15",
														"nodeType": "VariableDeclaration",
														"scope": 2121,
														"src": "7568:16:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2049,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7568:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2051,
												"nodeType": "VariableDeclarationStatement",
												"src": "7568:16:15"
											},
											{
												"assignments": [
													2053
												],
												"declarations": [
													{
														"constant": false,
														"id": 2053,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "7649:11:15",
														"nodeType": "VariableDeclaration",
														"scope": 2121,
														"src": "7641:19:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2052,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7641:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2054,
												"nodeType": "VariableDeclarationStatement",
												"src": "7641:19:15"
											},
											{
												"body": {
													"id": 2090,
													"nodeType": "Block",
													"src": "7825:162:15",
													"statements": [
														{
															"expression": {
																"id": 2081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2065,
																	"name": "numerator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2050,
																	"src": "7839:9:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2066,
																				"name": "weightedTickData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2044,
																				"src": "7852:16:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_WeightedTickData_$2039_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct OracleLibrary.WeightedTickData memory[] memory"
																				}
																			},
																			"id": 2068,
																			"indexExpression": {
																				"id": 2067,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2056,
																				"src": "7869:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7852:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_WeightedTickData_$2039_memory_ptr",
																				"typeString": "struct OracleLibrary.WeightedTickData memory"
																			}
																		},
																		"id": 2069,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tick",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2036,
																		"src": "7852:24:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 2074,
																								"name": "weightedTickData",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2044,
																								"src": "7893:16:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_WeightedTickData_$2039_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct OracleLibrary.WeightedTickData memory[] memory"
																								}
																							},
																							"id": 2076,
																							"indexExpression": {
																								"id": 2075,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2056,
																								"src": "7910:1:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "7893:19:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_WeightedTickData_$2039_memory_ptr",
																								"typeString": "struct OracleLibrary.WeightedTickData memory"
																							}
																						},
																						"id": 2077,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "weight",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2038,
																						"src": "7893:26:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					],
																					"id": 2073,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7886:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_int128_$",
																						"typeString": "type(int128)"
																					},
																					"typeName": {
																						"id": 2072,
																						"name": "int128",
																						"nodeType": "ElementaryTypeName",
																						"src": "7886:6:15",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2078,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7886:34:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			],
																			"id": 2071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7879:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 2070,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "7879:6:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7879:42:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "7852:69:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "7839:82:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 2082,
															"nodeType": "ExpressionStatement",
															"src": "7839:82:15"
														},
														{
															"expression": {
																"id": 2088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2083,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2053,
																	"src": "7935:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 2084,
																			"name": "weightedTickData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2044,
																			"src": "7950:16:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_WeightedTickData_$2039_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct OracleLibrary.WeightedTickData memory[] memory"
																			}
																		},
																		"id": 2086,
																		"indexExpression": {
																			"id": 2085,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2056,
																			"src": "7967:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7950:19:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WeightedTickData_$2039_memory_ptr",
																			"typeString": "struct OracleLibrary.WeightedTickData memory"
																		}
																	},
																	"id": 2087,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "weight",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2038,
																	"src": "7950:26:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "7935:41:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2089,
															"nodeType": "ExpressionStatement",
															"src": "7935:41:15"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2058,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2056,
														"src": "7791:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2059,
															"name": "weightedTickData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2044,
															"src": "7795:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_WeightedTickData_$2039_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct OracleLibrary.WeightedTickData memory[] memory"
															}
														},
														"id": 2060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7795:23:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7791:27:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2091,
												"initializationExpression": {
													"assignments": [
														2056
													],
													"declarations": [
														{
															"constant": false,
															"id": 2056,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7788:1:15",
															"nodeType": "VariableDeclaration",
															"scope": 2091,
															"src": "7780:9:15",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2055,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7780:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2057,
													"nodeType": "VariableDeclarationStatement",
													"src": "7780:9:15"
												},
												"loopExpression": {
													"expression": {
														"id": 2063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7820:3:15",
														"subExpression": {
															"id": 2062,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2056,
															"src": "7820:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2064,
													"nodeType": "ExpressionStatement",
													"src": "7820:3:15"
												},
												"nodeType": "ForStatement",
												"src": "7775:212:15"
											},
											{
												"expression": {
													"id": 2102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2092,
														"name": "weightedArithmeticMeanTick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2047,
														"src": "7997:26:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2095,
																	"name": "numerator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2050,
																	"src": "8032:9:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 2098,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2053,
																			"src": "8051:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8044:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2096,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8044:6:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8044:19:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "8032:31:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8026:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 2093,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "8026:5:15",
																"typeDescriptions": {}
															}
														},
														"id": 2101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8026:38:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "7997:67:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 2103,
												"nodeType": "ExpressionStatement",
												"src": "7997:67:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2104,
															"name": "numerator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2050,
															"src": "8123:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8135:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8123:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2107,
																		"name": "numerator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2050,
																		"src": "8141:9:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 2110,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2053,
																				"src": "8160:11:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8153:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 2108,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "8153:6:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8153:19:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "8141:31:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8176:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8141:36:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2115,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8140:38:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8123:55:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2120,
												"nodeType": "IfStatement",
												"src": "8119:89:15",
												"trueBody": {
													"expression": {
														"id": 2118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "8180:28:15",
														"subExpression": {
															"id": 2117,
															"name": "weightedArithmeticMeanTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2047,
															"src": "8180:26:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"id": 2119,
													"nodeType": "ExpressionStatement",
													"src": "8180:28:15"
												}
											}
										]
									},
									"documentation": {
										"id": 2040,
										"nodeType": "StructuredDocumentation",
										"src": "6731:578:15",
										"text": "@notice Given an array of ticks and weights, calculates the weighted arithmetic mean tick\n @param weightedTickData An array of ticks and weights\n @return weightedArithmeticMeanTick The weighted arithmetic mean tick\n @dev Each entry of `weightedTickData` should represents ticks from pools with the same underlying pool tokens. If they do not,\n extreme care must be taken to ensure that ticks are comparable (including decimal differences).\n @dev Note that the weighted arithmetic mean tick corresponds to the weighted geometric mean price."
									},
									"id": 2122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getWeightedArithmeticMeanTick",
									"nameLocation": "7323:29:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "weightedTickData",
												"nameLocation": "7379:16:15",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "7353:42:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_WeightedTickData_$2039_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct OracleLibrary.WeightedTickData[]"
												},
												"typeName": {
													"baseType": {
														"id": 2042,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2041,
															"name": "WeightedTickData",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2039,
															"src": "7353:16:15"
														},
														"referencedDeclaration": 2039,
														"src": "7353:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WeightedTickData_$2039_storage_ptr",
															"typeString": "struct OracleLibrary.WeightedTickData"
														}
													},
													"id": 2043,
													"nodeType": "ArrayTypeName",
													"src": "7353:18:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_WeightedTickData_$2039_storage_$dyn_storage_ptr",
														"typeString": "struct OracleLibrary.WeightedTickData[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7352:44:15"
									},
									"returnParameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "weightedArithmeticMeanTick",
												"nameLocation": "7450:26:15",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "7444:32:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2046,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "7444:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7443:34:15"
									},
									"scope": 2185,
									"src": "7314:901:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2183,
										"nodeType": "Block",
										"src": "8880:409:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2135,
																		"name": "tokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2126,
																		"src": "8898:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 2136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8898:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8914:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8898:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2139,
																	"name": "ticks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2129,
																	"src": "8919:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_int24_$dyn_memory_ptr",
																		"typeString": "int24[] memory"
																	}
																},
																"id": 2140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8919:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8898:33:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "444c",
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8933:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f6c9155cb7d5666d109a64d0e580ecac0cec91dae3b0325b400a4ad4d41fbcb9",
																"typeString": "literal_string \"DL\""
															},
															"value": "DL"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f6c9155cb7d5666d109a64d0e580ecac0cec91dae3b0325b400a4ad4d41fbcb9",
																"typeString": "literal_string \"DL\""
															}
														],
														"id": 2134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8890:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8890:48:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2144,
												"nodeType": "ExpressionStatement",
												"src": "8890:48:15"
											},
											{
												"body": {
													"id": 2181,
													"nodeType": "Block",
													"src": "8992:291:15",
													"statements": [
														{
															"expression": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2156,
																			"name": "tokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2126,
																			"src": "9183:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2160,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2157,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2146,
																				"src": "9190:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2158,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9194:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "9190:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9183:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"baseExpression": {
																			"id": 2161,
																			"name": "tokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2126,
																			"src": "9199:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2163,
																		"indexExpression": {
																			"id": 2162,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2146,
																			"src": "9206:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9199:9:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "9183:25:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"id": 2178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2172,
																		"name": "syntheticTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2132,
																		"src": "9243:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "-=",
																	"rightHandSide": {
																		"baseExpression": {
																			"id": 2173,
																			"name": "ticks",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2129,
																			"src": "9260:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_int24_$dyn_memory_ptr",
																				"typeString": "int24[] memory"
																			}
																		},
																		"id": 2177,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2174,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2146,
																				"src": "9266:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2175,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9270:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "9266:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9260:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"src": "9243:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9183:89:15",
																"trueExpression": {
																	"id": 2171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2165,
																		"name": "syntheticTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2132,
																		"src": "9211:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"baseExpression": {
																			"id": 2166,
																			"name": "ticks",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2129,
																			"src": "9228:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_int24_$dyn_memory_ptr",
																				"typeString": "int24[] memory"
																			}
																		},
																		"id": 2170,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2167,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2146,
																				"src": "9234:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2168,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9238:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "9234:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9228:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"src": "9211:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 2180,
															"nodeType": "ExpressionStatement",
															"src": "9183:89:15"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2149,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2146,
														"src": "8968:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 2150,
															"name": "ticks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2129,
															"src": "8973:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int24_$dyn_memory_ptr",
																"typeString": "int24[] memory"
															}
														},
														"id": 2151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8973:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8968:17:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2182,
												"initializationExpression": {
													"assignments": [
														2146
													],
													"declarations": [
														{
															"constant": false,
															"id": 2146,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8961:1:15",
															"nodeType": "VariableDeclaration",
															"scope": 2182,
															"src": "8953:9:15",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2145,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8953:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2148,
													"initialValue": {
														"hexValue": "31",
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8965:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8953:13:15"
												},
												"loopExpression": {
													"expression": {
														"id": 2154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8987:3:15",
														"subExpression": {
															"id": 2153,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2146,
															"src": "8987:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2155,
													"nodeType": "ExpressionStatement",
													"src": "8987:3:15"
												},
												"nodeType": "ForStatement",
												"src": "8948:335:15"
											}
										]
									},
									"documentation": {
										"id": 2123,
										"nodeType": "StructuredDocumentation",
										"src": "8221:509:15",
										"text": "@notice Returns the \"synthetic\" tick which represents the price of the first entry in `tokens` in terms of the last\n @dev Useful for calculating relative prices along routes.\n @dev There must be one tick for each pairwise set of tokens.\n @param tokens The token contract addresses\n @param ticks The ticks, representing the price of each token pair in `tokens`\n @return syntheticTick The synthetic tick, representing the relative price of the outermost tokens in `tokens`"
									},
									"id": 2184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChainedPrice",
									"nameLocation": "8744:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "8777:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "8760:23:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2124,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8760:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2125,
													"nodeType": "ArrayTypeName",
													"src": "8760:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "ticks",
												"nameLocation": "8800:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "8785:20:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int24_$dyn_memory_ptr",
													"typeString": "int24[]"
												},
												"typeName": {
													"baseType": {
														"id": 2127,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "8785:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"id": 2128,
													"nodeType": "ArrayTypeName",
													"src": "8785:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int24_$dyn_storage_ptr",
														"typeString": "int24[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8759:47:15"
									},
									"returnParameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "syntheticTick",
												"nameLocation": "8861:13:15",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "8854:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2131,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8854:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8853:22:15"
									},
									"scope": 2185,
									"src": "8735:554:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2186,
							"src": "279:9012:15",
							"usedErrors": []
						}
					],
					"src": "45:9247:15"
				},
				"id": 15
			},
			"TFGv3/Contracts/libraries/TickMath.sol": {
				"ast": {
					"absolutePath": "TFGv3/Contracts/libraries/TickMath.sol",
					"exportedSymbols": {
						"TickMath": [
							2723
						]
					},
					"id": 2724,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2187,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TickMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2188,
								"nodeType": "StructuredDocumentation",
								"src": "71:235:16",
								"text": "@title Math library for computing sqrt prices from ticks and vice versa\n @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n prices between 2**-128 and 2**128"
							},
							"fullyImplemented": true,
							"id": 2723,
							"linearizedBaseContracts": [
								2723
							],
							"name": "TickMath",
							"nameLocation": "314:8:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 2189,
										"nodeType": "StructuredDocumentation",
										"src": "329:108:16",
										"text": "@dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
									},
									"id": 2193,
									"mutability": "constant",
									"name": "MIN_TICK",
									"nameLocation": "466:8:16",
									"nodeType": "VariableDeclaration",
									"scope": 2723,
									"src": "442:42:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 2190,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "442:5:16",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 2192,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "477:7:16",
										"subExpression": {
											"hexValue": "383837323732",
											"id": 2191,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "478:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_887272_by_1",
												"typeString": "int_const 887272"
											},
											"value": "887272"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_887272_by_1",
											"typeString": "int_const -887272"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2194,
										"nodeType": "StructuredDocumentation",
										"src": "490:107:16",
										"text": "@dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
									},
									"id": 2198,
									"mutability": "constant",
									"name": "MAX_TICK",
									"nameLocation": "626:8:16",
									"nodeType": "VariableDeclaration",
									"scope": 2723,
									"src": "602:44:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 2195,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "602:5:16",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 2197,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "637:9:16",
										"subExpression": {
											"id": 2196,
											"name": "MIN_TICK",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2193,
											"src": "638:8:16",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2199,
										"nodeType": "StructuredDocumentation",
										"src": "653:116:16",
										"text": "@dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
									},
									"id": 2202,
									"mutability": "constant",
									"name": "MIN_SQRT_RATIO",
									"nameLocation": "800:14:16",
									"nodeType": "VariableDeclaration",
									"scope": 2723,
									"src": "774:53:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 2200,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "774:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "34323935313238373339",
										"id": 2201,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "817:10:16",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4295128739_by_1",
											"typeString": "int_const 4295128739"
										},
										"value": "4295128739"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2203,
										"nodeType": "StructuredDocumentation",
										"src": "833:116:16",
										"text": "@dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
									},
									"id": 2206,
									"mutability": "constant",
									"name": "MAX_SQRT_RATIO",
									"nameLocation": "980:14:16",
									"nodeType": "VariableDeclaration",
									"scope": 2723,
									"src": "954:92:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 2204,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "954:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "31343631343436373033343835323130313033323837323733303532323033393838383232333738373233393730333432",
										"id": 2205,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "997:49:16",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461446703485210103287273052203988822378723970342_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...0342"
										},
										"value": "1461446703485210103287273052203988822378723970342"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2582,
										"nodeType": "Block",
										"src": "1440:2503:16",
										"statements": [
											{
												"assignments": [
													2215
												],
												"declarations": [
													{
														"constant": false,
														"id": 2215,
														"mutability": "mutable",
														"name": "absTick",
														"nameLocation": "1458:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 2582,
														"src": "1450:15:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2214,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1450:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2235,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 2218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2216,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "1468:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 2217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1475:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1468:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2231,
																		"name": "tick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2209,
																		"src": "1519:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 2230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1512:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 2229,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1512:6:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 2232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1512:12:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1504:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2227,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1504:7:16",
																"typeDescriptions": {}
															}
														},
														"id": 2233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1504:21:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1468:57:16",
													"trueExpression": {
														"arguments": [
															{
																"id": 2225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "1487:13:16",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 2223,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "1495:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 2222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1488:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2221,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1488:6:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1488:12:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1479:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2219,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1479:7:16",
																"typeDescriptions": {}
															}
														},
														"id": 2226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1479:22:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1450:75:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2237,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2215,
																"src": "1543:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2242,
																				"name": "MAX_TICK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2198,
																				"src": "1569:8:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			],
																			"id": 2241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1562:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint24_$",
																				"typeString": "type(uint24)"
																			},
																			"typeName": {
																				"id": 2240,
																				"name": "uint24",
																				"nodeType": "ElementaryTypeName",
																				"src": "1562:6:16",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1562:16:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 2239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1554:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2238,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1554:7:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 2244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1554:25:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1543:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54",
															"id": 2246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1581:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															},
															"value": "T"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															}
														],
														"id": 2236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1535:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1535:50:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2248,
												"nodeType": "ExpressionStatement",
												"src": "1535:50:16"
											},
											{
												"assignments": [
													2250
												],
												"declarations": [
													{
														"constant": false,
														"id": 2250,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "1604:5:16",
														"nodeType": "VariableDeclaration",
														"scope": 2582,
														"src": "1596:13:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1596:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2259,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2251,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2215,
																"src": "1612:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"hexValue": "307831",
																"id": 2252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1622:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "0x1"
															},
															"src": "1612:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1629:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1612:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 2257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1670:35:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1612:93:16",
													"trueExpression": {
														"hexValue": "30786666666362393333626436666164333761613264313632643161353934303031",
														"id": 2256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1633:34:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340265354078544963557816517032075149313_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...9313"
														},
														"value": "0xfffcb933bd6fad37aa2d162d1a594001"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1596:109:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2260,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "1719:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832",
															"id": 2261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1729:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "0x2"
														},
														"src": "1719:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1736:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1719:18:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2274,
												"nodeType": "IfStatement",
												"src": "1715:83:16",
												"trueBody": {
													"expression": {
														"id": 2272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2265,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "1739:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2266,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "1748:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663937323732333733643431333235396134363939303538306532313361",
																			"id": 2267,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1756:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340248342086729790484326174814286782778_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2778"
																			},
																			"value": "0xfff97272373d413259a46990580e213a"
																		},
																		"src": "1748:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2269,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1747:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1795:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1747:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1739:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2273,
													"nodeType": "ExpressionStatement",
													"src": "1739:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2275,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "1812:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834",
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1822:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "0x4"
														},
														"src": "1812:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1829:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1812:18:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2289,
												"nodeType": "IfStatement",
												"src": "1808:83:16",
												"trueBody": {
													"expression": {
														"id": 2287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2280,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "1832:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2281,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "1841:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663265353066356636353639333265663132333537636633633766646363",
																			"id": 2282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1849:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340214320654664324051920982716015181260_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1260"
																			},
																			"value": "0xfff2e50f5f656932ef12357cf3c7fdcc"
																		},
																		"src": "1841:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2284,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1840:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1888:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1840:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1832:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2288,
													"nodeType": "ExpressionStatement",
													"src": "1832:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2290,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "1905:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838",
															"id": 2291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1915:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "0x8"
														},
														"src": "1905:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1922:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1905:18:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2304,
												"nodeType": "IfStatement",
												"src": "1901:83:16",
												"trueBody": {
													"expression": {
														"id": 2302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2295,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "1925:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2296,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "1934:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666653563616361376531306534653631633336323465616130393431636430",
																			"id": 2297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1942:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340146287995602323631171512101879684304_by_1",
																				"typeString": "int_const 3401...(31 digits omitted)...4304"
																			},
																			"value": "0xffe5caca7e10e4e61c3624eaa0941cd0"
																		},
																		"src": "1934:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2299,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1933:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1981:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1933:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1925:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2303,
													"nodeType": "ExpressionStatement",
													"src": "1925:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2305,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "1998:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130",
															"id": 2306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2008:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "0x10"
														},
														"src": "1998:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2308,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2016:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1998:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2319,
												"nodeType": "IfStatement",
												"src": "1994:84:16",
												"trueBody": {
													"expression": {
														"id": 2317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2310,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "2019:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2311,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "2028:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666636239383433643630663631353963396462353838333563393236363434",
																			"id": 2312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2036:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340010263488231146823593991679159461444_by_1",
																				"typeString": "int_const 3400...(31 digits omitted)...1444"
																			},
																			"value": "0xffcb9843d60f6159c9db58835c926644"
																		},
																		"src": "2028:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2314,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2027:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2075:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2027:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2019:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2318,
													"nodeType": "ExpressionStatement",
													"src": "2019:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2320,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "2092:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230",
															"id": 2321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2102:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "0x20"
														},
														"src": "2092:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2110:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2092:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2334,
												"nodeType": "IfStatement",
												"src": "2088:84:16",
												"trueBody": {
													"expression": {
														"id": 2332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2325,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "2113:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2326,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "2122:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666393733623431666139386330383134373265363839366466623235346330",
																			"id": 2327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2130:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339738377640345403697157401104375502016_by_1",
																				"typeString": "int_const 3397...(31 digits omitted)...2016"
																			},
																			"value": "0xff973b41fa98c081472e6896dfb254c0"
																		},
																		"src": "2122:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2329,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2121:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2169:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2121:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2113:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2333,
													"nodeType": "ExpressionStatement",
													"src": "2113:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2335,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "2186:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430",
															"id": 2336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2196:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "0x40"
														},
														"src": "2186:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2204:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2186:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2349,
												"nodeType": "IfStatement",
												"src": "2182:84:16",
												"trueBody": {
													"expression": {
														"id": 2347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2340,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "2207:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2341,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "2216:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666326561313634363663393661333834336563373862333236623532383631",
																			"id": 2342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2224:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339195258003219555707034227454543997025_by_1",
																				"typeString": "int_const 3391...(31 digits omitted)...7025"
																			},
																			"value": "0xff2ea16466c96a3843ec78b326b52861"
																		},
																		"src": "2216:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2344,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2215:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2263:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2215:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2207:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2348,
													"nodeType": "ExpressionStatement",
													"src": "2207:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2350,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "2280:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830",
															"id": 2351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2290:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "0x80"
														},
														"src": "2280:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2298:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2280:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2364,
												"nodeType": "IfStatement",
												"src": "2276:84:16",
												"trueBody": {
													"expression": {
														"id": 2362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2355,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "2301:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2356,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "2310:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786665356465653034366139396132613831316334363166313936396333303533",
																			"id": 2357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2318:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_338111622100601834656805679988414885971_by_1",
																				"typeString": "int_const 3381...(31 digits omitted)...5971"
																			},
																			"value": "0xfe5dee046a99a2a811c461f1969c3053"
																		},
																		"src": "2310:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2359,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2309:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2357:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2309:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2301:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2363,
													"nodeType": "ExpressionStatement",
													"src": "2301:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2365,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "2374:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078313030",
															"id": 2366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2384:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "0x100"
														},
														"src": "2374:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2368,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2393:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2374:20:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2379,
												"nodeType": "IfStatement",
												"src": "2370:85:16",
												"trueBody": {
													"expression": {
														"id": 2377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2370,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "2396:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2371,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "2405:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786663626538366337393030613838616564636666633833623437396161336134",
																			"id": 2372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2413:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_335954724994790223023589805789778977700_by_1",
																				"typeString": "int_const 3359...(31 digits omitted)...7700"
																			},
																			"value": "0xfcbe86c7900a88aedcffc83b479aa3a4"
																		},
																		"src": "2405:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2374,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2404:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2452:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2404:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2396:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2378,
													"nodeType": "ExpressionStatement",
													"src": "2396:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2380,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "2469:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078323030",
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2479:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_512_by_1",
																"typeString": "int_const 512"
															},
															"value": "0x200"
														},
														"src": "2469:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2488:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2469:20:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2394,
												"nodeType": "IfStatement",
												"src": "2465:85:16",
												"trueBody": {
													"expression": {
														"id": 2392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2385,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "2491:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2386,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "2500:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786639383761373235336163343133313736663262303734636637383135653534",
																			"id": 2387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2508:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_331682121138379247127172139078559817300_by_1",
																				"typeString": "int_const 3316...(31 digits omitted)...7300"
																			},
																			"value": "0xf987a7253ac413176f2b074cf7815e54"
																		},
																		"src": "2500:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2389,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2499:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2390,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2547:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2499:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2491:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2393,
													"nodeType": "ExpressionStatement",
													"src": "2491:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2395,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "2564:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078343030",
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2574:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1024_by_1",
																"typeString": "int_const 1024"
															},
															"value": "0x400"
														},
														"src": "2564:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2398,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2583:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2564:20:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2409,
												"nodeType": "IfStatement",
												"src": "2560:85:16",
												"trueBody": {
													"expression": {
														"id": 2407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2400,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "2586:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2401,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "2595:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786633333932623038323262373030303539343063376133393865346237306633",
																			"id": 2402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2603:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_323299236684853023288211250268160618739_by_1",
																				"typeString": "int_const 3232...(31 digits omitted)...8739"
																			},
																			"value": "0xf3392b0822b70005940c7a398e4b70f3"
																		},
																		"src": "2595:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2404,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2594:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2642:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2594:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2586:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2408,
													"nodeType": "ExpressionStatement",
													"src": "2586:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2410,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "2659:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078383030",
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2669:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2048_by_1",
																"typeString": "int_const 2048"
															},
															"value": "0x800"
														},
														"src": "2659:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2678:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2659:20:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2424,
												"nodeType": "IfStatement",
												"src": "2655:85:16",
												"trueBody": {
													"expression": {
														"id": 2422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2415,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "2681:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2416,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "2690:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786537313539343735613263323962373434336232396337666136653838396439",
																			"id": 2417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2698:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_307163716377032989948697243942600083929_by_1",
																				"typeString": "int_const 3071...(31 digits omitted)...3929"
																			},
																			"value": "0xe7159475a2c29b7443b29c7fa6e889d9"
																		},
																		"src": "2690:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2419,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2689:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2737:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2689:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2681:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2423,
													"nodeType": "ExpressionStatement",
													"src": "2681:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2425,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "2754:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831303030",
															"id": 2426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2764:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4096_by_1",
																"typeString": "int_const 4096"
															},
															"value": "0x1000"
														},
														"src": "2754:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2428,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2774:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2754:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2439,
												"nodeType": "IfStatement",
												"src": "2750:86:16",
												"trueBody": {
													"expression": {
														"id": 2437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2430,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "2777:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2431,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "2786:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786430393766336264666432303232623838343561643866373932616135383235",
																			"id": 2432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2794:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_277268403626896220162999269216087595045_by_1",
																				"typeString": "int_const 2772...(31 digits omitted)...5045"
																			},
																			"value": "0xd097f3bdfd2022b8845ad8f792aa5825"
																		},
																		"src": "2786:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2434,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2785:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2833:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2785:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2777:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2438,
													"nodeType": "ExpressionStatement",
													"src": "2777:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2440,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "2850:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832303030",
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2860:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8192_by_1",
																"typeString": "int_const 8192"
															},
															"value": "0x2000"
														},
														"src": "2850:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2870:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2850:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2454,
												"nodeType": "IfStatement",
												"src": "2846:86:16",
												"trueBody": {
													"expression": {
														"id": 2452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2445,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "2873:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2446,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "2882:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786139663734363436326438373066646638613635646331663930653036316535",
																			"id": 2447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2890:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_225923453940442621947126027127485391333_by_1",
																				"typeString": "int_const 2259...(31 digits omitted)...1333"
																			},
																			"value": "0xa9f746462d870fdf8a65dc1f90e061e5"
																		},
																		"src": "2882:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2449,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2881:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2929:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2881:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2873:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2453,
													"nodeType": "ExpressionStatement",
													"src": "2873:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2455,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "2946:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834303030",
															"id": 2456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2956:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16384_by_1",
																"typeString": "int_const 16384"
															},
															"value": "0x4000"
														},
														"src": "2946:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2458,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2966:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2946:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2469,
												"nodeType": "IfStatement",
												"src": "2942:86:16",
												"trueBody": {
													"expression": {
														"id": 2467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2460,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "2969:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2461,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "2978:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783730643836396131353664326131623839306262336466363262616633326637",
																			"id": 2462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2986:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_149997214084966997727330242082538205943_by_1",
																				"typeString": "int_const 1499...(31 digits omitted)...5943"
																			},
																			"value": "0x70d869a156d2a1b890bb3df62baf32f7"
																		},
																		"src": "2978:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2464,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2977:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3025:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2977:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2969:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2468,
													"nodeType": "ExpressionStatement",
													"src": "2969:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2470,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "3042:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838303030",
															"id": 2471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3052:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32768_by_1",
																"typeString": "int_const 32768"
															},
															"value": "0x8000"
														},
														"src": "3042:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3062:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3042:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2484,
												"nodeType": "IfStatement",
												"src": "3038:86:16",
												"trueBody": {
													"expression": {
														"id": 2482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2475,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "3065:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2476,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "3074:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783331626531333566393764303866643938313233313530353534326663666136",
																			"id": 2477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3082:34:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_66119101136024775622716233608466517926_by_1",
																				"typeString": "int_const 6611...(30 digits omitted)...7926"
																			},
																			"value": "0x31be135f97d08fd981231505542fcfa6"
																		},
																		"src": "3074:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2479,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3073:44:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3121:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3073:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3065:59:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2483,
													"nodeType": "ExpressionStatement",
													"src": "3065:59:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2485,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "3138:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130303030",
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3148:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_65536_by_1",
																"typeString": "int_const 65536"
															},
															"value": "0x10000"
														},
														"src": "3138:17:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3159:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3138:22:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2499,
												"nodeType": "IfStatement",
												"src": "3134:86:16",
												"trueBody": {
													"expression": {
														"id": 2497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2490,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "3162:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2491,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "3171:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307839616135303862356237613834653163363737646535346633653939626339",
																			"id": 2492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3179:33:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_12847376061809297530290974190478138313_by_1",
																				"typeString": "int_const 1284...(30 digits omitted)...8313"
																			},
																			"value": "0x9aa508b5b7a84e1c677de54f3e99bc9"
																		},
																		"src": "3171:41:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2494,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3170:43:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3217:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3170:50:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3162:58:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2498,
													"nodeType": "ExpressionStatement",
													"src": "3162:58:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2500,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "3234:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230303030",
															"id": 2501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3244:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_131072_by_1",
																"typeString": "int_const 131072"
															},
															"value": "0x20000"
														},
														"src": "3234:17:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3255:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3234:22:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2514,
												"nodeType": "IfStatement",
												"src": "3230:85:16",
												"trueBody": {
													"expression": {
														"id": 2512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2505,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "3258:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2506,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "3267:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078356436616638646564623831313936363939633332393232356565363034",
																			"id": 2507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3275:32:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_485053260817066172746253684029974020_by_1",
																				"typeString": "int_const 4850...(28 digits omitted)...4020"
																			},
																			"value": "0x5d6af8dedb81196699c329225ee604"
																		},
																		"src": "3267:40:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2509,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3266:42:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3312:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3266:49:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3258:57:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2513,
													"nodeType": "ExpressionStatement",
													"src": "3258:57:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2515,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "3329:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430303030",
															"id": 2516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3339:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_262144_by_1",
																"typeString": "int_const 262144"
															},
															"value": "0x40000"
														},
														"src": "3329:17:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2518,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3350:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3329:22:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2529,
												"nodeType": "IfStatement",
												"src": "3325:83:16",
												"trueBody": {
													"expression": {
														"id": 2527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2520,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "3353:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2521,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "3362:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307832323136653538346635666131656139323630343162656466653938",
																			"id": 2522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3370:30:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_691415978906521570653435304214168_by_1",
																				"typeString": "int_const 6914...(25 digits omitted)...4168"
																			},
																			"value": "0x2216e584f5fa1ea926041bedfe98"
																		},
																		"src": "3362:38:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2524,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3361:40:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3405:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3361:47:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3353:55:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2528,
													"nodeType": "ExpressionStatement",
													"src": "3353:55:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2530,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "3422:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830303030",
															"id": 2531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3432:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_524288_by_1",
																"typeString": "int_const 524288"
															},
															"value": "0x80000"
														},
														"src": "3422:17:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2533,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3443:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3422:22:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2544,
												"nodeType": "IfStatement",
												"src": "3418:78:16",
												"trueBody": {
													"expression": {
														"id": 2542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2535,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "3446:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2536,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "3455:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783438613137303339316637646334323434346538666132",
																			"id": 2537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3463:25:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1404880482679654955896180642_by_1",
																				"typeString": "int_const 1404880482679654955896180642"
																			},
																			"value": "0x48a170391f7dc42444e8fa2"
																		},
																		"src": "3455:33:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2539,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3454:35:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3493:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3454:42:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3446:50:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2543,
													"nodeType": "ExpressionStatement",
													"src": "3446:50:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 2547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2545,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2209,
														"src": "3511:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2546,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3518:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3511:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2558,
												"nodeType": "IfStatement",
												"src": "3507:47:16",
												"trueBody": {
													"expression": {
														"id": 2556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2548,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "3521:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3534:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2550,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3534:7:16",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 2549,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3529:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3529:13:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 2553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3529:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2554,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2250,
																"src": "3549:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3529:25:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3521:33:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2557,
													"nodeType": "ExpressionStatement",
													"src": "3521:33:16"
												}
											},
											{
												"expression": {
													"id": 2580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2559,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2212,
														"src": "3864:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2562,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2250,
																				"src": "3888:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3897:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "3888:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2565,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3887:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2573,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2571,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2566,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2250,
																						"src": "3904:5:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "%",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								},
																								"id": 2569,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "31",
																									"id": 2567,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3913:1:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "3332",
																									"id": 2568,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3918:2:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_32_by_1",
																										"typeString": "int_const 32"
																									},
																									"value": "32"
																								},
																								"src": "3913:7:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								}
																							}
																						],
																						"id": 2570,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3912:9:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					},
																					"src": "3904:17:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 2572,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3925:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "3904:22:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "31",
																				"id": 2575,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3933:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"id": 2576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "3904:30:16",
																			"trueExpression": {
																				"hexValue": "30",
																				"id": 2574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3929:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 2577,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3903:32:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "3887:48:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3879:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 2560,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "3879:7:16",
																"typeDescriptions": {}
															}
														},
														"id": 2579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3879:57:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3864:72:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 2581,
												"nodeType": "ExpressionStatement",
												"src": "3864:72:16"
											}
										]
									},
									"documentation": {
										"id": 2207,
										"nodeType": "StructuredDocumentation",
										"src": "1053:297:16",
										"text": "@notice Calculates sqrt(1.0001^tick) * 2^96\n @dev Throws if |tick| > max tick\n @param tick The input tick for the above formula\n @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n at the given tick"
									},
									"id": 2583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSqrtRatioAtTick",
									"nameLocation": "1364:18:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1389:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "1383:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2208,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1383:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1382:12:16"
									},
									"returnParameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1426:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "1418:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2211,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1417:22:16"
									},
									"scope": 2723,
									"src": "1355:2588:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2721,
										"nodeType": "Block",
										"src": "4447:4196:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 2594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2592,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2586,
																	"src": "4564:12:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 2593,
																	"name": "MIN_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2202,
																	"src": "4580:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4564:30:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 2597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2595,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2586,
																	"src": "4598:12:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2596,
																	"name": "MAX_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2206,
																	"src": "4613:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4598:29:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4564:63:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52",
															"id": 2599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4629:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															},
															"value": "R"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															}
														],
														"id": 2591,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4556:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4556:77:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2601,
												"nodeType": "ExpressionStatement",
												"src": "4556:77:16"
											},
											{
												"assignments": [
													2603
												],
												"declarations": [
													{
														"constant": false,
														"id": 2603,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "4651:5:16",
														"nodeType": "VariableDeclaration",
														"scope": 2721,
														"src": "4643:13:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2602,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4643:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2610,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2606,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2586,
																"src": "4667:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 2605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4659:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2604,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4659:7:16",
																"typeDescriptions": {}
															}
														},
														"id": 2607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4659:21:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 2608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4684:2:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "4659:27:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4643:43:16"
											},
											{
												"assignments": [
													2612
												],
												"declarations": [
													{
														"constant": false,
														"id": 2612,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "4705:1:16",
														"nodeType": "VariableDeclaration",
														"scope": 2721,
														"src": "4697:9:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2611,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4697:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2614,
												"initialValue": {
													"id": 2613,
													"name": "ratio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2603,
													"src": "4709:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4697:17:16"
											},
											{
												"assignments": [
													2616
												],
												"declarations": [
													{
														"constant": false,
														"id": 2616,
														"mutability": "mutable",
														"name": "msb",
														"nameLocation": "4732:3:16",
														"nodeType": "VariableDeclaration",
														"scope": 2721,
														"src": "4724:11:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2615,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4724:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2618,
												"initialValue": {
													"hexValue": "30",
													"id": 2617,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4738:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4724:15:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4759:139:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4773:58:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4786:1:16",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "4792:1:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4795:34:16",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4789:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4789:41:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4782:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4782:49:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4777:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4844:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "4854:3:16"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4859:1:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4851:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4851:10:16"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "4844:3:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4874:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4883:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "4886:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4879:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4879:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4874:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "4844:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "4854:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "4792:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "4874:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "4886:1:16",
														"valueSize": 1
													}
												],
												"id": 2619,
												"nodeType": "InlineAssembly",
												"src": "4750:148:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4916:123:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4930:42:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4943:1:16",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "4949:1:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4952:18:16",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4946:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4946:25:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4939:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4939:33:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4934:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4985:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "4995:3:16"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5000:1:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4992:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4992:10:16"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "4985:3:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5015:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5024:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5027:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5020:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5020:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5015:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "4985:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "4995:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "4949:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5015:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5027:1:16",
														"valueSize": 1
													}
												],
												"id": 2620,
												"nodeType": "InlineAssembly",
												"src": "4907:132:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5057:115:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5071:34:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5084:1:16",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5090:1:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5093:10:16",
																				"type": "",
																				"value": "0xFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5087:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5087:17:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5080:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5080:25:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5075:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5118:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5128:3:16"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5133:1:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5125:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5125:10:16"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5118:3:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5148:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5157:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5160:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5153:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5153:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5148:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5118:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5128:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5090:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5148:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5160:1:16",
														"valueSize": 1
													}
												],
												"id": 2621,
												"nodeType": "InlineAssembly",
												"src": "5048:124:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5190:111:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5204:30:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5217:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5223:1:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5226:6:16",
																				"type": "",
																				"value": "0xFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5220:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5220:13:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5213:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5213:21:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5208:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5247:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5257:3:16"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5262:1:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5254:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5254:10:16"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5247:3:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5277:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5286:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5289:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5282:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5277:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5247:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5257:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5223:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5277:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5289:1:16",
														"valueSize": 1
													}
												],
												"id": 2622,
												"nodeType": "InlineAssembly",
												"src": "5181:120:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5319:109:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5333:28:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5346:1:16",
																		"type": "",
																		"value": "3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5352:1:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5355:4:16",
																				"type": "",
																				"value": "0xFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5349:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5349:11:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5342:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5342:19:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5337:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5374:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5384:3:16"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5389:1:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5381:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5381:10:16"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5374:3:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5404:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5413:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5416:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5409:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5409:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5404:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5374:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5384:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5352:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5404:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5416:1:16",
														"valueSize": 1
													}
												],
												"id": 2623,
												"nodeType": "InlineAssembly",
												"src": "5310:118:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5446:108:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5460:27:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5473:1:16",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5479:1:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5482:3:16",
																				"type": "",
																				"value": "0xF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5476:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5476:10:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5469:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5469:18:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5464:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5500:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5510:3:16"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5515:1:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5507:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5507:10:16"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5500:3:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5530:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5539:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5542:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5535:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5535:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5530:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5500:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5510:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5479:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5530:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5542:1:16",
														"valueSize": 1
													}
												],
												"id": 2624,
												"nodeType": "InlineAssembly",
												"src": "5437:117:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5572:108:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5586:27:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5599:1:16",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5605:1:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5608:3:16",
																				"type": "",
																				"value": "0x3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5602:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5602:10:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5595:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5595:18:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5590:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5626:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5636:3:16"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5641:1:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5633:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5633:10:16"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5626:3:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5656:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5665:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5668:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5661:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5661:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5656:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5626:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5636:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5605:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5656:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5668:1:16",
														"valueSize": 1
													}
												],
												"id": 2625,
												"nodeType": "InlineAssembly",
												"src": "5563:117:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5698:73:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5712:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5724:1:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5727:3:16",
																		"type": "",
																		"value": "0x1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5721:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5721:10:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5716:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5744:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5754:3:16"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5759:1:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5751:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5751:10:16"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5744:3:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5744:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2616,
														"isOffset": false,
														"isSlot": false,
														"src": "5754:3:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5724:1:16",
														"valueSize": 1
													}
												],
												"id": 2626,
												"nodeType": "InlineAssembly",
												"src": "5689:82:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2627,
														"name": "msb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2616,
														"src": "5785:3:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "313238",
														"id": 2628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5792:3:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "128"
													},
													"src": "5785:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"id": 2646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2639,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2612,
															"src": "5836:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2640,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2603,
																"src": "5840:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "313237",
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5850:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2642,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2616,
																			"src": "5856:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5850:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2644,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5849:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5840:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5836:24:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2647,
													"nodeType": "ExpressionStatement",
													"src": "5836:24:16"
												},
												"id": 2648,
												"nodeType": "IfStatement",
												"src": "5781:79:16",
												"trueBody": {
													"expression": {
														"id": 2637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2630,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2612,
															"src": "5797:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2631,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2603,
																"src": "5801:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2632,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2616,
																			"src": "5811:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "313237",
																			"id": 2633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5817:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"src": "5811:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2635,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5810:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5801:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5797:24:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2638,
													"nodeType": "ExpressionStatement",
													"src": "5797:24:16"
												}
											},
											{
												"assignments": [
													2650
												],
												"declarations": [
													{
														"constant": false,
														"id": 2650,
														"mutability": "mutable",
														"name": "log_2",
														"nameLocation": "5878:5:16",
														"nodeType": "VariableDeclaration",
														"scope": 2721,
														"src": "5871:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2649,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5871:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2660,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2653,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2616,
																			"src": "5894:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5887:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2651,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5887:6:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5887:11:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5901:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "5887:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2657,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5886:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 2658,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5909:2:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "5886:25:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5871:40:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5931:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5945:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5954:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5963:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5966:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5959:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5959:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5950:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5950:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5945:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5982:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5995:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6000:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5991:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5991:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5986:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6015:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6027:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6038:2:16",
																				"type": "",
																				"value": "63"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6042:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6034:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6034:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6024:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6024:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6015:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6058:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6067:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6070:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6063:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6063:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6058:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6015:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6027:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5945:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5963:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "5966:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6000:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6058:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6070:1:16",
														"valueSize": 1
													}
												],
												"id": 2661,
												"nodeType": "InlineAssembly",
												"src": "5922:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6100:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6114:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6123:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6132:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6135:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6128:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6128:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6119:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6119:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6114:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6151:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6164:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6169:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6160:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6160:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6155:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6184:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6196:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6207:2:16",
																				"type": "",
																				"value": "62"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6211:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6203:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6203:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6193:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6193:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6184:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6227:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6236:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6239:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6232:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6232:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6227:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6184:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6196:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6114:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6132:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6135:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6169:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6227:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6239:1:16",
														"valueSize": 1
													}
												],
												"id": 2662,
												"nodeType": "InlineAssembly",
												"src": "6091:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6269:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6283:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6292:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6301:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6304:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6297:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6297:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6288:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6288:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6283:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6320:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6333:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6338:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6329:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6329:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6324:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6353:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6365:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6376:2:16",
																				"type": "",
																				"value": "61"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6380:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6372:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6372:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6362:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6362:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6353:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6396:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6405:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6408:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6401:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6401:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6396:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6353:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6365:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6283:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6301:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6304:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6338:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6396:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6408:1:16",
														"valueSize": 1
													}
												],
												"id": 2663,
												"nodeType": "InlineAssembly",
												"src": "6260:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6438:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6452:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6461:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6470:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6473:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6466:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6466:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6457:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6457:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6452:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6489:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6502:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6507:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6498:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6498:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6493:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6522:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6534:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6545:2:16",
																				"type": "",
																				"value": "60"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6549:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6541:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6541:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6531:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6531:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6522:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6565:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6574:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6577:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6570:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6570:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6565:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6522:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6534:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6452:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6470:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6473:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6507:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6565:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6577:1:16",
														"valueSize": 1
													}
												],
												"id": 2664,
												"nodeType": "InlineAssembly",
												"src": "6429:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6607:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6621:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6630:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6639:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6642:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6635:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6635:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6626:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6626:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6621:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6658:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6671:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6676:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6667:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6667:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6662:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6691:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6703:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6714:2:16",
																				"type": "",
																				"value": "59"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6718:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6710:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6710:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6700:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6700:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6691:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6734:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6743:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6746:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6739:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6739:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6734:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6691:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6703:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6621:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6639:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6642:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6676:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6734:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6746:1:16",
														"valueSize": 1
													}
												],
												"id": 2665,
												"nodeType": "InlineAssembly",
												"src": "6598:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6776:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6790:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6799:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6808:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6811:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6804:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6804:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6795:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6795:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6790:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6827:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6840:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6845:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6836:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6836:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6831:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6860:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6872:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6883:2:16",
																				"type": "",
																				"value": "58"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6887:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6879:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6879:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6869:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6869:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6860:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6903:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6912:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6915:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6908:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6908:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6903:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6860:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "6872:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6790:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6808:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6811:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6845:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6903:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6915:1:16",
														"valueSize": 1
													}
												],
												"id": 2666,
												"nodeType": "InlineAssembly",
												"src": "6767:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6945:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6959:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6968:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6977:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6980:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6973:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6973:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6964:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6964:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6959:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6996:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7009:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7014:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7005:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7005:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7000:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7029:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7041:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7052:2:16",
																				"type": "",
																				"value": "57"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7056:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7048:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7048:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7038:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7038:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7029:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7072:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7081:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7084:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7077:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7077:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7072:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7029:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7041:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6959:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6977:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "6980:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7014:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7072:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7084:1:16",
														"valueSize": 1
													}
												],
												"id": 2667,
												"nodeType": "InlineAssembly",
												"src": "6936:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7114:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7128:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7137:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7146:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7149:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7142:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7142:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7133:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7133:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7128:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7165:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7178:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7183:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7174:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7174:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7169:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7198:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7210:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7221:2:16",
																				"type": "",
																				"value": "56"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7225:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7217:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7217:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7207:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7207:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7198:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7241:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7250:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7253:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7246:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7246:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7241:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7198:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7210:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7128:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7146:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7149:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7183:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7241:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7253:1:16",
														"valueSize": 1
													}
												],
												"id": 2668,
												"nodeType": "InlineAssembly",
												"src": "7105:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7283:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7297:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7306:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7315:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7318:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7311:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7311:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7302:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7302:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7297:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7334:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7347:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7352:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7343:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7343:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7338:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7367:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7379:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7390:2:16",
																				"type": "",
																				"value": "55"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7394:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7386:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7386:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7376:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7376:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7367:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7410:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7419:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7422:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7415:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7415:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7410:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7367:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7379:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7297:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7315:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7318:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7352:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7410:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7422:1:16",
														"valueSize": 1
													}
												],
												"id": 2669,
												"nodeType": "InlineAssembly",
												"src": "7274:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7452:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7466:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7475:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7484:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7487:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7480:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7480:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7471:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7471:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7466:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7503:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7516:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7521:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7512:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7512:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7507:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7536:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7548:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7559:2:16",
																				"type": "",
																				"value": "54"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7563:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7555:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7555:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7545:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7545:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7536:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7579:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7588:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7591:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7584:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7584:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7579:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7536:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7548:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7466:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7484:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7487:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7521:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7579:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7591:1:16",
														"valueSize": 1
													}
												],
												"id": 2670,
												"nodeType": "InlineAssembly",
												"src": "7443:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7621:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7635:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7644:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7653:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7656:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7649:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7649:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7640:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7640:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7635:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7672:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7685:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7690:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7681:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7681:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7676:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7705:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7717:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7728:2:16",
																				"type": "",
																				"value": "53"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7732:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7724:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7724:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7714:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7714:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7705:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7748:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7757:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7760:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7753:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7753:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7748:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7705:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7717:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7635:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7653:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7656:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7690:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7748:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7760:1:16",
														"valueSize": 1
													}
												],
												"id": 2671,
												"nodeType": "InlineAssembly",
												"src": "7612:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7790:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7804:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7813:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7822:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7825:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7818:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7818:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7809:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7809:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7804:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7841:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7854:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7859:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7850:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7850:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7845:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7874:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7886:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7897:2:16",
																				"type": "",
																				"value": "52"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7901:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7893:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7893:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7883:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7883:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7874:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7917:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7926:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7929:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7922:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7922:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7917:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7874:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "7886:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7804:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7822:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7825:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7859:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7917:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7929:1:16",
														"valueSize": 1
													}
												],
												"id": 2672,
												"nodeType": "InlineAssembly",
												"src": "7781:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7959:151:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7973:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7982:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7991:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7994:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7987:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7987:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7978:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7978:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7973:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8010:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8023:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8028:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8019:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8019:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "8014:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8043:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "8055:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8066:2:16",
																				"type": "",
																				"value": "51"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8070:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8062:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8062:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8052:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8052:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "8043:5:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8086:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "8095:1:16"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8098:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8091:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8091:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8086:1:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "8043:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "8055:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7973:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7991:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "7994:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "8028:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "8086:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "8098:1:16",
														"valueSize": 1
													}
												],
												"id": 2673,
												"nodeType": "InlineAssembly",
												"src": "7950:160:16"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8128:124:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8142:24:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8151:3:16",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8160:1:16"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8163:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "8156:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8156:9:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8147:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8147:19:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8142:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8179:20:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8192:3:16",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8197:1:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8188:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8188:11:16"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "8183:1:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8212:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "8224:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8235:2:16",
																				"type": "",
																				"value": "50"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8239:1:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8231:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8231:10:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8221:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8221:21:16"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "8212:5:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "8212:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "8224:5:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "8142:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "8160:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "8163:1:16",
														"valueSize": 1
													},
													{
														"declaration": 2612,
														"isOffset": false,
														"isSlot": false,
														"src": "8197:1:16",
														"valueSize": 1
													}
												],
												"id": 2674,
												"nodeType": "InlineAssembly",
												"src": "8119:133:16"
											},
											{
												"assignments": [
													2676
												],
												"declarations": [
													{
														"constant": false,
														"id": 2676,
														"mutability": "mutable",
														"name": "log_sqrt10001",
														"nameLocation": "8269:13:16",
														"nodeType": "VariableDeclaration",
														"scope": 2721,
														"src": "8262:20:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2675,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8262:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2680,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2677,
														"name": "log_2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2650,
														"src": "8285:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "323535373338393538393939363033383236333437313431",
														"id": 2678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8293:24:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255738958999603826347141_by_1",
															"typeString": "int_const 255738958999603826347141"
														},
														"value": "255738958999603826347141"
													},
													"src": "8285:32:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8262:55:16"
											},
											{
												"assignments": [
													2682
												],
												"declarations": [
													{
														"constant": false,
														"id": 2682,
														"mutability": "mutable",
														"name": "tickLow",
														"nameLocation": "8352:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 2721,
														"src": "8346:13:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 2681,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8346:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2692,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2685,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2676,
																			"src": "8369:13:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "33343032393932393536383039313332343138353936313430313030363630323437323130",
																			"id": 2686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8385:37:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3402992956809132418596140100660247210_by_1",
																				"typeString": "int_const 3402...(29 digits omitted)...7210"
																			},
																			"value": "3402992956809132418596140100660247210"
																		},
																		"src": "8369:53:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 2688,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8368:55:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8427:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8368:62:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 2684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8362:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 2683,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8362:5:16",
															"typeDescriptions": {}
														}
													},
													"id": 2691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8362:69:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8346:85:16"
											},
											{
												"assignments": [
													2694
												],
												"declarations": [
													{
														"constant": false,
														"id": 2694,
														"mutability": "mutable",
														"name": "tickHi",
														"nameLocation": "8447:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2721,
														"src": "8441:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 2693,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8441:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2704,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2697,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2676,
																			"src": "8463:13:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "323931333339343634373731393839363232393037303237363231313533333938303838343935",
																			"id": 2698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8479:39:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_291339464771989622907027621153398088495_by_1",
																				"typeString": "int_const 2913...(31 digits omitted)...8495"
																			},
																			"value": "291339464771989622907027621153398088495"
																		},
																		"src": "8463:55:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 2700,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8462:57:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8523:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8462:64:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 2696,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8456:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 2695,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8456:5:16",
															"typeDescriptions": {}
														}
													},
													"id": 2703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8456:71:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8441:86:16"
											},
											{
												"expression": {
													"id": 2719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2705,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2589,
														"src": "8538:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 2708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2706,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2682,
																"src": "8545:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2707,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2694,
																"src": "8556:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "8545:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 2714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2711,
																			"name": "tickHi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2694,
																			"src": "8594:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 2710,
																		"name": "getSqrtRatioAtTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2583,
																		"src": "8575:18:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																			"typeString": "function (int24) pure returns (uint160)"
																		}
																	},
																	"id": 2712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8575:26:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 2713,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2586,
																	"src": "8605:12:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8575:42:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 2716,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2682,
																"src": "8629:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 2717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "8575:61:16",
															"trueExpression": {
																"id": 2715,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2694,
																"src": "8620:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"id": 2718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "8545:91:16",
														"trueExpression": {
															"id": 2709,
															"name": "tickLow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2682,
															"src": "8565:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "8538:98:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 2720,
												"nodeType": "ExpressionStatement",
												"src": "8538:98:16"
											}
										]
									},
									"documentation": {
										"id": 2584,
										"nodeType": "StructuredDocumentation",
										"src": "3949:408:16",
										"text": "@notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n ever return.\n @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n @return tick The greatest tick for which the ratio is less than or equal to the input ratio"
									},
									"id": 2722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTickAtSqrtRatio",
									"nameLocation": "4371:18:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "4398:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "4390:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2585,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4390:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4389:22:16"
									},
									"returnParameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "4441:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "4435:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2588,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4435:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4434:12:16"
									},
									"scope": 2723,
									"src": "4362:4281:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2724,
							"src": "306:8339:16",
							"usedErrors": []
						}
					],
					"src": "45:8601:16"
				},
				"id": 16
			}
		}
	}
}